macro_line|#ifndef _KERN_SOCK_H
DECL|macro|_KERN_SOCK_H
mdefine_line|#define _KERN_SOCK_H
DECL|macro|NSOCKETS
mdefine_line|#define NSOCKETS 128&t;&t;&t;/* should be dynamic, later... */
r_typedef
r_enum
(brace
DECL|enumerator|SS_FREE
id|SS_FREE
op_assign
l_int|0
comma
multiline_comment|/* not allocated */
DECL|enumerator|SS_UNCONNECTED
id|SS_UNCONNECTED
comma
multiline_comment|/* unconnected to any socket */
DECL|enumerator|SS_CONNECTING
id|SS_CONNECTING
comma
multiline_comment|/* in process of connecting */
DECL|enumerator|SS_CONNECTED
id|SS_CONNECTED
comma
multiline_comment|/* connected to socket */
DECL|enumerator|SS_DISCONNECTING
id|SS_DISCONNECTING
comma
multiline_comment|/* in process of disconnecting */
DECL|typedef|socket_state
)brace
id|socket_state
suffix:semicolon
DECL|macro|SO_ACCEPTCON
mdefine_line|#define SO_ACCEPTCON&t;(1&lt;&lt;16)&t;&t;/* performed a listen */
multiline_comment|/*&n; * internel representation of a socket. not all the fields are used by&n; * all configurations:&n; *&n; *&t;&t;server&t;&t;&t;client&n; * conn&t;&t;client connected to&t;server connected to&n; * iconn&t;list of clients&t;&t;-unused-&n; *&t;&t; awaiting connections&n; * wait&t;&t;sleep for clients,&t;sleep for connection,&n; *&t;&t;sleep for i/o&t;&t;sleep for i/o&n; */
DECL|struct|socket
r_struct
id|socket
(brace
DECL|member|type
r_int
id|type
suffix:semicolon
multiline_comment|/* SOCK_STREAM, ... */
DECL|member|state
id|socket_state
id|state
suffix:semicolon
DECL|member|flags
r_int
id|flags
suffix:semicolon
DECL|member|ops
r_struct
id|proto_ops
op_star
id|ops
suffix:semicolon
multiline_comment|/* protocols do most everything */
DECL|member|data
r_char
op_star
id|data
suffix:semicolon
multiline_comment|/* protocol data */
DECL|member|conn
r_struct
id|socket
op_star
id|conn
suffix:semicolon
multiline_comment|/* server socket connected to */
DECL|member|iconn
r_struct
id|socket
op_star
id|iconn
suffix:semicolon
multiline_comment|/* incomplete client connections */
DECL|member|next
r_struct
id|socket
op_star
id|next
suffix:semicolon
DECL|member|wait
r_struct
id|task_struct
op_star
op_star
id|wait
suffix:semicolon
multiline_comment|/* ptr to place to wait on */
DECL|member|dummy
r_void
op_star
id|dummy
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|proto_ops
r_struct
id|proto_ops
(brace
DECL|member|init
r_int
(paren
op_star
id|init
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|create
r_int
(paren
op_star
id|create
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
id|protocol
)paren
suffix:semicolon
DECL|member|dup
r_int
(paren
op_star
id|dup
)paren
(paren
r_struct
id|socket
op_star
id|newsock
comma
r_struct
id|socket
op_star
id|oldsock
)paren
suffix:semicolon
DECL|member|release
r_int
(paren
op_star
id|release
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|socket
op_star
id|peer
)paren
suffix:semicolon
DECL|member|bind
r_int
(paren
op_star
id|bind
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|sockaddr
op_star
id|umyaddr
comma
r_int
id|sockaddr_len
)paren
suffix:semicolon
DECL|member|connect
r_int
(paren
op_star
id|connect
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|sockaddr
op_star
id|uservaddr
comma
r_int
id|sockaddr_len
)paren
suffix:semicolon
DECL|member|socketpair
r_int
(paren
op_star
id|socketpair
)paren
(paren
r_struct
id|socket
op_star
id|sock1
comma
r_struct
id|socket
op_star
id|sock2
)paren
suffix:semicolon
DECL|member|accept
r_int
(paren
op_star
id|accept
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|socket
op_star
id|newsock
)paren
suffix:semicolon
DECL|member|getname
r_int
(paren
op_star
id|getname
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|sockaddr
op_star
id|uaddr
comma
r_int
op_star
id|usockaddr_len
comma
r_int
id|peer
)paren
suffix:semicolon
DECL|member|read
r_int
(paren
op_star
id|read
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_char
op_star
id|ubuf
comma
r_int
id|size
comma
r_int
id|nonblock
)paren
suffix:semicolon
DECL|member|write
r_int
(paren
op_star
id|write
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_char
op_star
id|ubuf
comma
r_int
id|size
comma
r_int
id|nonblock
)paren
suffix:semicolon
DECL|member|select
r_int
(paren
op_star
id|select
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
id|which
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|sock_awaitconn
c_func
(paren
r_struct
id|socket
op_star
id|mysock
comma
r_struct
id|socket
op_star
id|servsock
)paren
suffix:semicolon
macro_line|#ifdef SOCK_DEBUG
DECL|macro|PRINTK
mdefine_line|#define PRINTK printk
macro_line|#else
DECL|macro|PRINTK
mdefine_line|#define PRINTK (void)
macro_line|#endif
macro_line|#endif /* _KERN_SOCK_H */
eof
