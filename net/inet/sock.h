multiline_comment|/*&n; * INET&t;&t;An implementation of the TCP/IP protocol suite for the LINUX&n; *&t;&t;operating system.  INET is implemented using the  BSD Socket&n; *&t;&t;interface as the means of communication with the user level.&n; *&n; *&t;&t;Definitions for the AF_INET socket handler.&n; *&n; * Version:&t;@(#)sock.h&t;1.0.4&t;05/13/93&n; *&n; * Authors:&t;Ross Biro, &lt;bir7@leland.Stanford.Edu&gt;&n; *&t;&t;Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;&n; *&t;&t;Corey Minyard &lt;wf-rch!minyard@relay.EU.net&gt;&n; *&t;&t;Florian La Roche &lt;flla@stud.uni-sb.de&gt;&n; *&n; *&t;&t;This program is free software; you can redistribute it and/or&n; *&t;&t;modify it under the terms of the GNU General Public License&n; *&t;&t;as published by the Free Software Foundation; either version&n; *&t;&t;2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _SOCK_H
DECL|macro|_SOCK_H
mdefine_line|#define _SOCK_H
macro_line|#include &lt;linux/timer.h&gt;
DECL|macro|SOCK_ARRAY_SIZE
mdefine_line|#define SOCK_ARRAY_SIZE&t;64
multiline_comment|/*&n; * This structure really needs to be cleaned up.&n; * Most of it is for TCP, and not used by any of&n; * the other protocols.&n; */
DECL|struct|sock
r_struct
id|sock
(brace
DECL|member|opt
r_struct
id|options
op_star
id|opt
suffix:semicolon
DECL|member|wmem_alloc
r_volatile
r_int
r_int
id|wmem_alloc
suffix:semicolon
DECL|member|rmem_alloc
r_volatile
r_int
r_int
id|rmem_alloc
suffix:semicolon
DECL|member|send_seq
r_int
r_int
id|send_seq
suffix:semicolon
DECL|member|acked_seq
r_int
r_int
id|acked_seq
suffix:semicolon
DECL|member|copied_seq
r_int
r_int
id|copied_seq
suffix:semicolon
DECL|member|rcv_ack_seq
r_int
r_int
id|rcv_ack_seq
suffix:semicolon
DECL|member|window_seq
r_int
r_int
id|window_seq
suffix:semicolon
DECL|member|fin_seq
r_int
r_int
id|fin_seq
suffix:semicolon
multiline_comment|/*&n;   * Not all are volatile, but some are, so we&n;   * might as well say they all are.&n;   */
DECL|member|inuse
r_volatile
r_char
id|inuse
comma
DECL|member|dead
id|dead
comma
DECL|member|urginline
id|urginline
comma
DECL|member|intr
id|intr
comma
DECL|member|blog
id|blog
comma
DECL|member|done
id|done
comma
DECL|member|reuse
id|reuse
comma
DECL|member|keepopen
id|keepopen
comma
DECL|member|linger
id|linger
comma
DECL|member|delay_acks
id|delay_acks
comma
DECL|member|destroy
id|destroy
comma
DECL|member|ack_timed
id|ack_timed
comma
DECL|member|no_check
id|no_check
comma
DECL|member|exp_growth
id|exp_growth
suffix:semicolon
DECL|member|proc
r_int
id|proc
suffix:semicolon
DECL|member|next
r_struct
id|sock
op_star
id|next
suffix:semicolon
DECL|member|pair
r_struct
id|sock
op_star
id|pair
suffix:semicolon
DECL|member|send_tail
r_struct
id|sk_buff
op_star
id|send_tail
suffix:semicolon
DECL|member|send_head
r_struct
id|sk_buff
op_star
id|send_head
suffix:semicolon
DECL|member|back_log
r_struct
id|sk_buff
op_star
r_volatile
id|back_log
suffix:semicolon
DECL|member|send_tmp
r_struct
id|sk_buff
op_star
id|send_tmp
suffix:semicolon
DECL|member|retransmits
r_int
id|retransmits
suffix:semicolon
DECL|member|wback
r_struct
id|sk_buff
op_star
id|wback
comma
DECL|member|wfront
op_star
id|wfront
comma
DECL|member|rqueue
op_star
id|rqueue
suffix:semicolon
DECL|member|prot
r_struct
id|proto
op_star
id|prot
suffix:semicolon
DECL|member|sleep
r_struct
id|wait_queue
op_star
op_star
id|sleep
suffix:semicolon
DECL|member|daddr
r_int
r_int
id|daddr
suffix:semicolon
DECL|member|saddr
r_int
r_int
id|saddr
suffix:semicolon
DECL|member|max_unacked
r_int
r_int
id|max_unacked
suffix:semicolon
DECL|member|window
r_int
r_int
id|window
suffix:semicolon
DECL|member|bytes_rcv
r_int
r_int
id|bytes_rcv
suffix:semicolon
DECL|member|mtu
r_int
r_int
id|mtu
suffix:semicolon
DECL|member|num
r_int
r_int
id|num
suffix:semicolon
DECL|member|cong_window
r_volatile
r_int
r_int
id|cong_window
suffix:semicolon
DECL|member|packets_out
r_volatile
r_int
r_int
id|packets_out
suffix:semicolon
DECL|member|urg
r_volatile
r_int
r_int
id|urg
suffix:semicolon
DECL|member|shutdown
r_volatile
r_int
r_int
id|shutdown
suffix:semicolon
DECL|member|mss
r_int
r_int
id|mss
suffix:semicolon
DECL|member|rtt
r_volatile
r_int
r_int
id|rtt
suffix:semicolon
DECL|member|mdev
r_volatile
r_int
r_int
id|mdev
suffix:semicolon
DECL|member|backoff
r_volatile
r_int
r_int
id|backoff
suffix:semicolon
DECL|member|err
r_volatile
r_int
id|err
suffix:semicolon
DECL|member|protocol
r_int
r_char
id|protocol
suffix:semicolon
DECL|member|state
r_volatile
r_int
r_char
id|state
suffix:semicolon
DECL|member|ack_backlog
r_volatile
r_int
r_char
id|ack_backlog
suffix:semicolon
DECL|member|max_ack_backlog
r_int
r_char
id|max_ack_backlog
suffix:semicolon
DECL|member|priority
r_int
r_char
id|priority
suffix:semicolon
DECL|member|dummy_th
r_struct
id|tcphdr
id|dummy_th
suffix:semicolon
multiline_comment|/* This part is used for the timeout functions (timer.c). */
DECL|member|timeout
r_int
id|timeout
suffix:semicolon
multiline_comment|/* What are we waiting for? */
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|proto
r_struct
id|proto
(brace
DECL|member|wmalloc
r_void
op_star
(paren
op_star
id|wmalloc
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
r_int
id|size
comma
r_int
id|force
comma
r_int
id|priority
)paren
suffix:semicolon
DECL|member|rmalloc
r_void
op_star
(paren
op_star
id|rmalloc
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
r_int
id|size
comma
r_int
id|force
comma
r_int
id|priority
)paren
suffix:semicolon
DECL|member|wfree
r_void
(paren
op_star
id|wfree
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_void
op_star
id|mem
comma
r_int
r_int
id|size
)paren
suffix:semicolon
DECL|member|rfree
r_void
(paren
op_star
id|rfree
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_void
op_star
id|mem
comma
r_int
r_int
id|size
)paren
suffix:semicolon
DECL|member|rspace
r_int
r_int
(paren
op_star
id|rspace
)paren
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
DECL|member|wspace
r_int
r_int
(paren
op_star
id|wspace
)paren
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|timeout
)paren
suffix:semicolon
DECL|member|read
r_int
(paren
op_star
id|read
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
r_char
op_star
id|to
comma
r_int
id|len
comma
r_int
id|nonblock
comma
r_int
id|flags
)paren
suffix:semicolon
DECL|member|write
r_int
(paren
op_star
id|write
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
r_char
op_star
id|to
comma
r_int
id|len
comma
r_int
id|nonblock
comma
r_int
id|flags
)paren
suffix:semicolon
DECL|member|sendto
r_int
(paren
op_star
id|sendto
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
r_char
op_star
id|from
comma
r_int
id|len
comma
r_int
id|noblock
comma
r_int
id|flags
comma
r_struct
id|sockaddr_in
op_star
id|usin
comma
r_int
id|addr_len
)paren
suffix:semicolon
DECL|member|recvfrom
r_int
(paren
op_star
id|recvfrom
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
r_char
op_star
id|from
comma
r_int
id|len
comma
r_int
id|noblock
comma
r_int
id|flags
comma
r_struct
id|sockaddr_in
op_star
id|usin
comma
r_int
op_star
id|addr_len
)paren
suffix:semicolon
DECL|member|build_header
r_int
(paren
op_star
id|build_header
)paren
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_int
r_int
id|saddr
comma
r_int
r_int
id|daddr
comma
r_struct
id|device
op_star
op_star
id|dev
comma
r_int
id|type
comma
r_struct
id|options
op_star
id|opt
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|connect
r_int
(paren
op_star
id|connect
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_struct
id|sockaddr_in
op_star
id|usin
comma
r_int
id|addr_len
)paren
suffix:semicolon
DECL|member|accept
r_struct
id|sock
op_star
(paren
op_star
id|accept
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|flags
)paren
suffix:semicolon
DECL|member|queue_xmit
r_void
(paren
op_star
id|queue_xmit
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_struct
id|device
op_star
id|dev
comma
r_struct
id|sk_buff
op_star
id|skb
comma
r_int
id|free
)paren
suffix:semicolon
DECL|member|retransmit
r_void
(paren
op_star
id|retransmit
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|all
)paren
suffix:semicolon
DECL|member|write_wakeup
r_void
(paren
op_star
id|write_wakeup
)paren
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
DECL|member|read_wakeup
r_void
(paren
op_star
id|read_wakeup
)paren
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
DECL|member|rcv
r_int
(paren
op_star
id|rcv
)paren
(paren
r_struct
id|sk_buff
op_star
id|buff
comma
r_struct
id|device
op_star
id|dev
comma
r_struct
id|options
op_star
id|opt
comma
r_int
r_int
id|daddr
comma
r_int
r_int
id|len
comma
r_int
r_int
id|saddr
comma
r_int
id|redo
comma
r_struct
id|inet_protocol
op_star
id|protocol
)paren
suffix:semicolon
DECL|member|select
r_int
(paren
op_star
id|select
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|which
comma
id|select_table
op_star
id|wait
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
DECL|member|init
r_int
(paren
op_star
id|init
)paren
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
DECL|member|shutdown
r_void
(paren
op_star
id|shutdown
)paren
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|how
)paren
suffix:semicolon
DECL|member|max_header
r_int
r_int
id|max_header
suffix:semicolon
DECL|member|retransmits
r_int
r_int
id|retransmits
suffix:semicolon
DECL|member|sock_array
r_struct
id|sock
op_star
id|sock_array
(braket
id|SOCK_ARRAY_SIZE
)braket
suffix:semicolon
DECL|member|name
r_char
id|name
(braket
l_int|80
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|TIME_WRITE
mdefine_line|#define TIME_WRITE&t;1
DECL|macro|TIME_CLOSE
mdefine_line|#define TIME_CLOSE&t;2
DECL|macro|TIME_KEEPOPEN
mdefine_line|#define TIME_KEEPOPEN&t;3
DECL|macro|TIME_DESTROY
mdefine_line|#define TIME_DESTROY&t;4
DECL|macro|TIME_DONE
mdefine_line|#define TIME_DONE&t;5&t;/* used to absorb those last few packets */
DECL|macro|SOCK_DESTROY_TIME
mdefine_line|#define SOCK_DESTROY_TIME 1000&t;/* about 10 seconds&t;&t;&t;*/
DECL|macro|PROT_SOCK
mdefine_line|#define PROT_SOCK&t;1024
DECL|macro|SHUTDOWN_MASK
mdefine_line|#define SHUTDOWN_MASK&t;3
DECL|macro|RCV_SHUTDOWN
mdefine_line|#define RCV_SHUTDOWN&t;1
DECL|macro|SEND_SHUTDOWN
mdefine_line|#define SEND_SHUTDOWN&t;2
r_extern
r_void
id|destroy_sock
c_func
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
r_extern
r_int
r_int
id|get_new_socknum
c_func
(paren
r_struct
id|proto
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|put_sock
c_func
(paren
r_int
r_int
comma
r_struct
id|sock
op_star
)paren
suffix:semicolon
r_extern
r_void
id|release_sock
c_func
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
r_extern
r_struct
id|sock
op_star
id|get_sock
c_func
(paren
r_struct
id|proto
op_star
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|print_sk
c_func
(paren
r_struct
id|sock
op_star
)paren
suffix:semicolon
r_extern
r_void
op_star
id|sock_wmalloc
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
r_int
id|size
comma
r_int
id|force
comma
r_int
id|priority
)paren
suffix:semicolon
r_extern
r_void
op_star
id|sock_rmalloc
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
r_int
id|size
comma
r_int
id|force
comma
r_int
id|priority
)paren
suffix:semicolon
r_extern
r_void
id|sock_wfree
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_void
op_star
id|mem
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_void
id|sock_rfree
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_void
op_star
id|mem
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_int
r_int
id|sock_rspace
c_func
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
r_extern
r_int
r_int
id|sock_wspace
c_func
(paren
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
multiline_comment|/* declarations from timer.c */
r_extern
r_struct
id|sock
op_star
id|timer_base
suffix:semicolon
r_void
id|delete_timer
(paren
r_struct
id|sock
op_star
)paren
suffix:semicolon
r_void
id|reset_timer
(paren
r_struct
id|sock
op_star
comma
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_void
id|net_timer
(paren
r_int
r_int
)paren
suffix:semicolon
macro_line|#endif&t;/* _SOCK_H */
eof
