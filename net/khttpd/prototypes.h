macro_line|#ifndef _INCLUDE_GUARD_PROTOTYPES_H
DECL|macro|_INCLUDE_GUARD_PROTOTYPES_H
mdefine_line|#define _INCLUDE_GUARD_PROTOTYPES_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/net.h&gt;
macro_line|#include &lt;linux/time.h&gt;
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/wait.h&gt;
macro_line|#include &lt;net/sock.h&gt;
macro_line|#include &lt;asm/uaccess.h&gt;
macro_line|#include &quot;structure.h&quot;
multiline_comment|/* General defines and stuff */
DECL|macro|CONFIG_KHTTPD_NUMCPU
mdefine_line|#define CONFIG_KHTTPD_NUMCPU 16    /* Maximum number of threads */
multiline_comment|/* the TCP/IP stack defines a __BROKEN__ set of min/max functions !! */
multiline_comment|/* So we better define our own.                                      */
multiline_comment|/* Broken means: working on unsigned data only, which is not acceptable&n; &t;&t; for kHTTPd and probably a lot of other functions. */
DECL|macro|min
macro_line|#undef min
DECL|macro|max
macro_line|#undef max
DECL|macro|min
mdefine_line|#define min(a,b)  ( (a) &lt; (b) ? (a) : (b) )
DECL|macro|max
mdefine_line|#define max(a,b)  ( (a) &gt; (b) ? (a) : (b) )
macro_line|#ifdef OOPSTRACE
DECL|macro|EnterFunction
mdefine_line|#define EnterFunction(x)   printk(&quot;Enter: %s, %s line %i&bslash;n&quot;,x,__FILE__,__LINE__)
DECL|macro|LeaveFunction
mdefine_line|#define LeaveFunction(x)   printk(&quot;Leave: %s, %s line %i&bslash;n&quot;,x,__FILE__,__LINE__)
macro_line|#else
DECL|macro|EnterFunction
mdefine_line|#define EnterFunction(x)   do {} while (0)
DECL|macro|LeaveFunction
mdefine_line|#define LeaveFunction(x)   do {} while (0)
macro_line|#endif
multiline_comment|/* sockets.c */
r_int
id|StartListening
c_func
(paren
r_const
r_int
id|Port
)paren
suffix:semicolon
r_void
id|StopListening
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_struct
id|socket
op_star
id|MainSocket
suffix:semicolon
multiline_comment|/* sysctl.c */
r_void
id|StartSysctl
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|EndSysctl
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|sysctl_khttpd_stop
suffix:semicolon
multiline_comment|/* main.c */
r_extern
r_struct
id|khttpd_threadinfo
id|threadinfo
(braket
id|CONFIG_KHTTPD_NUMCPU
)braket
suffix:semicolon
r_extern
r_char
id|CurrentTime
(braket
)braket
suffix:semicolon
r_extern
id|atomic_t
id|ConnectCount
suffix:semicolon
r_extern
r_struct
id|wait_queue
id|main_wait
(braket
id|CONFIG_KHTTPD_NUMCPU
)braket
suffix:semicolon
multiline_comment|/* misc.c */
r_void
id|CleanUpRequest
c_func
(paren
r_struct
id|http_request
op_star
id|Req
)paren
suffix:semicolon
r_int
id|SendBuffer
c_func
(paren
r_struct
id|socket
op_star
id|sock
comma
r_const
r_char
op_star
id|Buffer
comma
r_const
r_int
id|Length
)paren
suffix:semicolon
r_int
id|SendBuffer_async
c_func
(paren
r_struct
id|socket
op_star
id|sock
comma
r_const
r_char
op_star
id|Buffer
comma
r_const
r_int
id|Length
)paren
suffix:semicolon
r_void
id|Send403
c_func
(paren
r_struct
id|socket
op_star
id|sock
)paren
suffix:semicolon
r_void
id|Send304
c_func
(paren
r_struct
id|socket
op_star
id|sock
)paren
suffix:semicolon
r_void
id|Send50x
c_func
(paren
r_struct
id|socket
op_star
id|sock
)paren
suffix:semicolon
multiline_comment|/* accept.c */
r_int
id|AcceptConnections
c_func
(paren
r_const
r_int
id|CPUNR
comma
r_struct
id|socket
op_star
id|Socket
)paren
suffix:semicolon
multiline_comment|/* waitheaders.c */
r_int
id|WaitForHeaders
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
r_void
id|StopWaitingForHeaders
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
r_int
id|InitWaitHeaders
c_func
(paren
r_int
id|ThreadCount
)paren
suffix:semicolon
multiline_comment|/* datasending.c */
r_int
id|DataSending
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
r_void
id|StopDataSending
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
r_int
id|InitDataSending
c_func
(paren
r_int
id|ThreadCount
)paren
suffix:semicolon
multiline_comment|/* userspace.c */
r_int
id|Userspace
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
r_void
id|StopUserspace
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
r_void
id|InitUserspace
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
multiline_comment|/* rfc_time.c */
r_void
id|time_Unix2RFC
c_func
(paren
r_const
id|time_t
id|Zulu
comma
r_char
op_star
id|Buffer
)paren
suffix:semicolon
r_void
id|UpdateCurrentDate
c_func
(paren
r_void
)paren
suffix:semicolon
id|time_t
id|mimeTime_to_UnixTime
c_func
(paren
r_char
op_star
id|Q
)paren
suffix:semicolon
r_extern
r_int
id|CurrentTime_i
suffix:semicolon
multiline_comment|/* rfc.c */
r_void
id|ParseHeader
c_func
(paren
r_char
op_star
id|Buffer
comma
r_const
r_int
id|length
comma
r_struct
id|http_request
op_star
id|Head
)paren
suffix:semicolon
r_char
op_star
id|ResolveMimeType
c_func
(paren
r_const
r_char
op_star
id|File
comma
id|__kernel_size_t
op_star
id|Len
)paren
suffix:semicolon
r_void
id|AddMimeType
c_func
(paren
r_const
r_char
op_star
id|Ident
comma
r_const
r_char
op_star
id|Type
)paren
suffix:semicolon
r_void
id|SendHTTPHeader
c_func
(paren
r_struct
id|http_request
op_star
id|Request
)paren
suffix:semicolon
multiline_comment|/* security.c */
r_struct
id|file
op_star
id|OpenFileForSecurity
c_func
(paren
r_char
op_star
id|Filename
)paren
suffix:semicolon
r_void
id|AddDynamicString
c_func
(paren
r_const
r_char
op_star
id|String
)paren
suffix:semicolon
r_void
id|GetSecureString
c_func
(paren
r_char
op_star
id|String
)paren
suffix:semicolon
multiline_comment|/* logging.c */
r_int
id|Logging
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
r_void
id|StopLogging
c_func
(paren
r_const
r_int
id|CPUNR
)paren
suffix:semicolon
multiline_comment|/* Other prototypes */
macro_line|#endif
eof
