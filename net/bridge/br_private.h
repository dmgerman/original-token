multiline_comment|/*&n; *&t;Linux ethernet bridge&n; *&n; *&t;Authors:&n; *&t;Lennert Buytenhek&t;&t;&lt;buytenh@gnu.org&gt;&n; *&n; *&t;$Id: br_private.h,v 1.3 2000/05/05 02:17:17 davem Exp $&n; *&n; *&t;This program is free software; you can redistribute it and/or&n; *&t;modify it under the terms of the GNU General Public License&n; *&t;as published by the Free Software Foundation; either version&n; *&t;2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _BR_PRIVATE_H
DECL|macro|_BR_PRIVATE_H
mdefine_line|#define _BR_PRIVATE_H
macro_line|#include &lt;linux/netdevice.h&gt;
macro_line|#include &lt;linux/miscdevice.h&gt;
macro_line|#include &lt;linux/if_bridge.h&gt;
macro_line|#include &quot;br_private_timer.h&quot;
DECL|macro|BR_HASH_BITS
mdefine_line|#define BR_HASH_BITS 8
DECL|macro|BR_HASH_SIZE
mdefine_line|#define BR_HASH_SIZE (1 &lt;&lt; BR_HASH_BITS)
DECL|macro|BR_HOLD_TIME
mdefine_line|#define BR_HOLD_TIME (1*HZ)
DECL|typedef|bridge_id
r_typedef
r_struct
id|bridge_id
id|bridge_id
suffix:semicolon
DECL|typedef|mac_addr
r_typedef
r_struct
id|mac_addr
id|mac_addr
suffix:semicolon
DECL|typedef|port_id
r_typedef
id|__u16
id|port_id
suffix:semicolon
DECL|struct|bridge_id
r_struct
id|bridge_id
(brace
DECL|member|prio
r_int
r_char
id|prio
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|addr
r_int
r_char
id|addr
(braket
l_int|6
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|mac_addr
r_struct
id|mac_addr
(brace
DECL|member|addr
r_int
r_char
id|addr
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|pad
r_int
r_char
id|pad
(braket
l_int|2
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|net_bridge_fdb_entry
r_struct
id|net_bridge_fdb_entry
(brace
DECL|member|next_hash
r_struct
id|net_bridge_fdb_entry
op_star
id|next_hash
suffix:semicolon
DECL|member|pprev_hash
r_struct
id|net_bridge_fdb_entry
op_star
op_star
id|pprev_hash
suffix:semicolon
DECL|member|use_count
id|atomic_t
id|use_count
suffix:semicolon
DECL|member|addr
id|mac_addr
id|addr
suffix:semicolon
DECL|member|dst
r_struct
id|net_bridge_port
op_star
id|dst
suffix:semicolon
DECL|member|ageing_timer
r_int
r_int
id|ageing_timer
suffix:semicolon
DECL|member|is_local
r_int
id|is_local
suffix:colon
l_int|1
suffix:semicolon
DECL|member|is_static
r_int
id|is_static
suffix:colon
l_int|1
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|net_bridge_port
r_struct
id|net_bridge_port
(brace
DECL|member|next
r_struct
id|net_bridge_port
op_star
id|next
suffix:semicolon
DECL|member|br
r_struct
id|net_bridge
op_star
id|br
suffix:semicolon
DECL|member|dev
r_struct
id|net_device
op_star
id|dev
suffix:semicolon
DECL|member|port_no
r_int
id|port_no
suffix:semicolon
multiline_comment|/* STP */
DECL|member|port_id
id|port_id
id|port_id
suffix:semicolon
DECL|member|state
r_int
id|state
suffix:semicolon
DECL|member|path_cost
r_int
id|path_cost
suffix:semicolon
DECL|member|designated_root
id|bridge_id
id|designated_root
suffix:semicolon
DECL|member|designated_cost
r_int
id|designated_cost
suffix:semicolon
DECL|member|designated_bridge
id|bridge_id
id|designated_bridge
suffix:semicolon
DECL|member|designated_port
id|port_id
id|designated_port
suffix:semicolon
DECL|member|topology_change_ack
r_int
id|topology_change_ack
suffix:colon
l_int|1
suffix:semicolon
DECL|member|config_pending
r_int
id|config_pending
suffix:colon
l_int|1
suffix:semicolon
DECL|member|priority
r_int
id|priority
suffix:semicolon
DECL|member|forward_delay_timer
r_struct
id|br_timer
id|forward_delay_timer
suffix:semicolon
DECL|member|hold_timer
r_struct
id|br_timer
id|hold_timer
suffix:semicolon
DECL|member|message_age_timer
r_struct
id|br_timer
id|message_age_timer
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|net_bridge
r_struct
id|net_bridge
(brace
DECL|member|next
r_struct
id|net_bridge
op_star
id|next
suffix:semicolon
DECL|member|lock
id|rwlock_t
id|lock
suffix:semicolon
DECL|member|port_list
r_struct
id|net_bridge_port
op_star
id|port_list
suffix:semicolon
DECL|member|dev
r_struct
id|net_device
id|dev
suffix:semicolon
DECL|member|statistics
r_struct
id|net_device_stats
id|statistics
suffix:semicolon
DECL|member|hash_lock
id|rwlock_t
id|hash_lock
suffix:semicolon
DECL|member|hash
r_struct
id|net_bridge_fdb_entry
op_star
id|hash
(braket
id|BR_HASH_SIZE
)braket
suffix:semicolon
DECL|member|tick
r_struct
id|timer_list
id|tick
suffix:semicolon
multiline_comment|/* STP */
DECL|member|designated_root
id|bridge_id
id|designated_root
suffix:semicolon
DECL|member|root_path_cost
r_int
id|root_path_cost
suffix:semicolon
DECL|member|root_port
r_int
id|root_port
suffix:semicolon
DECL|member|max_age
r_int
id|max_age
suffix:semicolon
DECL|member|hello_time
r_int
id|hello_time
suffix:semicolon
DECL|member|forward_delay
r_int
id|forward_delay
suffix:semicolon
DECL|member|bridge_id
id|bridge_id
id|bridge_id
suffix:semicolon
DECL|member|bridge_max_age
r_int
id|bridge_max_age
suffix:semicolon
DECL|member|bridge_hello_time
r_int
id|bridge_hello_time
suffix:semicolon
DECL|member|bridge_forward_delay
r_int
id|bridge_forward_delay
suffix:semicolon
DECL|member|stp_enabled
r_int
id|stp_enabled
suffix:colon
l_int|1
suffix:semicolon
DECL|member|topology_change
r_int
id|topology_change
suffix:colon
l_int|1
suffix:semicolon
DECL|member|topology_change_detected
r_int
id|topology_change_detected
suffix:colon
l_int|1
suffix:semicolon
DECL|member|hello_timer
r_struct
id|br_timer
id|hello_timer
suffix:semicolon
DECL|member|tcn_timer
r_struct
id|br_timer
id|tcn_timer
suffix:semicolon
DECL|member|topology_change_timer
r_struct
id|br_timer
id|topology_change_timer
suffix:semicolon
DECL|member|gc_timer
r_struct
id|br_timer
id|gc_timer
suffix:semicolon
DECL|member|ageing_time
r_int
id|ageing_time
suffix:semicolon
DECL|member|gc_interval
r_int
id|gc_interval
suffix:semicolon
)brace
suffix:semicolon
DECL|variable|br_device_notifier
r_struct
id|notifier_block
id|br_device_notifier
suffix:semicolon
DECL|variable|bridge_ula
r_int
r_char
id|bridge_ula
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/* br.c */
r_void
id|br_dec_use_count
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|br_inc_use_count
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* br_device.c */
r_void
id|br_dev_setup
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
multiline_comment|/* br_fdb.c */
r_void
id|br_fdb_changeaddr
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|p
comma
r_int
r_char
op_star
id|newaddr
)paren
suffix:semicolon
r_void
id|br_fdb_cleanup
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
)paren
suffix:semicolon
r_void
id|br_fdb_delete_by_port
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_struct
id|net_bridge_port
op_star
id|p
)paren
suffix:semicolon
r_struct
id|net_bridge_fdb_entry
op_star
id|br_fdb_get
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_int
r_char
op_star
id|addr
)paren
suffix:semicolon
r_void
id|br_fdb_put
c_func
(paren
r_struct
id|net_bridge_fdb_entry
op_star
id|ent
)paren
suffix:semicolon
r_int
id|br_fdb_get_entries
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_int
r_char
op_star
id|_buf
comma
r_int
id|maxnum
comma
r_int
id|offset
)paren
suffix:semicolon
r_void
id|br_fdb_insert
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_struct
id|net_bridge_port
op_star
id|source
comma
r_int
r_char
op_star
id|addr
comma
r_int
id|is_local
)paren
suffix:semicolon
multiline_comment|/* br_forward.c */
r_void
id|br_forward
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|to
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_void
id|br_flood
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_struct
id|sk_buff
op_star
id|skb
comma
r_int
id|clone
)paren
suffix:semicolon
multiline_comment|/* br_if.c */
r_int
id|br_add_bridge
c_func
(paren
r_char
op_star
id|name
)paren
suffix:semicolon
r_int
id|br_del_bridge
c_func
(paren
r_char
op_star
id|name
)paren
suffix:semicolon
r_int
id|br_add_if
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_int
id|br_del_if
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_int
id|br_get_bridge_ifindices
c_func
(paren
r_int
op_star
id|indices
comma
r_int
id|num
)paren
suffix:semicolon
r_void
id|br_get_port_ifindices
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_int
op_star
id|ifindices
)paren
suffix:semicolon
multiline_comment|/* br_input.c */
r_void
id|br_handle_frame
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
multiline_comment|/* br_ioctl.c */
r_void
id|br_call_ioctl_atomic
c_func
(paren
r_void
(paren
op_star
id|fn
)paren
(paren
r_void
)paren
)paren
suffix:semicolon
r_int
id|br_ioctl
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg0
comma
r_int
r_int
id|arg1
comma
r_int
r_int
id|arg2
)paren
suffix:semicolon
r_int
id|br_ioctl_deviceless_stub
c_func
(paren
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* br_stp.c */
r_int
id|br_is_root_bridge
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
)paren
suffix:semicolon
r_struct
id|net_bridge_port
op_star
id|br_get_port
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_int
id|port_no
)paren
suffix:semicolon
r_void
id|br_init_port
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|p
)paren
suffix:semicolon
id|port_id
id|br_make_port_id
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|p
)paren
suffix:semicolon
r_void
id|br_become_designated_port
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|p
)paren
suffix:semicolon
multiline_comment|/* br_stp_if.c */
r_void
id|br_stp_enable_bridge
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
)paren
suffix:semicolon
r_void
id|br_stp_disable_bridge
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
)paren
suffix:semicolon
r_void
id|br_stp_enable_port
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|p
)paren
suffix:semicolon
r_void
id|br_stp_disable_port
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|p
)paren
suffix:semicolon
r_void
id|br_stp_recalculate_bridge_id
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
)paren
suffix:semicolon
r_void
id|br_stp_set_bridge_priority
c_func
(paren
r_struct
id|net_bridge
op_star
id|br
comma
r_int
id|newprio
)paren
suffix:semicolon
r_void
id|br_stp_set_port_priority
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|p
comma
r_int
id|newprio
)paren
suffix:semicolon
r_void
id|br_stp_set_path_cost
c_func
(paren
r_struct
id|net_bridge_port
op_star
id|p
comma
r_int
id|path_cost
)paren
suffix:semicolon
multiline_comment|/* br_stp_bpdu.c */
r_void
id|br_stp_handle_bpdu
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
macro_line|#endif
eof
