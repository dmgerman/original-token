multiline_comment|/*&n; *&t;Linux ethernet bridge&n; *&n; *&t;Authors:&n; *&t;Lennert Buytenhek&t;&t;&lt;buytenh@gnu.org&gt;&n; *&n; *&t;$Id: br_private_timer.h,v 1.1 2000/02/18 16:47:13 davem Exp $&n; *&n; *&t;This program is free software; you can redistribute it and/or&n; *&t;modify it under the terms of the GNU General Public License&n; *&t;as published by the Free Software Foundation; either version&n; *&t;2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _BR_PRIVATE_TIMER_H
DECL|macro|_BR_PRIVATE_TIMER_H
mdefine_line|#define _BR_PRIVATE_TIMER_H
DECL|struct|br_timer
r_struct
id|br_timer
(brace
DECL|member|running
r_int
id|running
suffix:semicolon
DECL|member|expires
r_int
r_int
id|expires
suffix:semicolon
)brace
suffix:semicolon
DECL|function|br_timer_clear
r_extern
id|__inline__
r_void
id|br_timer_clear
c_func
(paren
r_struct
id|br_timer
op_star
id|t
)paren
(brace
id|t-&gt;running
op_assign
l_int|0
suffix:semicolon
)brace
DECL|function|br_timer_get_residue
r_extern
id|__inline__
r_int
r_int
id|br_timer_get_residue
c_func
(paren
r_struct
id|br_timer
op_star
id|t
)paren
(brace
r_if
c_cond
(paren
id|t-&gt;running
)paren
r_return
id|jiffies
op_minus
id|t-&gt;expires
suffix:semicolon
r_return
l_int|0
suffix:semicolon
)brace
DECL|function|br_timer_set
r_extern
id|__inline__
r_void
id|br_timer_set
c_func
(paren
r_struct
id|br_timer
op_star
id|t
comma
r_int
r_int
id|x
)paren
(brace
id|t-&gt;expires
op_assign
id|x
suffix:semicolon
id|t-&gt;running
op_assign
l_int|1
suffix:semicolon
)brace
DECL|function|br_timer_is_running
r_extern
id|__inline__
r_int
id|br_timer_is_running
c_func
(paren
r_struct
id|br_timer
op_star
id|t
)paren
(brace
r_return
id|t-&gt;running
suffix:semicolon
)brace
DECL|function|br_timer_has_expired
r_extern
id|__inline__
r_int
id|br_timer_has_expired
c_func
(paren
r_struct
id|br_timer
op_star
id|t
comma
r_int
r_int
id|to
)paren
(brace
r_return
id|t-&gt;running
op_logical_and
id|time_after_eq
c_func
(paren
id|jiffies
comma
id|t-&gt;expires
op_plus
id|to
)paren
suffix:semicolon
)brace
macro_line|#endif
eof
