multiline_comment|/*&n; * $Id: time.h,v 1.5 1997/08/27 22:06:58 cort Exp $&n; * Common time prototypes and such for all ppc machines.&n; *&n; * Written by Cort Dougan (cort@cs.nmt.edu) to merge&n; * Paul Mackerras&squot; version and mine for PReP and Pmac.&n; */
macro_line|#include &lt;linux/mc146818rtc.h&gt;
multiline_comment|/* time.c */
id|__inline__
r_int
r_int
id|get_dec
c_func
(paren
r_void
)paren
suffix:semicolon
id|__inline__
r_void
id|set_dec
c_func
(paren
r_int
id|val
)paren
suffix:semicolon
r_void
id|prep_calibrate_decr_handler
c_func
(paren
r_int
comma
r_void
op_star
comma
r_struct
id|pt_regs
op_star
)paren
suffix:semicolon
r_void
id|prep_calibrate_decr
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|pmac_calibrate_decr
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|chrp_calibrate_decr
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|decrementer_count
suffix:semicolon
r_extern
r_int
id|count_period_num
suffix:semicolon
r_extern
r_int
id|count_period_den
suffix:semicolon
r_extern
r_int
r_int
id|mktime
c_func
(paren
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
multiline_comment|/* pmac/prep/chrp_time.c */
r_int
r_int
id|prep_get_rtc_time
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
r_int
id|pmac_get_rtc_time
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
r_int
id|chrp_get_rtc_time
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|prep_set_rtc_time
c_func
(paren
r_int
r_int
id|nowtime
)paren
suffix:semicolon
r_int
id|pmac_set_rtc_time
c_func
(paren
r_int
r_int
id|nowtime
)paren
suffix:semicolon
r_int
id|chrp_set_rtc_time
c_func
(paren
r_int
r_int
id|nowtime
)paren
suffix:semicolon
r_void
id|pmac_read_rtc_time
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|macro|TICK_SIZE
mdefine_line|#define TICK_SIZE tick
DECL|macro|FEBRUARY
mdefine_line|#define FEBRUARY&t;2
DECL|macro|STARTOFTIME
mdefine_line|#define&t;STARTOFTIME&t;1970
DECL|macro|SECDAY
mdefine_line|#define SECDAY&t;&t;86400L
DECL|macro|SECYR
mdefine_line|#define SECYR&t;&t;(SECDAY * 365)
DECL|macro|leapyear
mdefine_line|#define&t;leapyear(year)&t;&t;((year) % 4 == 0)
DECL|macro|days_in_year
mdefine_line|#define&t;days_in_year(a) &t;(leapyear(a) ? 366 : 365)
DECL|macro|days_in_month
mdefine_line|#define&t;days_in_month(a) &t;(month_days[(a) - 1])
DECL|variable|month_days
r_static
r_int
id|month_days
(braket
l_int|12
)braket
op_assign
(brace
l_int|31
comma
l_int|28
comma
l_int|31
comma
l_int|30
comma
l_int|31
comma
l_int|30
comma
l_int|31
comma
l_int|31
comma
l_int|30
comma
l_int|31
comma
l_int|30
comma
l_int|31
)brace
suffix:semicolon
DECL|function|to_tm
r_extern
r_void
r_inline
id|to_tm
c_func
(paren
r_int
id|tim
comma
r_struct
id|rtc_time
op_star
id|tm
)paren
(brace
r_register
r_int
id|i
suffix:semicolon
r_register
r_int
id|hms
comma
id|day
suffix:semicolon
id|day
op_assign
id|tim
op_div
id|SECDAY
suffix:semicolon
id|hms
op_assign
id|tim
op_mod
id|SECDAY
suffix:semicolon
multiline_comment|/* Hours, minutes, seconds are easy */
id|tm-&gt;tm_hour
op_assign
id|hms
op_div
l_int|3600
suffix:semicolon
id|tm-&gt;tm_min
op_assign
(paren
id|hms
op_mod
l_int|3600
)paren
op_div
l_int|60
suffix:semicolon
id|tm-&gt;tm_sec
op_assign
(paren
id|hms
op_mod
l_int|3600
)paren
op_mod
l_int|60
suffix:semicolon
multiline_comment|/* Number of years in days */
r_for
c_loop
(paren
id|i
op_assign
id|STARTOFTIME
suffix:semicolon
id|day
op_ge
id|days_in_year
c_func
(paren
id|i
)paren
suffix:semicolon
id|i
op_increment
)paren
id|day
op_sub_assign
id|days_in_year
c_func
(paren
id|i
)paren
suffix:semicolon
id|tm-&gt;tm_year
op_assign
id|i
suffix:semicolon
multiline_comment|/* Number of months in days left */
r_if
c_cond
(paren
id|leapyear
c_func
(paren
id|tm-&gt;tm_year
)paren
)paren
id|days_in_month
c_func
(paren
id|FEBRUARY
)paren
op_assign
l_int|29
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
l_int|1
suffix:semicolon
id|day
op_ge
id|days_in_month
c_func
(paren
id|i
)paren
suffix:semicolon
id|i
op_increment
)paren
id|day
op_sub_assign
id|days_in_month
c_func
(paren
id|i
)paren
suffix:semicolon
id|days_in_month
c_func
(paren
id|FEBRUARY
)paren
op_assign
l_int|28
suffix:semicolon
id|tm-&gt;tm_mon
op_assign
id|i
suffix:semicolon
multiline_comment|/* Days are what is left over (+1) from all that. */
id|tm-&gt;tm_mday
op_assign
id|day
op_plus
l_int|1
suffix:semicolon
)brace
eof
