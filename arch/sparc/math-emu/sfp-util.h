macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/sched.h&gt;
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;asm/byteorder.h&gt;
DECL|macro|add_ssaaaa
mdefine_line|#define add_ssaaaa(sh, sl, ah, al, bh, bl) &t;&t;&t;&t;&bslash;&n;  __asm__ (&quot;addcc %r4,%5,%1
id|addx
op_mod
id|r2
comma
op_mod
l_int|3
comma
op_mod
l_int|0
l_string|&quot;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
op_assign
id|r
l_string|&quot; ((USItype)(sh)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
op_assign
op_amp
id|r
l_string|&quot; ((USItype)(sl))&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
op_mod
id|rJ
l_string|&quot; ((USItype)(ah)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
id|rI
l_string|&quot; ((USItype)(bh)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
op_mod
id|rJ
l_string|&quot; ((USItype)(al)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
id|rI
l_string|&quot; ((USItype)(bl))&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
id|cc
"&quot;"
)paren
DECL|macro|sub_ddmmss
mdefine_line|#define sub_ddmmss(sh, sl, ah, al, bh, bl) &t;&t;&t;&t;&bslash;&n;  __asm__ (&quot;subcc %r4,%5,%1
id|subx
op_mod
id|r2
comma
op_mod
l_int|3
comma
op_mod
l_int|0
l_string|&quot;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
op_assign
id|r
l_string|&quot; ((USItype)(sh)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
op_assign
op_amp
id|r
l_string|&quot; ((USItype)(sl))&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
id|rJ
l_string|&quot; ((USItype)(ah)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
id|rI
l_string|&quot; ((USItype)(bh)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
id|rJ
l_string|&quot; ((USItype)(al)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
id|rI
l_string|&quot; ((USItype)(bl))&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
id|cc
"&quot;"
)paren
DECL|macro|umul_ppmm
mdefine_line|#define umul_ppmm(w1, w0, u, v) &bslash;&n;  __asm__ (&quot;! Inlined umul_ppmm
id|wr
op_mod
op_mod
id|g0
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|y
op_logical_neg
id|SPARC
id|has
l_int|0
op_minus
l_int|3
id|delay
id|insn
id|after
id|a
id|wr
id|sra
op_mod
l_int|3
comma
l_int|31
comma
op_mod
op_mod
id|g2
op_logical_neg
id|Don
"&squot;"
id|t
id|move
id|this
id|insn
op_logical_and
op_mod
l_int|2
comma
op_mod
op_mod
id|g2
comma
op_mod
op_mod
id|g2
op_logical_neg
id|Don
"&squot;"
id|t
id|move
id|this
id|insn
id|andcc
op_mod
op_mod
id|g0
comma
l_int|0
comma
op_mod
op_mod
id|g1
op_logical_neg
id|Don
"&squot;"
id|t
id|move
id|this
id|insn
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
op_mod
l_int|3
comma
op_mod
op_mod
id|g1
id|mulscc
op_mod
op_mod
id|g1
comma
l_int|0
comma
op_mod
op_mod
id|g1
id|add
op_mod
op_mod
id|g1
comma
op_mod
op_mod
id|g2
comma
op_mod
l_int|0
id|rd
op_mod
op_mod
id|y
comma
op_mod
l_int|1
l_string|&quot;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
op_assign
id|r
l_string|&quot; ((USItype)(w1)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
op_assign
id|r
l_string|&quot; ((USItype)(w0))&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
op_mod
id|rI
l_string|&quot; ((USItype)(u)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
id|r
l_string|&quot; ((USItype)(v))&t;&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
op_mod
id|g1
l_string|&quot;, &quot;
op_mod
id|g2
l_string|&quot;, &quot;
id|cc
"&quot;"
)paren
multiline_comment|/* It&squot;s quite necessary to add this much assembler for the sparc.&n;   The default udiv_qrnnd (in C) is more than 10 times slower!  */
DECL|macro|udiv_qrnnd
mdefine_line|#define udiv_qrnnd(q, r, n1, n0, d) &bslash;&n;  __asm__ (&quot;! Inlined udiv_qrnnd
id|mov
l_int|32
comma
op_mod
op_mod
id|g1
id|subcc
op_mod
l_int|1
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|g0
l_int|1
suffix:colon
id|bcs
l_float|5f
id|addxcc
op_mod
l_int|0
comma
op_mod
l_int|0
comma
op_mod
l_int|0
op_logical_neg
id|shift
id|n1n0
op_logical_and
id|a
id|q
op_minus
id|bit
id|in
id|lsb
id|sub
op_mod
l_int|1
comma
op_mod
l_int|2
comma
op_mod
l_int|1
op_logical_neg
id|this
id|kills
id|msb
id|of
id|n
id|addx
op_mod
l_int|1
comma
op_mod
l_int|1
comma
op_mod
l_int|1
op_logical_neg
id|so
id|this
id|can
"&squot;"
id|t
id|give
id|carry
id|subcc
op_mod
op_mod
id|g1
comma
l_int|1
comma
op_mod
op_mod
id|g1
l_int|2
suffix:colon
id|bne
l_int|1
id|b
id|subcc
op_mod
l_int|1
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|g0
id|bcs
l_float|3f
id|addxcc
op_mod
l_int|0
comma
op_mod
l_int|0
comma
op_mod
l_int|0
op_logical_neg
id|shift
id|n1n0
op_logical_and
id|a
id|q
op_minus
id|bit
id|in
id|lsb
id|b
l_float|3f
id|sub
op_mod
l_int|1
comma
op_mod
l_int|2
comma
op_mod
l_int|1
op_logical_neg
id|this
id|kills
id|msb
id|of
id|n
l_int|4
suffix:colon
id|sub
op_mod
l_int|1
comma
op_mod
l_int|2
comma
op_mod
l_int|1
l_int|5
suffix:colon
id|addxcc
op_mod
l_int|1
comma
op_mod
l_int|1
comma
op_mod
l_int|1
id|bcc
l_int|2
id|b
id|subcc
op_mod
op_mod
id|g1
comma
l_int|1
comma
op_mod
op_mod
id|g1
op_logical_neg
id|Got
id|carry
id|from
id|n
dot
id|Subtract
id|next
id|step
id|to
id|cancel
id|this
id|carry
dot
id|bne
l_int|4
id|b
id|addcc
op_mod
l_int|0
comma
op_mod
l_int|0
comma
op_mod
l_int|0
op_logical_neg
id|shift
id|n1n0
op_logical_and
id|a
l_int|0
op_minus
id|bit
id|in
id|lsb
id|sub
op_mod
l_int|1
comma
op_mod
l_int|2
comma
op_mod
l_int|1
l_int|3
suffix:colon
id|xnor
op_mod
l_int|0
comma
l_int|0
comma
op_mod
l_int|0
op_logical_neg
id|End
id|of
r_inline
id|udiv_qrnnd
l_string|&quot;&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
op_assign
op_amp
id|r
l_string|&quot; ((USItype)(q)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
op_assign
op_amp
id|r
l_string|&quot; ((USItype)(r))&t;&t;&t;&t;&t;&bslash;&n;&t;   : &quot;
id|r
l_string|&quot; ((USItype)(d)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
l_int|1
l_string|&quot; ((USItype)(n1)),&t;&t;&t;&t;&t;&bslash;&n;&t;     &quot;
l_int|0
l_string|&quot; ((USItype)(n0)) : &quot;
op_mod
id|g1
l_string|&quot;, &quot;
id|cc
"&quot;"
)paren
DECL|macro|UDIV_NEEDS_NORMALIZATION
mdefine_line|#define UDIV_NEEDS_NORMALIZATION 0
DECL|macro|abort
mdefine_line|#define abort()&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;return 0
macro_line|#ifdef __BIG_ENDIAN
DECL|macro|__BYTE_ORDER
mdefine_line|#define __BYTE_ORDER __BIG_ENDIAN
macro_line|#else
DECL|macro|__BYTE_ORDER
mdefine_line|#define __BYTE_ORDER __LITTLE_ENDIAN
macro_line|#endif
eof
