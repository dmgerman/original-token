multiline_comment|/*&n;** bootstrap.h -- This file is a part of the Amiga bootloader.&n;**&n;** Copyright 1993, 1994 by Hamish Macdonald&n;**&n;** Some minor additions by Michael Rausch 1-11-94&n;** Modified 11-May-94 by Geert Uytterhoeven&n;**                      (Geert.Uytterhoeven@cs.kuleuven.ac.be)&n;**     - inline Supervisor() call&n;**&n;** This file is subject to the terms and conditions of the GNU General Public&n;** License.  See the file COPYING in the main directory of this archive&n;** for more details.&n;**&n;*/
macro_line|#ifndef BOOTSTRAP_H
DECL|macro|BOOTSTRAP_H
mdefine_line|#define BOOTSTRAP_H
macro_line|#include &lt;asm/amigatypes.h&gt;
macro_line|#include &lt;asm/amigahw.h&gt;
DECL|struct|List
r_struct
id|List
(brace
DECL|member|l_head
r_struct
id|Node
op_star
id|l_head
suffix:semicolon
DECL|member|l_tail
r_struct
id|Node
op_star
id|l_tail
suffix:semicolon
DECL|member|l_tailpred
r_struct
id|Node
op_star
id|l_tailpred
suffix:semicolon
DECL|member|l_type
id|u_char
id|l_type
suffix:semicolon
DECL|member|l_pad
id|u_char
id|l_pad
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|MemChunk
r_struct
id|MemChunk
(brace
DECL|member|mc_Next
r_struct
id|MemChunk
op_star
id|mc_Next
suffix:semicolon
multiline_comment|/* pointer to next chunk */
DECL|member|mc_Bytes
id|u_long
id|mc_Bytes
suffix:semicolon
multiline_comment|/* chunk byte size&t;*/
)brace
suffix:semicolon
DECL|macro|MEMF_CHIP
mdefine_line|#define MEMF_CHIP  (1&lt;&lt;1)
DECL|macro|MEMF_FAST
mdefine_line|#define MEMF_FAST  (1&lt;&lt;2)
DECL|macro|MEMF_LOCAL
mdefine_line|#define MEMF_LOCAL (1&lt;&lt;8)
DECL|macro|MEMF_CLEAR
mdefine_line|#define MEMF_CLEAR (1&lt;&lt;16)
DECL|struct|MemHeader
r_struct
id|MemHeader
(brace
DECL|member|mh_Node
r_struct
id|Node
id|mh_Node
suffix:semicolon
DECL|member|mh_Attributes
id|u_short
id|mh_Attributes
suffix:semicolon
multiline_comment|/* characteristics of this region */
DECL|member|mh_First
r_struct
id|MemChunk
op_star
id|mh_First
suffix:semicolon
multiline_comment|/* first free region&t;&t;*/
DECL|member|mh_Lower
r_void
op_star
id|mh_Lower
suffix:semicolon
multiline_comment|/* lower memory bound&t;&t;*/
DECL|member|mh_Upper
r_void
op_star
id|mh_Upper
suffix:semicolon
multiline_comment|/* upper memory bound+1 */
DECL|member|mh_Free
id|u_long
id|mh_Free
suffix:semicolon
multiline_comment|/* total number of free bytes&t;*/
)brace
suffix:semicolon
DECL|struct|ExecBase
r_struct
id|ExecBase
(brace
DECL|member|fill1
id|u_char
id|fill1
(braket
l_int|296
)braket
suffix:semicolon
DECL|member|AttnFlags
id|u_short
id|AttnFlags
suffix:semicolon
DECL|member|fill2
id|u_char
id|fill2
(braket
l_int|24
)braket
suffix:semicolon
DECL|member|MemList
r_struct
id|List
id|MemList
suffix:semicolon
DECL|member|fill3
id|u_char
id|fill3
(braket
l_int|194
)braket
suffix:semicolon
DECL|member|VBlankFrequency
id|u_char
id|VBlankFrequency
suffix:semicolon
DECL|member|PowerSupplyFrequency
id|u_char
id|PowerSupplyFrequency
suffix:semicolon
DECL|member|fill4
id|u_char
id|fill4
(braket
l_int|36
)braket
suffix:semicolon
DECL|member|EClockFrequency
id|u_long
id|EClockFrequency
suffix:semicolon
)brace
suffix:semicolon
macro_line|#ifndef AFF_68020
DECL|macro|AFB_68020
mdefine_line|#define AFB_68020 1
DECL|macro|AFF_68020
mdefine_line|#define AFF_68020 (1&lt;&lt;AFB_68020)
macro_line|#endif
macro_line|#ifndef AFF_68030
DECL|macro|AFB_68030
mdefine_line|#define AFB_68030 2
DECL|macro|AFF_68030
mdefine_line|#define AFF_68030 (1&lt;&lt;AFB_68030)
macro_line|#endif
macro_line|#ifndef AFF_68040
DECL|macro|AFB_68040
mdefine_line|#define AFB_68040 3
DECL|macro|AFF_68040
mdefine_line|#define AFF_68040 (1&lt;&lt;AFB_68040)
macro_line|#endif
macro_line|#ifndef AFF_68881
DECL|macro|AFB_68881
mdefine_line|#define AFB_68881 4
DECL|macro|AFF_68881
mdefine_line|#define AFF_68881 (1&lt;&lt;AFB_68881)
macro_line|#endif
macro_line|#ifndef AFF_68882
DECL|macro|AFB_68882
mdefine_line|#define AFB_68882 5
DECL|macro|AFF_68882
mdefine_line|#define AFF_68882 (1&lt;&lt;AFB_68882)
macro_line|#endif
macro_line|#ifndef AFF_FPU40
DECL|macro|AFB_FPU40
mdefine_line|#define AFB_FPU40 6
DECL|macro|AFF_FPU40
mdefine_line|#define AFF_FPU40 (1&lt;&lt;AFB_FPU40)
macro_line|#endif
multiline_comment|/*&n; *  GfxBase is now used to determine if AGA or ECS is present&n; */
DECL|struct|GfxBase
r_struct
id|GfxBase
(brace
DECL|member|unused1
id|u_char
id|unused1
(braket
l_int|0xec
)braket
suffix:semicolon
DECL|member|ChipRevBits0
id|u_char
id|ChipRevBits0
suffix:semicolon
DECL|member|unused2
id|u_char
id|unused2
(braket
l_int|5
)braket
suffix:semicolon
DECL|member|monitor_id
id|u_short
id|monitor_id
suffix:semicolon
)brace
suffix:semicolon
macro_line|#ifndef&t;GFXB_HR_AGNUS
DECL|macro|GFXB_HR_AGNUS
mdefine_line|#define&t;GFXB_HR_AGNUS&t;0
DECL|macro|GFXF_HR_AGNUS
mdefine_line|#define&t;GFXF_HR_AGNUS&t;(1&lt;&lt;GFXB_HR_AGNUS)
macro_line|#endif
macro_line|#ifndef&t;GFXB_HR_DENISE
DECL|macro|GFXB_HR_DENISE
mdefine_line|#define GFXB_HR_DENISE&t;1
DECL|macro|GFXF_HR_DENISE
mdefine_line|#define GFXF_HR_DENISE&t;(1&lt;&lt;GFXB_HR_DENISE)
macro_line|#endif
macro_line|#ifndef&t;GFXB_AA_ALICE
DECL|macro|GFXB_AA_ALICE
mdefine_line|#define GFXB_AA_ALICE&t;2
DECL|macro|GFXF_AA_ALICE
mdefine_line|#define GFXF_AA_ALICE&t;(1&lt;&lt;GFXB_AA_ALICE)
macro_line|#endif
macro_line|#ifndef&t;GFXB_AA_LISA
DECL|macro|GFXB_AA_LISA
mdefine_line|#define GFXB_AA_LISA&t;3
DECL|macro|GFXF_AA_LISA
mdefine_line|#define GFXF_AA_LISA&t;(1&lt;&lt;GFXB_AA_LISA)
macro_line|#endif
multiline_comment|/*&n; *  HiRes(=Big) Agnus present; i.e. &n; *  1MB chipmem, big blits (none of interest so far) and programmable sync&n; */
DECL|macro|GFXG_OCS
mdefine_line|#define GFXG_OCS&t;(GFXF_HR_AGNUS)
multiline_comment|/*&n; *  HiRes Agnus/Denise present; we are running on ECS&n; */
DECL|macro|GFXG_ECS
mdefine_line|#define GFXG_ECS&t;(GFXF_HR_AGNUS|GFXF_HR_DENISE)
multiline_comment|/*&n; *  Alice and Lisa present; we are running on AGA&n; */
DECL|macro|GFXG_AGA
mdefine_line|#define GFXG_AGA&t;(GFXF_AA_ALICE|GFXF_AA_LISA)
r_struct
id|Library
suffix:semicolon
r_extern
r_struct
id|ExecBase
op_star
id|SysBase
suffix:semicolon
r_static
id|__inline
r_void
op_star
DECL|function|AllocMem
id|AllocMem
(paren
r_int
r_int
id|byteSize
comma
r_int
r_int
id|requirements
)paren
(brace
r_register
r_void
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_int
r_int
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|byteSize
suffix:semicolon
r_register
r_int
r_int
id|d1
id|__asm
c_func
(paren
l_string|&quot;d1&quot;
)paren
op_assign
id|requirements
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0xc6)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
r_static
id|__inline
r_void
DECL|function|CloseLibrary
id|CloseLibrary
(paren
r_struct
id|Library
op_star
id|library
)paren
(brace
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_struct
id|Library
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|library
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x19e)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
r_static
id|__inline
r_void
DECL|function|Disable
id|Disable
(paren
r_void
)paren
(brace
r_extern
r_struct
id|ExecBase
op_star
id|SysBase
suffix:semicolon
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x78)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
r_static
id|__inline
r_void
DECL|function|Enable
id|Enable
(paren
r_void
)paren
(brace
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x7e)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
r_static
id|__inline
r_void
DECL|function|FreeMem
id|FreeMem
(paren
r_void
op_star
id|memoryBlock
comma
r_int
r_int
id|byteSize
)paren
(brace
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_void
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|memoryBlock
suffix:semicolon
r_register
r_int
r_int
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|byteSize
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0xd2)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
r_static
id|__inline
r_struct
id|Library
op_star
DECL|function|OpenLibrary
id|OpenLibrary
(paren
r_char
op_star
id|libName
comma
r_int
r_int
id|version
)paren
(brace
r_register
r_struct
id|Library
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
id|u_char
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|libName
suffix:semicolon
r_register
r_int
r_int
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|version
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x228)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
r_static
id|__inline
r_void
op_star
DECL|function|SuperState
id|SuperState
(paren
r_void
)paren
(brace
r_register
r_void
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x96)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
r_static
id|__inline
r_void
DECL|function|CacheClearU
id|CacheClearU
(paren
r_void
)paren
(brace
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x27c)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
r_static
id|__inline
r_int
r_int
DECL|function|CacheControl
id|CacheControl
(paren
r_int
r_int
id|cacheBits
comma
r_int
r_int
id|cacheMask
)paren
(brace
r_register
r_int
r_int
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_int
r_int
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|cacheBits
suffix:semicolon
r_register
r_int
r_int
id|d1
id|__asm
c_func
(paren
l_string|&quot;d1&quot;
)paren
op_assign
id|cacheMask
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x288)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
r_static
id|__inline
r_int
r_int
DECL|function|Supervisor
id|Supervisor
(paren
r_int
r_int
(paren
op_star
id|userfunc
)paren
(paren
)paren
)paren
(brace
r_register
r_int
r_int
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_struct
id|ExecBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_int
r_int
(paren
op_star
id|a0
)paren
(paren
)paren
id|__asm
c_func
(paren
l_string|&quot;a0&quot;
)paren
op_assign
id|userfunc
suffix:semicolon
multiline_comment|/* gcc doesn&squot;t seem to like asm parameters in a5 */
id|__asm
id|__volatile
(paren
l_string|&quot;movel a5,sp@-;movel a0,a5;jsr a6@(-0x1e);movel sp@+,a5&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
comma
l_string|&quot;r&quot;
(paren
id|a0
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
r_struct
id|ExpansionBase
suffix:semicolon
r_extern
r_struct
id|ExpansionBase
op_star
id|ExpansionBase
suffix:semicolon
r_static
id|__inline
r_struct
id|ConfigDev
op_star
DECL|function|FindConfigDev
id|FindConfigDev
(paren
r_struct
id|ConfigDev
op_star
id|oldConfigDev
comma
r_int
id|manufacturer
comma
r_int
id|product
)paren
(brace
r_register
r_struct
id|ConfigDev
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_struct
id|ExpansionBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|ExpansionBase
suffix:semicolon
r_register
r_struct
id|ConfigDev
op_star
id|a0
id|__asm
c_func
(paren
l_string|&quot;a0&quot;
)paren
op_assign
id|oldConfigDev
suffix:semicolon
r_register
r_int
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|manufacturer
suffix:semicolon
r_register
r_int
id|d1
id|__asm
c_func
(paren
l_string|&quot;d1&quot;
)paren
op_assign
id|product
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x48)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
comma
l_string|&quot;r&quot;
(paren
id|a0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
r_struct
id|GfxBase
suffix:semicolon
r_extern
r_struct
id|GfxBase
op_star
id|GfxBase
suffix:semicolon
r_struct
id|View
suffix:semicolon
r_static
id|__inline
r_void
DECL|function|LoadView
id|LoadView
(paren
r_struct
id|View
op_star
id|view
)paren
(brace
r_register
r_struct
id|GfxBase
op_star
id|a6
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|GfxBase
suffix:semicolon
r_register
r_struct
id|View
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|view
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0xde)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|a6
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
DECL|function|change_stack
r_static
id|__inline
r_void
id|change_stack
(paren
r_char
op_star
id|stackp
)paren
(brace
id|__asm__
r_volatile
(paren
l_string|&quot;movel %0,sp&bslash;n&bslash;t&quot;
op_scope_resolution
l_string|&quot;g&quot;
(paren
id|stackp
)paren
suffix:colon
l_string|&quot;sp&quot;
)paren
suffix:semicolon
)brace
DECL|function|disable_cache
r_static
id|__inline
r_void
id|disable_cache
(paren
r_void
)paren
(brace
id|__asm__
r_volatile
(paren
l_string|&quot;movec %0,cacr&quot;
op_scope_resolution
l_string|&quot;d&quot;
(paren
l_int|0
)paren
)paren
suffix:semicolon
)brace
DECL|function|disable_mmu
r_static
id|__inline
r_void
id|disable_mmu
(paren
r_void
)paren
(brace
r_if
c_cond
(paren
id|SysBase-&gt;AttnFlags
op_amp
id|AFF_68040
)paren
id|__asm__
r_volatile
(paren
l_string|&quot;moveq #0,d0;&quot;
l_string|&quot;.long 0x4e7b0003;&quot;
multiline_comment|/* movec d0,tc */
l_string|&quot;.long 0x4e7b0004;&quot;
multiline_comment|/* movec d0,itt0 */
l_string|&quot;.long 0x4e7b0005;&quot;
multiline_comment|/* movec d0,itt1 */
l_string|&quot;.long 0x4e7b0006;&quot;
multiline_comment|/* movec d0,dtt0 */
l_string|&quot;.long 0x4e7b0007&quot;
multiline_comment|/* movec d0,dtt1 */
suffix:colon
multiline_comment|/* no outputs */
suffix:colon
multiline_comment|/* no inputs */
suffix:colon
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_else
(brace
id|__asm__
r_volatile
(paren
l_string|&quot;subl  #4,sp;&quot;
l_string|&quot;pmove tc,sp@;&quot;
l_string|&quot;bclr  #7,sp@;&quot;
l_string|&quot;pmove sp@,tc;&quot;
l_string|&quot;addl  #4,sp&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|SysBase-&gt;AttnFlags
op_amp
id|AFF_68030
)paren
id|__asm__
r_volatile
(paren
l_string|&quot;clrl  sp@-;&quot;
l_string|&quot;.long 0xf0170800;&quot;
multiline_comment|/* pmove sp@,tt0 */
l_string|&quot;.long 0xf0170c00;&quot;
multiline_comment|/* pmove sp@,tt1 */
l_string|&quot;addql #4,sp&quot;
)paren
suffix:semicolon
)brace
)brace
DECL|function|jump_to
r_static
id|__inline
r_void
id|jump_to
(paren
r_int
r_int
id|addr
)paren
(brace
id|__asm__
r_volatile
(paren
l_string|&quot;jmp %0@&quot;
op_scope_resolution
l_string|&quot;a&quot;
(paren
id|addr
)paren
)paren
suffix:semicolon
multiline_comment|/* NOTREACHED */
)brace
macro_line|#endif /* BOOTSTRAP_H */
eof
