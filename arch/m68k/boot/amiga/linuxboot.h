multiline_comment|/*&n; *  linux/arch/m68k/boot/amiga/linuxboot.h -- Generic routine to boot Linux/m68k&n; *&t;&t;&t;&t;&t;      on Amiga, used by both Amiboot and&n; *&t;&t;&t;&t;&t;      Amiga-Lilo.&n; *&n; *&t;Created 1996 by Geert Uytterhoeven&n; *&n; *&n; *  This file is based on the original bootstrap code (bootstrap.c):&n; *&n; *&t;Copyright (C) 1993, 1994 Hamish Macdonald&n; *&t;&t;&t;&t; Greg Harp&n; *&n; *&t;&t;    with work by Michael Rausch&n; *&t;&t;&t;&t; Geert Uytterhoeven&n; *&t;&t;&t;&t; Frank Neumann&n; *&t;&t;&t;&t; Andreas Schwab&n; *&n; *&n; *  This file is subject to the terms and conditions of the GNU General Public&n; *  License.  See the file COPYING in the main directory of this archive&n; *  for more details.&n; */
macro_line|#include &lt;asm/setup.h&gt;
macro_line|#include &lt;linux/zorro.h&gt;
multiline_comment|/*&n;     *  Amiboot Version&n;     */
DECL|macro|AMIBOOT_VERSION
mdefine_line|#define AMIBOOT_VERSION&t;&t;&quot;5.4&quot;
multiline_comment|/*&n;     *  Amiga Bootinfo Definitions&n;     *&n;     *  All limits herein are `soft&squot; limits, i.e. they don&squot;t put constraints&n;     *  on the actual parameters in the kernel.&n;     */
DECL|struct|amiga_bootinfo
r_struct
id|amiga_bootinfo
(brace
DECL|member|machtype
id|u_long
id|machtype
suffix:semicolon
multiline_comment|/* machine type = MACH_AMIGA */
DECL|member|cputype
id|u_long
id|cputype
suffix:semicolon
multiline_comment|/* system CPU */
DECL|member|fputype
id|u_long
id|fputype
suffix:semicolon
multiline_comment|/* system FPU */
DECL|member|mmutype
id|u_long
id|mmutype
suffix:semicolon
multiline_comment|/* system MMU */
DECL|member|num_memory
r_int
id|num_memory
suffix:semicolon
multiline_comment|/* # of memory blocks found */
DECL|member|memory
r_struct
id|mem_info
id|memory
(braket
id|NUM_MEMINFO
)braket
suffix:semicolon
multiline_comment|/* memory description */
DECL|member|ramdisk
r_struct
id|mem_info
id|ramdisk
suffix:semicolon
multiline_comment|/* ramdisk description */
DECL|member|command_line
r_char
id|command_line
(braket
id|CL_SIZE
)braket
suffix:semicolon
multiline_comment|/* kernel command line parameters */
DECL|member|model
id|u_long
id|model
suffix:semicolon
multiline_comment|/* Amiga Model */
DECL|member|num_autocon
r_int
id|num_autocon
suffix:semicolon
multiline_comment|/* # of autoconfig devices found */
DECL|member|autocon
r_struct
id|ConfigDev
id|autocon
(braket
id|ZORRO_NUM_AUTO
)braket
suffix:semicolon
multiline_comment|/* autoconfig devices */
DECL|member|chip_size
id|u_long
id|chip_size
suffix:semicolon
multiline_comment|/* size of chip memory (bytes) */
DECL|member|vblank
id|u_char
id|vblank
suffix:semicolon
multiline_comment|/* VBLANK frequency */
DECL|member|psfreq
id|u_char
id|psfreq
suffix:semicolon
multiline_comment|/* power supply frequency */
DECL|member|eclock
id|u_long
id|eclock
suffix:semicolon
multiline_comment|/* EClock frequency */
DECL|member|chipset
id|u_long
id|chipset
suffix:semicolon
multiline_comment|/* native chipset present */
DECL|member|serper
id|u_short
id|serper
suffix:semicolon
multiline_comment|/* serial port period */
)brace
suffix:semicolon
multiline_comment|/*&n;     *  Parameters passed to linuxboot()&n;     */
DECL|struct|linuxboot_args
r_struct
id|linuxboot_args
(brace
DECL|member|bi
r_struct
id|amiga_bootinfo
id|bi
suffix:semicolon
multiline_comment|/* Initial values override detected values */
DECL|member|kernelname
r_const
r_char
op_star
id|kernelname
suffix:semicolon
DECL|member|ramdiskname
r_const
r_char
op_star
id|ramdiskname
suffix:semicolon
DECL|member|debugflag
r_int
id|debugflag
suffix:semicolon
DECL|member|keep_video
r_int
id|keep_video
suffix:semicolon
DECL|member|reset_boards
r_int
id|reset_boards
suffix:semicolon
DECL|member|baud
id|u_int
id|baud
suffix:semicolon
DECL|member|puts
r_void
(paren
op_star
id|puts
)paren
(paren
r_const
r_char
op_star
id|str
)paren
suffix:semicolon
DECL|member|getchar
r_int
(paren
op_star
id|getchar
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|putchar
r_void
(paren
op_star
id|putchar
)paren
(paren
r_char
id|c
)paren
suffix:semicolon
DECL|member|printf
r_void
(paren
op_star
id|printf
)paren
(paren
r_const
r_char
op_star
id|fmt
comma
dot
dot
dot
)paren
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_const
r_char
op_star
id|path
)paren
suffix:semicolon
DECL|member|seek
r_int
(paren
op_star
id|seek
)paren
(paren
r_int
id|fd
comma
r_int
id|offset
)paren
suffix:semicolon
DECL|member|read
r_int
(paren
op_star
id|read
)paren
(paren
r_int
id|fd
comma
r_char
op_star
id|buf
comma
r_int
id|count
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|fd
)paren
suffix:semicolon
DECL|member|filesize
r_int
(paren
op_star
id|filesize
)paren
(paren
r_const
r_char
op_star
id|path
)paren
suffix:semicolon
DECL|member|sleep
r_void
(paren
op_star
id|sleep
)paren
(paren
id|u_long
id|micros
)paren
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n;     *  Boot the Linux/m68k Operating System&n;     */
r_extern
id|u_long
id|linuxboot
c_func
(paren
r_const
r_struct
id|linuxboot_args
op_star
id|args
)paren
suffix:semicolon
multiline_comment|/*&n;     *  Amiga Models&n;     */
r_extern
r_const
r_char
op_star
id|amiga_models
(braket
)braket
suffix:semicolon
r_extern
r_const
id|u_long
id|first_amiga_model
suffix:semicolon
r_extern
r_const
id|u_long
id|last_amiga_model
suffix:semicolon
multiline_comment|/*&n;     *&t;Exec Library Definitions&n;     */
DECL|macro|TRUE
mdefine_line|#define TRUE&t;(1)
DECL|macro|FALSE
mdefine_line|#define FALSE&t;(0)
DECL|struct|List
r_struct
id|List
(brace
DECL|member|lh_Head
r_struct
id|Node
op_star
id|lh_Head
suffix:semicolon
DECL|member|lh_Tail
r_struct
id|Node
op_star
id|lh_Tail
suffix:semicolon
DECL|member|lh_TailPred
r_struct
id|Node
op_star
id|lh_TailPred
suffix:semicolon
DECL|member|lh_Type
id|u_char
id|lh_Type
suffix:semicolon
DECL|member|l_pad
id|u_char
id|l_pad
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|MemChunk
r_struct
id|MemChunk
(brace
DECL|member|mc_Next
r_struct
id|MemChunk
op_star
id|mc_Next
suffix:semicolon
multiline_comment|/* pointer to next chunk */
DECL|member|mc_Bytes
id|u_long
id|mc_Bytes
suffix:semicolon
multiline_comment|/* chunk byte size    */
)brace
suffix:semicolon
DECL|macro|MEMF_PUBLIC
mdefine_line|#define MEMF_PUBLIC&t;(1&lt;&lt;0)
DECL|macro|MEMF_CHIP
mdefine_line|#define MEMF_CHIP&t;(1&lt;&lt;1)
DECL|macro|MEMF_FAST
mdefine_line|#define MEMF_FAST&t;(1&lt;&lt;2)
DECL|macro|MEMF_LOCAL
mdefine_line|#define MEMF_LOCAL&t;(1&lt;&lt;8)
DECL|macro|MEMF_CLEAR
mdefine_line|#define MEMF_CLEAR&t;(1&lt;&lt;16)
DECL|struct|MemHeader
r_struct
id|MemHeader
(brace
DECL|member|mh_Node
r_struct
id|Node
id|mh_Node
suffix:semicolon
DECL|member|mh_Attributes
id|u_short
id|mh_Attributes
suffix:semicolon
multiline_comment|/* characteristics of this region */
DECL|member|mh_First
r_struct
id|MemChunk
op_star
id|mh_First
suffix:semicolon
multiline_comment|/* first free region */
DECL|member|mh_Lower
r_void
op_star
id|mh_Lower
suffix:semicolon
multiline_comment|/* lower memory bound */
DECL|member|mh_Upper
r_void
op_star
id|mh_Upper
suffix:semicolon
multiline_comment|/* upper memory bound+1 */
DECL|member|mh_Free
id|u_long
id|mh_Free
suffix:semicolon
multiline_comment|/* total number of free bytes */
)brace
suffix:semicolon
DECL|struct|ExecBase
r_struct
id|ExecBase
(brace
DECL|member|fill1
id|u_char
id|fill1
(braket
l_int|20
)braket
suffix:semicolon
DECL|member|Version
id|u_short
id|Version
suffix:semicolon
DECL|member|fill2
id|u_char
id|fill2
(braket
l_int|274
)braket
suffix:semicolon
DECL|member|AttnFlags
id|u_short
id|AttnFlags
suffix:semicolon
DECL|member|fill3
id|u_char
id|fill3
(braket
l_int|24
)braket
suffix:semicolon
DECL|member|MemList
r_struct
id|List
id|MemList
suffix:semicolon
DECL|member|fill4
id|u_char
id|fill4
(braket
l_int|194
)braket
suffix:semicolon
DECL|member|VBlankFrequency
id|u_char
id|VBlankFrequency
suffix:semicolon
DECL|member|PowerSupplyFrequency
id|u_char
id|PowerSupplyFrequency
suffix:semicolon
DECL|member|fill5
id|u_char
id|fill5
(braket
l_int|36
)braket
suffix:semicolon
DECL|member|ex_EClockFrequency
id|u_long
id|ex_EClockFrequency
suffix:semicolon
DECL|member|fill6
id|u_char
id|fill6
(braket
l_int|60
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|AFB_68020
mdefine_line|#define AFB_68020&t;(1)
DECL|macro|AFF_68020
mdefine_line|#define AFF_68020&t;(1&lt;&lt;AFB_68020)
DECL|macro|AFB_68030
mdefine_line|#define AFB_68030&t;(2)
DECL|macro|AFF_68030
mdefine_line|#define AFF_68030&t;(1&lt;&lt;AFB_68030)
DECL|macro|AFB_68040
mdefine_line|#define AFB_68040&t;(3)
DECL|macro|AFF_68040
mdefine_line|#define AFF_68040&t;(1&lt;&lt;AFB_68040)
DECL|macro|AFB_68881
mdefine_line|#define AFB_68881&t;(4)
DECL|macro|AFF_68881
mdefine_line|#define AFF_68881&t;(1&lt;&lt;AFB_68881)
DECL|macro|AFB_68882
mdefine_line|#define AFB_68882&t;(5)
DECL|macro|AFF_68882
mdefine_line|#define AFF_68882&t;(1&lt;&lt;AFB_68882)
DECL|macro|AFB_FPU40
mdefine_line|#define AFB_FPU40&t;(6)&t;&t;/* ONLY valid if AFB_68040 or AFB_68060 */
DECL|macro|AFF_FPU40
mdefine_line|#define AFF_FPU40&t;(1&lt;&lt;AFB_FPU40)&t;/* is set; also set for 68060 FPU */
DECL|macro|AFB_68060
mdefine_line|#define AFB_68060&t;(7)
DECL|macro|AFF_68060
mdefine_line|#define AFF_68060&t;(1&lt;&lt;AFB_68060)
r_struct
id|Resident
suffix:semicolon
multiline_comment|/*&n;     *&t;Graphics Library Definitions&n;     */
DECL|struct|GfxBase
r_struct
id|GfxBase
(brace
DECL|member|fill1
id|u_char
id|fill1
(braket
l_int|20
)braket
suffix:semicolon
DECL|member|Version
id|u_short
id|Version
suffix:semicolon
DECL|member|fill2
id|u_char
id|fill2
(braket
l_int|194
)braket
suffix:semicolon
DECL|member|NormalDisplayRows
id|u_short
id|NormalDisplayRows
suffix:semicolon
DECL|member|NormalDisplayColumns
id|u_short
id|NormalDisplayColumns
suffix:semicolon
DECL|member|fill3
id|u_char
id|fill3
(braket
l_int|16
)braket
suffix:semicolon
DECL|member|ChipRevBits0
id|u_char
id|ChipRevBits0
suffix:semicolon
DECL|member|fill4
id|u_char
id|fill4
(braket
l_int|307
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|GFXB_HR_AGNUS
mdefine_line|#define GFXB_HR_AGNUS&t;(0)
DECL|macro|GFXF_HR_AGNUS
mdefine_line|#define GFXF_HR_AGNUS&t;(1&lt;&lt;GFXB_HR_AGNUS)
DECL|macro|GFXB_HR_DENISE
mdefine_line|#define GFXB_HR_DENISE&t;(1)
DECL|macro|GFXF_HR_DENISE
mdefine_line|#define GFXF_HR_DENISE&t;(1&lt;&lt;GFXB_HR_DENISE)
DECL|macro|GFXB_AA_ALICE
mdefine_line|#define GFXB_AA_ALICE&t;(2)
DECL|macro|GFXF_AA_ALICE
mdefine_line|#define GFXF_AA_ALICE&t;(1&lt;&lt;GFXB_AA_ALICE)
DECL|macro|GFXB_AA_LISA
mdefine_line|#define GFXB_AA_LISA&t;(3)
DECL|macro|GFXF_AA_LISA
mdefine_line|#define GFXF_AA_LISA&t;(1&lt;&lt;GFXB_AA_LISA)
multiline_comment|/*&n;     *&t;HiRes(=Big) Agnus present; i.e. &n;     *&t;1MB chipmem, big blits (none of interest so far) and programmable sync&n;     */
DECL|macro|GFXG_OCS
mdefine_line|#define GFXG_OCS&t;(GFXF_HR_AGNUS)
multiline_comment|/*&n;     *&t;HiRes Agnus/Denise present; we are running on ECS&n;     */
DECL|macro|GFXG_ECS
mdefine_line|#define GFXG_ECS&t;(GFXF_HR_AGNUS|GFXF_HR_DENISE)
multiline_comment|/*&n;     *&t;Alice and Lisa present; we are running on AGA&n;     */
DECL|macro|GFXG_AGA
mdefine_line|#define GFXG_AGA&t;(GFXF_AA_ALICE|GFXF_AA_LISA)
DECL|macro|SETCHIPREV_BEST
mdefine_line|#define SETCHIPREV_BEST&t;(0xffffffff)
DECL|macro|HIRES
mdefine_line|#define HIRES&t;&t;(0x8000)
r_struct
id|View
suffix:semicolon
multiline_comment|/*&n;     *&t;Amiga Shared Library/Device Functions&n;     */
r_extern
r_const
r_struct
id|ExecBase
op_star
id|SysBase
suffix:semicolon
DECL|macro|LVOAllocMem
mdefine_line|#define LVOAllocMem&t;&t;(-0xc6)
DECL|macro|LVOAllocVec
mdefine_line|#define LVOAllocVec&t;&t;(-0x2ac)
DECL|macro|LVOCacheControl
mdefine_line|#define LVOCacheControl&t;&t;(-0x288)
DECL|macro|LVODisable
mdefine_line|#define LVODisable&t;&t;(-0x78)
DECL|macro|LVOEnable
mdefine_line|#define LVOEnable&t;&t;(-0x7e)
DECL|macro|LVOFindResident
mdefine_line|#define LVOFindResident&t;&t;(-0x60)
DECL|macro|LVOFreeMem
mdefine_line|#define LVOFreeMem&t;&t;(-0xd2)
DECL|macro|LVOFreeVec
mdefine_line|#define LVOFreeVec&t;&t;(-0x2b2)
DECL|macro|LVOOpenresource
mdefine_line|#define LVOOpenresource&t;&t;(-0x1f2)
DECL|macro|LVOSuperState
mdefine_line|#define LVOSuperState&t;&t;(-0x96)
DECL|macro|LVOSupervisor
mdefine_line|#define LVOSupervisor&t;&t;(-0x1e)
DECL|function|AllocMem
r_static
id|__inline
r_void
op_star
id|AllocMem
c_func
(paren
id|u_long
id|byteSize
comma
id|u_long
id|requirements
)paren
(brace
r_register
r_void
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
id|u_long
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|byteSize
suffix:semicolon
r_register
id|u_long
id|d1
id|__asm
c_func
(paren
l_string|&quot;d1&quot;
)paren
op_assign
id|requirements
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0xc6)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
DECL|function|AllocVec
r_static
id|__inline
r_void
op_star
id|AllocVec
c_func
(paren
id|u_long
id|byteSize
comma
id|u_long
id|requirements
)paren
(brace
r_register
r_void
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
id|u_long
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|byteSize
suffix:semicolon
r_register
id|u_long
id|d1
id|__asm
c_func
(paren
l_string|&quot;d1&quot;
)paren
op_assign
id|requirements
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x2ac)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
DECL|function|CacheControl
r_static
id|__inline
id|u_long
id|CacheControl
c_func
(paren
id|u_long
id|cacheBits
comma
id|u_long
id|cacheMask
)paren
(brace
r_register
id|u_long
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
id|u_long
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|cacheBits
suffix:semicolon
r_register
id|u_long
id|d1
id|__asm
c_func
(paren
l_string|&quot;d1&quot;
)paren
op_assign
id|cacheMask
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x288)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
DECL|function|Disable
r_static
id|__inline
r_void
id|Disable
c_func
(paren
r_void
)paren
(brace
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x78)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
DECL|function|Enable
r_static
id|__inline
r_void
id|Enable
c_func
(paren
r_void
)paren
(brace
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x7e)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
DECL|function|FindResident
r_static
id|__inline
r_struct
id|Resident
op_star
id|FindResident
c_func
(paren
r_const
id|u_char
op_star
id|name
)paren
(brace
r_register
r_struct
id|Resident
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_const
id|u_char
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|name
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x60)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
DECL|function|FreeMem
r_static
id|__inline
r_void
id|FreeMem
c_func
(paren
r_void
op_star
id|memoryBlock
comma
id|u_long
id|byteSize
)paren
(brace
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_void
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|memoryBlock
suffix:semicolon
r_register
id|u_long
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|byteSize
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0xd2)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
DECL|function|FreeVec
r_static
id|__inline
r_void
id|FreeVec
c_func
(paren
r_void
op_star
id|memoryBlock
)paren
(brace
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_void
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|memoryBlock
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x2b2)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
DECL|function|OpenResource
r_static
id|__inline
r_void
op_star
id|OpenResource
c_func
(paren
r_const
id|u_char
op_star
id|resName
)paren
(brace
r_register
r_void
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
r_const
id|u_char
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|resName
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x1f2)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
DECL|function|SuperState
r_static
id|__inline
r_void
op_star
id|SuperState
c_func
(paren
r_void
)paren
(brace
r_register
r_void
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x96)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
DECL|function|Supervisor
r_static
id|__inline
id|u_long
id|Supervisor
c_func
(paren
id|u_long
(paren
op_star
id|userfunc
)paren
(paren
r_void
)paren
)paren
(brace
r_register
id|u_long
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|ExecBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|SysBase
suffix:semicolon
r_register
id|u_long
(paren
op_star
id|d7
)paren
(paren
)paren
id|__asm
c_func
(paren
l_string|&quot;d7&quot;
)paren
op_assign
id|userfunc
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;exg d7,a5;&quot;
l_string|&quot;jsr a6@(-0x1e);&quot;
l_string|&quot;exg d7,a5&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|d7
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
r_extern
r_const
r_struct
id|ExpansionBase
op_star
id|ExpansionBase
suffix:semicolon
DECL|macro|LVOFindConfigDev
mdefine_line|#define LVOFindConfigDev&t;(-0x48)
DECL|function|FindConfigDev
r_static
id|__inline
r_struct
id|ConfigDev
op_star
id|FindConfigDev
c_func
(paren
r_struct
id|ConfigDev
op_star
id|oldConfigDev
comma
r_int
id|manufacturer
comma
r_int
id|product
)paren
(brace
r_register
r_struct
id|ConfigDev
op_star
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|ExpansionBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|ExpansionBase
suffix:semicolon
r_register
r_struct
id|ConfigDev
op_star
id|a0
id|__asm
c_func
(paren
l_string|&quot;a0&quot;
)paren
op_assign
id|oldConfigDev
suffix:semicolon
r_register
r_int
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|manufacturer
suffix:semicolon
r_register
r_int
id|d1
id|__asm
c_func
(paren
l_string|&quot;d1&quot;
)paren
op_assign
id|product
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x48)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|a0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
comma
l_string|&quot;r&quot;
(paren
id|d1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
r_extern
r_const
r_struct
id|GfxBase
op_star
id|GfxBase
suffix:semicolon
DECL|macro|LVOLoadView
mdefine_line|#define LVOLoadView&t;&t;(-0xde)
DECL|macro|LVOSetChipRev
mdefine_line|#define LVOSetChipRev&t;&t;(-0x378)
DECL|function|LoadView
r_static
id|__inline
r_void
id|LoadView
c_func
(paren
r_struct
id|View
op_star
id|view
)paren
(brace
r_register
r_const
r_struct
id|GfxBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|GfxBase
suffix:semicolon
r_register
r_struct
id|View
op_star
id|a1
id|__asm
c_func
(paren
l_string|&quot;a1&quot;
)paren
op_assign
id|view
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0xde)&quot;
suffix:colon
multiline_comment|/* no output */
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|a1
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
DECL|function|SetChipRev
r_static
id|__inline
id|u_long
id|SetChipRev
c_func
(paren
id|u_long
id|want
)paren
(brace
r_register
id|u_long
id|_res
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_register
r_const
r_struct
id|GfxBase
op_star
id|_base
id|__asm
c_func
(paren
l_string|&quot;a6&quot;
)paren
op_assign
id|GfxBase
suffix:semicolon
r_register
id|u_long
id|d0
id|__asm
c_func
(paren
l_string|&quot;d0&quot;
)paren
op_assign
id|want
suffix:semicolon
id|__asm
id|__volatile
(paren
l_string|&quot;jsr a6@(-0x378)&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|_res
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|_base
)paren
comma
l_string|&quot;r&quot;
(paren
id|d0
)paren
suffix:colon
l_string|&quot;a0&quot;
comma
l_string|&quot;a1&quot;
comma
l_string|&quot;d0&quot;
comma
l_string|&quot;d1&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|_res
suffix:semicolon
)brace
multiline_comment|/*&n;     *&t;Bootstrap Support Functions&n;     */
DECL|function|disable_mmu
r_static
id|__inline
r_void
id|disable_mmu
c_func
(paren
r_void
)paren
(brace
r_if
c_cond
(paren
id|SysBase-&gt;AttnFlags
op_amp
id|AFF_68040
)paren
id|__asm
id|__volatile
(paren
l_string|&quot;moveq #0,d0;&quot;
l_string|&quot;.long 0x4e7b0003;&quot;
multiline_comment|/* movec d0,tc */
l_string|&quot;.long 0x4e7b0004;&quot;
multiline_comment|/* movec d0,itt0 */
l_string|&quot;.long 0x4e7b0005;&quot;
multiline_comment|/* movec d0,itt1 */
l_string|&quot;.long 0x4e7b0006;&quot;
multiline_comment|/* movec d0,dtt0 */
l_string|&quot;.long 0x4e7b0007&quot;
multiline_comment|/* movec d0,dtt1 */
suffix:colon
multiline_comment|/* no outputs */
suffix:colon
multiline_comment|/* no inputs */
suffix:colon
l_string|&quot;d0&quot;
)paren
suffix:semicolon
r_else
(brace
id|__asm
id|__volatile
(paren
l_string|&quot;subl #4,sp;&quot;
l_string|&quot;pmove tc,sp@;&quot;
l_string|&quot;bclr #7,sp@;&quot;
l_string|&quot;pmove sp@,tc;&quot;
l_string|&quot;addl #4,sp&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|SysBase-&gt;AttnFlags
op_amp
id|AFF_68030
)paren
id|__asm
id|__volatile
(paren
l_string|&quot;clrl sp@-;&quot;
l_string|&quot;.long 0xf0170800;&quot;
multiline_comment|/* pmove sp@,tt0 */
l_string|&quot;.long 0xf0170c00;&quot;
multiline_comment|/* pmove sp@,tt1 */
l_string|&quot;addql #4,sp&quot;
)paren
suffix:semicolon
)brace
)brace
eof
