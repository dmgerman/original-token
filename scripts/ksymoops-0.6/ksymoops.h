multiline_comment|/*&n;&t;ksymoops.h.&n;&n;&t;Copyright Keith Owens &lt;kaos@ocs.com.au&gt;.&n;&t;Released under the GNU Public Licence, Version 2.&n;&n;&t;Tue Nov  3 02:31:01 EST 1998&n;&t;Version 0.6&n;&t;Read lsmod (/proc/modules).&n;&t;Convert from a.out to bfd, using same format as ksymoops.&n;&t;PPC trace addresses are not bracketed, add new re.&n;&n;&t;Wed Oct 28 13:47:23 EST 1998&n;&t;Version 0.4&n;&t;Split into separate sources.&n;*/
macro_line|#include &lt;sys/types.h&gt;
macro_line|#include &lt;regex.h&gt;
macro_line|#include &lt;stdio.h&gt;
multiline_comment|/* Pity this is not externalised, see binfmt_elf.c */
DECL|macro|elf_addr_t
mdefine_line|#define elf_addr_t unsigned long
r_extern
r_char
op_star
id|prefix
suffix:semicolon
r_extern
r_char
op_star
id|path_nm
suffix:semicolon
multiline_comment|/* env KSYMOOPS_NM */
r_extern
r_char
op_star
id|path_find
suffix:semicolon
multiline_comment|/* env KSYMOOPS_FIND */
r_extern
r_char
op_star
id|path_objdump
suffix:semicolon
multiline_comment|/* env KSYMOOPS_OBJDUMP */
r_extern
r_int
id|debug
suffix:semicolon
r_extern
r_int
id|errors
suffix:semicolon
r_extern
r_int
id|warnings
suffix:semicolon
DECL|typedef|SYMBOL
r_typedef
r_struct
id|symbol
id|SYMBOL
suffix:semicolon
DECL|struct|symbol
r_struct
id|symbol
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
multiline_comment|/* name of symbol */
DECL|member|type
r_char
id|type
suffix:semicolon
multiline_comment|/* type of symbol from nm/System.map */
DECL|member|keep
r_char
id|keep
suffix:semicolon
multiline_comment|/* keep this symbol in merged map? */
DECL|member|address
id|elf_addr_t
id|address
suffix:semicolon
multiline_comment|/* address in kernel */
)brace
suffix:semicolon
multiline_comment|/* Header for symbols from one particular source */
DECL|typedef|SYMBOL_SET
r_typedef
r_struct
id|symbol_set
id|SYMBOL_SET
suffix:semicolon
DECL|struct|symbol_set
r_struct
id|symbol_set
(brace
DECL|member|source
r_char
op_star
id|source
suffix:semicolon
multiline_comment|/* where the symbols came from */
DECL|member|used
r_int
id|used
suffix:semicolon
multiline_comment|/* number of symbols used */
DECL|member|alloc
r_int
id|alloc
suffix:semicolon
multiline_comment|/* number of symbols allocated */
DECL|member|symbol
id|SYMBOL
op_star
id|symbol
suffix:semicolon
multiline_comment|/* dynamic array of symbols */
DECL|member|related
id|SYMBOL_SET
op_star
id|related
suffix:semicolon
multiline_comment|/* any related symbol set */
)brace
suffix:semicolon
r_extern
id|SYMBOL_SET
id|ss_vmlinux
suffix:semicolon
r_extern
id|SYMBOL_SET
id|ss_ksyms_base
suffix:semicolon
r_extern
id|SYMBOL_SET
op_star
id|ss_ksyms_module
suffix:semicolon
r_extern
r_int
id|ss_ksyms_modules
suffix:semicolon
r_extern
id|SYMBOL_SET
id|ss_lsmod
suffix:semicolon
r_extern
id|SYMBOL_SET
op_star
id|ss_object
suffix:semicolon
r_extern
r_int
id|ss_objects
suffix:semicolon
r_extern
id|SYMBOL_SET
id|ss_system_map
suffix:semicolon
r_extern
id|SYMBOL_SET
id|ss_merged
suffix:semicolon
multiline_comment|/* merged map with info from all sources */
r_extern
id|SYMBOL_SET
id|ss_Version
suffix:semicolon
multiline_comment|/* Version_ numbers where available */
multiline_comment|/* Regular expression stuff */
r_extern
id|regex_t
id|re_nm
suffix:semicolon
r_extern
id|regmatch_t
op_star
id|re_nm_pmatch
suffix:semicolon
r_extern
id|regex_t
id|re_bracketed_address
suffix:semicolon
r_extern
id|regmatch_t
op_star
id|re_bracketed_address_pmatch
suffix:semicolon
r_extern
id|regex_t
id|re_unbracketed_address
suffix:semicolon
r_extern
id|regmatch_t
op_star
id|re_unbracketed_address_pmatch
suffix:semicolon
multiline_comment|/* Bracketed address: optional &squot;[&squot;, required &squot;&lt;&squot;, at least 4 hex characters,&n; * required &squot;&gt;&squot;, optional &squot;]&squot;, optional white space.&n; */
DECL|macro|BRACKETED_ADDRESS
mdefine_line|#define BRACKETED_ADDRESS&t;&quot;&bslash;&bslash;[*&lt;([0-9a-fA-F]{4,})&gt;&bslash;&bslash;]*[ &bslash;t]*&quot;
DECL|macro|UNBRACKETED_ADDRESS
mdefine_line|#define UNBRACKETED_ADDRESS&t;&quot;([0-9a-fA-F]{4,})[ &bslash;t]*&quot;
multiline_comment|/* io.c */
r_extern
r_int
id|regular_file
c_func
(paren
r_const
r_char
op_star
id|file
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
id|FILE
op_star
id|fopen_local
c_func
(paren
r_const
r_char
op_star
id|file
comma
r_const
r_char
op_star
id|mode
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
r_void
id|fclose_local
c_func
(paren
id|FILE
op_star
id|f
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
r_char
op_star
id|fgets_local
c_func
(paren
r_char
op_star
op_star
id|line
comma
r_int
op_star
id|size
comma
id|FILE
op_star
id|f
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
r_int
id|fwrite_local
c_func
(paren
r_void
r_const
op_star
id|ptr
comma
r_int
id|size
comma
r_int
id|nmemb
comma
id|FILE
op_star
id|stream
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
id|FILE
op_star
id|popen_local
c_func
(paren
r_const
r_char
op_star
id|cmd
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
r_void
id|pclose_local
c_func
(paren
id|FILE
op_star
id|f
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
multiline_comment|/* ksyms.c */
r_extern
r_void
id|read_ksyms
c_func
(paren
r_const
r_char
op_star
id|ksyms
)paren
suffix:semicolon
r_extern
r_void
id|map_ksyms_to_modules
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|read_lsmod
c_func
(paren
r_const
r_char
op_star
id|lsmod
)paren
suffix:semicolon
r_extern
r_void
id|compare_ksyms_lsmod
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* misc.c */
r_extern
r_void
id|malloc_error
c_func
(paren
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
r_const
r_char
op_star
id|format_address
c_func
(paren
id|elf_addr_t
id|address
)paren
suffix:semicolon
r_extern
r_char
op_star
id|find_fullpath
c_func
(paren
r_const
r_char
op_star
id|program
)paren
suffix:semicolon
multiline_comment|/* map.c */
r_extern
r_void
id|read_system_map
c_func
(paren
r_const
r_char
op_star
id|system_map
)paren
suffix:semicolon
r_extern
r_void
id|merge_maps
c_func
(paren
r_const
r_char
op_star
id|save_system_map
)paren
suffix:semicolon
r_extern
r_void
id|compare_maps
c_func
(paren
r_const
id|SYMBOL_SET
op_star
id|ss1
comma
r_const
id|SYMBOL_SET
op_star
id|ss2
comma
r_int
id|precedence
)paren
suffix:semicolon
multiline_comment|/* object.c */
r_extern
id|SYMBOL_SET
op_star
id|adjust_object_offsets
c_func
(paren
id|SYMBOL_SET
op_star
id|ss
)paren
suffix:semicolon
r_extern
r_void
id|read_vmlinux
c_func
(paren
r_const
r_char
op_star
id|vmlinux
)paren
suffix:semicolon
r_extern
r_void
id|expand_objects
c_func
(paren
r_char
op_star
r_const
op_star
id|object
comma
r_int
id|objects
)paren
suffix:semicolon
r_extern
r_void
id|read_object
c_func
(paren
r_const
r_char
op_star
id|object
comma
r_int
id|i
)paren
suffix:semicolon
multiline_comment|/* oops.c */
r_extern
r_void
id|Oops_read
c_func
(paren
r_int
id|filecount
comma
r_char
op_star
r_const
op_star
id|filename
)paren
suffix:semicolon
multiline_comment|/* re.c */
r_extern
r_void
id|re_compile
c_func
(paren
id|regex_t
op_star
id|preg
comma
r_const
r_char
op_star
id|regex
comma
r_int
id|cflags
comma
id|regmatch_t
op_star
op_star
id|pmatch
)paren
suffix:semicolon
r_extern
r_void
id|re_compile_common
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|re_strings
c_func
(paren
id|regex_t
op_star
id|preg
comma
r_const
r_char
op_star
id|text
comma
id|regmatch_t
op_star
id|pmatch
comma
r_char
op_star
op_star
op_star
id|string
)paren
suffix:semicolon
r_extern
r_void
id|re_strings_free
c_func
(paren
r_const
id|regex_t
op_star
id|preg
comma
r_char
op_star
op_star
op_star
id|string
)paren
suffix:semicolon
r_extern
r_void
id|re_string_check
c_func
(paren
r_int
id|need
comma
r_int
id|available
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
multiline_comment|/* symbol.c */
r_extern
r_void
id|ss_init
c_func
(paren
id|SYMBOL_SET
op_star
id|ss
comma
r_const
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
r_void
id|ss_free
c_func
(paren
id|SYMBOL_SET
op_star
id|ss
)paren
suffix:semicolon
r_extern
r_void
id|ss_init_common
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
id|SYMBOL
op_star
id|find_symbol_name
c_func
(paren
r_const
id|SYMBOL_SET
op_star
id|ss
comma
r_const
r_char
op_star
id|symbol
comma
r_int
op_star
id|start
)paren
suffix:semicolon
r_extern
r_void
id|add_symbol_n
c_func
(paren
id|SYMBOL_SET
op_star
id|ss
comma
r_const
id|elf_addr_t
id|address
comma
r_const
r_char
id|type
comma
r_const
r_char
id|keep
comma
r_const
r_char
op_star
id|symbol
)paren
suffix:semicolon
r_extern
r_void
id|add_symbol
c_func
(paren
id|SYMBOL_SET
op_star
id|ss
comma
r_const
r_char
op_star
id|address
comma
r_const
r_char
id|type
comma
r_const
r_char
id|keep
comma
r_const
r_char
op_star
id|symbol
)paren
suffix:semicolon
r_extern
r_char
op_star
id|map_address
c_func
(paren
r_const
id|SYMBOL_SET
op_star
id|ss
comma
r_const
id|elf_addr_t
id|address
)paren
suffix:semicolon
r_extern
r_void
id|ss_sort_atn
c_func
(paren
id|SYMBOL_SET
op_star
id|ss
)paren
suffix:semicolon
r_extern
r_void
id|ss_sort_na
c_func
(paren
id|SYMBOL_SET
op_star
id|ss
)paren
suffix:semicolon
r_extern
id|SYMBOL_SET
op_star
id|ss_copy
c_func
(paren
r_const
id|SYMBOL_SET
op_star
id|ss
)paren
suffix:semicolon
r_extern
r_void
id|add_Version
c_func
(paren
r_const
r_char
op_star
id|version
comma
r_const
r_char
op_star
id|source
)paren
suffix:semicolon
r_extern
r_void
id|extract_Version
c_func
(paren
id|SYMBOL_SET
op_star
id|ss
)paren
suffix:semicolon
r_extern
r_void
id|compare_Version
c_func
(paren
r_void
)paren
suffix:semicolon
eof
