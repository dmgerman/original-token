macro_line|#ifndef __LINUX_FILE_H
DECL|macro|__LINUX_FILE_H
mdefine_line|#define __LINUX_FILE_H
DECL|function|fget
r_extern
r_inline
r_struct
id|file
op_star
id|fget
c_func
(paren
r_int
r_int
id|fd
)paren
(brace
r_struct
id|file
op_star
id|file
op_assign
l_int|NULL
suffix:semicolon
r_if
c_cond
(paren
id|fd
OL
id|NR_OPEN
)paren
(brace
id|file
op_assign
id|current-&gt;files-&gt;fd
(braket
id|fd
)braket
suffix:semicolon
r_if
c_cond
(paren
id|file
)paren
id|file-&gt;f_count
op_increment
suffix:semicolon
)brace
r_return
id|file
suffix:semicolon
)brace
r_extern
r_void
id|__fput
c_func
(paren
r_struct
id|file
op_star
comma
r_struct
id|inode
op_star
)paren
suffix:semicolon
DECL|function|fput
r_extern
r_inline
r_void
id|fput
c_func
(paren
r_struct
id|file
op_star
id|file
comma
r_struct
id|inode
op_star
id|inode
)paren
(brace
r_int
id|count
op_assign
id|file-&gt;f_count
op_minus
l_int|1
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|count
)paren
id|__fput
c_func
(paren
id|file
comma
id|inode
)paren
suffix:semicolon
id|file-&gt;f_count
op_assign
id|count
suffix:semicolon
)brace
macro_line|#endif
eof
