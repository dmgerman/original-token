multiline_comment|/*&n; * selection.h&n; *&n; * Interface between console.c, tty_io.c, vt.c, vc_screen.c and selection.c&n; */
r_extern
r_int
id|sel_cons
suffix:semicolon
r_extern
r_void
id|clear_selection
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|set_selection
c_func
(paren
r_const
r_int
r_int
id|arg
comma
r_struct
id|tty_struct
op_star
id|tty
comma
r_int
id|user
)paren
suffix:semicolon
r_extern
r_int
id|paste_selection
c_func
(paren
r_struct
id|tty_struct
op_star
id|tty
)paren
suffix:semicolon
r_extern
r_int
id|sel_loadlut
c_func
(paren
r_const
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|mouse_reporting
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|mouse_report
c_func
(paren
r_struct
id|tty_struct
op_star
id|tty
comma
r_int
id|butt
comma
r_int
id|mrx
comma
r_int
id|mry
)paren
suffix:semicolon
DECL|macro|video_num_columns
mdefine_line|#define video_num_columns&t;(vc_cons[currcons].d-&gt;vc_cols)
DECL|macro|video_num_lines
mdefine_line|#define video_num_lines&t;&t;(vc_cons[currcons].d-&gt;vc_rows)
DECL|macro|video_size_row
mdefine_line|#define video_size_row&t;&t;(vc_cons[currcons].d-&gt;vc_size_row)
DECL|macro|video_screen_size
mdefine_line|#define video_screen_size&t;(vc_cons[currcons].d-&gt;vc_screenbuf_size)
DECL|macro|can_do_color
mdefine_line|#define can_do_color&t;&t;(vc_cons[currcons].d-&gt;vc_can_do_color)
r_extern
r_int
id|console_blanked
suffix:semicolon
r_extern
r_int
r_int
id|video_font_height
suffix:semicolon
r_extern
r_int
r_int
id|video_scan_lines
suffix:semicolon
r_extern
r_int
r_int
id|default_font_height
suffix:semicolon
r_extern
r_int
id|video_font_is_default
suffix:semicolon
r_extern
r_int
r_char
id|color_table
(braket
)braket
suffix:semicolon
r_extern
r_int
id|default_red
(braket
)braket
suffix:semicolon
r_extern
r_int
id|default_grn
(braket
)braket
suffix:semicolon
r_extern
r_int
id|default_blu
(braket
)braket
suffix:semicolon
r_extern
r_int
r_int
id|__real_origin
suffix:semicolon
r_extern
r_int
r_int
id|__origin
suffix:semicolon
r_extern
r_int
r_char
id|has_wrapped
suffix:semicolon
r_extern
r_int
r_int
op_star
id|vc_scrbuf
(braket
id|MAX_NR_CONSOLES
)braket
suffix:semicolon
r_extern
r_void
id|do_unblank_screen
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
r_int
op_star
id|screen_pos
c_func
(paren
r_int
id|currcons
comma
r_int
id|w_offset
comma
r_int
id|viewed
)paren
suffix:semicolon
r_extern
r_int
r_int
id|screen_word
c_func
(paren
r_int
id|currcons
comma
r_int
id|offset
comma
r_int
id|viewed
)paren
suffix:semicolon
r_extern
r_int
id|scrw2glyph
c_func
(paren
r_int
r_int
id|scr_word
)paren
suffix:semicolon
r_extern
r_void
id|complement_pos
c_func
(paren
r_int
id|currcons
comma
r_int
id|offset
)paren
suffix:semicolon
r_extern
r_void
id|invert_screen
c_func
(paren
r_int
id|currcons
comma
r_int
id|offset
comma
r_int
id|count
comma
r_int
id|shift
)paren
suffix:semicolon
DECL|macro|reverse_video_char
mdefine_line|#define reverse_video_char(a)&t;(((a) &amp; 0x88) | ((((a) &gt;&gt; 4) | ((a) &lt;&lt; 4)) &amp; 0x77))
DECL|macro|reverse_video_short
mdefine_line|#define reverse_video_short(a)&t;(((a) &amp; 0x88ff) | &bslash;&n;&t;(((a) &amp; 0x7000) &gt;&gt; 4) | (((a) &amp; 0x0700) &lt;&lt; 4))
multiline_comment|/* this latter line used to have masks 0xf000 and 0x0f00, but selection&n;   requires a self-inverse operation; moreover, the old version looks wrong */
DECL|macro|reverse_video_short_mono
mdefine_line|#define reverse_video_short_mono(a)&t;((a) ^ 0x800)
DECL|macro|complement_video_short
mdefine_line|#define complement_video_short(a)&t;((a) ^ (can_do_color ? 0x7700 : 0x800))
r_extern
r_void
id|getconsxy
c_func
(paren
r_int
id|currcons
comma
r_char
op_star
id|p
)paren
suffix:semicolon
r_extern
r_void
id|putconsxy
c_func
(paren
r_int
id|currcons
comma
r_char
op_star
id|p
)paren
suffix:semicolon
multiline_comment|/* how to access screen memory */
DECL|function|scr_writew
r_static
r_inline
r_void
id|scr_writew
c_func
(paren
r_int
r_int
id|val
comma
r_int
r_int
op_star
id|addr
)paren
(brace
multiline_comment|/* simply store the value in the &quot;shadow screen&quot; memory */
op_star
id|addr
op_assign
id|val
suffix:semicolon
)brace
DECL|function|scr_readw
r_static
r_inline
r_int
r_int
id|scr_readw
c_func
(paren
r_int
r_int
op_star
id|addr
)paren
(brace
r_return
op_star
id|addr
suffix:semicolon
)brace
DECL|function|memsetw
r_static
r_inline
r_void
id|memsetw
c_func
(paren
r_void
op_star
id|s
comma
r_int
r_int
id|c
comma
r_int
r_int
id|count
)paren
(brace
r_int
r_int
op_star
id|addr
op_assign
(paren
r_int
r_int
op_star
)paren
id|s
suffix:semicolon
id|count
op_div_assign
l_int|2
suffix:semicolon
r_while
c_loop
(paren
id|count
)paren
(brace
id|count
op_decrement
suffix:semicolon
id|scr_writew
c_func
(paren
id|c
comma
id|addr
op_increment
)paren
suffix:semicolon
)brace
)brace
DECL|function|memcpyw
r_static
r_inline
r_void
id|memcpyw
c_func
(paren
r_int
r_int
op_star
id|to
comma
r_int
r_int
op_star
id|from
comma
r_int
r_int
id|count
)paren
(brace
id|count
op_div_assign
l_int|2
suffix:semicolon
r_while
c_loop
(paren
id|count
)paren
(brace
id|count
op_decrement
suffix:semicolon
id|scr_writew
c_func
(paren
id|scr_readw
c_func
(paren
id|from
op_increment
)paren
comma
id|to
op_increment
)paren
suffix:semicolon
)brace
)brace
eof
