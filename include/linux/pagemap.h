macro_line|#ifndef _LINUX_PAGEMAP_H
DECL|macro|_LINUX_PAGEMAP_H
mdefine_line|#define _LINUX_PAGEMAP_H
macro_line|#include &lt;asm/system.h&gt;
multiline_comment|/*&n; * Page-mapping primitive inline functions&n; *&n; * Copyright 1995 Linus Torvalds&n; */
macro_line|#include &lt;linux/mm.h&gt;
macro_line|#include &lt;linux/fs.h&gt;
DECL|function|page_address
r_static
r_inline
r_int
r_int
id|page_address
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
(brace
r_return
id|PAGE_OFFSET
op_plus
id|PAGE_SIZE
op_star
(paren
id|page
op_minus
id|mem_map
)paren
suffix:semicolon
)brace
DECL|macro|PAGE_HASH_BITS
mdefine_line|#define PAGE_HASH_BITS 10
DECL|macro|PAGE_HASH_SIZE
mdefine_line|#define PAGE_HASH_SIZE (1 &lt;&lt; PAGE_HASH_BITS)
DECL|macro|PAGE_AGE_VALUE
mdefine_line|#define PAGE_AGE_VALUE 16
r_extern
r_int
r_int
id|page_cache_size
suffix:semicolon
r_extern
r_struct
id|page
op_star
id|page_hash_table
(braket
id|PAGE_HASH_SIZE
)braket
suffix:semicolon
multiline_comment|/*&n; * We use a power-of-two hash table to avoid a modulus,&n; * and get a reasonable hash by knowing roughly how the&n; * inode pointer and offsets are distributed (ie, we&n; * roughly know which bits are &quot;significant&quot;)&n; */
DECL|function|_page_hashfn
r_static
r_inline
r_int
r_int
id|_page_hashfn
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_int
r_int
id|offset
)paren
(brace
DECL|macro|i
mdefine_line|#define i (((unsigned long) inode)/sizeof(unsigned long))
DECL|macro|o
mdefine_line|#define o (offset &gt;&gt; PAGE_SHIFT)
DECL|macro|s
mdefine_line|#define s(x) ((x)+((x)&gt;&gt;PAGE_HASH_BITS))
r_return
id|s
c_func
(paren
id|i
op_plus
id|o
)paren
op_amp
(paren
id|PAGE_HASH_SIZE
op_minus
l_int|1
)paren
suffix:semicolon
DECL|macro|i
macro_line|#undef i
DECL|macro|o
macro_line|#undef o
DECL|macro|s
macro_line|#undef s
)brace
DECL|macro|page_hash
mdefine_line|#define page_hash(inode,offset) page_hash_table[_page_hashfn(inode,offset)]
DECL|function|find_page
r_static
r_inline
r_struct
id|page
op_star
id|find_page
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_int
r_int
id|offset
)paren
(brace
r_struct
id|page
op_star
id|page
suffix:semicolon
r_for
c_loop
(paren
id|page
op_assign
id|page_hash
c_func
(paren
id|inode
comma
id|offset
)paren
suffix:semicolon
id|page
suffix:semicolon
id|page
op_assign
id|page-&gt;next_hash
)paren
(brace
r_if
c_cond
(paren
id|page-&gt;inode
op_ne
id|inode
)paren
r_continue
suffix:semicolon
r_if
c_cond
(paren
id|page-&gt;offset
op_ne
id|offset
)paren
r_continue
suffix:semicolon
multiline_comment|/* Found the page. */
id|atomic_inc
c_func
(paren
op_amp
id|page-&gt;count
)paren
suffix:semicolon
id|set_bit
c_func
(paren
id|PG_referenced
comma
op_amp
id|page-&gt;flags
)paren
suffix:semicolon
r_break
suffix:semicolon
)brace
r_return
id|page
suffix:semicolon
)brace
DECL|function|remove_page_from_hash_queue
r_static
r_inline
r_void
id|remove_page_from_hash_queue
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
(brace
r_struct
id|page
op_star
op_star
id|p
op_assign
op_amp
id|page_hash
c_func
(paren
id|page-&gt;inode
comma
id|page-&gt;offset
)paren
suffix:semicolon
id|page_cache_size
op_decrement
suffix:semicolon
r_if
c_cond
(paren
id|page-&gt;next_hash
)paren
id|page-&gt;next_hash-&gt;prev_hash
op_assign
id|page-&gt;prev_hash
suffix:semicolon
r_if
c_cond
(paren
id|page-&gt;prev_hash
)paren
id|page-&gt;prev_hash-&gt;next_hash
op_assign
id|page-&gt;next_hash
suffix:semicolon
r_if
c_cond
(paren
op_star
id|p
op_eq
id|page
)paren
op_star
id|p
op_assign
id|page-&gt;next_hash
suffix:semicolon
id|page-&gt;next_hash
op_assign
id|page-&gt;prev_hash
op_assign
l_int|NULL
suffix:semicolon
)brace
DECL|function|add_page_to_hash_queue
r_static
r_inline
r_void
id|add_page_to_hash_queue
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|page
op_star
id|page
)paren
(brace
r_struct
id|page
op_star
op_star
id|p
op_assign
op_amp
id|page_hash
c_func
(paren
id|inode
comma
id|page-&gt;offset
)paren
suffix:semicolon
id|page_cache_size
op_increment
suffix:semicolon
id|set_bit
c_func
(paren
id|PG_referenced
comma
op_amp
id|page-&gt;flags
)paren
suffix:semicolon
id|page-&gt;age
op_assign
id|PAGE_AGE_VALUE
suffix:semicolon
id|page-&gt;prev_hash
op_assign
l_int|NULL
suffix:semicolon
r_if
c_cond
(paren
(paren
id|page-&gt;next_hash
op_assign
op_star
id|p
)paren
op_ne
l_int|NULL
)paren
id|page-&gt;next_hash-&gt;prev_hash
op_assign
id|page
suffix:semicolon
op_star
id|p
op_assign
id|page
suffix:semicolon
)brace
DECL|function|remove_page_from_inode_queue
r_static
r_inline
r_void
id|remove_page_from_inode_queue
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
(brace
r_struct
id|inode
op_star
id|inode
op_assign
id|page-&gt;inode
suffix:semicolon
id|page-&gt;inode
op_assign
l_int|NULL
suffix:semicolon
id|inode-&gt;i_nrpages
op_decrement
suffix:semicolon
r_if
c_cond
(paren
id|inode-&gt;i_pages
op_eq
id|page
)paren
id|inode-&gt;i_pages
op_assign
id|page-&gt;next
suffix:semicolon
r_if
c_cond
(paren
id|page-&gt;next
)paren
id|page-&gt;next-&gt;prev
op_assign
id|page-&gt;prev
suffix:semicolon
r_if
c_cond
(paren
id|page-&gt;prev
)paren
id|page-&gt;prev-&gt;next
op_assign
id|page-&gt;next
suffix:semicolon
id|page-&gt;next
op_assign
l_int|NULL
suffix:semicolon
id|page-&gt;prev
op_assign
l_int|NULL
suffix:semicolon
)brace
DECL|function|add_page_to_inode_queue
r_static
r_inline
r_void
id|add_page_to_inode_queue
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|page
op_star
id|page
)paren
(brace
r_struct
id|page
op_star
op_star
id|p
op_assign
op_amp
id|inode-&gt;i_pages
suffix:semicolon
id|inode-&gt;i_nrpages
op_increment
suffix:semicolon
id|page-&gt;inode
op_assign
id|inode
suffix:semicolon
id|page-&gt;prev
op_assign
l_int|NULL
suffix:semicolon
r_if
c_cond
(paren
(paren
id|page-&gt;next
op_assign
op_star
id|p
)paren
op_ne
l_int|NULL
)paren
id|page-&gt;next-&gt;prev
op_assign
id|page
suffix:semicolon
op_star
id|p
op_assign
id|page
suffix:semicolon
)brace
r_extern
r_void
id|__wait_on_page
c_func
(paren
r_struct
id|page
op_star
)paren
suffix:semicolon
DECL|function|wait_on_page
r_static
r_inline
r_void
id|wait_on_page
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
(brace
r_if
c_cond
(paren
id|PageLocked
c_func
(paren
id|page
)paren
)paren
id|__wait_on_page
c_func
(paren
id|page
)paren
suffix:semicolon
)brace
r_extern
r_void
id|update_vm_cache
c_func
(paren
r_struct
id|inode
op_star
comma
r_int
r_int
comma
r_const
r_char
op_star
comma
r_int
)paren
suffix:semicolon
macro_line|#endif
eof
