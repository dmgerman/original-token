multiline_comment|/*&n; * include/linux/nfsd/nfsfh.h&n; *&n; * This file describes the layout of the file handles as passed&n; * over the wire.&n; *&n; * Earlier versions of knfsd used to sign file handles using keyed MD5&n; * or SHA. I&squot;ve removed this code, because it doesn&squot;t give you more&n; * security than blocking external access to port 2049 on your firewall.&n; *&n; * Copyright (C) 1995, 1996, 1997 Olaf Kirch &lt;okir@monad.swb.de&gt;&n; */
macro_line|#ifndef NFSD_FH_H
DECL|macro|NFSD_FH_H
mdefine_line|#define NFSD_FH_H
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/string.h&gt;
macro_line|#include &lt;linux/fs.h&gt;
macro_line|#include &lt;linux/nfsd/const.h&gt;
macro_line|#include &lt;linux/nfsd/debug.h&gt;
multiline_comment|/*&n; * This is the new &quot;dentry style&quot; Linux NFSv2 file handle.&n; *&n; * The xino and xdev fields are currently used to transport the&n; * ino/dev of the exported inode.&n; */
DECL|struct|nfs_fhbase
r_struct
id|nfs_fhbase
(brace
DECL|member|fb_dentry
r_struct
id|dentry
op_star
id|fb_dentry
suffix:semicolon
multiline_comment|/* dentry cookie */
DECL|member|fb_ino
id|ino_t
id|fb_ino
suffix:semicolon
multiline_comment|/* our inode number */
DECL|member|fb_dirino
id|ino_t
id|fb_dirino
suffix:semicolon
multiline_comment|/* dir inode number */
DECL|member|fb_dev
id|kdev_t
id|fb_dev
suffix:semicolon
multiline_comment|/* our device */
DECL|member|fb_xdev
id|kdev_t
id|fb_xdev
suffix:semicolon
DECL|member|fb_xino
id|ino_t
id|fb_xino
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|NFS_FH_PADDING
mdefine_line|#define NFS_FH_PADDING&t;&t;(NFS_FHSIZE - sizeof(struct nfs_fhbase))
DECL|struct|knfs_fh
r_struct
id|knfs_fh
(brace
DECL|member|fh_base
r_struct
id|nfs_fhbase
id|fh_base
suffix:semicolon
DECL|member|fh_cookie
id|__u8
id|fh_cookie
(braket
id|NFS_FH_PADDING
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|fh_dcookie
mdefine_line|#define fh_dcookie&t;&t;fh_base.fb_dentry
DECL|macro|fh_ino
mdefine_line|#define fh_ino&t;&t;&t;fh_base.fb_ino
DECL|macro|fh_dirino
mdefine_line|#define fh_dirino&t;&t;fh_base.fb_dirino
DECL|macro|fh_dev
mdefine_line|#define fh_dev&t;&t;&t;fh_base.fb_dev
DECL|macro|fh_xdev
mdefine_line|#define fh_xdev&t;&t;&t;fh_base.fb_xdev
DECL|macro|fh_xino
mdefine_line|#define fh_xino&t;&t;&t;fh_base.fb_xino
macro_line|#ifdef __KERNEL__
multiline_comment|/*&n; * This is the internal representation of an NFS handle used in knfsd.&n; * pre_mtime/post_version will be used to support wcc_attr&squot;s in NFSv3.&n; */
DECL|struct|svc_fh
r_typedef
r_struct
id|svc_fh
(brace
DECL|member|fh_handle
r_struct
id|knfs_fh
id|fh_handle
suffix:semicolon
multiline_comment|/* FH data */
DECL|member|fh_dentry
r_struct
id|dentry
op_star
id|fh_dentry
suffix:semicolon
multiline_comment|/* validated dentry */
DECL|member|fh_export
r_struct
id|svc_export
op_star
id|fh_export
suffix:semicolon
multiline_comment|/* export pointer */
DECL|member|fh_pre_size
r_int
id|fh_pre_size
suffix:semicolon
multiline_comment|/* size before operation */
DECL|member|fh_pre_mtime
id|time_t
id|fh_pre_mtime
suffix:semicolon
multiline_comment|/* mtime before oper */
DECL|member|fh_pre_ctime
id|time_t
id|fh_pre_ctime
suffix:semicolon
multiline_comment|/* ctime before oper */
DECL|member|fh_post_version
r_int
r_int
id|fh_post_version
suffix:semicolon
multiline_comment|/* inode version after oper */
DECL|member|fh_locked
r_int
r_char
id|fh_locked
suffix:semicolon
multiline_comment|/* inode locked by us */
DECL|member|fh_dverified
r_int
r_char
id|fh_dverified
suffix:semicolon
multiline_comment|/* dentry has been checked */
DECL|typedef|svc_fh
)brace
id|svc_fh
suffix:semicolon
multiline_comment|/*&n; * Shorthand for dprintk()&squot;s&n; */
DECL|macro|SVCFH_DENTRY
mdefine_line|#define SVCFH_DENTRY(f)&t;&t;((f)-&gt;fh_dentry)
DECL|macro|SVCFH_INO
mdefine_line|#define SVCFH_INO(f)&t;&t;((f)-&gt;fh_handle.fh_ino)
DECL|macro|SVCFH_DEV
mdefine_line|#define SVCFH_DEV(f)&t;&t;((f)-&gt;fh_handle.fh_dev)
multiline_comment|/*&n; * Function prototypes&n; */
id|u32
id|fh_verify
c_func
(paren
r_struct
id|svc_rqst
op_star
comma
r_struct
id|svc_fh
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_void
id|fh_compose
c_func
(paren
r_struct
id|svc_fh
op_star
comma
r_struct
id|svc_export
op_star
comma
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_void
id|fh_update
c_func
(paren
r_struct
id|svc_fh
op_star
)paren
suffix:semicolon
r_void
id|fh_put
c_func
(paren
r_struct
id|svc_fh
op_star
)paren
suffix:semicolon
r_void
id|nfsd_fh_flush
c_func
(paren
id|kdev_t
)paren
suffix:semicolon
r_void
id|nfsd_fh_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|nfsd_fh_free
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
id|__inline__
r_struct
id|svc_fh
op_star
DECL|function|fh_copy
id|fh_copy
c_func
(paren
r_struct
id|svc_fh
op_star
id|dst
comma
r_struct
id|svc_fh
op_star
id|src
)paren
(brace
r_if
c_cond
(paren
id|src-&gt;fh_dverified
)paren
(brace
r_struct
id|dentry
op_star
id|dentry
op_assign
id|src-&gt;fh_dentry
suffix:semicolon
id|printk
c_func
(paren
l_string|&quot;fh_copy: copying %s/%s, already verified!&bslash;n&quot;
comma
id|dentry-&gt;d_parent-&gt;d_name.name
comma
id|dentry-&gt;d_name.name
)paren
suffix:semicolon
)brace
op_star
id|dst
op_assign
op_star
id|src
suffix:semicolon
r_return
id|dst
suffix:semicolon
)brace
r_static
id|__inline__
r_struct
id|svc_fh
op_star
DECL|function|fh_init
id|fh_init
c_func
(paren
r_struct
id|svc_fh
op_star
id|fhp
)paren
(brace
id|memset
c_func
(paren
id|fhp
comma
l_int|0
comma
r_sizeof
(paren
op_star
id|fhp
)paren
)paren
suffix:semicolon
r_return
id|fhp
suffix:semicolon
)brace
multiline_comment|/*&n; * Lock a file handle/inode&n; */
r_static
r_inline
r_void
DECL|function|fh_lock
id|fh_lock
c_func
(paren
r_struct
id|svc_fh
op_star
id|fhp
)paren
(brace
r_struct
id|inode
op_star
id|inode
op_assign
id|fhp-&gt;fh_dentry-&gt;d_inode
suffix:semicolon
multiline_comment|/*&n;&t;dfprintk(FILEOP, &quot;nfsd: fh_lock(%x/%ld) locked = %d&bslash;n&quot;,&n;&t;&t;&t;SVCFH_DEV(fhp), SVCFH_INO(fhp), fhp-&gt;fh_locked);&n;&t; */
r_if
c_cond
(paren
id|fhp-&gt;fh_locked
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;fh_lock: %s/%s already locked!&bslash;n&quot;
comma
id|fhp-&gt;fh_dentry-&gt;d_parent-&gt;d_name.name
comma
id|fhp-&gt;fh_dentry-&gt;d_name.name
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|down
c_func
(paren
op_amp
id|inode-&gt;i_sem
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|fhp-&gt;fh_pre_mtime
)paren
id|fhp-&gt;fh_pre_mtime
op_assign
id|inode-&gt;i_mtime
suffix:semicolon
id|fhp-&gt;fh_locked
op_assign
l_int|1
suffix:semicolon
)brace
multiline_comment|/*&n; * Unlock a file handle/inode&n; */
r_static
r_inline
r_void
DECL|function|fh_unlock
id|fh_unlock
c_func
(paren
r_struct
id|svc_fh
op_star
id|fhp
)paren
(brace
r_if
c_cond
(paren
id|fhp-&gt;fh_locked
)paren
(brace
r_struct
id|inode
op_star
id|inode
op_assign
id|fhp-&gt;fh_dentry-&gt;d_inode
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|fhp-&gt;fh_post_version
)paren
id|fhp-&gt;fh_post_version
op_assign
id|inode-&gt;i_version
suffix:semicolon
id|fhp-&gt;fh_locked
op_assign
l_int|0
suffix:semicolon
id|up
c_func
(paren
op_amp
id|inode-&gt;i_sem
)paren
suffix:semicolon
)brace
)brace
multiline_comment|/*&n; * Release an inode&n; */
macro_line|#if 0
mdefine_line|#define fh_put(fhp)&t;__fh_put(fhp, __FILE__, __LINE__)
r_static
r_inline
r_void
id|__fh_put
c_func
(paren
r_struct
id|svc_fh
op_star
id|fhp
comma
r_char
op_star
id|file
comma
r_int
id|line
)paren
(brace
r_struct
id|dentry
op_star
id|dentry
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|fhp-&gt;fh_dverified
)paren
r_return
suffix:semicolon
id|dentry
op_assign
id|fhp-&gt;fh_dentry
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|dentry-&gt;d_count
)paren
(brace
id|printk
c_func
(paren
l_string|&quot;nfsd: trying to free free dentry in %s:%d&bslash;n&quot;
l_string|&quot;      file %s/%s&bslash;n&quot;
comma
id|file
comma
id|line
comma
id|dentry-&gt;d_parent-&gt;d_name.name
comma
id|dentry-&gt;d_name.name
)paren
suffix:semicolon
)brace
r_else
(brace
id|fh_unlock
c_func
(paren
id|fhp
)paren
suffix:semicolon
id|fhp-&gt;fh_dverified
op_assign
l_int|0
suffix:semicolon
id|dput
c_func
(paren
id|dentry
)paren
suffix:semicolon
)brace
)brace
macro_line|#endif
macro_line|#endif /* __KERNEL__ */
macro_line|#endif /* NFSD_FH_H */
eof
