multiline_comment|/*&n; * hdlcdrv.h  -- HDLC packet radio network driver.&n; * The Linux soundcard driver for 1200 baud and 9600 baud packet radio&n; * (C) 1996-1998 by Thomas Sailer, HB9JNX/AE4WA&n; */
macro_line|#ifndef _HDLCDRV_H
DECL|macro|_HDLCDRV_H
mdefine_line|#define _HDLCDRV_H
multiline_comment|/* -------------------------------------------------------------------- */
multiline_comment|/*&n; * structs for the IOCTL commands&n; */
DECL|struct|hdlcdrv_params
r_struct
id|hdlcdrv_params
(brace
DECL|member|iobase
r_int
id|iobase
suffix:semicolon
DECL|member|irq
r_int
id|irq
suffix:semicolon
DECL|member|dma
r_int
id|dma
suffix:semicolon
DECL|member|dma2
r_int
id|dma2
suffix:semicolon
DECL|member|seriobase
r_int
id|seriobase
suffix:semicolon
DECL|member|pariobase
r_int
id|pariobase
suffix:semicolon
DECL|member|midiiobase
r_int
id|midiiobase
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|hdlcdrv_channel_params
r_struct
id|hdlcdrv_channel_params
(brace
DECL|member|tx_delay
r_int
id|tx_delay
suffix:semicolon
multiline_comment|/* the transmitter keyup delay in 10ms units */
DECL|member|tx_tail
r_int
id|tx_tail
suffix:semicolon
multiline_comment|/* the transmitter keyoff delay in 10ms units */
DECL|member|slottime
r_int
id|slottime
suffix:semicolon
multiline_comment|/* the slottime in 10ms; usually 10 = 100ms */
DECL|member|ppersist
r_int
id|ppersist
suffix:semicolon
multiline_comment|/* the p-persistence 0..255 */
DECL|member|fulldup
r_int
id|fulldup
suffix:semicolon
multiline_comment|/* some driver do not support full duplex, setting */
multiline_comment|/* this just makes them send even if DCD is on */
)brace
suffix:semicolon
DECL|struct|hdlcdrv_old_channel_state
r_struct
id|hdlcdrv_old_channel_state
(brace
DECL|member|ptt
r_int
id|ptt
suffix:semicolon
DECL|member|dcd
r_int
id|dcd
suffix:semicolon
DECL|member|ptt_keyed
r_int
id|ptt_keyed
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|hdlcdrv_channel_state
r_struct
id|hdlcdrv_channel_state
(brace
DECL|member|ptt
r_int
id|ptt
suffix:semicolon
DECL|member|dcd
r_int
id|dcd
suffix:semicolon
DECL|member|ptt_keyed
r_int
id|ptt_keyed
suffix:semicolon
DECL|member|tx_packets
r_int
r_int
id|tx_packets
suffix:semicolon
DECL|member|tx_errors
r_int
r_int
id|tx_errors
suffix:semicolon
DECL|member|rx_packets
r_int
r_int
id|rx_packets
suffix:semicolon
DECL|member|rx_errors
r_int
r_int
id|rx_errors
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|hdlcdrv_ioctl
r_struct
id|hdlcdrv_ioctl
(brace
DECL|member|cmd
r_int
id|cmd
suffix:semicolon
r_union
(brace
DECL|member|mp
r_struct
id|hdlcdrv_params
id|mp
suffix:semicolon
DECL|member|cp
r_struct
id|hdlcdrv_channel_params
id|cp
suffix:semicolon
DECL|member|cs
r_struct
id|hdlcdrv_channel_state
id|cs
suffix:semicolon
DECL|member|ocs
r_struct
id|hdlcdrv_old_channel_state
id|ocs
suffix:semicolon
DECL|member|calibrate
r_int
r_int
id|calibrate
suffix:semicolon
DECL|member|bits
r_int
r_char
id|bits
suffix:semicolon
DECL|member|modename
r_char
id|modename
(braket
l_int|128
)braket
suffix:semicolon
DECL|member|drivername
r_char
id|drivername
(braket
l_int|32
)braket
suffix:semicolon
DECL|member|data
)brace
id|data
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* -------------------------------------------------------------------- */
multiline_comment|/*&n; * ioctl values&n; */
DECL|macro|HDLCDRVCTL_GETMODEMPAR
mdefine_line|#define HDLCDRVCTL_GETMODEMPAR       0
DECL|macro|HDLCDRVCTL_SETMODEMPAR
mdefine_line|#define HDLCDRVCTL_SETMODEMPAR       1
DECL|macro|HDLCDRVCTL_MODEMPARMASK
mdefine_line|#define HDLCDRVCTL_MODEMPARMASK      2  /* not handled by hdlcdrv */
DECL|macro|HDLCDRVCTL_GETCHANNELPAR
mdefine_line|#define HDLCDRVCTL_GETCHANNELPAR    10
DECL|macro|HDLCDRVCTL_SETCHANNELPAR
mdefine_line|#define HDLCDRVCTL_SETCHANNELPAR    11
DECL|macro|HDLCDRVCTL_OLDGETSTAT
mdefine_line|#define HDLCDRVCTL_OLDGETSTAT       20
DECL|macro|HDLCDRVCTL_CALIBRATE
mdefine_line|#define HDLCDRVCTL_CALIBRATE        21
DECL|macro|HDLCDRVCTL_GETSTAT
mdefine_line|#define HDLCDRVCTL_GETSTAT          22
multiline_comment|/*&n; * these are mainly for debugging purposes&n; */
DECL|macro|HDLCDRVCTL_GETSAMPLES
mdefine_line|#define HDLCDRVCTL_GETSAMPLES       30
DECL|macro|HDLCDRVCTL_GETBITS
mdefine_line|#define HDLCDRVCTL_GETBITS          31
multiline_comment|/*&n; * not handled by hdlcdrv, but by its depending drivers&n; */
DECL|macro|HDLCDRVCTL_GETMODE
mdefine_line|#define HDLCDRVCTL_GETMODE          40
DECL|macro|HDLCDRVCTL_SETMODE
mdefine_line|#define HDLCDRVCTL_SETMODE          41
DECL|macro|HDLCDRVCTL_MODELIST
mdefine_line|#define HDLCDRVCTL_MODELIST         42
DECL|macro|HDLCDRVCTL_DRIVERNAME
mdefine_line|#define HDLCDRVCTL_DRIVERNAME       43
multiline_comment|/*&n; * mask of needed modem parameters, returned by HDLCDRVCTL_MODEMPARMASK&n; */
DECL|macro|HDLCDRV_PARMASK_IOBASE
mdefine_line|#define HDLCDRV_PARMASK_IOBASE      (1&lt;&lt;0)
DECL|macro|HDLCDRV_PARMASK_IRQ
mdefine_line|#define HDLCDRV_PARMASK_IRQ         (1&lt;&lt;1)
DECL|macro|HDLCDRV_PARMASK_DMA
mdefine_line|#define HDLCDRV_PARMASK_DMA         (1&lt;&lt;2)
DECL|macro|HDLCDRV_PARMASK_DMA2
mdefine_line|#define HDLCDRV_PARMASK_DMA2        (1&lt;&lt;3)
DECL|macro|HDLCDRV_PARMASK_SERIOBASE
mdefine_line|#define HDLCDRV_PARMASK_SERIOBASE   (1&lt;&lt;4)
DECL|macro|HDLCDRV_PARMASK_PARIOBASE
mdefine_line|#define HDLCDRV_PARMASK_PARIOBASE   (1&lt;&lt;5)
DECL|macro|HDLCDRV_PARMASK_MIDIIOBASE
mdefine_line|#define HDLCDRV_PARMASK_MIDIIOBASE  (1&lt;&lt;6)
multiline_comment|/* -------------------------------------------------------------------- */
macro_line|#ifdef __KERNEL__
macro_line|#include &lt;linux/netdevice.h&gt;
macro_line|#include &lt;linux/if.h&gt;
macro_line|#include &lt;linux/spinlock.h&gt;
DECL|macro|HDLCDRV_MAGIC
mdefine_line|#define HDLCDRV_MAGIC      0x5ac6e778
DECL|macro|HDLCDRV_HDLCBUFFER
mdefine_line|#define HDLCDRV_HDLCBUFFER  32 /* should be a power of 2 for speed reasons */
DECL|macro|HDLCDRV_BITBUFFER
mdefine_line|#define HDLCDRV_BITBUFFER  256 /* should be a power of 2 for speed reasons */
DECL|macro|HDLCDRV_LOOPBACK
macro_line|#undef HDLCDRV_LOOPBACK  /* define for HDLC debugging purposes */
DECL|macro|HDLCDRV_DEBUG
mdefine_line|#define HDLCDRV_DEBUG
multiline_comment|/* maximum packet length, excluding CRC */
DECL|macro|HDLCDRV_MAXFLEN
mdefine_line|#define HDLCDRV_MAXFLEN             400&t;
DECL|struct|hdlcdrv_hdlcbuffer
r_struct
id|hdlcdrv_hdlcbuffer
(brace
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
DECL|member|rd
DECL|member|wr
r_int
id|rd
comma
id|wr
suffix:semicolon
DECL|member|buf
r_int
r_int
id|buf
(braket
id|HDLCDRV_HDLCBUFFER
)braket
suffix:semicolon
)brace
suffix:semicolon
macro_line|#ifdef HDLCDRV_DEBUG
DECL|struct|hdlcdrv_bitbuffer
r_struct
id|hdlcdrv_bitbuffer
(brace
DECL|member|rd
r_int
r_int
id|rd
suffix:semicolon
DECL|member|wr
r_int
r_int
id|wr
suffix:semicolon
DECL|member|shreg
r_int
r_int
id|shreg
suffix:semicolon
DECL|member|buffer
r_int
r_char
id|buffer
(braket
id|HDLCDRV_BITBUFFER
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|function|hdlcdrv_add_bitbuffer
r_static
r_inline
r_void
id|hdlcdrv_add_bitbuffer
c_func
(paren
r_struct
id|hdlcdrv_bitbuffer
op_star
id|buf
comma
r_int
r_int
id|bit
)paren
(brace
r_int
r_char
r_new
suffix:semicolon
r_new
op_assign
id|buf-&gt;shreg
op_amp
l_int|1
suffix:semicolon
id|buf-&gt;shreg
op_rshift_assign
l_int|1
suffix:semicolon
id|buf-&gt;shreg
op_or_assign
(paren
op_logical_neg
op_logical_neg
id|bit
)paren
op_lshift
l_int|7
suffix:semicolon
r_if
c_cond
(paren
r_new
)paren
(brace
id|buf-&gt;buffer
(braket
id|buf-&gt;wr
)braket
op_assign
id|buf-&gt;shreg
suffix:semicolon
id|buf-&gt;wr
op_assign
(paren
id|buf-&gt;wr
op_plus
l_int|1
)paren
op_mod
r_sizeof
(paren
id|buf-&gt;buffer
)paren
suffix:semicolon
id|buf-&gt;shreg
op_assign
l_int|0x80
suffix:semicolon
)brace
)brace
DECL|function|hdlcdrv_add_bitbuffer_word
r_static
r_inline
r_void
id|hdlcdrv_add_bitbuffer_word
c_func
(paren
r_struct
id|hdlcdrv_bitbuffer
op_star
id|buf
comma
r_int
r_int
id|bits
)paren
(brace
id|buf-&gt;buffer
(braket
id|buf-&gt;wr
)braket
op_assign
id|bits
op_amp
l_int|0xff
suffix:semicolon
id|buf-&gt;wr
op_assign
(paren
id|buf-&gt;wr
op_plus
l_int|1
)paren
op_mod
r_sizeof
(paren
id|buf-&gt;buffer
)paren
suffix:semicolon
id|buf-&gt;buffer
(braket
id|buf-&gt;wr
)braket
op_assign
(paren
id|bits
op_rshift
l_int|8
)paren
op_amp
l_int|0xff
suffix:semicolon
id|buf-&gt;wr
op_assign
(paren
id|buf-&gt;wr
op_plus
l_int|1
)paren
op_mod
r_sizeof
(paren
id|buf-&gt;buffer
)paren
suffix:semicolon
)brace
macro_line|#endif /* HDLCDRV_DEBUG */
multiline_comment|/* -------------------------------------------------------------------- */
multiline_comment|/*&n; * Information that need to be kept for each driver. &n; */
DECL|struct|hdlcdrv_ops
r_struct
id|hdlcdrv_ops
(brace
multiline_comment|/*&n;&t; * first some informations needed by the hdlcdrv routines&n;&t; */
DECL|member|drvname
r_const
r_char
op_star
id|drvname
suffix:semicolon
DECL|member|drvinfo
r_const
r_char
op_star
id|drvinfo
suffix:semicolon
multiline_comment|/*&n;&t; * the routines called by the hdlcdrv routines&n;&t; */
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_struct
id|net_device
op_star
)paren
suffix:semicolon
DECL|member|close
r_int
(paren
op_star
id|close
)paren
(paren
r_struct
id|net_device
op_star
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_struct
id|net_device
op_star
comma
r_struct
id|ifreq
op_star
comma
r_struct
id|hdlcdrv_ioctl
op_star
comma
r_int
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|hdlcdrv_state
r_struct
id|hdlcdrv_state
(brace
DECL|member|magic
r_int
id|magic
suffix:semicolon
DECL|member|ops
r_const
r_struct
id|hdlcdrv_ops
op_star
id|ops
suffix:semicolon
r_struct
(brace
DECL|member|bitrate
r_int
id|bitrate
suffix:semicolon
DECL|member|par
)brace
id|par
suffix:semicolon
DECL|struct|hdlcdrv_pttoutput
r_struct
id|hdlcdrv_pttoutput
(brace
DECL|member|dma2
r_int
id|dma2
suffix:semicolon
DECL|member|seriobase
r_int
id|seriobase
suffix:semicolon
DECL|member|pariobase
r_int
id|pariobase
suffix:semicolon
DECL|member|midiiobase
r_int
id|midiiobase
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|ptt_out
)brace
id|ptt_out
suffix:semicolon
DECL|member|ch_params
r_struct
id|hdlcdrv_channel_params
id|ch_params
suffix:semicolon
DECL|struct|hdlcdrv_hdlcrx
r_struct
id|hdlcdrv_hdlcrx
(brace
DECL|member|hbuf
r_struct
id|hdlcdrv_hdlcbuffer
id|hbuf
suffix:semicolon
DECL|member|in_hdlc_rx
r_int
id|in_hdlc_rx
suffix:semicolon
multiline_comment|/* 0 = sync hunt, != 0 receiving */
DECL|member|rx_state
r_int
id|rx_state
suffix:semicolon
DECL|member|bitstream
r_int
r_int
id|bitstream
suffix:semicolon
DECL|member|bitbuf
r_int
r_int
id|bitbuf
suffix:semicolon
DECL|member|numbits
r_int
id|numbits
suffix:semicolon
DECL|member|dcd
r_int
r_char
id|dcd
suffix:semicolon
DECL|member|len
r_int
id|len
suffix:semicolon
DECL|member|bp
r_int
r_char
op_star
id|bp
suffix:semicolon
DECL|member|buffer
r_int
r_char
id|buffer
(braket
id|HDLCDRV_MAXFLEN
op_plus
l_int|2
)braket
suffix:semicolon
DECL|member|hdlcrx
)brace
id|hdlcrx
suffix:semicolon
DECL|struct|hdlcdrv_hdlctx
r_struct
id|hdlcdrv_hdlctx
(brace
DECL|member|hbuf
r_struct
id|hdlcdrv_hdlcbuffer
id|hbuf
suffix:semicolon
DECL|member|in_hdlc_tx
r_int
id|in_hdlc_tx
suffix:semicolon
multiline_comment|/*&n;&t;&t; * 0 = send flags&n;&t;&t; * 1 = send txtail (flags)&n;&t;&t; * 2 = send packet&n;&t;&t; */
DECL|member|tx_state
r_int
id|tx_state
suffix:semicolon
DECL|member|numflags
r_int
id|numflags
suffix:semicolon
DECL|member|bitstream
r_int
r_int
id|bitstream
suffix:semicolon
DECL|member|ptt
r_int
r_char
id|ptt
suffix:semicolon
DECL|member|calibrate
r_int
id|calibrate
suffix:semicolon
DECL|member|slotcnt
r_int
id|slotcnt
suffix:semicolon
DECL|member|bitbuf
r_int
r_int
id|bitbuf
suffix:semicolon
DECL|member|numbits
r_int
id|numbits
suffix:semicolon
DECL|member|len
r_int
id|len
suffix:semicolon
DECL|member|bp
r_int
r_char
op_star
id|bp
suffix:semicolon
DECL|member|buffer
r_int
r_char
id|buffer
(braket
id|HDLCDRV_MAXFLEN
op_plus
l_int|2
)braket
suffix:semicolon
DECL|member|hdlctx
)brace
id|hdlctx
suffix:semicolon
macro_line|#ifdef HDLCDRV_DEBUG
DECL|member|bitbuf_channel
r_struct
id|hdlcdrv_bitbuffer
id|bitbuf_channel
suffix:semicolon
DECL|member|bitbuf_hdlc
r_struct
id|hdlcdrv_bitbuffer
id|bitbuf_hdlc
suffix:semicolon
macro_line|#endif /* HDLCDRV_DEBUG */
DECL|member|stats
r_struct
id|net_device_stats
id|stats
suffix:semicolon
DECL|member|ptt_keyed
r_int
id|ptt_keyed
suffix:semicolon
multiline_comment|/* queued skb for transmission */
DECL|member|skb
r_struct
id|sk_buff
op_star
id|skb
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* -------------------------------------------------------------------- */
DECL|function|hdlcdrv_hbuf_full
r_static
r_inline
r_int
id|hdlcdrv_hbuf_full
c_func
(paren
r_struct
id|hdlcdrv_hdlcbuffer
op_star
id|hb
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
r_int
id|ret
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|hb-&gt;lock
comma
id|flags
)paren
suffix:semicolon
id|ret
op_assign
op_logical_neg
(paren
(paren
id|HDLCDRV_HDLCBUFFER
op_minus
l_int|1
op_plus
id|hb-&gt;rd
op_minus
id|hb-&gt;wr
)paren
op_mod
id|HDLCDRV_HDLCBUFFER
)paren
suffix:semicolon
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|hb-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_return
id|ret
suffix:semicolon
)brace
multiline_comment|/* -------------------------------------------------------------------- */
DECL|function|hdlcdrv_hbuf_empty
r_static
r_inline
r_int
id|hdlcdrv_hbuf_empty
c_func
(paren
r_struct
id|hdlcdrv_hdlcbuffer
op_star
id|hb
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
r_int
id|ret
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|hb-&gt;lock
comma
id|flags
)paren
suffix:semicolon
id|ret
op_assign
(paren
id|hb-&gt;rd
op_eq
id|hb-&gt;wr
)paren
suffix:semicolon
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|hb-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_return
id|ret
suffix:semicolon
)brace
multiline_comment|/* -------------------------------------------------------------------- */
DECL|function|hdlcdrv_hbuf_get
r_static
r_inline
r_int
r_int
id|hdlcdrv_hbuf_get
c_func
(paren
r_struct
id|hdlcdrv_hdlcbuffer
op_star
id|hb
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
r_int
r_int
id|val
suffix:semicolon
r_int
id|newr
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|hb-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
id|hb-&gt;rd
op_eq
id|hb-&gt;wr
)paren
id|val
op_assign
l_int|0
suffix:semicolon
r_else
(brace
id|newr
op_assign
(paren
id|hb-&gt;rd
op_plus
l_int|1
)paren
op_mod
id|HDLCDRV_HDLCBUFFER
suffix:semicolon
id|val
op_assign
id|hb-&gt;buf
(braket
id|hb-&gt;rd
)braket
suffix:semicolon
id|hb-&gt;rd
op_assign
id|newr
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|hb-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_return
id|val
suffix:semicolon
)brace
multiline_comment|/* -------------------------------------------------------------------- */
DECL|function|hdlcdrv_hbuf_put
r_static
r_inline
r_void
id|hdlcdrv_hbuf_put
c_func
(paren
r_struct
id|hdlcdrv_hdlcbuffer
op_star
id|hb
comma
r_int
r_int
id|val
)paren
(brace
r_int
id|newp
suffix:semicolon
r_int
r_int
id|flags
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|hb-&gt;lock
comma
id|flags
)paren
suffix:semicolon
id|newp
op_assign
(paren
id|hb-&gt;wr
op_plus
l_int|1
)paren
op_mod
id|HDLCDRV_HDLCBUFFER
suffix:semicolon
r_if
c_cond
(paren
id|newp
op_ne
id|hb-&gt;rd
)paren
(brace
id|hb-&gt;buf
(braket
id|hb-&gt;wr
)braket
op_assign
id|val
op_amp
l_int|0xffff
suffix:semicolon
id|hb-&gt;wr
op_assign
id|newp
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|hb-&gt;lock
comma
id|flags
)paren
suffix:semicolon
)brace
multiline_comment|/* -------------------------------------------------------------------- */
DECL|function|hdlcdrv_putbits
r_static
r_inline
r_void
id|hdlcdrv_putbits
c_func
(paren
r_struct
id|hdlcdrv_state
op_star
id|s
comma
r_int
r_int
id|bits
)paren
(brace
id|hdlcdrv_hbuf_put
c_func
(paren
op_amp
id|s-&gt;hdlcrx.hbuf
comma
id|bits
)paren
suffix:semicolon
)brace
DECL|function|hdlcdrv_getbits
r_static
r_inline
r_int
r_int
id|hdlcdrv_getbits
c_func
(paren
r_struct
id|hdlcdrv_state
op_star
id|s
)paren
(brace
r_int
r_int
id|ret
suffix:semicolon
r_if
c_cond
(paren
id|hdlcdrv_hbuf_empty
c_func
(paren
op_amp
id|s-&gt;hdlctx.hbuf
)paren
)paren
(brace
r_if
c_cond
(paren
id|s-&gt;hdlctx.calibrate
OG
l_int|0
)paren
id|s-&gt;hdlctx.calibrate
op_decrement
suffix:semicolon
r_else
id|s-&gt;hdlctx.ptt
op_assign
l_int|0
suffix:semicolon
id|ret
op_assign
l_int|0
suffix:semicolon
)brace
r_else
id|ret
op_assign
id|hdlcdrv_hbuf_get
c_func
(paren
op_amp
id|s-&gt;hdlctx.hbuf
)paren
suffix:semicolon
macro_line|#ifdef HDLCDRV_LOOPBACK
id|hdlcdrv_hbuf_put
c_func
(paren
op_amp
id|s-&gt;hdlcrx.hbuf
comma
id|ret
)paren
suffix:semicolon
macro_line|#endif /* HDLCDRV_LOOPBACK */
r_return
id|ret
suffix:semicolon
)brace
DECL|function|hdlcdrv_channelbit
r_static
r_inline
r_void
id|hdlcdrv_channelbit
c_func
(paren
r_struct
id|hdlcdrv_state
op_star
id|s
comma
r_int
r_int
id|bit
)paren
(brace
macro_line|#ifdef HDLCDRV_DEBUG
id|hdlcdrv_add_bitbuffer
c_func
(paren
op_amp
id|s-&gt;bitbuf_channel
comma
id|bit
)paren
suffix:semicolon
macro_line|#endif /* HDLCDRV_DEBUG */
)brace
DECL|function|hdlcdrv_setdcd
r_static
r_inline
r_void
id|hdlcdrv_setdcd
c_func
(paren
r_struct
id|hdlcdrv_state
op_star
id|s
comma
r_int
id|dcd
)paren
(brace
id|s-&gt;hdlcrx.dcd
op_assign
op_logical_neg
op_logical_neg
id|dcd
suffix:semicolon
)brace
DECL|function|hdlcdrv_ptt
r_static
r_inline
r_int
id|hdlcdrv_ptt
c_func
(paren
r_struct
id|hdlcdrv_state
op_star
id|s
)paren
(brace
r_return
id|s-&gt;hdlctx.ptt
op_logical_or
(paren
id|s-&gt;hdlctx.calibrate
OG
l_int|0
)paren
suffix:semicolon
)brace
multiline_comment|/* -------------------------------------------------------------------- */
r_void
id|hdlcdrv_receiver
c_func
(paren
r_struct
id|net_device
op_star
comma
r_struct
id|hdlcdrv_state
op_star
)paren
suffix:semicolon
r_void
id|hdlcdrv_transmitter
c_func
(paren
r_struct
id|net_device
op_star
comma
r_struct
id|hdlcdrv_state
op_star
)paren
suffix:semicolon
r_void
id|hdlcdrv_arbitrate
c_func
(paren
r_struct
id|net_device
op_star
comma
r_struct
id|hdlcdrv_state
op_star
)paren
suffix:semicolon
r_int
id|hdlcdrv_register_hdlcdrv
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_const
r_struct
id|hdlcdrv_ops
op_star
id|ops
comma
r_int
r_int
id|privsize
comma
r_char
op_star
id|ifname
comma
r_int
r_int
id|baseaddr
comma
r_int
r_int
id|irq
comma
r_int
r_int
id|dma
)paren
suffix:semicolon
r_int
id|hdlcdrv_unregister_hdlcdrv
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
multiline_comment|/* -------------------------------------------------------------------- */
macro_line|#endif /* __KERNEL__ */
multiline_comment|/* -------------------------------------------------------------------- */
macro_line|#endif /* _HDLCDRV_H */
multiline_comment|/* -------------------------------------------------------------------- */
eof
