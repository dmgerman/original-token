multiline_comment|/*&n; * sysctl.h: General linux system control interface&n; *&n; * Begun 24 March 1995, Stephen Tweedie&n; */
macro_line|#include &lt;linux/lists.h&gt;
macro_line|#ifndef _LINUX_SYSCTL_H
DECL|macro|_LINUX_SYSCTL_H
mdefine_line|#define _LINUX_SYSCTL_H
DECL|macro|CTL_MAXNAME
mdefine_line|#define CTL_MAXNAME 10
DECL|struct|__sysctl_args
r_struct
id|__sysctl_args
(brace
DECL|member|name
r_int
op_star
id|name
suffix:semicolon
DECL|member|nlen
r_int
id|nlen
suffix:semicolon
DECL|member|oldval
r_void
op_star
id|oldval
suffix:semicolon
DECL|member|oldlenp
r_int
op_star
id|oldlenp
suffix:semicolon
DECL|member|newval
r_void
op_star
id|newval
suffix:semicolon
DECL|member|newlen
r_int
id|newlen
suffix:semicolon
DECL|member|__unused
r_int
r_int
id|__unused
(braket
l_int|4
)braket
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Define sysctl names first */
multiline_comment|/* Top-level names: */
multiline_comment|/* For internal pattern-matching use only: */
macro_line|#ifdef __KERNEL__
DECL|macro|CTL_ANY
mdefine_line|#define CTL_ANY&t;&t;-1&t;/* Matches any name */
DECL|macro|CTL_NONE
mdefine_line|#define CTL_NONE&t;0
macro_line|#endif
r_enum
(brace
DECL|enumerator|CTL_KERN
id|CTL_KERN
op_assign
l_int|1
comma
multiline_comment|/* General kernel info and control */
DECL|enumerator|CTL_VM
id|CTL_VM
comma
multiline_comment|/* VM management */
DECL|enumerator|CTL_NET
id|CTL_NET
comma
multiline_comment|/* Networking */
DECL|enumerator|CTL_PROC
id|CTL_PROC
comma
multiline_comment|/* Process info */
DECL|enumerator|CTL_FS
id|CTL_FS
comma
multiline_comment|/* Filesystems */
DECL|enumerator|CTL_DEBUG
id|CTL_DEBUG
comma
multiline_comment|/* Debugging */
DECL|enumerator|CTL_DEV
id|CTL_DEV
comma
multiline_comment|/* Devices */
)brace
suffix:semicolon
multiline_comment|/* CTL_KERN names: */
r_enum
(brace
DECL|enumerator|KERN_OSTYPE
id|KERN_OSTYPE
op_assign
l_int|1
comma
multiline_comment|/* string: system version */
DECL|enumerator|KERN_OSRELEASE
id|KERN_OSRELEASE
comma
multiline_comment|/* string: system release */
DECL|enumerator|KERN_OSREV
id|KERN_OSREV
comma
multiline_comment|/* int: system revision */
DECL|enumerator|KERN_VERSION
id|KERN_VERSION
comma
multiline_comment|/* string: compile time info */
DECL|enumerator|KERN_SECUREMASK
id|KERN_SECUREMASK
comma
multiline_comment|/* struct: maximum rights mask */
DECL|enumerator|KERN_PROF
id|KERN_PROF
comma
multiline_comment|/* table: profiling information */
DECL|enumerator|KERN_NODENAME
id|KERN_NODENAME
comma
DECL|enumerator|KERN_DOMAINNAME
id|KERN_DOMAINNAME
comma
DECL|enumerator|KERN_NRINODE
id|KERN_NRINODE
comma
DECL|enumerator|KERN_MAXINODE
id|KERN_MAXINODE
comma
DECL|enumerator|KERN_NRFILE
id|KERN_NRFILE
comma
DECL|enumerator|KERN_MAXFILE
id|KERN_MAXFILE
comma
DECL|enumerator|KERN_SECURELVL
id|KERN_SECURELVL
comma
multiline_comment|/* int: system security level */
DECL|enumerator|KERN_PANIC
id|KERN_PANIC
comma
multiline_comment|/* int: panic timeout */
DECL|enumerator|KERN_REALROOTDEV
id|KERN_REALROOTDEV
comma
multiline_comment|/* real root device to mount after initrd */
DECL|enumerator|KERN_NFSRNAME
id|KERN_NFSRNAME
comma
multiline_comment|/* NFS root name */
DECL|enumerator|KERN_NFSRADDRS
id|KERN_NFSRADDRS
comma
multiline_comment|/* NFS root addresses */
DECL|enumerator|KERN_JAVA_INTERPRETER
id|KERN_JAVA_INTERPRETER
comma
multiline_comment|/* path to Java(tm) interpreter */
DECL|enumerator|KERN_JAVA_APPLETVIEWER
id|KERN_JAVA_APPLETVIEWER
comma
multiline_comment|/* path to Java(tm) appletviewer */
DECL|enumerator|KERN_SPARC_REBOOT
id|KERN_SPARC_REBOOT
comma
multiline_comment|/* reboot command on Sparc */
DECL|enumerator|KERN_CTLALTDEL
id|KERN_CTLALTDEL
comma
multiline_comment|/* int: allow ctl-alt-del to reboot */
DECL|enumerator|KERN_PRINTK
id|KERN_PRINTK
comma
multiline_comment|/* sturct: control printk logging parameters */
)brace
suffix:semicolon
multiline_comment|/* CTL_VM names: */
r_enum
(brace
DECL|enumerator|VM_SWAPCTL
id|VM_SWAPCTL
op_assign
l_int|1
comma
multiline_comment|/* struct: Set vm swapping control */
DECL|enumerator|VM_KSWAPD
id|VM_KSWAPD
comma
multiline_comment|/* struct: control background pageout */
DECL|enumerator|VM_SWAPOUT
id|VM_SWAPOUT
comma
multiline_comment|/* int: Background pageout interval */
DECL|enumerator|VM_FREEPG
id|VM_FREEPG
comma
multiline_comment|/* struct: Set free page thresholds */
DECL|enumerator|VM_BDFLUSH
id|VM_BDFLUSH
comma
multiline_comment|/* struct: Control buffer cache flushing */
DECL|enumerator|VM_OVERCOMMIT_MEMORY
id|VM_OVERCOMMIT_MEMORY
comma
multiline_comment|/* Turn off the virtual memory safety limit */
)brace
suffix:semicolon
multiline_comment|/* CTL_NET names: */
r_enum
(brace
DECL|enumerator|NET_CORE
id|NET_CORE
op_assign
l_int|1
comma
DECL|enumerator|NET_ETHER
id|NET_ETHER
comma
DECL|enumerator|NET_802
id|NET_802
comma
DECL|enumerator|NET_UNIX
id|NET_UNIX
comma
DECL|enumerator|NET_IPV4
id|NET_IPV4
comma
DECL|enumerator|NET_IPX
id|NET_IPX
comma
DECL|enumerator|NET_ATALK
id|NET_ATALK
comma
DECL|enumerator|NET_NETROM
id|NET_NETROM
comma
DECL|enumerator|NET_AX25
id|NET_AX25
comma
DECL|enumerator|NET_BRIDGE
id|NET_BRIDGE
comma
DECL|enumerator|NET_IPV6
id|NET_IPV6
comma
DECL|enumerator|NET_ROSE
id|NET_ROSE
comma
DECL|enumerator|NET_X25
id|NET_X25
comma
DECL|enumerator|NET_TR
id|NET_TR
comma
)brace
suffix:semicolon
multiline_comment|/* /proc/sys/net/core */
r_enum
(brace
DECL|enumerator|NET_CORE_WMEM_MAX
id|NET_CORE_WMEM_MAX
op_assign
l_int|1
comma
DECL|enumerator|NET_CORE_RMEM_MAX
id|NET_CORE_RMEM_MAX
comma
DECL|enumerator|NET_CORE_WMEM_DEFAULT
id|NET_CORE_WMEM_DEFAULT
comma
DECL|enumerator|NET_CORE_RMEM_DEFAULT
id|NET_CORE_RMEM_DEFAULT
comma
)brace
suffix:semicolon
multiline_comment|/* /proc/sys/net/ethernet */
multiline_comment|/* /proc/sys/net/802 */
multiline_comment|/* /proc/sys/net/unix */
multiline_comment|/* /proc/sys/net/ipv4 */
r_enum
(brace
DECL|enumerator|NET_IPV4_ARP_RES_TIME
id|NET_IPV4_ARP_RES_TIME
op_assign
l_int|1
comma
DECL|enumerator|NET_IPV4_ARP_DEAD_RES_TIME
id|NET_IPV4_ARP_DEAD_RES_TIME
comma
DECL|enumerator|NET_IPV4_ARP_MAX_TRIES
id|NET_IPV4_ARP_MAX_TRIES
comma
DECL|enumerator|NET_IPV4_ARP_TIMEOUT
id|NET_IPV4_ARP_TIMEOUT
comma
DECL|enumerator|NET_IPV4_ARP_CHECK_INTERVAL
id|NET_IPV4_ARP_CHECK_INTERVAL
comma
DECL|enumerator|NET_IPV4_ARP_CONFIRM_INTERVAL
id|NET_IPV4_ARP_CONFIRM_INTERVAL
comma
DECL|enumerator|NET_IPV4_ARP_CONFIRM_TIMEOUT
id|NET_IPV4_ARP_CONFIRM_TIMEOUT
comma
DECL|enumerator|NET_IPV4_TCP_HOE_RETRANSMITS
id|NET_IPV4_TCP_HOE_RETRANSMITS
comma
DECL|enumerator|NET_IPV4_TCP_SACK
id|NET_IPV4_TCP_SACK
comma
DECL|enumerator|NET_IPV4_TCP_TSACK
id|NET_IPV4_TCP_TSACK
comma
DECL|enumerator|NET_IPV4_TCP_TIMESTAMPS
id|NET_IPV4_TCP_TIMESTAMPS
comma
DECL|enumerator|NET_IPV4_TCP_WINDOW_SCALING
id|NET_IPV4_TCP_WINDOW_SCALING
comma
DECL|enumerator|NET_IPV4_TCP_VEGAS_CONG_AVOID
id|NET_IPV4_TCP_VEGAS_CONG_AVOID
comma
DECL|enumerator|NET_IPV4_FORWARDING
id|NET_IPV4_FORWARDING
comma
DECL|enumerator|NET_IPV4_DEFAULT_TTL
id|NET_IPV4_DEFAULT_TTL
comma
DECL|enumerator|NET_IPV4_RFC1812_FILTER
id|NET_IPV4_RFC1812_FILTER
comma
DECL|enumerator|NET_IPV4_LOG_MARTIANS
id|NET_IPV4_LOG_MARTIANS
comma
DECL|enumerator|NET_IPV4_SOURCE_ROUTE
id|NET_IPV4_SOURCE_ROUTE
comma
DECL|enumerator|NET_IPV4_ADDRMASK_AGENT
id|NET_IPV4_ADDRMASK_AGENT
comma
DECL|enumerator|NET_IPV4_BOOTP_AGENT
id|NET_IPV4_BOOTP_AGENT
comma
DECL|enumerator|NET_IPV4_BOOTP_RELAY
id|NET_IPV4_BOOTP_RELAY
comma
DECL|enumerator|NET_IPV4_FIB_MODEL
id|NET_IPV4_FIB_MODEL
comma
DECL|enumerator|NET_IPV4_NO_PMTU_DISC
id|NET_IPV4_NO_PMTU_DISC
comma
DECL|enumerator|NET_IPV4_ACCEPT_REDIRECTS
id|NET_IPV4_ACCEPT_REDIRECTS
comma
DECL|enumerator|NET_IPV4_SECURE_REDIRECTS
id|NET_IPV4_SECURE_REDIRECTS
comma
DECL|enumerator|NET_IPV4_RFC1620_REDIRECTS
id|NET_IPV4_RFC1620_REDIRECTS
comma
DECL|enumerator|NET_TCP_SYN_RETRIES
id|NET_TCP_SYN_RETRIES
comma
)brace
suffix:semicolon
multiline_comment|/* /proc/sys/net/ipv6 */
r_enum
(brace
DECL|enumerator|NET_IPV6_FORWARDING
id|NET_IPV6_FORWARDING
op_assign
l_int|1
comma
DECL|enumerator|NET_IPV6_HOPLIMIT
id|NET_IPV6_HOPLIMIT
comma
DECL|enumerator|NET_IPV6_ACCEPT_RA
id|NET_IPV6_ACCEPT_RA
comma
DECL|enumerator|NET_IPV6_ACCEPT_REDIRECTS
id|NET_IPV6_ACCEPT_REDIRECTS
comma
DECL|enumerator|NET_IPV6_ND_MAX_MCAST_SOLICIT
id|NET_IPV6_ND_MAX_MCAST_SOLICIT
comma
DECL|enumerator|NET_IPV6_ND_MAX_UCAST_SOLICIT
id|NET_IPV6_ND_MAX_UCAST_SOLICIT
comma
DECL|enumerator|NET_IPV6_ND_RETRANS_TIME
id|NET_IPV6_ND_RETRANS_TIME
comma
DECL|enumerator|NET_IPV6_ND_REACHABLE_TIME
id|NET_IPV6_ND_REACHABLE_TIME
comma
DECL|enumerator|NET_IPV6_ND_DELAY_PROBE_TIME
id|NET_IPV6_ND_DELAY_PROBE_TIME
comma
DECL|enumerator|NET_IPV6_AUTOCONF
id|NET_IPV6_AUTOCONF
comma
DECL|enumerator|NET_IPV6_DAD_TRANSMITS
id|NET_IPV6_DAD_TRANSMITS
comma
DECL|enumerator|NET_IPV6_RTR_SOLICITS
id|NET_IPV6_RTR_SOLICITS
comma
DECL|enumerator|NET_IPV6_RTR_SOLICIT_INTERVAL
id|NET_IPV6_RTR_SOLICIT_INTERVAL
comma
DECL|enumerator|NET_IPV6_RTR_SOLICIT_DELAY
id|NET_IPV6_RTR_SOLICIT_DELAY
comma
)brace
suffix:semicolon
multiline_comment|/* /proc/sys/net/ipx */
multiline_comment|/* /proc/sys/net/appletalk */
multiline_comment|/* /proc/sys/net/netrom */
r_enum
(brace
DECL|enumerator|NET_NETROM_DEFAULT_PATH_QUALITY
id|NET_NETROM_DEFAULT_PATH_QUALITY
op_assign
l_int|1
comma
DECL|enumerator|NET_NETROM_OBSOLESCENCE_COUNT_INITIALISER
id|NET_NETROM_OBSOLESCENCE_COUNT_INITIALISER
comma
DECL|enumerator|NET_NETROM_NETWORK_TTL_INITIALISER
id|NET_NETROM_NETWORK_TTL_INITIALISER
comma
DECL|enumerator|NET_NETROM_TRANSPORT_TIMEOUT
id|NET_NETROM_TRANSPORT_TIMEOUT
comma
DECL|enumerator|NET_NETROM_TRANSPORT_MAXIMUM_TRIES
id|NET_NETROM_TRANSPORT_MAXIMUM_TRIES
comma
DECL|enumerator|NET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY
id|NET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY
comma
DECL|enumerator|NET_NETROM_TRANSPORT_BUSY_DELAY
id|NET_NETROM_TRANSPORT_BUSY_DELAY
comma
DECL|enumerator|NET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE
id|NET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE
comma
DECL|enumerator|NET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT
id|NET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT
comma
DECL|enumerator|NET_NETROM_ROUTING_CONTROL
id|NET_NETROM_ROUTING_CONTROL
comma
DECL|enumerator|NET_NETROM_LINK_FAILS_COUNT
id|NET_NETROM_LINK_FAILS_COUNT
)brace
suffix:semicolon
multiline_comment|/* /proc/sys/net/ax25 */
r_enum
(brace
DECL|enumerator|NET_AX25_IP_DEFAULT_MODE
id|NET_AX25_IP_DEFAULT_MODE
op_assign
l_int|1
comma
DECL|enumerator|NET_AX25_DEFAULT_MODE
id|NET_AX25_DEFAULT_MODE
comma
DECL|enumerator|NET_AX25_BACKOFF_TYPE
id|NET_AX25_BACKOFF_TYPE
comma
DECL|enumerator|NET_AX25_CONNECT_MODE
id|NET_AX25_CONNECT_MODE
comma
DECL|enumerator|NET_AX25_STANDARD_WINDOW
id|NET_AX25_STANDARD_WINDOW
comma
DECL|enumerator|NET_AX25_EXTENDED_WINDOW
id|NET_AX25_EXTENDED_WINDOW
comma
DECL|enumerator|NET_AX25_T1_TIMEOUT
id|NET_AX25_T1_TIMEOUT
comma
DECL|enumerator|NET_AX25_T2_TIMEOUT
id|NET_AX25_T2_TIMEOUT
comma
DECL|enumerator|NET_AX25_T3_TIMEOUT
id|NET_AX25_T3_TIMEOUT
comma
DECL|enumerator|NET_AX25_IDLE_TIMEOUT
id|NET_AX25_IDLE_TIMEOUT
comma
DECL|enumerator|NET_AX25_N2
id|NET_AX25_N2
comma
DECL|enumerator|NET_AX25_PACLEN
id|NET_AX25_PACLEN
comma
DECL|enumerator|NET_AX25_PROTOCOL
id|NET_AX25_PROTOCOL
comma
DECL|enumerator|NET_AX25_DAMA_SLAVE_TIMEOUT
id|NET_AX25_DAMA_SLAVE_TIMEOUT
)brace
suffix:semicolon
multiline_comment|/* /proc/sys/net/rose */
r_enum
(brace
DECL|enumerator|NET_ROSE_RESTART_REQUEST_TIMEOUT
id|NET_ROSE_RESTART_REQUEST_TIMEOUT
op_assign
l_int|1
comma
DECL|enumerator|NET_ROSE_CALL_REQUEST_TIMEOUT
id|NET_ROSE_CALL_REQUEST_TIMEOUT
comma
DECL|enumerator|NET_ROSE_RESET_REQUEST_TIMEOUT
id|NET_ROSE_RESET_REQUEST_TIMEOUT
comma
DECL|enumerator|NET_ROSE_CLEAR_REQUEST_TIMEOUT
id|NET_ROSE_CLEAR_REQUEST_TIMEOUT
comma
DECL|enumerator|NET_ROSE_NO_ACTIVITY_TIMEOUT
id|NET_ROSE_NO_ACTIVITY_TIMEOUT
comma
DECL|enumerator|NET_ROSE_ACK_HOLD_BACK_TIMEOUT
id|NET_ROSE_ACK_HOLD_BACK_TIMEOUT
comma
DECL|enumerator|NET_ROSE_ROUTING_CONTROL
id|NET_ROSE_ROUTING_CONTROL
comma
DECL|enumerator|NET_ROSE_LINK_FAIL_TIMEOUT
id|NET_ROSE_LINK_FAIL_TIMEOUT
)brace
suffix:semicolon
multiline_comment|/* /proc/sys/net/x25 */
r_enum
(brace
DECL|enumerator|NET_X25_RESTART_REQUEST_TIMEOUT
id|NET_X25_RESTART_REQUEST_TIMEOUT
op_assign
l_int|1
comma
DECL|enumerator|NET_X25_CALL_REQUEST_TIMEOUT
id|NET_X25_CALL_REQUEST_TIMEOUT
comma
DECL|enumerator|NET_X25_RESET_REQUEST_TIMEOUT
id|NET_X25_RESET_REQUEST_TIMEOUT
comma
DECL|enumerator|NET_X25_CLEAR_REQUEST_TIMEOUT
id|NET_X25_CLEAR_REQUEST_TIMEOUT
comma
DECL|enumerator|NET_X25_ACK_HOLD_BACK_TIMEOUT
id|NET_X25_ACK_HOLD_BACK_TIMEOUT
)brace
suffix:semicolon
multiline_comment|/* /proc/sys/net/token-ring */
r_enum
(brace
DECL|enumerator|NET_TR_RIF_TIMEOUT
id|NET_TR_RIF_TIMEOUT
op_assign
l_int|1
)brace
suffix:semicolon
multiline_comment|/* CTL_PROC names: */
multiline_comment|/* CTL_FS names: */
multiline_comment|/* CTL_DEBUG names: */
multiline_comment|/* CTL_DEV names: */
macro_line|#ifdef __KERNEL__
r_extern
id|asmlinkage
r_int
id|sys_sysctl
c_func
(paren
r_struct
id|__sysctl_args
op_star
)paren
suffix:semicolon
r_extern
r_void
id|sysctl_init
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|typedef|ctl_table
r_typedef
r_struct
id|ctl_table
id|ctl_table
suffix:semicolon
DECL|typedef|ctl_handler
r_typedef
r_int
id|ctl_handler
(paren
id|ctl_table
op_star
id|table
comma
r_int
op_star
id|name
comma
r_int
id|nlen
comma
r_void
op_star
id|oldval
comma
r_int
op_star
id|oldlenp
comma
r_void
op_star
id|newval
comma
r_int
id|newlen
comma
r_void
op_star
op_star
id|context
)paren
suffix:semicolon
DECL|typedef|proc_handler
r_typedef
r_int
id|proc_handler
(paren
id|ctl_table
op_star
id|ctl
comma
r_int
id|write
comma
r_struct
id|file
op_star
id|filp
comma
r_void
op_star
id|buffer
comma
r_int
op_star
id|lenp
)paren
suffix:semicolon
r_extern
r_int
id|proc_dostring
c_func
(paren
id|ctl_table
op_star
comma
r_int
comma
r_struct
id|file
op_star
comma
r_void
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_extern
r_int
id|proc_dointvec
c_func
(paren
id|ctl_table
op_star
comma
r_int
comma
r_struct
id|file
op_star
comma
r_void
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_extern
r_int
id|proc_dointvec_minmax
c_func
(paren
id|ctl_table
op_star
comma
r_int
comma
r_struct
id|file
op_star
comma
r_void
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_extern
r_int
id|do_sysctl
(paren
r_int
op_star
id|name
comma
r_int
id|nlen
comma
r_void
op_star
id|oldval
comma
r_int
op_star
id|oldlenp
comma
r_void
op_star
id|newval
comma
r_int
id|newlen
)paren
suffix:semicolon
r_extern
r_int
id|do_sysctl_strategy
(paren
id|ctl_table
op_star
id|table
comma
r_int
op_star
id|name
comma
r_int
id|nlen
comma
r_void
op_star
id|oldval
comma
r_int
op_star
id|oldlenp
comma
r_void
op_star
id|newval
comma
r_int
id|newlen
comma
r_void
op_star
op_star
id|context
)paren
suffix:semicolon
r_extern
id|ctl_handler
id|sysctl_string
suffix:semicolon
r_extern
id|ctl_handler
id|sysctl_intvec
suffix:semicolon
r_extern
r_int
id|do_string
(paren
r_void
op_star
id|oldval
comma
r_int
op_star
id|oldlenp
comma
r_void
op_star
id|newval
comma
r_int
id|newlen
comma
r_int
id|rdwr
comma
r_char
op_star
id|data
comma
r_int
id|max
)paren
suffix:semicolon
r_extern
r_int
id|do_int
(paren
r_void
op_star
id|oldval
comma
r_int
op_star
id|oldlenp
comma
r_void
op_star
id|newval
comma
r_int
id|newlen
comma
r_int
id|rdwr
comma
r_int
op_star
id|data
)paren
suffix:semicolon
r_extern
r_int
id|do_struct
(paren
r_void
op_star
id|oldval
comma
r_int
op_star
id|oldlenp
comma
r_void
op_star
id|newval
comma
r_int
id|newlen
comma
r_int
id|rdwr
comma
r_void
op_star
id|data
comma
r_int
id|len
)paren
suffix:semicolon
multiline_comment|/*&n; * Register a set of sysctl names by calling register_sysctl_table&n; * with an initialised array of ctl_table&squot;s.  An entry with zero&n; * ctl_name terminates the table.  table-&gt;de will be set up by the&n; * registration and need not be initialised in advance.&n; *&n; * sysctl names can be mirrored automatically under /proc/sys.  The&n; * procname supplied controls /proc naming.&n; *&n; * The table&squot;s mode will be honoured both for sys_sysctl(2) and&n; * proc-fs access.&n; *&n; * Leaf nodes in the sysctl tree will be represented by a single file&n; * under /proc; non-leaf nodes will be represented by directories.  A&n; * null procname disables /proc mirroring at this node.&n; * &n; * sysctl(2) can automatically manage read and write requests through&n; * the sysctl table.  The data and maxlen fields of the ctl_table&n; * struct enable minimal validation of the values being written to be&n; * performed, and the mode field allows minimal authentication.&n; * &n; * More sophisticated management can be enabled by the provision of a&n; * strategy routine with the table entry.  This will be called before&n; * any automatic read or write of the data is performed.&n; * &n; * The strategy routine may return:&n; * &lt;0: Error occurred (error is passed to user process)&n; * 0:  OK - proceed with automatic read or write.&n; * &gt;0: OK - read or write has been done by the strategy routine, so &n; *     return immediately.&n; * &n; * There must be a proc_handler routine for any terminal nodes&n; * mirrored under /proc/sys (non-terminals are handled by a built-in&n; * directory handler).  Several default handlers are available to&n; * cover common cases.&n; */
multiline_comment|/* A sysctl table is an array of struct ctl_table: */
DECL|struct|ctl_table
r_struct
id|ctl_table
(brace
DECL|member|ctl_name
r_int
id|ctl_name
suffix:semicolon
multiline_comment|/* Binary ID */
DECL|member|procname
r_const
r_char
op_star
id|procname
suffix:semicolon
multiline_comment|/* Text ID for /proc/sys, or zero */
DECL|member|data
r_void
op_star
id|data
suffix:semicolon
DECL|member|maxlen
r_int
id|maxlen
suffix:semicolon
DECL|member|mode
id|mode_t
id|mode
suffix:semicolon
DECL|member|child
id|ctl_table
op_star
id|child
suffix:semicolon
DECL|member|proc_handler
id|proc_handler
op_star
id|proc_handler
suffix:semicolon
multiline_comment|/* Callback for text formatting */
DECL|member|strategy
id|ctl_handler
op_star
id|strategy
suffix:semicolon
multiline_comment|/* Callback function for all r/w */
DECL|member|de
r_struct
id|proc_dir_entry
op_star
id|de
suffix:semicolon
multiline_comment|/* /proc control block */
DECL|member|extra1
r_void
op_star
id|extra1
suffix:semicolon
DECL|member|extra2
r_void
op_star
id|extra2
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* struct ctl_table_header is used to maintain dynamic lists of&n;   ctl_table trees. */
DECL|struct|ctl_table_header
r_struct
id|ctl_table_header
(brace
DECL|member|ctl_table
id|ctl_table
op_star
id|ctl_table
suffix:semicolon
DECL|member|ctl_entry
id|DLNODE
c_func
(paren
r_struct
id|ctl_table_header
)paren
id|ctl_entry
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|ctl_table_header
op_star
id|register_sysctl_table
c_func
(paren
id|ctl_table
op_star
id|table
comma
r_int
id|insert_at_head
)paren
suffix:semicolon
r_void
id|unregister_sysctl_table
c_func
(paren
r_struct
id|ctl_table_header
op_star
id|table
)paren
suffix:semicolon
macro_line|#else /* __KERNEL__ */
macro_line|#endif /* __KERNEL__ */
macro_line|#endif /* _LINUX_SYSCTL_H */
eof
