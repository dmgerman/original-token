multiline_comment|/*****************************************************************************/
multiline_comment|/*&n; *&t;comstats.h  -- Serial Port Stats.&n; *&n; *&t;Copyright (C) 1996-1998  Stallion Technologies (support@stallion.oz.au).&n; *&t;Copyright (C) 1994-1996  Greg Ungerer.&n; *&n; *&t;This program is free software; you can redistribute it and/or modify&n; *&t;it under the terms of the GNU General Public License as published by&n; *&t;the Free Software Foundation; either version 2 of the License, or&n; *&t;(at your option) any later version.&n; *&n; *&t;This program is distributed in the hope that it will be useful,&n; *&t;but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *&t;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *&t;GNU General Public License for more details.&n; *&n; *&t;You should have received a copy of the GNU General Public License&n; *&t;along with this program; if not, write to the Free Software&n; *&t;Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; */
multiline_comment|/*****************************************************************************/
macro_line|#ifndef&t;_COMSTATS_H
DECL|macro|_COMSTATS_H
mdefine_line|#define&t;_COMSTATS_H
multiline_comment|/*****************************************************************************/
multiline_comment|/*&n; *&t;Serial port stats structure. The structure itself is UART&n; *&t;independent, but some fields may be UART/driver specific (for&n; *&t;example state).&n; */
r_typedef
r_struct
(brace
DECL|member|brd
r_int
r_int
id|brd
suffix:semicolon
DECL|member|panel
r_int
r_int
id|panel
suffix:semicolon
DECL|member|port
r_int
r_int
id|port
suffix:semicolon
DECL|member|hwid
r_int
r_int
id|hwid
suffix:semicolon
DECL|member|type
r_int
r_int
id|type
suffix:semicolon
DECL|member|txtotal
r_int
r_int
id|txtotal
suffix:semicolon
DECL|member|rxtotal
r_int
r_int
id|rxtotal
suffix:semicolon
DECL|member|txbuffered
r_int
r_int
id|txbuffered
suffix:semicolon
DECL|member|rxbuffered
r_int
r_int
id|rxbuffered
suffix:semicolon
DECL|member|rxoverrun
r_int
r_int
id|rxoverrun
suffix:semicolon
DECL|member|rxparity
r_int
r_int
id|rxparity
suffix:semicolon
DECL|member|rxframing
r_int
r_int
id|rxframing
suffix:semicolon
DECL|member|rxlost
r_int
r_int
id|rxlost
suffix:semicolon
DECL|member|txbreaks
r_int
r_int
id|txbreaks
suffix:semicolon
DECL|member|rxbreaks
r_int
r_int
id|rxbreaks
suffix:semicolon
DECL|member|txxon
r_int
r_int
id|txxon
suffix:semicolon
DECL|member|txxoff
r_int
r_int
id|txxoff
suffix:semicolon
DECL|member|rxxon
r_int
r_int
id|rxxon
suffix:semicolon
DECL|member|rxxoff
r_int
r_int
id|rxxoff
suffix:semicolon
DECL|member|txctson
r_int
r_int
id|txctson
suffix:semicolon
DECL|member|txctsoff
r_int
r_int
id|txctsoff
suffix:semicolon
DECL|member|rxrtson
r_int
r_int
id|rxrtson
suffix:semicolon
DECL|member|rxrtsoff
r_int
r_int
id|rxrtsoff
suffix:semicolon
DECL|member|modem
r_int
r_int
id|modem
suffix:semicolon
DECL|member|state
r_int
r_int
id|state
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|ttystate
r_int
r_int
id|ttystate
suffix:semicolon
DECL|member|cflags
r_int
r_int
id|cflags
suffix:semicolon
DECL|member|iflags
r_int
r_int
id|iflags
suffix:semicolon
DECL|member|oflags
r_int
r_int
id|oflags
suffix:semicolon
DECL|member|lflags
r_int
r_int
id|lflags
suffix:semicolon
DECL|member|signals
r_int
r_int
id|signals
suffix:semicolon
DECL|typedef|comstats_t
)brace
id|comstats_t
suffix:semicolon
multiline_comment|/*&n; *&t;Board stats structure. Returns useful info about the board.&n; */
DECL|macro|COM_MAXPANELS
mdefine_line|#define&t;COM_MAXPANELS&t;8
r_typedef
r_struct
(brace
DECL|member|panel
r_int
r_int
id|panel
suffix:semicolon
DECL|member|type
r_int
r_int
id|type
suffix:semicolon
DECL|member|hwid
r_int
r_int
id|hwid
suffix:semicolon
DECL|member|nrports
r_int
r_int
id|nrports
suffix:semicolon
DECL|typedef|companel_t
)brace
id|companel_t
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|brd
r_int
r_int
id|brd
suffix:semicolon
DECL|member|type
r_int
r_int
id|type
suffix:semicolon
DECL|member|hwid
r_int
r_int
id|hwid
suffix:semicolon
DECL|member|state
r_int
r_int
id|state
suffix:semicolon
DECL|member|ioaddr
r_int
r_int
id|ioaddr
suffix:semicolon
DECL|member|ioaddr2
r_int
r_int
id|ioaddr2
suffix:semicolon
DECL|member|memaddr
r_int
r_int
id|memaddr
suffix:semicolon
DECL|member|irq
r_int
r_int
id|irq
suffix:semicolon
DECL|member|nrpanels
r_int
r_int
id|nrpanels
suffix:semicolon
DECL|member|nrports
r_int
r_int
id|nrports
suffix:semicolon
DECL|member|panels
id|companel_t
id|panels
(braket
id|COM_MAXPANELS
)braket
suffix:semicolon
DECL|typedef|combrd_t
)brace
id|combrd_t
suffix:semicolon
multiline_comment|/*&n; *&t;Define the ioctl operations for stats stuff.&n; */
macro_line|#include &lt;linux/ioctl.h&gt;
DECL|macro|COM_GETPORTSTATS
mdefine_line|#define&t;COM_GETPORTSTATS&t;_IO(&squot;c&squot;,30)
DECL|macro|COM_CLRPORTSTATS
mdefine_line|#define&t;COM_CLRPORTSTATS&t;_IO(&squot;c&squot;,31)
DECL|macro|COM_GETBRDSTATS
mdefine_line|#define&t;COM_GETBRDSTATS&t;&t;_IO(&squot;c&squot;,32)
multiline_comment|/*&n; *&t;Define the set of ioctls that give user level access to the&n; *&t;private port, panel and board structures. The argument required&n; *&t;will be driver dependent!  &n; */
DECL|macro|COM_READPORT
mdefine_line|#define&t;COM_READPORT&t;&t;_IO(&squot;c&squot;,40)
DECL|macro|COM_READBOARD
mdefine_line|#define&t;COM_READBOARD&t;&t;_IO(&squot;c&squot;,41)
DECL|macro|COM_READPANEL
mdefine_line|#define&t;COM_READPANEL&t;&t;_IO(&squot;c&squot;,42)
multiline_comment|/*****************************************************************************/
macro_line|#endif
eof
