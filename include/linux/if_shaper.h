macro_line|#ifndef __LINUX_SHAPER_H
DECL|macro|__LINUX_SHAPER_H
mdefine_line|#define __LINUX_SHAPER_H
macro_line|#ifdef __KERNEL__
DECL|macro|SHAPER_QLEN
mdefine_line|#define SHAPER_QLEN&t;10
multiline_comment|/*&n; *&t;This is a bit speed dependent (read it shouldn&squot;t be a constant!)&n; *&n; *&t;5 is about right for 28.8 upwards. Below that double for every&n; *&t;halving of speed or so. - ie about 20 for 9600 baud.&n; */
DECL|macro|SHAPER_LATENCY
mdefine_line|#define SHAPER_LATENCY&t;(5*HZ)
DECL|macro|SHAPER_MAXSLIP
mdefine_line|#define SHAPER_MAXSLIP&t;2
DECL|macro|SHAPER_BURST
mdefine_line|#define SHAPER_BURST&t;(HZ/50)&t;&t;/* Good for &gt;128K then */
DECL|struct|shaper
r_struct
id|shaper
(brace
DECL|member|sendq
r_struct
id|sk_buff_head
id|sendq
suffix:semicolon
DECL|member|bytespertick
id|__u32
id|bytespertick
suffix:semicolon
DECL|member|bitspersec
id|__u32
id|bitspersec
suffix:semicolon
DECL|member|shapelatency
id|__u32
id|shapelatency
suffix:semicolon
DECL|member|shapeclock
id|__u32
id|shapeclock
suffix:semicolon
DECL|member|recovery
id|__u32
id|recovery
suffix:semicolon
multiline_comment|/* Time we can next clock a packet out on&n;&t;&t;&t;&t;   an empty queue */
DECL|member|locked
r_int
r_int
id|locked
suffix:semicolon
DECL|member|stats
r_struct
id|net_device_stats
id|stats
suffix:semicolon
DECL|member|dev
r_struct
id|net_device
op_star
id|dev
suffix:semicolon
DECL|member|hard_start_xmit
r_int
(paren
op_star
id|hard_start_xmit
)paren
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|hard_header
r_int
(paren
op_star
id|hard_header
)paren
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|net_device
op_star
id|dev
comma
r_int
r_int
id|type
comma
r_void
op_star
id|daddr
comma
r_void
op_star
id|saddr
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|rebuild_header
r_int
(paren
op_star
id|rebuild_header
)paren
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
DECL|member|hard_header_cache
r_int
(paren
op_star
id|hard_header_cache
)paren
(paren
r_struct
id|neighbour
op_star
id|neigh
comma
r_struct
id|hh_cache
op_star
id|hh
)paren
suffix:semicolon
DECL|member|header_cache_update
r_void
(paren
op_star
id|header_cache_update
)paren
(paren
r_struct
id|hh_cache
op_star
id|hh
comma
r_struct
id|net_device
op_star
id|dev
comma
r_int
r_char
op_star
id|haddr
)paren
suffix:semicolon
DECL|member|get_stats
r_struct
id|net_device_stats
op_star
(paren
op_star
id|get_stats
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|wait_queue
id|wait_queue_head_t
id|wait_queue
suffix:semicolon
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
)brace
suffix:semicolon
macro_line|#endif
DECL|macro|SHAPER_SET_DEV
mdefine_line|#define SHAPER_SET_DEV&t;&t;0x0001
DECL|macro|SHAPER_SET_SPEED
mdefine_line|#define SHAPER_SET_SPEED&t;0x0002
DECL|macro|SHAPER_GET_DEV
mdefine_line|#define SHAPER_GET_DEV&t;&t;0x0003
DECL|macro|SHAPER_GET_SPEED
mdefine_line|#define SHAPER_GET_SPEED&t;0x0004
DECL|struct|shaperconf
r_struct
id|shaperconf
(brace
DECL|member|ss_cmd
id|__u16
id|ss_cmd
suffix:semicolon
r_union
(brace
DECL|member|ssu_name
r_char
id|ssu_name
(braket
l_int|14
)braket
suffix:semicolon
DECL|member|ssu_speed
id|__u32
id|ssu_speed
suffix:semicolon
DECL|member|ss_u
)brace
id|ss_u
suffix:semicolon
DECL|macro|ss_speed
mdefine_line|#define ss_speed ss_u.ssu_speed
DECL|macro|ss_name
mdefine_line|#define ss_name ss_u.ssu_name
)brace
suffix:semicolon
macro_line|#endif
eof
