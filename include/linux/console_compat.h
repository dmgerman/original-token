multiline_comment|/*&n; *  linux/include/linux/console_compat.h -- Abstract console wrapper&n; *&n; *&t;Copyright (C) 1998 Geert Uytterhoeven&n; *&n; *  This file is subject to the terms and conditions of the GNU General Public&n; *  License.  See the file COPYING in the main directory of this archive&n; *  for more details.&n; */
macro_line|#ifndef _LINUX_CONSOLE_COMPAT_H_
DECL|macro|_LINUX_CONSOLE_COMPAT_H_
mdefine_line|#define _LINUX_CONSOLE_COMPAT_H_
DECL|macro|video_num_columns
macro_line|#undef video_num_columns
DECL|macro|video_num_lines
macro_line|#undef video_num_lines
DECL|macro|video_size_row
macro_line|#undef video_size_row
DECL|macro|video_type
macro_line|#undef video_type
DECL|macro|video_mem_base
macro_line|#undef video_mem_base
DECL|macro|video_mem_term
macro_line|#undef video_mem_term
DECL|macro|video_screen_size
macro_line|#undef video_screen_size
DECL|macro|can_do_color
macro_line|#undef can_do_color
DECL|macro|scr_writew
macro_line|#undef scr_writew
DECL|macro|scr_readw
macro_line|#undef scr_readw
DECL|macro|memsetw
macro_line|#undef memsetw
DECL|macro|memcpyw
macro_line|#undef memcpyw
DECL|macro|set_cursor
macro_line|#undef set_cursor
DECL|macro|hide_cursor
macro_line|#undef hide_cursor
DECL|macro|set_get_cmap
macro_line|#undef set_get_cmap
DECL|macro|set_palette
macro_line|#undef set_palette
DECL|macro|set_get_font
macro_line|#undef set_get_font
DECL|macro|set_vesa_blanking
macro_line|#undef set_vesa_blanking
DECL|macro|vesa_blank
macro_line|#undef vesa_blank
DECL|macro|vesa_powerdown
macro_line|#undef vesa_powerdown
DECL|macro|con_adjust_height
macro_line|#undef con_adjust_height
DECL|macro|con_type_init
macro_line|#undef con_type_init
DECL|macro|con_type_init_finish
macro_line|#undef con_type_init_finish
DECL|macro|video_num_columns
mdefine_line|#define video_num_columns&t;compat_video_num_columns
DECL|macro|video_num_lines
mdefine_line|#define video_num_lines&t;&t;compat_video_num_lines
DECL|macro|video_size_row
mdefine_line|#define video_size_row&t;&t;compat_video_size_row
DECL|macro|video_type
mdefine_line|#define video_type&t;&t;compat_video_type
DECL|macro|video_mem_base
mdefine_line|#define video_mem_base&t;&t;compat_video_mem_base
DECL|macro|video_mem_term
mdefine_line|#define video_mem_term&t;&t;compat_video_mem_term
DECL|macro|video_screen_size
mdefine_line|#define video_screen_size&t;compat_video_screen_size
DECL|macro|can_do_color
mdefine_line|#define can_do_color&t;&t;compat_can_do_color
DECL|macro|scr_writew
mdefine_line|#define scr_writew&t;&t;compat_scr_writew
DECL|macro|scr_readw
mdefine_line|#define scr_readw&t;&t;compat_scr_readw
DECL|macro|memsetw
mdefine_line|#define memsetw&t;&t;&t;compat_memsetw
DECL|macro|memcpyw
mdefine_line|#define memcpyw&t;&t;&t;compat_memcpyw
DECL|macro|set_cursor
mdefine_line|#define set_cursor&t;&t;compat_set_cursor
DECL|macro|hide_cursor
mdefine_line|#define hide_cursor&t;&t;compat_hide_cursor
DECL|macro|set_get_cmap
mdefine_line|#define set_get_cmap&t;&t;compat_set_get_cmap
DECL|macro|set_palette
mdefine_line|#define set_palette&t;&t;compat_set_palette
DECL|macro|set_get_font
mdefine_line|#define set_get_font&t;&t;compat_set_get_font
DECL|macro|set_vesa_blanking
mdefine_line|#define set_vesa_blanking&t;compat_set_vesa_blanking
DECL|macro|vesa_blank
mdefine_line|#define vesa_blank&t;&t;compat_vesa_blank
DECL|macro|vesa_powerdown
mdefine_line|#define vesa_powerdown&t;&t;compat_vesa_powerdown
DECL|macro|con_adjust_height
mdefine_line|#define con_adjust_height&t;compat_con_adjust_height
DECL|macro|con_type_init
mdefine_line|#define con_type_init&t;&t;compat_con_type_init
DECL|macro|con_type_init_finish
mdefine_line|#define con_type_init_finish&t;compat_con_type_init_finish
r_extern
r_int
r_int
id|compat_video_num_columns
suffix:semicolon
r_extern
r_int
r_int
id|compat_video_num_lines
suffix:semicolon
r_extern
r_int
r_int
id|compat_video_size_row
suffix:semicolon
r_extern
r_int
r_char
id|compat_video_type
suffix:semicolon
r_extern
r_int
r_int
id|compat_video_mem_base
suffix:semicolon
r_extern
r_int
r_int
id|compat_video_mem_term
suffix:semicolon
r_extern
r_int
r_int
id|compat_video_screen_size
suffix:semicolon
r_extern
r_int
id|compat_can_do_color
suffix:semicolon
r_extern
r_void
id|compat_set_cursor
c_func
(paren
r_int
id|currcons
)paren
suffix:semicolon
r_extern
r_void
id|compat_hide_cursor
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|compat_set_get_cmap
c_func
(paren
r_int
r_char
op_star
id|arg
comma
r_int
id|set
)paren
suffix:semicolon
r_extern
r_void
id|compat_set_palette
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|compat_set_get_font
c_func
(paren
r_int
r_char
op_star
id|arg
comma
r_int
id|set
comma
r_int
id|ch512
)paren
suffix:semicolon
r_extern
r_void
id|compat_set_vesa_blanking
c_func
(paren
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_void
id|compat_vesa_blank
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|compat_vesa_powerdown
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|compat_con_adjust_height
c_func
(paren
r_int
r_int
id|fontheight
)paren
suffix:semicolon
r_extern
r_void
id|compat_con_type_init
c_func
(paren
r_const
r_char
op_star
op_star
)paren
suffix:semicolon
r_extern
r_void
id|compat_con_type_init_finish
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#if defined(CONFIG_SUN_CONSOLE)
DECL|variable|memsetw
r_void
(paren
op_star
id|memsetw
)paren
(paren
r_void
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
DECL|variable|memcpyw
r_void
(paren
op_star
id|memcpyw
)paren
(paren
r_int
r_int
op_star
comma
r_int
r_int
op_star
comma
r_int
r_int
)paren
suffix:semicolon
DECL|variable|scr_writew
r_void
(paren
op_star
id|scr_writew
)paren
(paren
r_int
r_int
comma
r_int
r_int
op_star
)paren
suffix:semicolon
DECL|variable|scr_readw
r_int
r_int
(paren
op_star
id|scr_readw
)paren
(paren
r_int
r_int
op_star
)paren
suffix:semicolon
DECL|variable|get_scrmem
r_void
(paren
op_star
id|get_scrmem
)paren
(paren
r_int
)paren
suffix:semicolon
DECL|variable|set_scrmem
r_void
(paren
op_star
id|set_scrmem
)paren
(paren
r_int
comma
r_int
)paren
suffix:semicolon
DECL|variable|set_origin
r_void
(paren
op_star
id|set_origin
)paren
(paren
r_int
r_int
)paren
suffix:semicolon
DECL|variable|hide_cursor
r_void
(paren
op_star
id|hide_cursor
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|variable|set_cursor
r_void
(paren
op_star
id|set_cursor
)paren
(paren
r_int
)paren
suffix:semicolon
DECL|variable|set_get_font
r_int
(paren
op_star
id|set_get_font
)paren
(paren
r_char
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
DECL|variable|con_adjust_height
r_int
(paren
op_star
id|con_adjust_height
)paren
(paren
r_int
r_int
)paren
suffix:semicolon
DECL|variable|set_get_cmap
r_int
(paren
op_star
id|set_get_cmap
)paren
(paren
r_int
r_char
op_star
comma
r_int
)paren
suffix:semicolon
DECL|variable|set_palette
r_void
(paren
op_star
id|set_palette
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|variable|set_other_palette
r_void
(paren
op_star
id|set_other_palette
)paren
(paren
r_int
)paren
suffix:semicolon
DECL|variable|console_restore_palette
r_void
(paren
op_star
id|console_restore_palette
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|variable|con_type_init
r_void
(paren
op_star
id|con_type_init
)paren
(paren
r_const
r_char
op_star
op_star
)paren
suffix:semicolon
DECL|variable|con_type_init_finish
r_void
(paren
op_star
id|con_type_init_finish
)paren
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* VESA powerdown methods */
DECL|variable|vesa_blank
r_void
(paren
op_star
id|vesa_blank
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|variable|vesa_unblank
r_void
(paren
op_star
id|vesa_unblank
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|variable|set_vesa_blanking
r_void
(paren
op_star
id|set_vesa_blanking
)paren
(paren
r_const
r_int
r_int
)paren
suffix:semicolon
DECL|variable|vesa_powerdown
r_void
(paren
op_star
id|vesa_powerdown
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|variable|clear_screen
r_void
(paren
op_star
id|clear_screen
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|variable|render_screen
r_void
(paren
op_star
id|render_screen
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|variable|clear_margin
r_void
(paren
op_star
id|clear_margin
)paren
(paren
r_void
)paren
suffix:semicolon
)brace
suffix:semicolon
mdefine_line|#define compat_memsetw(s,c,count)&t;suncons_ops.memsetw((s),(c),(count))
mdefine_line|#define compat_memcpyw(to,from,count)&t;suncons_ops.memcpyw((to),(from),(count))
mdefine_line|#define compat_scr_writew(val,addr)&t;suncons_ops.scr_writew((val),(addr))
mdefine_line|#define compat_scr_readw(addr)&t;&t;suncons_ops.scr_readw((addr))
macro_line|#elif defined(CONFIG_PMAC_CONSOLE)
r_extern
r_void
id|pmac_blitc
c_func
(paren
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|compat_memsetw
c_func
(paren
r_int
r_int
op_star
id|p
comma
r_int
r_int
id|c
comma
r_int
id|count
)paren
suffix:semicolon
r_extern
r_void
id|compat_memcpyw
c_func
(paren
r_int
r_int
op_star
id|to
comma
r_int
r_int
op_star
id|from
comma
r_int
id|count
)paren
suffix:semicolon
r_static
r_inline
r_void
id|compat_scr_writew
c_func
(paren
r_int
r_int
id|val
comma
r_int
r_int
op_star
id|addr
)paren
(brace
r_if
c_cond
(paren
(paren
r_int
r_int
)paren
id|addr
OL
id|video_mem_term
op_logical_and
(paren
r_int
r_int
)paren
id|addr
op_ge
id|video_mem_base
)paren
(brace
r_if
c_cond
(paren
op_star
id|addr
op_ne
id|val
)paren
(brace
op_star
id|addr
op_assign
id|val
suffix:semicolon
id|pmac_blitc
c_func
(paren
id|val
comma
(paren
r_int
r_int
)paren
id|addr
)paren
suffix:semicolon
)brace
)brace
r_else
op_star
id|addr
op_assign
id|val
suffix:semicolon
)brace
r_static
r_inline
r_int
r_int
id|compat_scr_readw
c_func
(paren
r_int
r_int
op_star
id|addr
)paren
(brace
r_return
op_star
id|addr
suffix:semicolon
)brace
macro_line|#endif
macro_line|#if !defined(CONFIG_SUN_CONSOLE) &amp;&amp; !defined(CONFIG_PMAC_CONSOLE)
r_static
r_inline
r_void
id|compat_memsetw
c_func
(paren
r_void
op_star
id|s
comma
r_int
r_int
id|c
comma
r_int
r_int
id|count
)paren
(brace
r_int
r_int
op_star
id|addr
op_assign
(paren
r_int
r_int
op_star
)paren
id|s
suffix:semicolon
id|count
op_div_assign
l_int|2
suffix:semicolon
r_while
c_loop
(paren
id|count
)paren
(brace
id|count
op_decrement
suffix:semicolon
id|scr_writew
c_func
(paren
id|c
comma
id|addr
op_increment
)paren
suffix:semicolon
)brace
)brace
r_static
r_inline
r_void
id|compat_memcpyw
c_func
(paren
r_int
r_int
op_star
id|to
comma
r_int
r_int
op_star
id|from
comma
r_int
r_int
id|count
)paren
(brace
id|count
op_div_assign
l_int|2
suffix:semicolon
r_while
c_loop
(paren
id|count
)paren
(brace
id|count
op_decrement
suffix:semicolon
id|scr_writew
c_func
(paren
id|scr_readw
c_func
(paren
id|from
op_increment
)paren
comma
id|to
op_increment
)paren
suffix:semicolon
)brace
)brace
macro_line|#endif
macro_line|#endif /* _LINUX_CONSOLE_COMPAT_H_ */
eof
