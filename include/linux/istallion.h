multiline_comment|/*****************************************************************************/
multiline_comment|/*&n; *&t;istallion.h  -- stallion intelligent multiport serial driver.&n; *&n; *&t;Copyright (C) 1996-1998  Stallion Technologies (support@stallion.oz.au).&n; *&t;Copyright (C) 1994-1996  Greg Ungerer.&n; *&n; *&t;This program is free software; you can redistribute it and/or modify&n; *&t;it under the terms of the GNU General Public License as published by&n; *&t;the Free Software Foundation; either version 2 of the License, or&n; *&t;(at your option) any later version.&n; *&n; *&t;This program is distributed in the hope that it will be useful,&n; *&t;but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *&t;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *&t;GNU General Public License for more details.&n; *&n; *&t;You should have received a copy of the GNU General Public License&n; *&t;along with this program; if not, write to the Free Software&n; *&t;Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; */
multiline_comment|/*****************************************************************************/
macro_line|#ifndef&t;_ISTALLION_H
DECL|macro|_ISTALLION_H
mdefine_line|#define&t;_ISTALLION_H
multiline_comment|/*****************************************************************************/
multiline_comment|/*&n; *&t;Define important driver constants here.&n; */
DECL|macro|STL_MAXBRDS
mdefine_line|#define&t;STL_MAXBRDS&t;&t;4
DECL|macro|STL_MAXPANELS
mdefine_line|#define&t;STL_MAXPANELS&t;&t;4
DECL|macro|STL_MAXPORTS
mdefine_line|#define&t;STL_MAXPORTS&t;&t;64
DECL|macro|STL_MAXCHANS
mdefine_line|#define&t;STL_MAXCHANS&t;&t;(STL_MAXPORTS + 1)
DECL|macro|STL_MAXDEVS
mdefine_line|#define&t;STL_MAXDEVS&t;&t;(STL_MAXBRDS * STL_MAXPORTS)
multiline_comment|/*&n; *&t;Define a set of structures to hold all the board/panel/port info&n; *&t;for our ports. These will be dynamically allocated as required at&n; *&t;driver initialization time.&n; */
multiline_comment|/*&n; *&t;Port and board structures to hold status info about each object.&n; *&t;The board structure contains pointers to structures for each port&n; *&t;connected to it. Panels are not distinguished here, since&n; *&t;communication with the slave board will always be on a per port&n; *&t;basis.&n; */
r_typedef
r_struct
(brace
DECL|member|magic
r_int
r_int
id|magic
suffix:semicolon
DECL|member|portnr
r_int
id|portnr
suffix:semicolon
DECL|member|panelnr
r_int
id|panelnr
suffix:semicolon
DECL|member|brdnr
r_int
id|brdnr
suffix:semicolon
DECL|member|state
r_int
r_int
id|state
suffix:semicolon
DECL|member|devnr
r_int
id|devnr
suffix:semicolon
DECL|member|flags
r_int
id|flags
suffix:semicolon
DECL|member|baud_base
r_int
id|baud_base
suffix:semicolon
DECL|member|custom_divisor
r_int
id|custom_divisor
suffix:semicolon
DECL|member|close_delay
r_int
id|close_delay
suffix:semicolon
DECL|member|closing_wait
r_int
id|closing_wait
suffix:semicolon
DECL|member|refcount
r_int
id|refcount
suffix:semicolon
DECL|member|openwaitcnt
r_int
id|openwaitcnt
suffix:semicolon
DECL|member|rc
r_int
id|rc
suffix:semicolon
DECL|member|argsize
r_int
id|argsize
suffix:semicolon
DECL|member|argp
r_void
op_star
id|argp
suffix:semicolon
DECL|member|session
r_int
id|session
suffix:semicolon
DECL|member|pgrp
r_int
id|pgrp
suffix:semicolon
DECL|member|rxmarkmsk
r_int
r_int
id|rxmarkmsk
suffix:semicolon
DECL|member|tty
r_struct
id|tty_struct
op_star
id|tty
suffix:semicolon
macro_line|#if (LINUX_VERSION_CODE &lt; KERNEL_VERSION(2,3,0))
DECL|member|open_wait
r_struct
id|wait_queue
op_star
id|open_wait
suffix:semicolon
DECL|member|close_wait
r_struct
id|wait_queue
op_star
id|close_wait
suffix:semicolon
DECL|member|raw_wait
r_struct
id|wait_queue
op_star
id|raw_wait
suffix:semicolon
macro_line|#else
DECL|member|open_wait
id|wait_queue_head_t
id|open_wait
suffix:semicolon
DECL|member|close_wait
id|wait_queue_head_t
id|close_wait
suffix:semicolon
DECL|member|raw_wait
id|wait_queue_head_t
id|raw_wait
suffix:semicolon
macro_line|#endif
DECL|member|tqhangup
r_struct
id|tq_struct
id|tqhangup
suffix:semicolon
DECL|member|normaltermios
r_struct
id|termios
id|normaltermios
suffix:semicolon
DECL|member|callouttermios
r_struct
id|termios
id|callouttermios
suffix:semicolon
DECL|member|asig
id|asysigs_t
id|asig
suffix:semicolon
DECL|member|addr
r_int
r_int
id|addr
suffix:semicolon
DECL|member|rxoffset
r_int
r_int
id|rxoffset
suffix:semicolon
DECL|member|txoffset
r_int
r_int
id|txoffset
suffix:semicolon
DECL|member|sigs
r_int
r_int
id|sigs
suffix:semicolon
DECL|member|pflag
r_int
r_int
id|pflag
suffix:semicolon
DECL|member|rxsize
r_int
r_int
id|rxsize
suffix:semicolon
DECL|member|txsize
r_int
r_int
id|txsize
suffix:semicolon
DECL|member|reqbit
r_int
r_char
id|reqbit
suffix:semicolon
DECL|member|portidx
r_int
r_char
id|portidx
suffix:semicolon
DECL|member|portbit
r_int
r_char
id|portbit
suffix:semicolon
DECL|typedef|stliport_t
)brace
id|stliport_t
suffix:semicolon
multiline_comment|/*&n; *&t;Use a structure of function pointers to do board level operations.&n; *&t;These include, enable/disable, paging shared memory, interrupting, etc.&n; */
DECL|struct|stlibrd
r_typedef
r_struct
id|stlibrd
(brace
DECL|member|magic
r_int
r_int
id|magic
suffix:semicolon
DECL|member|brdnr
r_int
id|brdnr
suffix:semicolon
DECL|member|brdtype
r_int
id|brdtype
suffix:semicolon
DECL|member|state
r_int
id|state
suffix:semicolon
DECL|member|nrpanels
r_int
id|nrpanels
suffix:semicolon
DECL|member|nrports
r_int
id|nrports
suffix:semicolon
DECL|member|nrdevs
r_int
id|nrdevs
suffix:semicolon
DECL|member|iobase
r_int
r_int
id|iobase
suffix:semicolon
DECL|member|iosize
r_int
id|iosize
suffix:semicolon
DECL|member|memaddr
r_int
r_int
id|memaddr
suffix:semicolon
DECL|member|membase
r_void
op_star
id|membase
suffix:semicolon
DECL|member|memsize
r_int
id|memsize
suffix:semicolon
DECL|member|pagesize
r_int
id|pagesize
suffix:semicolon
DECL|member|hostoffset
r_int
id|hostoffset
suffix:semicolon
DECL|member|slaveoffset
r_int
id|slaveoffset
suffix:semicolon
DECL|member|bitsize
r_int
id|bitsize
suffix:semicolon
DECL|member|enabval
r_int
id|enabval
suffix:semicolon
DECL|member|panels
r_int
id|panels
(braket
id|STL_MAXPANELS
)braket
suffix:semicolon
DECL|member|panelids
r_int
id|panelids
(braket
id|STL_MAXPANELS
)braket
suffix:semicolon
DECL|member|init
r_void
(paren
op_star
id|init
)paren
(paren
r_struct
id|stlibrd
op_star
id|brdp
)paren
suffix:semicolon
DECL|member|enable
r_void
(paren
op_star
id|enable
)paren
(paren
r_struct
id|stlibrd
op_star
id|brdp
)paren
suffix:semicolon
DECL|member|reenable
r_void
(paren
op_star
id|reenable
)paren
(paren
r_struct
id|stlibrd
op_star
id|brdp
)paren
suffix:semicolon
DECL|member|disable
r_void
(paren
op_star
id|disable
)paren
(paren
r_struct
id|stlibrd
op_star
id|brdp
)paren
suffix:semicolon
DECL|member|getmemptr
r_char
op_star
(paren
op_star
id|getmemptr
)paren
(paren
r_struct
id|stlibrd
op_star
id|brdp
comma
r_int
r_int
id|offset
comma
r_int
id|line
)paren
suffix:semicolon
DECL|member|intr
r_void
(paren
op_star
id|intr
)paren
(paren
r_struct
id|stlibrd
op_star
id|brdp
)paren
suffix:semicolon
DECL|member|reset
r_void
(paren
op_star
id|reset
)paren
(paren
r_struct
id|stlibrd
op_star
id|brdp
)paren
suffix:semicolon
DECL|member|ports
id|stliport_t
op_star
id|ports
(braket
id|STL_MAXPORTS
)braket
suffix:semicolon
DECL|typedef|stlibrd_t
)brace
id|stlibrd_t
suffix:semicolon
multiline_comment|/*&n; *&t;Define MAGIC numbers used for above structures.&n; */
DECL|macro|STLI_PORTMAGIC
mdefine_line|#define&t;STLI_PORTMAGIC&t;0xe671c7a1
DECL|macro|STLI_BOARDMAGIC
mdefine_line|#define&t;STLI_BOARDMAGIC&t;0x4bc6c825
multiline_comment|/*****************************************************************************/
macro_line|#endif
eof
