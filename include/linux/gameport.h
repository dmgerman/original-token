macro_line|#ifndef _GAMEPORT_H
DECL|macro|_GAMEPORT_H
mdefine_line|#define _GAMEPORT_H
multiline_comment|/*&n; * $Id: gameport.h,v 1.8 2000/06/03 20:18:52 vojtech Exp $&n; *&n; *  Copyright (c) 1999-2000 Vojtech Pavlik&n; *&n; *  Sponsored by SuSE&n; */
multiline_comment|/*&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2 of the License, or &n; * (at your option) any later version.&n; * &n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; * &n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA&n; * &n; * Should you need to contact me, the author, you can do so either by&n; * e-mail - mail your message to &lt;vojtech@ucw.cz&gt;, or by paper mail:&n; * Vojtech Pavlik, Ucitelska 1576, Prague 8, 182 00 Czech Republic&n; */
macro_line|#include &lt;linux/sched.h&gt;
macro_line|#include &lt;asm/io.h&gt;
r_struct
id|gameport
suffix:semicolon
DECL|struct|gameport
r_struct
id|gameport
(brace
DECL|member|private
r_void
op_star
r_private
suffix:semicolon
DECL|member|driver
r_void
op_star
id|driver
suffix:semicolon
DECL|member|number
r_int
id|number
suffix:semicolon
DECL|member|io
r_int
id|io
suffix:semicolon
DECL|member|size
r_int
id|size
suffix:semicolon
DECL|member|speed
r_int
id|speed
suffix:semicolon
DECL|member|fuzz
r_int
id|fuzz
suffix:semicolon
DECL|member|type
r_int
id|type
suffix:semicolon
DECL|member|pci
r_struct
id|pci_dev
op_star
id|pci
suffix:semicolon
DECL|member|trigger
r_void
(paren
op_star
id|trigger
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|read
r_int
r_char
(paren
op_star
id|read
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|cooked_read
r_int
(paren
op_star
id|cooked_read
)paren
(paren
r_struct
id|gameport
op_star
comma
r_int
op_star
comma
r_int
op_star
)paren
suffix:semicolon
DECL|member|calibrate
r_int
(paren
op_star
id|calibrate
)paren
(paren
r_struct
id|gameport
op_star
comma
r_int
op_star
comma
r_int
op_star
)paren
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_struct
id|gameport
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|dev
r_struct
id|gameport_dev
op_star
id|dev
suffix:semicolon
DECL|member|next
r_struct
id|gameport
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|gameport_dev
r_struct
id|gameport_dev
(brace
DECL|member|private
r_void
op_star
r_private
suffix:semicolon
DECL|member|connect
r_void
(paren
op_star
id|connect
)paren
(paren
r_struct
id|gameport
op_star
comma
r_struct
id|gameport_dev
op_star
id|dev
)paren
suffix:semicolon
DECL|member|disconnect
r_void
(paren
op_star
id|disconnect
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|next
r_struct
id|gameport_dev
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
r_int
id|gameport_open
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_struct
id|gameport_dev
op_star
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
r_void
id|gameport_close
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
suffix:semicolon
r_void
id|gameport_rescan
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
suffix:semicolon
r_void
id|gameport_register_port
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
suffix:semicolon
r_void
id|gameport_unregister_port
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
suffix:semicolon
r_void
id|gameport_register_device
c_func
(paren
r_struct
id|gameport_dev
op_star
id|dev
)paren
suffix:semicolon
r_void
id|gameport_unregister_device
c_func
(paren
r_struct
id|gameport_dev
op_star
id|dev
)paren
suffix:semicolon
DECL|macro|GAMEPORT_MODE_DISABLED
mdefine_line|#define GAMEPORT_MODE_DISABLED&t;&t;0
DECL|macro|GAMEPORT_MODE_RAW
mdefine_line|#define GAMEPORT_MODE_RAW&t;&t;1
DECL|macro|GAMEPORT_MODE_COOKED
mdefine_line|#define GAMEPORT_MODE_COOKED&t;&t;2
DECL|macro|GAMEPORT_ISA
mdefine_line|#define GAMEPORT_ISA       0
DECL|macro|GAMEPORT_PNP
mdefine_line|#define GAMEPORT_PNP       1
DECL|macro|GAMEPORT_EXT
mdefine_line|#define GAMEPORT_EXT       2
DECL|macro|GAMEPORT_ID_VENDOR_ANALOG
mdefine_line|#define GAMEPORT_ID_VENDOR_ANALOG&t;0x0001
DECL|macro|GAMEPORT_ID_VENDOR_MADCATZ
mdefine_line|#define GAMEPORT_ID_VENDOR_MADCATZ&t;0x0002
DECL|macro|GAMEPORT_ID_VENDOR_LOGITECH
mdefine_line|#define GAMEPORT_ID_VENDOR_LOGITECH&t;0x0003
DECL|macro|GAMEPORT_ID_VENDOR_CREATIVE
mdefine_line|#define GAMEPORT_ID_VENDOR_CREATIVE&t;0x0004
DECL|macro|GAMEPORT_ID_VENDOR_GENIUS
mdefine_line|#define GAMEPORT_ID_VENDOR_GENIUS&t;0x0005
DECL|macro|GAMEPORT_ID_VENDOR_INTERACT
mdefine_line|#define GAMEPORT_ID_VENDOR_INTERACT&t;0x0006
DECL|macro|GAMEPORT_ID_VENDOR_MICROSOFT
mdefine_line|#define GAMEPORT_ID_VENDOR_MICROSOFT&t;0x0007
DECL|macro|GAMEPORT_ID_VENDOR_THRUSTMASTER
mdefine_line|#define GAMEPORT_ID_VENDOR_THRUSTMASTER&t;0x0008
DECL|macro|GAMEPORT_ID_VENDOR_GRAVIS
mdefine_line|#define GAMEPORT_ID_VENDOR_GRAVIS&t;0x0009
DECL|function|gameport_trigger
r_static
id|__inline__
r_void
id|gameport_trigger
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
r_if
c_cond
(paren
id|gameport-&gt;trigger
)paren
id|gameport
op_member_access_from_pointer
id|trigger
c_func
(paren
id|gameport
)paren
suffix:semicolon
r_else
id|outb
c_func
(paren
l_int|0xff
comma
id|gameport-&gt;io
)paren
suffix:semicolon
)brace
DECL|function|gameport_read
r_static
id|__inline__
r_int
r_char
id|gameport_read
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
r_if
c_cond
(paren
id|gameport-&gt;read
)paren
r_return
id|gameport
op_member_access_from_pointer
id|read
c_func
(paren
id|gameport
)paren
suffix:semicolon
r_else
r_return
id|inb
c_func
(paren
id|gameport-&gt;io
)paren
suffix:semicolon
)brace
DECL|function|gameport_cooked_read
r_static
id|__inline__
r_int
id|gameport_cooked_read
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_int
op_star
id|axes
comma
r_int
op_star
id|buttons
)paren
(brace
r_if
c_cond
(paren
id|gameport-&gt;cooked_read
)paren
r_return
id|gameport
op_member_access_from_pointer
id|cooked_read
c_func
(paren
id|gameport
comma
id|axes
comma
id|buttons
)paren
suffix:semicolon
r_else
r_return
op_minus
l_int|1
suffix:semicolon
)brace
DECL|function|gameport_calibrate
r_static
id|__inline__
r_int
id|gameport_calibrate
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_int
op_star
id|axes
comma
r_int
op_star
id|max
)paren
(brace
r_if
c_cond
(paren
id|gameport-&gt;calibrate
)paren
r_return
id|gameport
op_member_access_from_pointer
id|calibrate
c_func
(paren
id|gameport
comma
id|axes
comma
id|max
)paren
suffix:semicolon
r_else
r_return
op_minus
l_int|1
suffix:semicolon
)brace
DECL|function|gameport_time
r_static
id|__inline__
r_int
id|gameport_time
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_int
id|time
)paren
(brace
r_return
(paren
id|time
op_star
id|gameport-&gt;speed
)paren
op_div
l_int|1000
suffix:semicolon
)brace
DECL|function|wait_ms
r_static
id|__inline__
r_void
id|wait_ms
c_func
(paren
r_int
r_int
id|ms
)paren
(brace
id|current-&gt;state
op_assign
id|TASK_UNINTERRUPTIBLE
suffix:semicolon
id|schedule_timeout
c_func
(paren
l_int|1
op_plus
id|ms
op_star
id|HZ
op_div
l_int|1000
)paren
suffix:semicolon
)brace
macro_line|#endif
eof
