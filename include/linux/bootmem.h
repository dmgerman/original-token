multiline_comment|/*&n; * Discontiguous memory support, Kanoj Sarcar, SGI, Nov 1999&n; */
macro_line|#ifndef _LINUX_BOOTMEM_H
DECL|macro|_LINUX_BOOTMEM_H
mdefine_line|#define _LINUX_BOOTMEM_H
macro_line|#include &lt;asm/pgtable.h&gt;
macro_line|#include &lt;asm/dma.h&gt;
macro_line|#include &lt;linux/cache.h&gt;
macro_line|#include &lt;linux/init.h&gt;
macro_line|#include &lt;linux/mmzone.h&gt;
multiline_comment|/*&n; *  simple boot-time physical memory area allocator.&n; */
r_extern
r_int
r_int
id|max_low_pfn
suffix:semicolon
r_extern
r_int
r_int
id|min_low_pfn
suffix:semicolon
multiline_comment|/*&n; * node_bootmem_map is a map pointer - the bits represent all physical &n; * memory pages (including holes) on the node.&n; */
DECL|struct|bootmem_data
r_typedef
r_struct
id|bootmem_data
(brace
DECL|member|node_boot_start
r_int
r_int
id|node_boot_start
suffix:semicolon
DECL|member|node_low_pfn
r_int
r_int
id|node_low_pfn
suffix:semicolon
DECL|member|node_bootmem_map
r_void
op_star
id|node_bootmem_map
suffix:semicolon
DECL|member|last_offset
r_int
r_int
id|last_offset
suffix:semicolon
DECL|member|last_pos
r_int
r_int
id|last_pos
suffix:semicolon
DECL|typedef|bootmem_data_t
)brace
id|bootmem_data_t
suffix:semicolon
r_extern
r_int
r_int
id|__init
id|bootmem_bootmap_pages
(paren
r_int
r_int
)paren
suffix:semicolon
r_extern
r_int
r_int
id|__init
id|init_bootmem
(paren
r_int
r_int
id|addr
comma
r_int
r_int
id|memend
)paren
suffix:semicolon
r_extern
r_void
id|__init
id|reserve_bootmem
(paren
r_int
r_int
id|addr
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_void
id|__init
id|free_bootmem
(paren
r_int
r_int
id|addr
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_void
op_star
id|__init
id|__alloc_bootmem
(paren
r_int
r_int
id|size
comma
r_int
r_int
id|align
comma
r_int
r_int
id|goal
)paren
suffix:semicolon
DECL|macro|alloc_bootmem
mdefine_line|#define alloc_bootmem(x) &bslash;&n;&t;__alloc_bootmem((x), SMP_CACHE_BYTES, __pa(MAX_DMA_ADDRESS))
DECL|macro|alloc_bootmem_low
mdefine_line|#define alloc_bootmem_low(x) &bslash;&n;&t;__alloc_bootmem((x), SMP_CACHE_BYTES, 0)
DECL|macro|alloc_bootmem_pages
mdefine_line|#define alloc_bootmem_pages(x) &bslash;&n;&t;__alloc_bootmem((x), PAGE_SIZE, __pa(MAX_DMA_ADDRESS))
DECL|macro|alloc_bootmem_low_pages
mdefine_line|#define alloc_bootmem_low_pages(x) &bslash;&n;&t;__alloc_bootmem((x), PAGE_SIZE, 0)
r_extern
r_int
r_int
id|__init
id|free_all_bootmem
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
r_int
id|__init
id|init_bootmem_node
(paren
id|pg_data_t
op_star
id|pgdat
comma
r_int
r_int
id|freepfn
comma
r_int
r_int
id|startpfn
comma
r_int
r_int
id|endpfn
)paren
suffix:semicolon
r_extern
r_void
id|__init
id|reserve_bootmem_node
(paren
id|pg_data_t
op_star
id|pgdat
comma
r_int
r_int
id|physaddr
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_void
id|__init
id|free_bootmem_node
(paren
id|pg_data_t
op_star
id|pgdat
comma
r_int
r_int
id|addr
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_int
r_int
id|__init
id|free_all_bootmem_node
(paren
id|pg_data_t
op_star
id|pgdat
)paren
suffix:semicolon
r_extern
r_void
op_star
id|__init
id|__alloc_bootmem_node
(paren
id|pg_data_t
op_star
id|pgdat
comma
r_int
r_int
id|size
comma
r_int
r_int
id|align
comma
r_int
r_int
id|goal
)paren
suffix:semicolon
DECL|macro|alloc_bootmem_node
mdefine_line|#define alloc_bootmem_node(pgdat, x) &bslash;&n;&t;__alloc_bootmem_node((pgdat), (x), SMP_CACHE_BYTES, __pa(MAX_DMA_ADDRESS))
DECL|macro|alloc_bootmem_pages_node
mdefine_line|#define alloc_bootmem_pages_node(pgdat, x) &bslash;&n;&t;__alloc_bootmem_node((pgdat), (x), PAGE_SIZE, __pa(MAX_DMA_ADDRESS))
DECL|macro|alloc_bootmem_low_pages_node
mdefine_line|#define alloc_bootmem_low_pages_node(pgdat, x) &bslash;&n;&t;__alloc_bootmem_node((pgdat), (x), PAGE_SIZE, 0)
macro_line|#endif /* _LINUX_BOOTMEM_H */
eof
