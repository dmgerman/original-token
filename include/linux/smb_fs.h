multiline_comment|/*&n; *  smb_fs.h&n; *&n; *  Copyright (C) 1995 by Paal-Kr. Engstad and Volker Lendecke&n; *  Copyright (C) 1997 by Volker Lendecke&n; *&n; */
macro_line|#ifndef _LINUX_SMB_FS_H
DECL|macro|_LINUX_SMB_FS_H
mdefine_line|#define _LINUX_SMB_FS_H
macro_line|#include &lt;linux/smb.h&gt;
multiline_comment|/*&n; * ioctl commands&n; */
DECL|macro|SMB_IOC_GETMOUNTUID
mdefine_line|#define&t;SMB_IOC_GETMOUNTUID&t;&t;_IOR(&squot;u&squot;, 1, __kernel_old_uid_t)
DECL|macro|SMB_IOC_NEWCONN
mdefine_line|#define SMB_IOC_NEWCONN                 _IOW(&squot;u&squot;, 2, struct smb_conn_opt)
multiline_comment|/* __kernel_uid_t can never change, so we have to use __kernel_uid32_t */
DECL|macro|SMB_IOC_GETMOUNTUID32
mdefine_line|#define&t;SMB_IOC_GETMOUNTUID32&t;&t;_IOR(&squot;u&squot;, 3, __kernel_uid32_t)
macro_line|#ifdef __KERNEL__
macro_line|#include &lt;asm/unaligned.h&gt;
DECL|macro|WVAL
mdefine_line|#define WVAL(buf,pos) &bslash;&n;(le16_to_cpu(get_unaligned((__u16 *)((__u8 *)(buf) + (pos)))))
DECL|macro|DVAL
mdefine_line|#define DVAL(buf,pos) &bslash;&n;(le32_to_cpu(get_unaligned((__u32 *)((__u8 *)(buf) + (pos)))))
DECL|macro|WSET
mdefine_line|#define WSET(buf,pos,val) &bslash;&n;put_unaligned(cpu_to_le16((__u16)(val)), (__u16 *)((__u8 *)(buf) + (pos)))
DECL|macro|DSET
mdefine_line|#define DSET(buf,pos,val) &bslash;&n;put_unaligned(cpu_to_le32((__u32)(val)), (__u32 *)((__u8 *)(buf) + (pos)))
multiline_comment|/* where to find the base of the SMB packet proper */
DECL|macro|smb_base
mdefine_line|#define smb_base(buf) ((__u8 *)(((__u8 *)(buf))+4))
macro_line|#include &lt;linux/vmalloc.h&gt;
macro_line|#ifdef DEBUG_SMB_MALLOC
r_extern
r_int
id|smb_malloced
suffix:semicolon
r_extern
r_int
id|smb_current_vmalloced
suffix:semicolon
r_static
r_inline
r_void
op_star
DECL|function|smb_vmalloc
id|smb_vmalloc
c_func
(paren
r_int
r_int
id|size
)paren
(brace
id|smb_malloced
op_add_assign
l_int|1
suffix:semicolon
id|smb_current_vmalloced
op_add_assign
l_int|1
suffix:semicolon
r_return
id|vmalloc
c_func
(paren
id|size
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|smb_vfree
id|smb_vfree
c_func
(paren
r_void
op_star
id|obj
)paren
(brace
id|smb_current_vmalloced
op_sub_assign
l_int|1
suffix:semicolon
id|vfree
c_func
(paren
id|obj
)paren
suffix:semicolon
)brace
macro_line|#else /* DEBUG_SMB_MALLOC */
DECL|macro|smb_kmalloc
mdefine_line|#define smb_kmalloc(s,p) kmalloc(s,p)
DECL|macro|smb_kfree_s
mdefine_line|#define smb_kfree_s(o,s) kfree(o)
DECL|macro|smb_vmalloc
mdefine_line|#define smb_vmalloc(s)   vmalloc(s)
DECL|macro|smb_vfree
mdefine_line|#define smb_vfree(o)     vfree(o)
macro_line|#endif /* DEBUG_SMB_MALLOC */
multiline_comment|/*&n; * Flags for the in-memory inode&n; */
DECL|macro|SMB_F_CACHEVALID
mdefine_line|#define SMB_F_CACHEVALID&t;0x01&t;/* directory cache valid */
DECL|macro|SMB_F_LOCALWRITE
mdefine_line|#define SMB_F_LOCALWRITE&t;0x02&t;/* file modified locally */
multiline_comment|/* NT1 protocol capability bits */
DECL|macro|SMB_CAP_RAW_MODE
mdefine_line|#define SMB_CAP_RAW_MODE         0x0001
DECL|macro|SMB_CAP_MPX_MODE
mdefine_line|#define SMB_CAP_MPX_MODE         0x0002
DECL|macro|SMB_CAP_UNICODE
mdefine_line|#define SMB_CAP_UNICODE          0x0004
DECL|macro|SMB_CAP_LARGE_FILES
mdefine_line|#define SMB_CAP_LARGE_FILES      0x0008
DECL|macro|SMB_CAP_NT_SMBS
mdefine_line|#define SMB_CAP_NT_SMBS          0x0010
DECL|macro|SMB_CAP_RPC_REMOTE_APIS
mdefine_line|#define SMB_CAP_RPC_REMOTE_APIS  0x0020
DECL|macro|SMB_CAP_STATUS32
mdefine_line|#define SMB_CAP_STATUS32         0x0040
DECL|macro|SMB_CAP_LEVEL_II_OPLOCKS
mdefine_line|#define SMB_CAP_LEVEL_II_OPLOCKS 0x0080
DECL|macro|SMB_CAP_LOCK_AND_READ
mdefine_line|#define SMB_CAP_LOCK_AND_READ    0x0100
DECL|macro|SMB_CAP_NT_FIND
mdefine_line|#define SMB_CAP_NT_FIND          0x0200
DECL|macro|SMB_CAP_DFS
mdefine_line|#define SMB_CAP_DFS              0x1000
DECL|macro|SMB_CAP_LARGE_READX
mdefine_line|#define SMB_CAP_LARGE_READX      0x4000
multiline_comment|/* linux/fs/smbfs/mmap.c */
r_int
id|smb_mmap
c_func
(paren
r_struct
id|file
op_star
comma
r_struct
id|vm_area_struct
op_star
)paren
suffix:semicolon
multiline_comment|/* linux/fs/smbfs/file.c */
r_extern
r_struct
id|inode_operations
id|smb_file_inode_operations
suffix:semicolon
r_extern
r_struct
id|file_operations
id|smb_file_operations
suffix:semicolon
r_extern
r_struct
id|address_space_operations
id|smb_file_aops
suffix:semicolon
multiline_comment|/* linux/fs/smbfs/dir.c */
r_extern
r_struct
id|inode_operations
id|smb_dir_inode_operations
suffix:semicolon
r_extern
r_struct
id|file_operations
id|smb_dir_operations
suffix:semicolon
r_void
id|smb_renew_times
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
multiline_comment|/* linux/fs/smbfs/ioctl.c */
r_int
id|smb_ioctl
(paren
r_struct
id|inode
op_star
comma
r_struct
id|file
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
multiline_comment|/* linux/fs/smbfs/inode.c */
r_struct
id|super_block
op_star
id|smb_read_super
c_func
(paren
r_struct
id|super_block
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
r_void
id|smb_get_inode_attr
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|smb_fattr
op_star
)paren
suffix:semicolon
r_void
id|smb_invalidate_inodes
c_func
(paren
r_struct
id|smb_sb_info
op_star
)paren
suffix:semicolon
r_int
id|smb_revalidate_inode
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_int
id|smb_notify_change
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|iattr
op_star
)paren
suffix:semicolon
r_int
r_int
id|smb_invent_inos
c_func
(paren
r_int
r_int
)paren
suffix:semicolon
r_struct
id|inode
op_star
id|smb_iget
c_func
(paren
r_struct
id|super_block
op_star
comma
r_struct
id|smb_fattr
op_star
)paren
suffix:semicolon
multiline_comment|/* linux/fs/smbfs/proc.c */
r_int
id|smb_setcodepage
c_func
(paren
r_struct
id|smb_sb_info
op_star
id|server
comma
r_struct
id|smb_nls_codepage
op_star
id|cp
)paren
suffix:semicolon
id|__u32
id|smb_len
c_func
(paren
r_int
r_char
op_star
)paren
suffix:semicolon
id|__u8
op_star
id|smb_encode_smb_length
c_func
(paren
id|__u8
op_star
comma
id|__u32
)paren
suffix:semicolon
id|__u8
op_star
id|smb_setup_header
c_func
(paren
r_struct
id|smb_sb_info
op_star
comma
id|__u8
comma
id|__u16
comma
id|__u16
)paren
suffix:semicolon
r_int
id|smb_get_rsize
c_func
(paren
r_struct
id|smb_sb_info
op_star
)paren
suffix:semicolon
r_int
id|smb_get_wsize
c_func
(paren
r_struct
id|smb_sb_info
op_star
)paren
suffix:semicolon
r_int
id|smb_newconn
c_func
(paren
r_struct
id|smb_sb_info
op_star
comma
r_struct
id|smb_conn_opt
op_star
)paren
suffix:semicolon
r_int
id|smb_errno
c_func
(paren
r_struct
id|smb_sb_info
op_star
)paren
suffix:semicolon
r_int
id|smb_close
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_int
id|smb_close_fileid
c_func
(paren
r_struct
id|dentry
op_star
comma
id|__u16
)paren
suffix:semicolon
r_int
id|smb_open
c_func
(paren
r_struct
id|dentry
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|smb_proc_read
c_func
(paren
r_struct
id|inode
op_star
comma
id|off_t
comma
r_int
comma
r_char
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_write
c_func
(paren
r_struct
id|inode
op_star
comma
id|off_t
comma
r_int
comma
r_const
r_char
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_create
c_func
(paren
r_struct
id|dentry
op_star
comma
id|__u16
comma
id|time_t
comma
id|__u16
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_mv
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_mkdir
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_rmdir
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_unlink
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_readdir
c_func
(paren
r_struct
id|dentry
op_star
comma
r_int
comma
r_void
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_getattr
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|smb_fattr
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_setattr
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|smb_fattr
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_settime
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|smb_fattr
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_dskattr
c_func
(paren
r_struct
id|super_block
op_star
comma
r_struct
id|statfs
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_reconnect
c_func
(paren
r_struct
id|smb_sb_info
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_connect
c_func
(paren
r_struct
id|smb_sb_info
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_disconnect
c_func
(paren
r_struct
id|smb_sb_info
op_star
)paren
suffix:semicolon
r_int
id|smb_proc_trunc
c_func
(paren
r_struct
id|smb_sb_info
op_star
comma
id|__u16
comma
id|__u32
)paren
suffix:semicolon
r_void
id|smb_init_root_dirent
c_func
(paren
r_struct
id|smb_sb_info
op_star
comma
r_struct
id|smb_fattr
op_star
)paren
suffix:semicolon
r_static
r_inline
r_int
DECL|function|smb_is_open
id|smb_is_open
c_func
(paren
r_struct
id|inode
op_star
id|i
)paren
(brace
r_return
(paren
id|i-&gt;u.smbfs_i.open
op_eq
id|SMB_SERVER
c_func
(paren
id|i
)paren
op_member_access_from_pointer
id|generation
)paren
suffix:semicolon
)brace
multiline_comment|/* linux/fs/smbfs/sock.c */
r_int
id|smb_round_length
c_func
(paren
r_int
)paren
suffix:semicolon
r_int
id|smb_valid_socket
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_void
id|smb_close_socket
c_func
(paren
r_struct
id|smb_sb_info
op_star
)paren
suffix:semicolon
r_int
id|smb_release
c_func
(paren
r_struct
id|smb_sb_info
op_star
id|server
)paren
suffix:semicolon
r_int
id|smb_connect
c_func
(paren
r_struct
id|smb_sb_info
op_star
id|server
)paren
suffix:semicolon
r_int
id|smb_request
c_func
(paren
r_struct
id|smb_sb_info
op_star
id|server
)paren
suffix:semicolon
r_int
id|smb_request_read_raw
c_func
(paren
r_struct
id|smb_sb_info
op_star
comma
r_int
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|smb_request_write_raw
c_func
(paren
r_struct
id|smb_sb_info
op_star
comma
r_int
r_const
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|smb_catch_keepalive
c_func
(paren
r_struct
id|smb_sb_info
op_star
id|server
)paren
suffix:semicolon
r_int
id|smb_dont_catch_keepalive
c_func
(paren
r_struct
id|smb_sb_info
op_star
id|server
)paren
suffix:semicolon
r_int
id|smb_trans2_request
c_func
(paren
r_struct
id|smb_sb_info
op_star
id|server
comma
id|__u16
id|trans2_command
comma
r_int
id|ldata
comma
r_int
r_char
op_star
id|data
comma
r_int
id|lparam
comma
r_int
r_char
op_star
id|param
comma
r_int
op_star
id|lrdata
comma
r_int
r_char
op_star
op_star
id|rdata
comma
r_int
op_star
id|lrparam
comma
r_int
r_char
op_star
op_star
id|rparam
)paren
suffix:semicolon
multiline_comment|/* fs/smbfs/cache.c */
multiline_comment|/*&n; * The cache index describes the pages mapped starting&n; * at offset PAGE_SIZE.  We keep only a minimal amount&n; * of information here.&n; */
DECL|struct|cache_index
r_struct
id|cache_index
(brace
DECL|member|num_entries
r_int
r_int
id|num_entries
suffix:semicolon
DECL|member|space
r_int
r_int
id|space
suffix:semicolon
DECL|member|block
r_struct
id|cache_block
op_star
id|block
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|NINDEX
mdefine_line|#define NINDEX (PAGE_SIZE-64)/sizeof(struct cache_index)
multiline_comment|/*&n; * The cache head is mapped as the page at offset 0.&n; */
DECL|struct|cache_head
r_struct
id|cache_head
(brace
DECL|member|valid
r_int
id|valid
suffix:semicolon
DECL|member|status
r_int
id|status
suffix:semicolon
multiline_comment|/* error code or 0 */
DECL|member|entries
r_int
id|entries
suffix:semicolon
multiline_comment|/* total entries */
DECL|member|pages
r_int
id|pages
suffix:semicolon
multiline_comment|/* number of data pages */
DECL|member|idx
r_int
id|idx
suffix:semicolon
multiline_comment|/* index of current data page */
DECL|member|index
r_struct
id|cache_index
id|index
(braket
id|NINDEX
)braket
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * An array of cache_entry structures holds information&n; * for each object in the cache_block.&n; */
DECL|struct|cache_entry
r_struct
id|cache_entry
(brace
DECL|member|ino
id|ino_t
id|ino
suffix:semicolon
DECL|member|namelen
r_int
r_int
id|namelen
suffix:semicolon
DECL|member|offset
r_int
r_int
id|offset
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * The cache blocks hold the actual data.  The entry table grows up&n; * while the names grow down, and we have space until they meet.&n; */
DECL|struct|cache_block
r_struct
id|cache_block
(brace
r_union
(brace
DECL|member|table
r_struct
id|cache_entry
id|table
(braket
l_int|1
)braket
suffix:semicolon
DECL|member|names
r_char
id|names
(braket
id|PAGE_SIZE
)braket
suffix:semicolon
DECL|member|cb_data
)brace
id|cb_data
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * To return an entry, we can pass a reference to the&n; * name instead of having to copy it.&n; */
DECL|struct|cache_dirent
r_struct
id|cache_dirent
(brace
DECL|member|ino
id|ino_t
id|ino
suffix:semicolon
DECL|member|pos
r_int
r_int
id|pos
suffix:semicolon
DECL|member|len
r_int
id|len
suffix:semicolon
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|cache_head
op_star
id|smb_get_dircache
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_void
id|smb_init_dircache
c_func
(paren
r_struct
id|cache_head
op_star
)paren
suffix:semicolon
r_void
id|smb_free_dircache
c_func
(paren
r_struct
id|cache_head
op_star
)paren
suffix:semicolon
r_int
id|smb_refill_dircache
c_func
(paren
r_struct
id|cache_head
op_star
comma
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_void
id|smb_add_to_cache
c_func
(paren
r_struct
id|cache_head
op_star
comma
r_struct
id|cache_dirent
op_star
comma
id|off_t
)paren
suffix:semicolon
r_int
id|smb_find_in_cache
c_func
(paren
r_struct
id|cache_head
op_star
comma
id|off_t
comma
r_struct
id|cache_dirent
op_star
)paren
suffix:semicolon
r_void
id|smb_invalid_dir_cache
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
macro_line|#endif /* __KERNEL__ */
macro_line|#endif /* _LINUX_SMB_FS_H */
eof
