multiline_comment|/* Common Flash Interface structures &n; * See http://support.intel.com/design/flash/technote/index.htm&n; * $Id: cfi.h,v 1.6 2000/07/03 13:29:16 dwmw2 Exp $&n; */
macro_line|#ifndef __MTD_CFI_H__
DECL|macro|__MTD_CFI_H__
mdefine_line|#define __MTD_CFI_H__
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/mtd/flashchip.h&gt;
multiline_comment|/* NB: We keep these structures in memory in HOST byteorder, except&n; * where individually noted.&n; */
multiline_comment|/* Basic Query Structure */
DECL|struct|cfi_ident
r_struct
id|cfi_ident
(brace
DECL|member|qry
id|__u8
id|qry
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|P_ID
id|__u16
id|P_ID
suffix:semicolon
DECL|member|P_ADR
id|__u16
id|P_ADR
suffix:semicolon
DECL|member|A_ID
id|__u16
id|A_ID
suffix:semicolon
DECL|member|A_ADR
id|__u16
id|A_ADR
suffix:semicolon
DECL|member|VccMin
id|__u8
id|VccMin
suffix:semicolon
DECL|member|VccMax
id|__u8
id|VccMax
suffix:semicolon
DECL|member|VppMin
id|__u8
id|VppMin
suffix:semicolon
DECL|member|VppMax
id|__u8
id|VppMax
suffix:semicolon
DECL|member|WordWriteTimeoutTyp
id|__u8
id|WordWriteTimeoutTyp
suffix:semicolon
DECL|member|BufWriteTimeoutTyp
id|__u8
id|BufWriteTimeoutTyp
suffix:semicolon
DECL|member|BlockEraseTimeoutTyp
id|__u8
id|BlockEraseTimeoutTyp
suffix:semicolon
DECL|member|ChipEraseTimeoutTyp
id|__u8
id|ChipEraseTimeoutTyp
suffix:semicolon
DECL|member|WordWriteTimeoutMax
id|__u8
id|WordWriteTimeoutMax
suffix:semicolon
DECL|member|BufWriteTimeoutMax
id|__u8
id|BufWriteTimeoutMax
suffix:semicolon
DECL|member|BlockEraseTimeoutMax
id|__u8
id|BlockEraseTimeoutMax
suffix:semicolon
DECL|member|ChipEraseTimeoutMax
id|__u8
id|ChipEraseTimeoutMax
suffix:semicolon
DECL|member|DevSize
id|__u8
id|DevSize
suffix:semicolon
DECL|member|InterfaceDesc
id|__u16
id|InterfaceDesc
suffix:semicolon
DECL|member|MaxBufWriteSize
id|__u16
id|MaxBufWriteSize
suffix:semicolon
DECL|member|NumEraseRegions
id|__u8
id|NumEraseRegions
suffix:semicolon
DECL|member|EraseRegionInfo
id|__u32
id|EraseRegionInfo
(braket
l_int|1
)braket
suffix:semicolon
multiline_comment|/* Not host ordered */
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* Extended Query Structure for both PRI and ALT */
DECL|struct|cfi_extquery
r_struct
id|cfi_extquery
(brace
DECL|member|pri
id|__u8
id|pri
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|MajorVersion
id|__u8
id|MajorVersion
suffix:semicolon
DECL|member|MinorVersion
id|__u8
id|MinorVersion
suffix:semicolon
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* Vendor-Specific PRI for Intel/Sharp Extended Command Set (0x0001) */
DECL|struct|cfi_pri_intelext
r_struct
id|cfi_pri_intelext
(brace
DECL|member|pri
id|__u8
id|pri
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|MajorVersion
id|__u8
id|MajorVersion
suffix:semicolon
DECL|member|MinorVersion
id|__u8
id|MinorVersion
suffix:semicolon
DECL|member|FeatureSupport
id|__u32
id|FeatureSupport
suffix:semicolon
DECL|member|SuspendCmdSupport
id|__u8
id|SuspendCmdSupport
suffix:semicolon
DECL|member|BlkStatusRegMask
id|__u16
id|BlkStatusRegMask
suffix:semicolon
DECL|member|VccOptimal
id|__u8
id|VccOptimal
suffix:semicolon
DECL|member|VppOptimal
id|__u8
id|VppOptimal
suffix:semicolon
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|cfi_pri_query
r_struct
id|cfi_pri_query
(brace
DECL|member|NumFields
id|__u8
id|NumFields
suffix:semicolon
DECL|member|ProtField
id|__u32
id|ProtField
(braket
l_int|1
)braket
suffix:semicolon
multiline_comment|/* Not host ordered */
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|cfi_bri_query
r_struct
id|cfi_bri_query
(brace
DECL|member|PageModeReadCap
id|__u8
id|PageModeReadCap
suffix:semicolon
DECL|member|NumFields
id|__u8
id|NumFields
suffix:semicolon
DECL|member|ConfField
id|__u32
id|ConfField
(braket
l_int|1
)braket
suffix:semicolon
multiline_comment|/* Not host ordered */
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|macro|P_ID_NONE
mdefine_line|#define P_ID_NONE 0
DECL|macro|P_ID_INTEL_EXT
mdefine_line|#define P_ID_INTEL_EXT 1
DECL|macro|P_ID_AMD_STD
mdefine_line|#define P_ID_AMD_STD 2
DECL|macro|P_ID_INTEL_STD
mdefine_line|#define P_ID_INTEL_STD 3
DECL|macro|P_ID_AMD_EXT
mdefine_line|#define P_ID_AMD_EXT 4
DECL|macro|P_ID_MITSUBISHI_STD
mdefine_line|#define P_ID_MITSUBISHI_STD 256
DECL|macro|P_ID_MITSUBISHI_EXT
mdefine_line|#define P_ID_MITSUBISHI_EXT 257
DECL|macro|P_ID_RESERVED
mdefine_line|#define P_ID_RESERVED 65535
DECL|struct|cfi_private
r_struct
id|cfi_private
(brace
DECL|member|cmdset
id|__u16
id|cmdset
suffix:semicolon
DECL|member|cmdset_priv
r_void
op_star
id|cmdset_priv
suffix:semicolon
DECL|member|interleave
r_int
id|interleave
suffix:semicolon
DECL|member|cmdset_setup
r_struct
id|mtd_info
op_star
(paren
op_star
id|cmdset_setup
)paren
(paren
r_struct
id|map_info
op_star
)paren
suffix:semicolon
DECL|member|cfiq
r_struct
id|cfi_ident
id|cfiq
suffix:semicolon
multiline_comment|/* For now only one. We insist that all devs&n;&t;&t;&t;&t;  must be of the same type. */
DECL|member|numchips
r_int
id|numchips
suffix:semicolon
DECL|member|chipshift
r_int
r_int
id|chipshift
suffix:semicolon
multiline_comment|/* Because they&squot;re of the same type */
DECL|member|im_name
r_const
r_char
op_star
id|im_name
suffix:semicolon
multiline_comment|/* inter_module name for cmdset_setup */
DECL|member|chips
r_struct
id|flchip
id|chips
(braket
l_int|0
)braket
suffix:semicolon
multiline_comment|/* per-chip data structure for each chip */
multiline_comment|/* do not add extra fields after &quot;chips&quot; */
)brace
suffix:semicolon
DECL|macro|MAX_CFI_CHIPS
mdefine_line|#define MAX_CFI_CHIPS 8 /* Entirely arbitrary to avoid realloc() */
macro_line|#endif /* __MTD_CFI_H__ */
eof
