multiline_comment|/*&n; *  rpcsock.h&t;Declarations for the RPC call interface.&n; *&n; *  Coypright (C) 1995 Olaf Kirch &lt;okir@monad.swb.de&gt;&n; *&n; */
macro_line|#ifndef _LINUX_RPCSOCK_H
DECL|macro|_LINUX_RPCSOCK_H
mdefine_line|#define _LINUX_RPCSOCK_H
multiline_comment|/* Maximum number of outstanding RPCs per socket.&n; * With 32 slots, IP fragment reassembly would frequently&n; * fail due to low memory.&n; */
DECL|macro|NRREQS
mdefine_line|#define NRREQS&t;&t;16
multiline_comment|/* This describes a timeout strategy */
DECL|struct|rpc_timeout
r_struct
id|rpc_timeout
(brace
DECL|member|init_timeout
r_int
r_int
id|init_timeout
comma
DECL|member|max_timeout
id|max_timeout
comma
DECL|member|increment
id|increment
suffix:semicolon
DECL|member|retries
r_int
id|retries
suffix:semicolon
DECL|member|exponential
r_char
id|exponential
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Wait information */
DECL|struct|rpc_wait
r_struct
id|rpc_wait
(brace
DECL|member|prev
DECL|member|next
r_struct
id|rpc_wait
op_star
id|prev
comma
op_star
id|next
suffix:semicolon
DECL|member|wait
r_struct
id|wait_queue
op_star
id|wait
suffix:semicolon
DECL|member|buf
r_int
op_star
id|buf
suffix:semicolon
DECL|member|len
r_int
id|len
suffix:semicolon
DECL|member|gotit
r_char
id|gotit
suffix:semicolon
DECL|member|xid
id|__u32
id|xid
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|rpc_sock
r_struct
id|rpc_sock
(brace
DECL|member|file
r_struct
id|file
op_star
id|file
suffix:semicolon
DECL|member|sock
r_struct
id|socket
op_star
id|sock
suffix:semicolon
DECL|member|waiting
r_struct
id|rpc_wait
id|waiting
(braket
id|NRREQS
)braket
suffix:semicolon
DECL|member|head
DECL|member|tail
DECL|member|free
r_struct
id|rpc_wait
op_star
id|head
comma
op_star
id|tail
comma
op_star
id|free
suffix:semicolon
DECL|member|backlog
r_struct
id|wait_queue
op_star
id|backlog
suffix:semicolon
DECL|member|shutwait
r_struct
id|wait_queue
op_star
id|shutwait
suffix:semicolon
DECL|member|shutdown
r_int
id|shutdown
suffix:semicolon
)brace
suffix:semicolon
macro_line|#ifdef __KERNEL__
r_int
id|rpc_call
c_func
(paren
r_struct
id|rpc_sock
op_star
comma
r_struct
id|sockaddr
op_star
comma
r_int
comma
r_const
r_int
op_star
comma
r_int
comma
r_int
op_star
comma
r_int
comma
r_struct
id|rpc_timeout
op_star
comma
r_int
)paren
suffix:semicolon
r_struct
id|rpc_sock
op_star
id|rpc_makesock
c_func
(paren
r_struct
id|file
op_star
)paren
suffix:semicolon
r_int
id|rpc_closesock
c_func
(paren
r_struct
id|rpc_sock
op_star
)paren
suffix:semicolon
macro_line|#endif /* __KERNEL__*/
macro_line|#endif /* _LINUX_RPCSOCK_H */
eof
