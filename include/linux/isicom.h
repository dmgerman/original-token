macro_line|#ifndef _LINUX_ISICOM_H
DECL|macro|_LINUX_ISICOM_H
mdefine_line|#define _LINUX_ISICOM_H
multiline_comment|/*#define&t;&t;ISICOM_DEBUG*/
multiline_comment|/*#define&t;&t;ISICOM_DEBUG_DTR_RTS*/
multiline_comment|/*&n; *&t;Firmware Loader definitions ...&n; */
DECL|macro|__MultiTech
mdefine_line|#define&t;&t;__MultiTech&t;&t;(&squot;M&squot;&lt;&lt;8)
DECL|macro|MIOCTL_LOAD_FIRMWARE
mdefine_line|#define&t;&t;MIOCTL_LOAD_FIRMWARE&t;(__MultiTech | 0x01)
DECL|macro|MIOCTL_READ_FIRMWARE
mdefine_line|#define         MIOCTL_READ_FIRMWARE    (__MultiTech | 0x02)
DECL|macro|MIOCTL_XFER_CTRL
mdefine_line|#define         MIOCTL_XFER_CTRL&t;(__MultiTech | 0x03)
DECL|macro|MIOCTL_RESET_CARD
mdefine_line|#define         MIOCTL_RESET_CARD&t;(__MultiTech | 0x04)
DECL|macro|DATA_SIZE
mdefine_line|#define&t;&t;DATA_SIZE&t;16
r_typedef
r_struct
(brace
DECL|member|exec_segment
r_int
r_int
id|exec_segment
suffix:semicolon
DECL|member|exec_addr
r_int
r_int
id|exec_addr
suffix:semicolon
DECL|typedef|exec_record
)brace
id|exec_record
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|board
r_int
id|board
suffix:semicolon
multiline_comment|/* Board to load */
DECL|member|addr
r_int
r_int
id|addr
suffix:semicolon
DECL|member|count
r_int
r_int
id|count
suffix:semicolon
DECL|typedef|bin_header
)brace
id|bin_header
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|board
r_int
id|board
suffix:semicolon
multiline_comment|/* Board to load */
DECL|member|addr
r_int
r_int
id|addr
suffix:semicolon
DECL|member|count
r_int
r_int
id|count
suffix:semicolon
DECL|member|segment
r_int
r_int
id|segment
suffix:semicolon
DECL|member|bin_data
r_int
r_char
id|bin_data
(braket
id|DATA_SIZE
)braket
suffix:semicolon
DECL|typedef|bin_frame
)brace
id|bin_frame
suffix:semicolon
macro_line|#ifdef __KERNEL__
DECL|macro|YES
mdefine_line|#define&t;&t;YES&t;1
DECL|macro|NO
mdefine_line|#define&t;&t;NO&t;0
DECL|macro|ISILOAD_MISC_MINOR
mdefine_line|#define&t;&t;ISILOAD_MISC_MINOR&t;155&t;/* /dev/isctl */
DECL|macro|ISILOAD_NAME
mdefine_line|#define&t;&t;ISILOAD_NAME&t;&t;&quot;ISILoad&quot;
multiline_comment|/*&t;&n; *  ISICOM Driver definitions ...&n; *&n; */
DECL|macro|ISICOM_NAME
mdefine_line|#define&t;&t;ISICOM_NAME&t;&quot;ISICom&quot;
multiline_comment|/*&n; *      PCI definitions&n; */
DECL|macro|DEVID_COUNT
mdefine_line|#define        DEVID_COUNT     9
DECL|macro|VENDOR_ID
mdefine_line|#define        VENDOR_ID       0x10b5
multiline_comment|/*&n; *&t;These are now officially allocated numbers&n; */
DECL|macro|ISICOM_NMAJOR
mdefine_line|#define&t;&t;ISICOM_NMAJOR&t;112&t;/* normal  */
DECL|macro|ISICOM_CMAJOR
mdefine_line|#define&t;&t;ISICOM_CMAJOR&t;113&t;/* callout */
DECL|macro|ISICOM_MAGIC
mdefine_line|#define&t;&t;ISICOM_MAGIC&t;((&squot;M&squot; &lt;&lt; 8) | &squot;T&squot;)
DECL|macro|WAKEUP_CHARS
mdefine_line|#define&t;&t;WAKEUP_CHARS&t;256&t;/* hard coded for now&t;*/ 
DECL|macro|TX_SIZE
mdefine_line|#define&t;&t;TX_SIZE&t;&t;254 
DECL|macro|BOARD_COUNT
mdefine_line|#define&t;&t;BOARD_COUNT&t;4
DECL|macro|PORT_COUNT
mdefine_line|#define&t;&t;PORT_COUNT&t;(BOARD_COUNT*16)
DECL|macro|SERIAL_TYPE_NORMAL
mdefine_line|#define&t;&t;SERIAL_TYPE_NORMAL&t;1
DECL|macro|SERIAL_TYPE_CALLOUT
mdefine_line|#define&t;&t;SERIAL_TYPE_CALLOUT&t;2
multiline_comment|/*   character sizes  */
DECL|macro|ISICOM_CS5
mdefine_line|#define&t;&t;ISICOM_CS5&t;&t;0x0000
DECL|macro|ISICOM_CS6
mdefine_line|#define&t;&t;ISICOM_CS6&t;&t;0x0001
DECL|macro|ISICOM_CS7
mdefine_line|#define&t;&t;ISICOM_CS7&t;&t;0x0002
DECL|macro|ISICOM_CS8
mdefine_line|#define&t;&t;ISICOM_CS8&t;&t;0x0003
multiline_comment|/* stop bits */
DECL|macro|ISICOM_1SB
mdefine_line|#define&t;&t;ISICOM_1SB&t;&t;0x0000
DECL|macro|ISICOM_2SB
mdefine_line|#define&t;&t;ISICOM_2SB&t;&t;0x0004
multiline_comment|/* parity */
DECL|macro|ISICOM_NOPAR
mdefine_line|#define&t;&t;ISICOM_NOPAR&t;&t;0x0000
DECL|macro|ISICOM_ODPAR
mdefine_line|#define&t;&t;ISICOM_ODPAR&t;&t;0x0008
DECL|macro|ISICOM_EVPAR
mdefine_line|#define&t;&t;ISICOM_EVPAR&t;&t;0x0018
multiline_comment|/* flow control */
DECL|macro|ISICOM_CTSRTS
mdefine_line|#define&t;&t;ISICOM_CTSRTS&t;&t;0x03
DECL|macro|ISICOM_INITIATE_XONXOFF
mdefine_line|#define&t;&t;ISICOM_INITIATE_XONXOFF&t;0x04
DECL|macro|ISICOM_RESPOND_XONXOFF
mdefine_line|#define&t;&t;ISICOM_RESPOND_XONXOFF&t;0x08
DECL|macro|InterruptTheCard
mdefine_line|#define InterruptTheCard(base) (outw(0,(base)+0xc)) 
DECL|macro|ClearInterrupt
mdefine_line|#define ClearInterrupt(base) (inw((base)+0x0a))&t;
DECL|macro|BOARD
mdefine_line|#define&t;BOARD(line)  (((line) &gt;&gt; 4) &amp; 0x3)
DECL|macro|MIN
mdefine_line|#define MIN(a, b) ( (a) &lt; (b) ? (a) : (b) )
multiline_comment|/*&t;isi kill queue bitmap&t;*/
DECL|macro|ISICOM_KILLTX
mdefine_line|#define&t;&t;ISICOM_KILLTX&t;&t;0x01
DECL|macro|ISICOM_KILLRX
mdefine_line|#define&t;&t;ISICOM_KILLRX&t;&t;0x02
multiline_comment|/* isi_board status bitmap */
DECL|macro|FIRMWARE_LOADED
mdefine_line|#define&t;&t;FIRMWARE_LOADED&t;&t;0x0001
DECL|macro|BOARD_ACTIVE
mdefine_line|#define&t;&t;BOARD_ACTIVE&t;&t;0x0002
multiline_comment|/* isi_port status bitmap  */
DECL|macro|ISI_CTS
mdefine_line|#define&t;&t;ISI_CTS&t;&t;&t;0x1000
DECL|macro|ISI_DSR
mdefine_line|#define&t;&t;ISI_DSR&t;&t;&t;0x2000
DECL|macro|ISI_RI
mdefine_line|#define&t;&t;ISI_RI&t;&t;&t;0x4000
DECL|macro|ISI_DCD
mdefine_line|#define&t;&t;ISI_DCD&t;&t;&t;0x8000
DECL|macro|ISI_DTR
mdefine_line|#define&t;&t;ISI_DTR&t;&t;&t;0x0100
DECL|macro|ISI_RTS
mdefine_line|#define&t;&t;ISI_RTS&t;&t;&t;0x0200
DECL|macro|ISI_TXOK
mdefine_line|#define&t;&t;ISI_TXOK&t;&t;0x0001 
DECL|struct|isi_board
r_struct
id|isi_board
(brace
DECL|member|base
r_int
r_int
id|base
suffix:semicolon
DECL|member|irq
r_int
r_char
id|irq
suffix:semicolon
DECL|member|port_count
r_int
r_char
id|port_count
suffix:semicolon
DECL|member|status
r_int
r_int
id|status
suffix:semicolon
DECL|member|port_status
r_int
r_int
id|port_status
suffix:semicolon
multiline_comment|/* each bit represents a single port */
DECL|member|shift_count
r_int
r_int
id|shift_count
suffix:semicolon
DECL|member|ports
r_struct
id|isi_port
op_star
id|ports
suffix:semicolon
DECL|member|count
r_int
r_char
id|count
suffix:semicolon
DECL|member|isa
r_int
r_char
id|isa
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|isi_port
r_struct
id|isi_port
(brace
DECL|member|magic
r_int
r_int
id|magic
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|count
r_int
id|count
suffix:semicolon
DECL|member|blocked_open
r_int
id|blocked_open
suffix:semicolon
DECL|member|close_delay
r_int
id|close_delay
suffix:semicolon
DECL|member|channel
r_int
r_int
id|channel
suffix:semicolon
DECL|member|status
r_int
r_int
id|status
suffix:semicolon
DECL|member|closing_wait
r_int
r_int
id|closing_wait
suffix:semicolon
DECL|member|session
r_int
id|session
suffix:semicolon
DECL|member|pgrp
r_int
id|pgrp
suffix:semicolon
DECL|member|card
r_struct
id|isi_board
op_star
id|card
suffix:semicolon
DECL|member|tty
r_struct
id|tty_struct
op_star
id|tty
suffix:semicolon
DECL|member|close_wait
id|wait_queue_head_t
id|close_wait
suffix:semicolon
DECL|member|open_wait
id|wait_queue_head_t
id|open_wait
suffix:semicolon
DECL|member|hangup_tq
r_struct
id|tq_struct
id|hangup_tq
suffix:semicolon
DECL|member|bh_tqueue
r_struct
id|tq_struct
id|bh_tqueue
suffix:semicolon
DECL|member|xmit_buf
r_int
r_char
op_star
id|xmit_buf
suffix:semicolon
DECL|member|xmit_head
r_int
id|xmit_head
suffix:semicolon
DECL|member|xmit_tail
r_int
id|xmit_tail
suffix:semicolon
DECL|member|xmit_cnt
r_int
id|xmit_cnt
suffix:semicolon
DECL|member|normal_termios
r_struct
id|termios
id|normal_termios
suffix:semicolon
DECL|member|callout_termios
r_struct
id|termios
id|callout_termios
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; *  ISI Card specific ops ...&n; */
DECL|function|raise_dtr
r_extern
r_inline
r_void
id|raise_dtr
c_func
(paren
r_struct
id|isi_port
op_star
id|port
)paren
(brace
r_struct
id|isi_board
op_star
id|card
op_assign
id|port-&gt;card
suffix:semicolon
r_int
r_int
id|base
op_assign
id|card-&gt;base
suffix:semicolon
r_int
r_char
id|channel
op_assign
id|port-&gt;channel
suffix:semicolon
r_int
id|wait
op_assign
l_int|400
suffix:semicolon
r_while
c_loop
(paren
(paren
(paren
id|inw
c_func
(paren
id|base
op_plus
l_int|0x0e
)paren
op_amp
l_int|0x01
)paren
op_eq
l_int|0
)paren
op_logical_and
(paren
id|wait
op_decrement
OG
l_int|0
)paren
)paren
(brace
suffix:semicolon
)brace
r_if
c_cond
(paren
id|wait
op_le
l_int|0
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;ISICOM: Card found busy in raise_dtr.&bslash;n&quot;
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
macro_line|#ifdef ISICOM_DEBUG_DTR_RTS&t;
id|printk
c_func
(paren
id|KERN_DEBUG
l_string|&quot;ISICOM: raise_dtr.&bslash;n&quot;
)paren
suffix:semicolon
macro_line|#endif&t;
id|outw
c_func
(paren
l_int|0x8000
op_or
(paren
id|channel
op_lshift
id|card-&gt;shift_count
)paren
op_or
l_int|0x02
comma
id|base
)paren
suffix:semicolon
id|outw
c_func
(paren
l_int|0x0504
comma
id|base
)paren
suffix:semicolon
id|InterruptTheCard
c_func
(paren
id|base
)paren
suffix:semicolon
id|port-&gt;status
op_or_assign
id|ISI_DTR
suffix:semicolon
)brace
DECL|function|drop_dtr
r_extern
r_inline
r_void
id|drop_dtr
c_func
(paren
r_struct
id|isi_port
op_star
id|port
)paren
(brace
r_struct
id|isi_board
op_star
id|card
op_assign
id|port-&gt;card
suffix:semicolon
r_int
r_int
id|base
op_assign
id|card-&gt;base
suffix:semicolon
r_int
r_char
id|channel
op_assign
id|port-&gt;channel
suffix:semicolon
r_int
id|wait
op_assign
l_int|400
suffix:semicolon
r_while
c_loop
(paren
(paren
(paren
id|inw
c_func
(paren
id|base
op_plus
l_int|0x0e
)paren
op_amp
l_int|0x01
)paren
op_eq
l_int|0
)paren
op_logical_and
(paren
id|wait
op_decrement
OG
l_int|0
)paren
)paren
(brace
suffix:semicolon
)brace
r_if
c_cond
(paren
id|wait
op_le
l_int|0
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;ISICOM: Card found busy in drop_dtr.&bslash;n&quot;
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
macro_line|#ifdef ISICOM_DEBUG_DTR_RTS&t;
id|printk
c_func
(paren
id|KERN_DEBUG
l_string|&quot;ISICOM: drop_dtr.&bslash;n&quot;
)paren
suffix:semicolon
macro_line|#endif&t;
id|outw
c_func
(paren
l_int|0x8000
op_or
(paren
id|channel
op_lshift
id|card-&gt;shift_count
)paren
op_or
l_int|0x02
comma
id|base
)paren
suffix:semicolon
id|outw
c_func
(paren
l_int|0x0404
comma
id|base
)paren
suffix:semicolon
id|InterruptTheCard
c_func
(paren
id|base
)paren
suffix:semicolon
id|port-&gt;status
op_and_assign
op_complement
id|ISI_DTR
suffix:semicolon
)brace
DECL|function|raise_rts
r_extern
r_inline
r_void
id|raise_rts
c_func
(paren
r_struct
id|isi_port
op_star
id|port
)paren
(brace
r_struct
id|isi_board
op_star
id|card
op_assign
id|port-&gt;card
suffix:semicolon
r_int
r_int
id|base
op_assign
id|card-&gt;base
suffix:semicolon
r_int
r_char
id|channel
op_assign
id|port-&gt;channel
suffix:semicolon
r_int
id|wait
op_assign
l_int|400
suffix:semicolon
r_while
c_loop
(paren
(paren
(paren
id|inw
c_func
(paren
id|base
op_plus
l_int|0x0e
)paren
op_amp
l_int|0x01
)paren
op_eq
l_int|0
)paren
op_logical_and
(paren
id|wait
op_decrement
OG
l_int|0
)paren
)paren
(brace
suffix:semicolon
)brace
r_if
c_cond
(paren
id|wait
op_le
l_int|0
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;ISICOM: Card found busy in raise_rts.&bslash;n&quot;
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
macro_line|#ifdef ISICOM_DEBUG_DTR_RTS&t;
id|printk
c_func
(paren
id|KERN_DEBUG
l_string|&quot;ISICOM: raise_rts.&bslash;n&quot;
)paren
suffix:semicolon
macro_line|#endif&t;
id|outw
c_func
(paren
l_int|0x8000
op_or
(paren
id|channel
op_lshift
id|card-&gt;shift_count
)paren
op_or
l_int|0x02
comma
id|base
)paren
suffix:semicolon
id|outw
c_func
(paren
l_int|0x0a04
comma
id|base
)paren
suffix:semicolon
id|InterruptTheCard
c_func
(paren
id|base
)paren
suffix:semicolon
id|port-&gt;status
op_or_assign
id|ISI_RTS
suffix:semicolon
)brace
DECL|function|drop_rts
r_extern
r_inline
r_void
id|drop_rts
c_func
(paren
r_struct
id|isi_port
op_star
id|port
)paren
(brace
r_struct
id|isi_board
op_star
id|card
op_assign
id|port-&gt;card
suffix:semicolon
r_int
r_int
id|base
op_assign
id|card-&gt;base
suffix:semicolon
r_int
r_char
id|channel
op_assign
id|port-&gt;channel
suffix:semicolon
r_int
id|wait
op_assign
l_int|400
suffix:semicolon
r_while
c_loop
(paren
(paren
(paren
id|inw
c_func
(paren
id|base
op_plus
l_int|0x0e
)paren
op_amp
l_int|0x01
)paren
op_eq
l_int|0
)paren
op_logical_and
(paren
id|wait
op_decrement
OG
l_int|0
)paren
)paren
(brace
suffix:semicolon
)brace
r_if
c_cond
(paren
id|wait
op_le
l_int|0
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;ISICOM: Card found busy in drop_rts.&bslash;n&quot;
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
macro_line|#ifdef ISICOM_DEBUG_DTR_RTS&t;
id|printk
c_func
(paren
id|KERN_DEBUG
l_string|&quot;ISICOM: drop_rts.&bslash;n&quot;
)paren
suffix:semicolon
macro_line|#endif&t;
id|outw
c_func
(paren
l_int|0x8000
op_or
(paren
id|channel
op_lshift
id|card-&gt;shift_count
)paren
op_or
l_int|0x02
comma
id|base
)paren
suffix:semicolon
id|outw
c_func
(paren
l_int|0x0804
comma
id|base
)paren
suffix:semicolon
id|InterruptTheCard
c_func
(paren
id|base
)paren
suffix:semicolon
id|port-&gt;status
op_and_assign
op_complement
id|ISI_RTS
suffix:semicolon
)brace
DECL|function|raise_dtr_rts
r_extern
r_inline
r_void
id|raise_dtr_rts
c_func
(paren
r_struct
id|isi_port
op_star
id|port
)paren
(brace
r_struct
id|isi_board
op_star
id|card
op_assign
id|port-&gt;card
suffix:semicolon
r_int
r_int
id|base
op_assign
id|card-&gt;base
suffix:semicolon
r_int
r_char
id|channel
op_assign
id|port-&gt;channel
suffix:semicolon
r_int
id|wait
op_assign
l_int|400
suffix:semicolon
r_while
c_loop
(paren
(paren
(paren
id|inw
c_func
(paren
id|base
op_plus
l_int|0x0e
)paren
op_amp
l_int|0x01
)paren
op_eq
l_int|0
)paren
op_logical_and
(paren
id|wait
op_decrement
OG
l_int|0
)paren
)paren
(brace
suffix:semicolon
)brace
r_if
c_cond
(paren
id|wait
op_le
l_int|0
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;ISICOM: Card found busy in raise_dtr_rts.&bslash;n&quot;
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
macro_line|#ifdef ISICOM_DEBUG_DTR_RTS&t;
id|printk
c_func
(paren
id|KERN_DEBUG
l_string|&quot;ISICOM: raise_dtr_rts.&bslash;n&quot;
)paren
suffix:semicolon
macro_line|#endif&t;
id|outw
c_func
(paren
l_int|0x8000
op_or
(paren
id|channel
op_lshift
id|card-&gt;shift_count
)paren
op_or
l_int|0x02
comma
id|base
)paren
suffix:semicolon
id|outw
c_func
(paren
l_int|0x0f04
comma
id|base
)paren
suffix:semicolon
id|InterruptTheCard
c_func
(paren
id|base
)paren
suffix:semicolon
id|port-&gt;status
op_or_assign
(paren
id|ISI_DTR
op_or
id|ISI_RTS
)paren
suffix:semicolon
)brace
DECL|function|drop_dtr_rts
r_extern
r_inline
r_void
id|drop_dtr_rts
c_func
(paren
r_struct
id|isi_port
op_star
id|port
)paren
(brace
r_struct
id|isi_board
op_star
id|card
op_assign
id|port-&gt;card
suffix:semicolon
r_int
r_int
id|base
op_assign
id|card-&gt;base
suffix:semicolon
r_int
r_char
id|channel
op_assign
id|port-&gt;channel
suffix:semicolon
r_int
id|wait
op_assign
l_int|400
suffix:semicolon
r_while
c_loop
(paren
(paren
(paren
id|inw
c_func
(paren
id|base
op_plus
l_int|0x0e
)paren
op_amp
l_int|0x01
)paren
op_eq
l_int|0
)paren
op_logical_and
(paren
id|wait
op_decrement
OG
l_int|0
)paren
)paren
(brace
suffix:semicolon
)brace
r_if
c_cond
(paren
id|wait
op_le
l_int|0
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;ISICOM: Card found busy in drop_dtr_rts.&bslash;n&quot;
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
macro_line|#ifdef ISICOM_DEBUG_DTR_RTS&t;
id|printk
c_func
(paren
id|KERN_DEBUG
l_string|&quot;ISICOM: drop_dtr_rts.&bslash;n&quot;
)paren
suffix:semicolon
macro_line|#endif&t;
id|outw
c_func
(paren
l_int|0x8000
op_or
(paren
id|channel
op_lshift
id|card-&gt;shift_count
)paren
op_or
l_int|0x02
comma
id|base
)paren
suffix:semicolon
id|outw
c_func
(paren
l_int|0x0c04
comma
id|base
)paren
suffix:semicolon
id|InterruptTheCard
c_func
(paren
id|base
)paren
suffix:semicolon
id|port-&gt;status
op_and_assign
op_complement
(paren
id|ISI_RTS
op_or
id|ISI_DTR
)paren
suffix:semicolon
)brace
DECL|function|kill_queue
r_extern
r_inline
r_void
id|kill_queue
c_func
(paren
r_struct
id|isi_port
op_star
id|port
comma
r_int
id|queue
)paren
(brace
r_struct
id|isi_board
op_star
id|card
op_assign
id|port-&gt;card
suffix:semicolon
r_int
r_int
id|base
op_assign
id|card-&gt;base
suffix:semicolon
r_int
r_char
id|channel
op_assign
id|port-&gt;channel
suffix:semicolon
r_int
id|wait
op_assign
l_int|400
suffix:semicolon
r_while
c_loop
(paren
(paren
(paren
id|inw
c_func
(paren
id|base
op_plus
l_int|0x0e
)paren
op_amp
l_int|0x01
)paren
op_eq
l_int|0
)paren
op_logical_and
(paren
id|wait
op_decrement
OG
l_int|0
)paren
)paren
(brace
suffix:semicolon
)brace
r_if
c_cond
(paren
id|wait
op_le
l_int|0
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;ISICOM: Card found busy in kill_queue.&bslash;n&quot;
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
macro_line|#ifdef ISICOM_DEBUG&t;
id|printk
c_func
(paren
id|KERN_DEBUG
l_string|&quot;ISICOM: kill_queue 0x%x.&bslash;n&quot;
comma
id|queue
)paren
suffix:semicolon
macro_line|#endif&t;
id|outw
c_func
(paren
l_int|0x8000
op_or
(paren
id|channel
op_lshift
id|card-&gt;shift_count
)paren
op_or
l_int|0x02
comma
id|base
)paren
suffix:semicolon
id|outw
c_func
(paren
(paren
id|queue
op_lshift
l_int|8
)paren
op_or
l_int|0x06
comma
id|base
)paren
suffix:semicolon
id|InterruptTheCard
c_func
(paren
id|base
)paren
suffix:semicolon
)brace
macro_line|#endif&t;/*&t;__KERNEL__&t;*/
macro_line|#endif&t;/*&t;ISICOM_H&t;*/
eof
