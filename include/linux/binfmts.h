macro_line|#ifndef _LINUX_BINFMTS_H
DECL|macro|_LINUX_BINFMTS_H
mdefine_line|#define _LINUX_BINFMTS_H
multiline_comment|/*&n; * MAX_ARG_PAGES defines the number of pages allocated for arguments&n; * and envelope for the new program. 32 should suffice, this gives&n; * a maximum env+arg of 128kB !&n; */
DECL|macro|MAX_ARG_PAGES
mdefine_line|#define MAX_ARG_PAGES 32
multiline_comment|/*&n; * This structure is used to hold the arguments that are used when loading binaries.&n; */
DECL|struct|linux_binprm
r_struct
id|linux_binprm
(brace
DECL|member|buf
r_char
id|buf
(braket
l_int|128
)braket
suffix:semicolon
DECL|member|page
r_int
r_int
id|page
(braket
id|MAX_ARG_PAGES
)braket
suffix:semicolon
DECL|member|p
r_int
r_int
id|p
suffix:semicolon
DECL|member|inode
r_struct
id|inode
op_star
id|inode
suffix:semicolon
DECL|member|e_uid
DECL|member|e_gid
r_int
id|e_uid
comma
id|e_gid
suffix:semicolon
DECL|member|argc
DECL|member|envc
r_int
id|argc
comma
id|envc
suffix:semicolon
DECL|member|filename
r_char
op_star
id|filename
suffix:semicolon
multiline_comment|/* Name of binary */
)brace
suffix:semicolon
multiline_comment|/* This structure defines the functions that are used to load the binary formats that&n; * linux accepts. */
DECL|struct|linux_binfmt
r_struct
id|linux_binfmt
(brace
DECL|member|load_binary
r_int
(paren
op_star
id|load_binary
)paren
(paren
r_struct
id|linux_binprm
op_star
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
DECL|member|load_shlib
r_int
(paren
op_star
id|load_shlib
)paren
(paren
r_int
id|fd
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|linux_binfmt
id|formats
(braket
)braket
suffix:semicolon
macro_line|#endif
eof
