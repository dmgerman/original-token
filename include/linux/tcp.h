multiline_comment|/*&n; * INET&t;&t;An implementation of the TCP/IP protocol suite for the LINUX&n; *&t;&t;operating system.  INET is implemented using the  BSD Socket&n; *&t;&t;interface as the means of communication with the user level.&n; *&n; *&t;&t;Definitions for the TCP protocol.&n; *&n; * Version:&t;@(#)tcp.h&t;1.0.2&t;04/28/93&n; *&n; * Author:&t;Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;&n; *&n; *&t;&t;This program is free software; you can redistribute it and/or&n; *&t;&t;modify it under the terms of the GNU General Public License&n; *&t;&t;as published by the Free Software Foundation; either version&n; *&t;&t;2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _LINUX_TCP_H
DECL|macro|_LINUX_TCP_H
mdefine_line|#define _LINUX_TCP_H
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;asm/byteorder.h&gt;
DECL|struct|tcphdr
r_struct
id|tcphdr
(brace
DECL|member|source
id|__u16
id|source
suffix:semicolon
DECL|member|dest
id|__u16
id|dest
suffix:semicolon
DECL|member|seq
id|__u32
id|seq
suffix:semicolon
DECL|member|ack_seq
id|__u32
id|ack_seq
suffix:semicolon
macro_line|#if defined(__LITTLE_ENDIAN_BITFIELD)
DECL|member|res1
id|__u16
id|res1
suffix:colon
l_int|4
comma
DECL|member|doff
id|doff
suffix:colon
l_int|4
comma
DECL|member|fin
id|fin
suffix:colon
l_int|1
comma
DECL|member|syn
id|syn
suffix:colon
l_int|1
comma
DECL|member|rst
id|rst
suffix:colon
l_int|1
comma
DECL|member|psh
id|psh
suffix:colon
l_int|1
comma
DECL|member|ack
id|ack
suffix:colon
l_int|1
comma
DECL|member|urg
id|urg
suffix:colon
l_int|1
comma
DECL|member|res2
id|res2
suffix:colon
l_int|2
suffix:semicolon
macro_line|#elif defined(__BIG_ENDIAN_BITFIELD)
DECL|member|doff
id|__u16
id|doff
suffix:colon
l_int|4
comma
DECL|member|res1
id|res1
suffix:colon
l_int|4
comma
DECL|member|res2
id|res2
suffix:colon
l_int|2
comma
DECL|member|urg
id|urg
suffix:colon
l_int|1
comma
DECL|member|ack
id|ack
suffix:colon
l_int|1
comma
DECL|member|psh
id|psh
suffix:colon
l_int|1
comma
DECL|member|rst
id|rst
suffix:colon
l_int|1
comma
DECL|member|syn
id|syn
suffix:colon
l_int|1
comma
DECL|member|fin
id|fin
suffix:colon
l_int|1
suffix:semicolon
macro_line|#else
macro_line|#error&t;&quot;Adjust your &lt;asm/byteorder.h&gt; defines&quot;
macro_line|#endif&t;
DECL|member|window
id|__u16
id|window
suffix:semicolon
DECL|member|check
id|__u16
id|check
suffix:semicolon
DECL|member|urg_ptr
id|__u16
id|urg_ptr
suffix:semicolon
)brace
suffix:semicolon
r_enum
(brace
DECL|enumerator|TCP_ESTABLISHED
id|TCP_ESTABLISHED
op_assign
l_int|1
comma
DECL|enumerator|TCP_SYN_SENT
id|TCP_SYN_SENT
comma
DECL|enumerator|TCP_SYN_RECV
id|TCP_SYN_RECV
comma
DECL|enumerator|TCP_FIN_WAIT1
id|TCP_FIN_WAIT1
comma
DECL|enumerator|TCP_FIN_WAIT2
id|TCP_FIN_WAIT2
comma
DECL|enumerator|TCP_TIME_WAIT
id|TCP_TIME_WAIT
comma
DECL|enumerator|TCP_CLOSE
id|TCP_CLOSE
comma
DECL|enumerator|TCP_CLOSE_WAIT
id|TCP_CLOSE_WAIT
comma
DECL|enumerator|TCP_LAST_ACK
id|TCP_LAST_ACK
comma
DECL|enumerator|TCP_LISTEN
id|TCP_LISTEN
comma
DECL|enumerator|TCP_CLOSING
id|TCP_CLOSING
comma
multiline_comment|/* now a valid state */
DECL|enumerator|TCP_MAX_STATES
id|TCP_MAX_STATES
multiline_comment|/* Leave at the end! */
)brace
suffix:semicolon
DECL|macro|TCP_STATE_MASK
mdefine_line|#define TCP_STATE_MASK&t;0xF
DECL|macro|TCP_ACTION_FIN
mdefine_line|#define TCP_ACTION_FIN&t;1 &lt;&lt; 7
r_enum
(brace
DECL|enumerator|TCPF_ESTABLISHED
id|TCPF_ESTABLISHED
op_assign
(paren
l_int|1
op_lshift
l_int|1
)paren
comma
DECL|enumerator|TCPF_SYN_SENT
id|TCPF_SYN_SENT
op_assign
(paren
l_int|1
op_lshift
l_int|2
)paren
comma
DECL|enumerator|TCPF_SYN_RECV
id|TCPF_SYN_RECV
op_assign
(paren
l_int|1
op_lshift
l_int|3
)paren
comma
DECL|enumerator|TCPF_FIN_WAIT1
id|TCPF_FIN_WAIT1
op_assign
(paren
l_int|1
op_lshift
l_int|4
)paren
comma
DECL|enumerator|TCPF_FIN_WAIT2
id|TCPF_FIN_WAIT2
op_assign
(paren
l_int|1
op_lshift
l_int|5
)paren
comma
DECL|enumerator|TCPF_TIME_WAIT
id|TCPF_TIME_WAIT
op_assign
(paren
l_int|1
op_lshift
l_int|6
)paren
comma
DECL|enumerator|TCPF_CLOSE
id|TCPF_CLOSE
op_assign
(paren
l_int|1
op_lshift
l_int|7
)paren
comma
DECL|enumerator|TCPF_CLOSE_WAIT
id|TCPF_CLOSE_WAIT
op_assign
(paren
l_int|1
op_lshift
l_int|8
)paren
comma
DECL|enumerator|TCPF_LAST_ACK
id|TCPF_LAST_ACK
op_assign
(paren
l_int|1
op_lshift
l_int|9
)paren
comma
DECL|enumerator|TCPF_LISTEN
id|TCPF_LISTEN
op_assign
(paren
l_int|1
op_lshift
l_int|10
)paren
comma
DECL|enumerator|TCPF_CLOSING
id|TCPF_CLOSING
op_assign
(paren
l_int|1
op_lshift
l_int|11
)paren
)brace
suffix:semicolon
macro_line|#endif&t;/* _LINUX_TCP_H */
eof
