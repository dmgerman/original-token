multiline_comment|/*&n; * NET&t;&t;An implementation of the SOCKET network access protocol.&n; *&t;&t;This is the master header file for the Linux NET layer,&n; *&t;&t;or, in plain English: the networking handling part of the&n; *&t;&t;kernel.&n; *&n; * Version:&t;@(#)net.h&t;1.0.3&t;05/25/93&n; *&n; * Authors:&t;Orest Zborowski, &lt;obz@Kodak.COM&gt;&n; *&t;&t;Ross Biro, &lt;bir7@leland.Stanford.Edu&gt;&n; *&t;&t;Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;&n; *&n; *&t;&t;This program is free software; you can redistribute it and/or&n; *&t;&t;modify it under the terms of the GNU General Public License&n; *&t;&t;as published by the Free Software Foundation; either version&n; *&t;&t;2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _LINUX_NET_H
DECL|macro|_LINUX_NET_H
mdefine_line|#define _LINUX_NET_H
macro_line|#include &lt;linux/wait.h&gt;
macro_line|#include &lt;linux/socket.h&gt;
DECL|macro|NPROTO
mdefine_line|#define NPROTO&t;&t;16&t;&t;/* should be enough for now..&t;*/
DECL|macro|SYS_SOCKET
mdefine_line|#define SYS_SOCKET&t;1&t;&t;/* sys_socket(2)&t;&t;*/
DECL|macro|SYS_BIND
mdefine_line|#define SYS_BIND&t;2&t;&t;/* sys_bind(2)&t;&t;&t;*/
DECL|macro|SYS_CONNECT
mdefine_line|#define SYS_CONNECT&t;3&t;&t;/* sys_connect(2)&t;&t;*/
DECL|macro|SYS_LISTEN
mdefine_line|#define SYS_LISTEN&t;4&t;&t;/* sys_listen(2)&t;&t;*/
DECL|macro|SYS_ACCEPT
mdefine_line|#define SYS_ACCEPT&t;5&t;&t;/* sys_accept(2)&t;&t;*/
DECL|macro|SYS_GETSOCKNAME
mdefine_line|#define SYS_GETSOCKNAME&t;6&t;&t;/* sys_getsockname(2)&t;&t;*/
DECL|macro|SYS_GETPEERNAME
mdefine_line|#define SYS_GETPEERNAME&t;7&t;&t;/* sys_getpeername(2)&t;&t;*/
DECL|macro|SYS_SOCKETPAIR
mdefine_line|#define SYS_SOCKETPAIR&t;8&t;&t;/* sys_socketpair(2)&t;&t;*/
DECL|macro|SYS_SEND
mdefine_line|#define SYS_SEND&t;9&t;&t;/* sys_send(2)&t;&t;&t;*/
DECL|macro|SYS_RECV
mdefine_line|#define SYS_RECV&t;10&t;&t;/* sys_recv(2)&t;&t;&t;*/
DECL|macro|SYS_SENDTO
mdefine_line|#define SYS_SENDTO&t;11&t;&t;/* sys_sendto(2)&t;&t;*/
DECL|macro|SYS_RECVFROM
mdefine_line|#define SYS_RECVFROM&t;12&t;&t;/* sys_recvfrom(2)&t;&t;*/
DECL|macro|SYS_SHUTDOWN
mdefine_line|#define SYS_SHUTDOWN&t;13&t;&t;/* sys_shutdown(2)&t;&t;*/
DECL|macro|SYS_SETSOCKOPT
mdefine_line|#define SYS_SETSOCKOPT&t;14&t;&t;/* sys_setsockopt(2)&t;&t;*/
DECL|macro|SYS_GETSOCKOPT
mdefine_line|#define SYS_GETSOCKOPT&t;15&t;&t;/* sys_getsockopt(2)&t;&t;*/
DECL|macro|SYS_SENDMSG
mdefine_line|#define SYS_SENDMSG&t;16&t;&t;/* sys_sendmsg(2)&t;&t;*/
DECL|macro|SYS_RECVMSG
mdefine_line|#define SYS_RECVMSG&t;17&t;&t;/* sys_recvmsg(2)&t;&t;*/
r_typedef
r_enum
(brace
DECL|enumerator|SS_FREE
id|SS_FREE
op_assign
l_int|0
comma
multiline_comment|/* not allocated&t;&t;*/
DECL|enumerator|SS_UNCONNECTED
id|SS_UNCONNECTED
comma
multiline_comment|/* unconnected to any socket&t;*/
DECL|enumerator|SS_CONNECTING
id|SS_CONNECTING
comma
multiline_comment|/* in process of connecting&t;*/
DECL|enumerator|SS_CONNECTED
id|SS_CONNECTED
comma
multiline_comment|/* connected to socket&t;&t;*/
DECL|enumerator|SS_DISCONNECTING
id|SS_DISCONNECTING
multiline_comment|/* in process of disconnecting&t;*/
DECL|typedef|socket_state
)brace
id|socket_state
suffix:semicolon
DECL|macro|SO_ACCEPTCON
mdefine_line|#define SO_ACCEPTCON&t;(1&lt;&lt;16)&t;&t;/* performed a listen&t;&t;*/
DECL|macro|SO_WAITDATA
mdefine_line|#define SO_WAITDATA&t;(1&lt;&lt;17)&t;&t;/* wait data to read&t;&t;*/
DECL|macro|SO_NOSPACE
mdefine_line|#define SO_NOSPACE&t;(1&lt;&lt;18)&t;&t;/* no space to write&t;&t;*/
macro_line|#ifdef __KERNEL__
DECL|struct|socket
r_struct
id|socket
(brace
DECL|member|state
id|socket_state
id|state
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|ops
r_struct
id|proto_ops
op_star
id|ops
suffix:semicolon
DECL|member|inode
r_struct
id|inode
op_star
id|inode
suffix:semicolon
DECL|member|fasync_list
r_struct
id|fasync_struct
op_star
id|fasync_list
suffix:semicolon
multiline_comment|/* Asynchronous wake up list&t;*/
DECL|member|file
r_struct
id|file
op_star
id|file
suffix:semicolon
multiline_comment|/* File back pointer for gc&t;*/
DECL|member|sk
r_struct
id|sock
op_star
id|sk
suffix:semicolon
DECL|member|wait
r_struct
id|wait_queue
op_star
id|wait
suffix:semicolon
DECL|member|type
r_int
id|type
suffix:semicolon
DECL|member|passcred
r_int
r_char
id|passcred
suffix:semicolon
DECL|member|tli
r_int
r_char
id|tli
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|SOCK_INODE
mdefine_line|#define SOCK_INODE(S)&t;((S)-&gt;inode)
r_struct
id|scm_cookie
suffix:semicolon
DECL|struct|proto_ops
r_struct
id|proto_ops
(brace
DECL|member|family
r_int
id|family
suffix:semicolon
DECL|member|dup
r_int
(paren
op_star
id|dup
)paren
(paren
r_struct
id|socket
op_star
id|newsock
comma
r_struct
id|socket
op_star
id|oldsock
)paren
suffix:semicolon
DECL|member|release
r_int
(paren
op_star
id|release
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|socket
op_star
id|peer
)paren
suffix:semicolon
DECL|member|bind
r_int
(paren
op_star
id|bind
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|sockaddr
op_star
id|umyaddr
comma
r_int
id|sockaddr_len
)paren
suffix:semicolon
DECL|member|connect
r_int
(paren
op_star
id|connect
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|sockaddr
op_star
id|uservaddr
comma
r_int
id|sockaddr_len
comma
r_int
id|flags
)paren
suffix:semicolon
DECL|member|socketpair
r_int
(paren
op_star
id|socketpair
)paren
(paren
r_struct
id|socket
op_star
id|sock1
comma
r_struct
id|socket
op_star
id|sock2
)paren
suffix:semicolon
DECL|member|accept
r_int
(paren
op_star
id|accept
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|socket
op_star
id|newsock
comma
r_int
id|flags
)paren
suffix:semicolon
DECL|member|getname
r_int
(paren
op_star
id|getname
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|sockaddr
op_star
id|uaddr
comma
r_int
op_star
id|usockaddr_len
comma
r_int
id|peer
)paren
suffix:semicolon
DECL|member|select
r_int
(paren
op_star
id|select
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
id|sel_type
comma
id|select_table
op_star
id|wait
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
DECL|member|listen
r_int
(paren
op_star
id|listen
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|shutdown
r_int
(paren
op_star
id|shutdown
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
id|flags
)paren
suffix:semicolon
DECL|member|setsockopt
r_int
(paren
op_star
id|setsockopt
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
id|level
comma
r_int
id|optname
comma
r_char
op_star
id|optval
comma
r_int
id|optlen
)paren
suffix:semicolon
DECL|member|getsockopt
r_int
(paren
op_star
id|getsockopt
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
id|level
comma
r_int
id|optname
comma
r_char
op_star
id|optval
comma
r_int
op_star
id|optlen
)paren
suffix:semicolon
DECL|member|fcntl
r_int
(paren
op_star
id|fcntl
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
DECL|member|sendmsg
r_int
(paren
op_star
id|sendmsg
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|msghdr
op_star
id|m
comma
r_int
id|total_len
comma
r_struct
id|scm_cookie
op_star
id|scm
)paren
suffix:semicolon
DECL|member|recvmsg
r_int
(paren
op_star
id|recvmsg
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_struct
id|msghdr
op_star
id|m
comma
r_int
id|total_len
comma
r_int
id|flags
comma
r_struct
id|scm_cookie
op_star
id|scm
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|net_proto_family
r_struct
id|net_proto_family
(brace
DECL|member|family
r_int
id|family
suffix:semicolon
DECL|member|create
r_int
(paren
op_star
id|create
)paren
(paren
r_struct
id|socket
op_star
id|sock
comma
r_int
id|protocol
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|net_proto
r_struct
id|net_proto
(brace
DECL|member|name
r_const
r_char
op_star
id|name
suffix:semicolon
multiline_comment|/* Protocol name */
DECL|member|init_func
r_void
(paren
op_star
id|init_func
)paren
(paren
r_struct
id|net_proto
op_star
)paren
suffix:semicolon
multiline_comment|/* Bootstrap */
)brace
suffix:semicolon
r_extern
r_int
id|sock_wake_async
c_func
(paren
r_struct
id|socket
op_star
id|sk
comma
r_int
id|how
)paren
suffix:semicolon
r_extern
r_int
id|sock_register
c_func
(paren
r_struct
id|net_proto_family
op_star
id|fam
)paren
suffix:semicolon
r_extern
r_int
id|sock_unregister
c_func
(paren
r_int
id|family
)paren
suffix:semicolon
r_extern
r_struct
id|socket
op_star
id|sock_alloc
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|sock_release
c_func
(paren
r_struct
id|socket
op_star
)paren
suffix:semicolon
r_extern
r_int
id|sock_sendmsg
c_func
(paren
r_struct
id|socket
op_star
comma
r_struct
id|msghdr
op_star
id|m
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_int
id|sock_recvmsg
c_func
(paren
r_struct
id|socket
op_star
comma
r_struct
id|msghdr
op_star
id|m
comma
r_int
id|len
comma
r_int
id|flags
)paren
suffix:semicolon
r_extern
r_int
id|sock_readv_writev
c_func
(paren
r_int
id|type
comma
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|file
comma
r_const
r_struct
id|iovec
op_star
id|iov
comma
r_int
id|count
comma
r_int
id|size
)paren
suffix:semicolon
macro_line|#endif /* __KERNEL__ */
macro_line|#endif&t;/* _LINUX_NET_H */
eof
