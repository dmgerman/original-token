multiline_comment|/* -*- linux-c -*- --------------------------------------------------------- *&n; *&n; * linux/include/linux/devpts_fs.h&n; *&n; *  Copyright 1998 H. Peter Anvin -- All Rights Reserved&n; *&n; * This file is part of the Linux kernel and is made available under&n; * the terms of the GNU General Public License, version 2, or at your&n; * option, any later version, incorporated herein by reference.&n; *&n; * ------------------------------------------------------------------------- */
multiline_comment|/*&n; * Prototypes for the pty driver &lt;-&gt; devpts filesystem interface.  Most&n; * of this is really just a hack so we can exclude it or build it as a&n; * module, and probably should go away eventually.&n; */
macro_line|#ifndef _LINUX_DEVPTS_FS_H
DECL|macro|_LINUX_DEVPTS_FS_H
mdefine_line|#define _LINUX_DEVPTS_FS_H 1
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/kdev_t.h&gt;
macro_line|#include &lt;linux/tty.h&gt;
macro_line|#ifdef CONFIG_DEVPTS_FS
r_void
id|devpts_pty_new
c_func
(paren
r_int
comma
id|kdev_t
)paren
suffix:semicolon
r_void
id|devpts_pty_kill
c_func
(paren
r_int
)paren
suffix:semicolon
DECL|macro|unix98_max_ptys
mdefine_line|#define unix98_max_ptys               NR_PTYS * UNIX98_NR_MAJORS;
macro_line|#elif defined(CONFIG_DEVPTS_FS_MODULE)
macro_line|#ifdef BUILDING_PTY_C
DECL|variable|devpts_upcall_new
r_void
(paren
op_star
id|devpts_upcall_new
)paren
(paren
r_int
comma
id|kdev_t
)paren
op_assign
l_int|NULL
suffix:semicolon
DECL|variable|devpts_upcall_kill
r_void
(paren
op_star
id|devpts_upcall_kill
)paren
(paren
r_int
)paren
op_assign
l_int|NULL
suffix:semicolon
DECL|variable|unix98_max_ptys
r_int
r_int
id|unix98_max_ptys
op_assign
id|NR_PTYS
op_star
id|UNIX98_NR_MAJORS
suffix:semicolon
DECL|variable|devpts_upcall_new
id|EXPORT_SYMBOL
c_func
(paren
id|devpts_upcall_new
)paren
suffix:semicolon
DECL|variable|devpts_upcall_kill
id|EXPORT_SYMBOL
c_func
(paren
id|devpts_upcall_kill
)paren
suffix:semicolon
DECL|variable|unix98_max_ptys
id|EXPORT_SYMBOL
c_func
(paren
id|unix98_max_ptys
)paren
suffix:semicolon
macro_line|#else
r_extern
r_void
(paren
op_star
id|devpts_upcall_new
)paren
(paren
r_int
comma
id|kdev_t
)paren
suffix:semicolon
r_extern
r_void
(paren
op_star
id|devpts_upcall_kill
)paren
(paren
r_int
)paren
suffix:semicolon
r_extern
r_int
r_int
id|unix98_max_ptys
suffix:semicolon
macro_line|#endif
macro_line|#ifndef BUILDING_DEVPTS
r_static
r_inline
r_void
DECL|function|devpts_pty_new
id|devpts_pty_new
c_func
(paren
r_int
id|line
comma
id|kdev_t
id|device
)paren
(brace
r_if
c_cond
(paren
id|devpts_upcall_new
)paren
r_return
id|devpts_upcall_new
c_func
(paren
id|line
comma
id|device
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|devpts_pty_kill
id|devpts_pty_kill
c_func
(paren
r_int
id|line
)paren
(brace
r_if
c_cond
(paren
id|devpts_upcall_kill
)paren
r_return
id|devpts_upcall_kill
c_func
(paren
id|line
)paren
suffix:semicolon
)brace
macro_line|#endif
macro_line|#else  /* No /dev/pts filesystem at all */
r_static
r_inline
r_void
DECL|function|devpts_pty_new
id|devpts_pty_new
c_func
(paren
r_int
id|line
comma
id|kdev_t
id|device
)paren
(brace
)brace
r_static
r_inline
r_void
DECL|function|devpts_pty_kill
id|devpts_pty_kill
c_func
(paren
r_int
id|line
)paren
(brace
)brace
macro_line|#endif
macro_line|#endif /* _LINUX_DEVPTS_FS_H */
eof
