macro_line|#ifndef __LINUX_VMALLOC_H
DECL|macro|__LINUX_VMALLOC_H
mdefine_line|#define __LINUX_VMALLOC_H
macro_line|#include &lt;linux/sched.h&gt;
macro_line|#include &lt;linux/mm.h&gt;
macro_line|#include &lt;asm/pgtable.h&gt;
DECL|struct|vm_struct
r_struct
id|vm_struct
(brace
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|addr
r_void
op_star
id|addr
suffix:semicolon
DECL|member|size
r_int
r_int
id|size
suffix:semicolon
DECL|member|next
r_struct
id|vm_struct
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|vm_struct
op_star
id|get_vm_area
c_func
(paren
r_int
r_int
id|size
)paren
suffix:semicolon
r_void
id|vfree
c_func
(paren
r_void
op_star
id|addr
)paren
suffix:semicolon
r_void
op_star
id|vmalloc
c_func
(paren
r_int
r_int
id|size
)paren
suffix:semicolon
r_int
id|vread
c_func
(paren
r_char
op_star
id|buf
comma
r_char
op_star
id|addr
comma
r_int
id|count
)paren
suffix:semicolon
DECL|function|set_pgdir
r_extern
r_inline
r_void
id|set_pgdir
c_func
(paren
r_int
r_int
id|address
comma
id|pgd_t
id|entry
)paren
(brace
macro_line|#ifndef __mc68000__
r_struct
id|task_struct
op_star
id|p
suffix:semicolon
id|for_each_task
c_func
(paren
id|p
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|p-&gt;mm
)paren
r_continue
suffix:semicolon
op_star
id|pgd_offset
c_func
(paren
id|p-&gt;mm
comma
id|address
)paren
op_assign
id|entry
suffix:semicolon
)brace
macro_line|#endif
)brace
macro_line|#endif
eof
