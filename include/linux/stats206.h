multiline_comment|/* stats206.h. Define constants to gather statistics on the cm206 behavior.&n;   Copyright (c) 1995 David van Leeuwen.&n;   &n;   This is published under the Gnu Public Licence, read the header in &n;   the file cm206.c.&n;*/
multiline_comment|/* This is an ugly way to guarantee that the names of the statistics&n; * are the same in the code and in the diagnostics program.  */
macro_line|#ifdef __KERNEL__
DECL|macro|x
mdefine_line|#define x(a) st_ ## a
DECL|macro|y
mdefine_line|#define y enum
macro_line|#else
DECL|macro|x
mdefine_line|#define x(a) #a
DECL|macro|y
mdefine_line|#define y char * stats_name[] = 
macro_line|#endif
id|y
(brace
id|x
c_func
(paren
id|interrupt
)paren
comma
id|x
c_func
(paren
id|data_ready
)paren
comma
id|x
c_func
(paren
id|fifo_overflow
)paren
comma
id|x
c_func
(paren
id|data_error
)paren
comma
id|x
c_func
(paren
id|crc_error
)paren
comma
id|x
c_func
(paren
id|sync_error
)paren
comma
id|x
c_func
(paren
id|lost_intr
)paren
comma
id|x
c_func
(paren
id|echo
)paren
comma
id|x
c_func
(paren
id|write_timeout
)paren
comma
id|x
c_func
(paren
id|receive_timeout
)paren
comma
id|x
c_func
(paren
id|read_timeout
)paren
comma
id|x
c_func
(paren
id|dsb_timeout
)paren
comma
id|x
c_func
(paren
id|stop_0xff
)paren
comma
id|x
c_func
(paren
id|back_read_timeout
)paren
comma
id|x
c_func
(paren
id|sector_transferred
)paren
comma
id|x
c_func
(paren
id|read_restarted
)paren
comma
id|x
c_func
(paren
id|read_background
)paren
comma
id|x
c_func
(paren
id|bh
)paren
comma
id|x
c_func
(paren
id|open
)paren
comma
id|x
c_func
(paren
id|ioctl_multisession
)paren
macro_line|#ifdef __KERNEL__
comma
id|x
c_func
(paren
id|last_entry
)paren
macro_line|#endif
)brace
suffix:semicolon
macro_line|#ifdef __KERNEL__
DECL|macro|NR_STATS
mdefine_line|#define NR_STATS st_last_entry
macro_line|#else
DECL|macro|NR_STATS
mdefine_line|#define NR_STATS sizeof(stats_name)/sizeof(char*)
macro_line|#endif
eof
