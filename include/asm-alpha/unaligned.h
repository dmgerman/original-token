macro_line|#ifndef __ALPHA_UNALIGNED_H
DECL|macro|__ALPHA_UNALIGNED_H
mdefine_line|#define __ALPHA_UNALIGNED_H
multiline_comment|/*&n; * inline functions to do unaligned accesses.. See entUna in traps.c&n; */
DECL|function|ldq_u
r_extern
r_inline
r_int
r_int
id|ldq_u
c_func
(paren
r_int
r_int
op_star
id|r11
)paren
(brace
r_int
r_int
id|r1
comma
id|r2
suffix:semicolon
id|__asm__
c_func
(paren
l_string|&quot;ldq_u %0,%3&bslash;n&bslash;t&quot;
l_string|&quot;ldq_u %1,%4&bslash;n&bslash;t&quot;
l_string|&quot;extql %0,%2,%0&bslash;n&bslash;t&quot;
l_string|&quot;extqh %1,%2,%1&bslash;n&bslash;t&quot;
l_string|&quot;bis %1,%0,%0&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|r1
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r2
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|r11
)paren
comma
l_string|&quot;m&quot;
(paren
op_star
id|r11
)paren
comma
l_string|&quot;m&quot;
(paren
op_star
(paren
r_int
r_int
op_star
)paren
(paren
l_int|7
op_plus
(paren
r_char
op_star
)paren
id|r11
)paren
)paren
)paren
suffix:semicolon
r_return
id|r1
suffix:semicolon
)brace
DECL|function|ldl_u
r_extern
r_inline
r_int
r_int
id|ldl_u
c_func
(paren
r_int
r_int
op_star
id|r11
)paren
(brace
r_int
r_int
id|r1
comma
id|r2
suffix:semicolon
id|__asm__
c_func
(paren
l_string|&quot;ldq_u %0,%3&bslash;n&bslash;t&quot;
l_string|&quot;ldq_u %1,%4&bslash;n&bslash;t&quot;
l_string|&quot;extll %0,%2,%0&bslash;n&bslash;t&quot;
l_string|&quot;extlh %1,%2,%1&bslash;n&bslash;t&quot;
l_string|&quot;bis %1,%0,%0&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|r1
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r2
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|r11
)paren
comma
l_string|&quot;m&quot;
(paren
op_star
id|r11
)paren
comma
l_string|&quot;m&quot;
(paren
op_star
(paren
r_int
r_int
op_star
)paren
(paren
l_int|3
op_plus
(paren
r_char
op_star
)paren
id|r11
)paren
)paren
)paren
suffix:semicolon
r_return
id|r1
suffix:semicolon
)brace
DECL|function|ldw_u
r_extern
r_inline
r_int
r_int
id|ldw_u
c_func
(paren
r_int
r_int
op_star
id|r11
)paren
(brace
r_int
r_int
id|r1
comma
id|r2
suffix:semicolon
id|__asm__
c_func
(paren
l_string|&quot;ldq_u %0,%3&bslash;n&bslash;t&quot;
l_string|&quot;ldq_u %1,%4&bslash;n&bslash;t&quot;
l_string|&quot;extwl %0,%2,%0&bslash;n&bslash;t&quot;
l_string|&quot;extwh %1,%2,%1&bslash;n&bslash;t&quot;
l_string|&quot;bis %1,%0,%0&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|r1
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r2
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|r11
)paren
comma
l_string|&quot;m&quot;
(paren
op_star
id|r11
)paren
comma
l_string|&quot;m&quot;
(paren
op_star
(paren
r_int
r_int
op_star
)paren
(paren
l_int|1
op_plus
(paren
r_char
op_star
)paren
id|r11
)paren
)paren
)paren
suffix:semicolon
r_return
id|r1
suffix:semicolon
)brace
DECL|function|stq_u
r_extern
r_inline
r_void
id|stq_u
c_func
(paren
r_int
r_int
id|r5
comma
r_int
r_int
op_star
id|r11
)paren
(brace
r_int
r_int
id|r1
comma
id|r2
comma
id|r3
comma
id|r4
suffix:semicolon
id|__asm__
c_func
(paren
l_string|&quot;ldq_u %3,%1&bslash;n&bslash;t&quot;
l_string|&quot;ldq_u %2,%0&bslash;n&bslash;t&quot;
l_string|&quot;insqh %6,%7,%5&bslash;n&bslash;t&quot;
l_string|&quot;insql %6,%7,%4&bslash;n&bslash;t&quot;
l_string|&quot;mskqh %3,%7,%3&bslash;n&bslash;t&quot;
l_string|&quot;mskql %2,%7,%2&bslash;n&bslash;t&quot;
l_string|&quot;bis %3,%5,%3&bslash;n&bslash;t&quot;
l_string|&quot;bis %2,%4,%2&bslash;n&bslash;t&quot;
l_string|&quot;stq_u %3,%1&bslash;n&bslash;t&quot;
l_string|&quot;stq_u %2,%0&quot;
suffix:colon
l_string|&quot;=m&quot;
(paren
op_star
id|r11
)paren
comma
l_string|&quot;=m&quot;
(paren
op_star
(paren
r_int
r_int
op_star
)paren
(paren
l_int|7
op_plus
(paren
r_char
op_star
)paren
id|r11
)paren
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r1
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r2
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r3
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r4
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|r5
)paren
comma
l_string|&quot;r&quot;
(paren
id|r11
)paren
)paren
suffix:semicolon
)brace
DECL|function|stl_u
r_extern
r_inline
r_void
id|stl_u
c_func
(paren
r_int
r_int
id|r5
comma
r_int
r_int
op_star
id|r11
)paren
(brace
r_int
r_int
id|r1
comma
id|r2
comma
id|r3
comma
id|r4
suffix:semicolon
id|__asm__
c_func
(paren
l_string|&quot;ldq_u %3,%1&bslash;n&bslash;t&quot;
l_string|&quot;ldq_u %2,%0&bslash;n&bslash;t&quot;
l_string|&quot;inslh %6,%7,%5&bslash;n&bslash;t&quot;
l_string|&quot;insll %6,%7,%4&bslash;n&bslash;t&quot;
l_string|&quot;msklh %3,%7,%3&bslash;n&bslash;t&quot;
l_string|&quot;mskll %2,%7,%2&bslash;n&bslash;t&quot;
l_string|&quot;bis %3,%5,%3&bslash;n&bslash;t&quot;
l_string|&quot;bis %2,%4,%2&bslash;n&bslash;t&quot;
l_string|&quot;stq_u %3,%1&bslash;n&bslash;t&quot;
l_string|&quot;stq_u %2,%0&quot;
suffix:colon
l_string|&quot;=m&quot;
(paren
op_star
id|r11
)paren
comma
l_string|&quot;=m&quot;
(paren
op_star
(paren
r_int
r_int
op_star
)paren
(paren
l_int|3
op_plus
(paren
r_char
op_star
)paren
id|r11
)paren
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r1
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r2
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r3
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r4
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|r5
)paren
comma
l_string|&quot;r&quot;
(paren
id|r11
)paren
)paren
suffix:semicolon
)brace
DECL|function|stw_u
r_extern
r_inline
r_void
id|stw_u
c_func
(paren
r_int
r_int
id|r5
comma
r_int
r_int
op_star
id|r11
)paren
(brace
r_int
r_int
id|r1
comma
id|r2
comma
id|r3
comma
id|r4
suffix:semicolon
id|__asm__
c_func
(paren
l_string|&quot;ldq_u %3,%1&bslash;n&bslash;t&quot;
l_string|&quot;ldq_u %2,%0&bslash;n&bslash;t&quot;
l_string|&quot;inswh %6,%7,%5&bslash;n&bslash;t&quot;
l_string|&quot;inswl %6,%7,%4&bslash;n&bslash;t&quot;
l_string|&quot;mskwh %3,%7,%3&bslash;n&bslash;t&quot;
l_string|&quot;mskwl %2,%7,%2&bslash;n&bslash;t&quot;
l_string|&quot;bis %3,%5,%3&bslash;n&bslash;t&quot;
l_string|&quot;bis %2,%4,%2&bslash;n&bslash;t&quot;
l_string|&quot;stq_u %3,%1&bslash;n&bslash;t&quot;
l_string|&quot;stq_u %2,%0&quot;
suffix:colon
l_string|&quot;=m&quot;
(paren
op_star
id|r11
)paren
comma
l_string|&quot;=m&quot;
(paren
op_star
(paren
r_int
r_int
op_star
)paren
(paren
l_int|1
op_plus
(paren
r_char
op_star
)paren
id|r11
)paren
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r1
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r2
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r3
)paren
comma
l_string|&quot;=&amp;r&quot;
(paren
id|r4
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|r5
)paren
comma
l_string|&quot;r&quot;
(paren
id|r11
)paren
)paren
suffix:semicolon
)brace
macro_line|#endif
eof
