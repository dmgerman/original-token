multiline_comment|/* $Id: irq.h,v 1.4 1997/04/04 00:50:20 davem Exp $&n; * irq.h: IRQ registers on the 64-bit Sparc.&n; *&n; * Copyright (C) 1996 David S. Miller (davem@caip.rutgers.edu)&n; */
macro_line|#ifndef _SPARC64_IRQ_H
DECL|macro|_SPARC64_IRQ_H
mdefine_line|#define _SPARC64_IRQ_H
macro_line|#include &lt;linux/linkage.h&gt;
macro_line|#include &lt;asm/system.h&gt;     /* For NCPUS */
DECL|macro|NR_IRQS
mdefine_line|#define NR_IRQS    15
r_extern
r_void
id|disable_irq
c_func
(paren
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|enable_irq
c_func
(paren
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|init_timers
c_func
(paren
r_void
(paren
op_star
id|lvl10_irq
)paren
(paren
r_int
comma
r_void
op_star
comma
r_struct
id|pt_regs
op_star
)paren
)paren
suffix:semicolon
macro_line|#ifdef __SMP__
r_extern
r_void
id|set_cpu_int
c_func
(paren
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|clear_cpu_int
c_func
(paren
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|set_irq_udt
c_func
(paren
r_int
)paren
suffix:semicolon
macro_line|#endif
r_extern
r_int
id|request_fast_irq
c_func
(paren
r_int
r_int
id|irq
comma
r_void
(paren
op_star
id|handler
)paren
(paren
r_int
comma
r_void
op_star
comma
r_struct
id|pt_regs
op_star
)paren
comma
r_int
r_int
id|flags
comma
id|__const__
r_char
op_star
id|devname
)paren
suffix:semicolon
DECL|function|set_softint
r_extern
id|__inline__
r_void
id|set_softint
c_func
(paren
r_int
r_int
id|bits
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;wr&t;%0, 0x0, %%set_softint&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|bits
)paren
)paren
suffix:semicolon
)brace
DECL|function|clear_softint
r_extern
id|__inline__
r_void
id|clear_softint
c_func
(paren
r_int
r_int
id|bits
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;wr&t;%0, 0x0, %%clear_softint&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|bits
)paren
)paren
suffix:semicolon
)brace
DECL|function|get_softint
r_extern
id|__inline__
r_int
r_int
id|get_softint
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|retval
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;rd&t;%%softint, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|retval
)paren
)paren
suffix:semicolon
r_return
id|retval
suffix:semicolon
)brace
macro_line|#endif
eof
