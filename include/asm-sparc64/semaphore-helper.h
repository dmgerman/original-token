macro_line|#ifndef _SPARC64_SEMAPHORE_HELPER_H
DECL|macro|_SPARC64_SEMAPHORE_HELPER_H
mdefine_line|#define _SPARC64_SEMAPHORE_HELPER_H
multiline_comment|/*&n; * SMP- and interrupt-safe semaphore helper functions, sparc64 version.&n; *&n; * (C) Copyright 1999 David S. Miller (davem@redhat.com)&n; * (C) Copyright 1999 Jakub Jelinek (jj@ultra.linux.cz)&n; */
DECL|macro|wake_one_more
mdefine_line|#define wake_one_more(__sem)      atomic_inc(&amp;((__sem)-&gt;waking));
DECL|macro|waking_non_zero
mdefine_line|#define waking_non_zero(__sem)&t;&t;&t;&t;&bslash;&n;({&t;int __ret;&t;&t;&t;&t;&t;&bslash;&n;&t;__asm__ __volatile__(&t;&t;&t;&t;&bslash;&n;&quot;1:&t;ldsw&t;&t;[%1], %%g5&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;brlez,pt&t;%%g5, 2f&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot; mov&t;&t;0, %0&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;sub&t;&t;%%g5, 1, %%g7&bslash;n&bslash;t&quot;&t;&t;&bslash;&n;&t;&quot;cas&t;&t;[%1], %%g5, %%g7&bslash;n&bslash;t&quot;&t;&t;&bslash;&n;&t;&quot;cmp&t;&t;%%g5, %%g7&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;bne,pn&t;&t;%%icc, 1b&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot; mov&t;&t;1, %0&bslash;n&quot;&t;&t;&t;&bslash;&n;&quot;2:&quot;&t;: &quot;=&amp;r&quot; (__ret)&t;&t;&t;&t;&t;&bslash;&n;&t;: &quot;r&quot; (&amp;((__sem)-&gt;waking))&t;&t;&t;&bslash;&n;&t;: &quot;g5&quot;, &quot;g7&quot;, &quot;cc&quot;, &quot;memory&quot;);&t;&t;&t;&bslash;&n;&t;__ret;&t;&t;&t;&t;&t;&t;&bslash;&n;})
DECL|macro|waking_non_zero_interruptible
mdefine_line|#define waking_non_zero_interruptible(__sem, __tsk)&t;&bslash;&n;({&t;int __ret;&t;&t;&t;&t;&t;&bslash;&n;&t;__asm__ __volatile__(&t;&t;&t;&t;&bslash;&n;&quot;1:&t;ldsw&t;&t;[%1], %%g5&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;brlez,pt&t;%%g5, 2f&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot; mov&t;&t;0, %0&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;sub&t;&t;%%g5, 1, %%g7&bslash;n&bslash;t&quot;&t;&t;&bslash;&n;&t;&quot;cas&t;&t;[%1], %%g5, %%g7&bslash;n&bslash;t&quot;&t;&t;&bslash;&n;&t;&quot;cmp&t;&t;%%g5, %%g7&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;bne,pn&t;&t;%%icc, 1b&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot; mov&t;&t;1, %0&bslash;n&quot;&t;&t;&t;&bslash;&n;&quot;2:&quot;&t;: &quot;=&amp;r&quot; (__ret)&t;&t;&t;&t;&t;&bslash;&n;&t;: &quot;r&quot; (&amp;((__sem)-&gt;waking))&t;&t;&t;&bslash;&n;&t;: &quot;g5&quot;, &quot;g7&quot;, &quot;cc&quot;, &quot;memory&quot;);&t;&t;&t;&bslash;&n;&t;if(__ret == 0 &amp;&amp; signal_pending(__tsk)) {&t;&bslash;&n;&t;&t;atomic_inc(&amp;((__sem)-&gt;count));&t;&t;&bslash;&n;&t;&t;__ret = -EINTR;&t;&t;&t;&t;&bslash;&n;&t;}&t;&t;&t;&t;&t;&t;&bslash;&n;&t;__ret;&t;&t;&t;&t;&t;&t;&bslash;&n;})
DECL|macro|waking_non_zero_trylock
mdefine_line|#define waking_non_zero_trylock(__sem)&t;&t;&t;&bslash;&n;({&t;int __ret;&t;&t;&t;&t;&t;&bslash;&n;&t;__asm__ __volatile__(&t;&t;&t;&t;&bslash;&n;&quot;1:&t;ldsw&t;&t;[%1], %%g5&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;brlez,pt&t;%%g5, 2f&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot; mov&t;&t;1, %0&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;sub&t;&t;%%g5, 1, %%g7&bslash;n&bslash;t&quot;&t;&t;&bslash;&n;&t;&quot;cas&t;&t;[%1], %%g5, %%g7&bslash;n&bslash;t&quot;&t;&t;&bslash;&n;&t;&quot;cmp&t;&t;%%g5, %%g7&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot;bne,pn&t;&t;%%icc, 1b&bslash;n&bslash;t&quot;&t;&t;&t;&bslash;&n;&t;&quot; mov&t;&t;0, %0&bslash;n&quot;&t;&t;&t;&bslash;&n;&quot;2:&quot;&t;: &quot;=&amp;r&quot; (__ret)&t;&t;&t;&t;&t;&bslash;&n;&t;: &quot;r&quot; (&amp;((__sem)-&gt;waking))&t;&t;&t;&bslash;&n;&t;: &quot;g5&quot;, &quot;g7&quot;, &quot;cc&quot;, &quot;memory&quot;);&t;&t;&t;&bslash;&n;&t;if(__ret == 1)&t;&t;&t;&t;&t;&bslash;&n;&t;&t;atomic_inc(&amp;((__sem)-&gt;count));&t;&t;&bslash;&n;&t;__ret;&t;&t;&t;&t;&t;&t;&bslash;&n;})
macro_line|#endif /* !(_SPARC64_SEMAPHORE_HELPER_H) */
eof
