multiline_comment|/* fpumacro.h: FPU related macros.&n; *&n; * Copyright (C) 1997 Jakub Jelinek (jj@sunsite.mff.cuni.cz)&n; * Copyright (C) 1997 David S. Miller (davem@caip.rutgers.edu)&n; */
macro_line|#ifndef _SPARC64_FPUMACRO_H
DECL|macro|_SPARC64_FPUMACRO_H
mdefine_line|#define _SPARC64_FPUMACRO_H
DECL|function|fprs_read
r_extern
id|__inline__
r_int
r_int
id|fprs_read
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|retval
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;rd %%fprs, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|retval
)paren
)paren
suffix:semicolon
r_return
id|retval
suffix:semicolon
)brace
DECL|function|fprs_write
r_extern
id|__inline__
r_void
id|fprs_write
c_func
(paren
r_int
r_int
id|val
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;wr %0, 0x0, %%fprs&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|val
)paren
)paren
suffix:semicolon
)brace
DECL|function|fpsave32
r_extern
id|__inline__
r_void
id|fpsave32
c_func
(paren
r_int
r_int
op_star
id|fpregs
comma
r_int
r_int
op_star
id|fsr
)paren
(brace
id|__asm__
id|__volatile__
(paren
"&quot;"
id|wr
op_mod
op_mod
id|g0
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|asi
id|stx
op_mod
op_mod
id|fsr
comma
(braket
op_mod
l_int|1
)braket
id|stda
op_mod
op_mod
id|f0
comma
(braket
op_mod
l_int|0
)braket
op_mod
op_mod
id|asi
id|stda
op_mod
op_mod
id|f16
comma
(braket
op_mod
l_int|0
op_plus
l_int|64
)braket
op_mod
op_mod
id|asi
l_string|&quot; : : &quot;
id|r
l_string|&quot; (fpregs), &quot;
id|r
l_string|&quot; (fsr), &quot;
id|i
"&quot;"
(paren
id|ASI_BLK_P
)paren
)paren
suffix:semicolon
)brace
DECL|function|fpload32
r_extern
id|__inline__
r_void
id|fpload32
c_func
(paren
r_int
r_int
op_star
id|fpregs
comma
r_int
r_int
op_star
id|fsr
)paren
(brace
id|__asm__
id|__volatile__
(paren
"&quot;"
id|wr
op_mod
op_mod
id|g0
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|asi
id|ldda
(braket
op_mod
l_int|0
)braket
op_mod
op_mod
id|asi
comma
op_mod
op_mod
id|f0
id|ldda
(braket
op_mod
l_int|0
op_plus
l_int|64
)braket
op_mod
op_mod
id|asi
comma
op_mod
op_mod
id|f16
id|ldx
(braket
op_mod
l_int|1
)braket
comma
op_mod
op_mod
id|fsr
l_string|&quot; : : &quot;
id|r
l_string|&quot; (fpregs), &quot;
id|r
l_string|&quot; (fsr), &quot;
id|i
"&quot;"
(paren
id|ASI_BLK_P
)paren
)paren
suffix:semicolon
)brace
DECL|function|fpsave64hi
r_extern
id|__inline__
r_void
id|fpsave64hi
c_func
(paren
r_int
r_int
op_star
id|fpregs
comma
r_int
r_int
op_star
id|fsr
)paren
(brace
id|__asm__
id|__volatile__
(paren
"&quot;"
id|wr
op_mod
op_mod
id|g0
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|asi
id|stx
op_mod
op_mod
id|fsr
comma
(braket
op_mod
l_int|1
)braket
id|stda
op_mod
op_mod
id|f32
comma
(braket
op_mod
l_int|0
op_plus
l_int|128
)braket
op_mod
op_mod
id|asi
id|stda
op_mod
op_mod
id|f48
comma
(braket
op_mod
l_int|0
op_plus
l_int|192
)braket
op_mod
op_mod
id|asi
l_string|&quot; : : &quot;
id|r
l_string|&quot; (fpregs), &quot;
id|r
l_string|&quot; (fsr), &quot;
id|i
"&quot;"
(paren
id|ASI_BLK_P
)paren
)paren
suffix:semicolon
)brace
DECL|function|fpload64hi
r_extern
id|__inline__
r_void
id|fpload64hi
c_func
(paren
r_int
r_int
op_star
id|fpregs
comma
r_int
r_int
op_star
id|fsr
)paren
(brace
id|__asm__
id|__volatile__
(paren
"&quot;"
id|wr
op_mod
op_mod
id|g0
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|asi
id|ldda
(braket
op_mod
l_int|0
op_plus
l_int|128
)braket
op_mod
op_mod
id|asi
comma
op_mod
op_mod
id|f32
id|ldda
(braket
op_mod
l_int|0
op_plus
l_int|192
)braket
op_mod
op_mod
id|asi
comma
op_mod
op_mod
id|f48
id|ldx
(braket
op_mod
l_int|1
)braket
comma
op_mod
op_mod
id|fsr
l_string|&quot; : : &quot;
id|r
l_string|&quot; (fpregs), &quot;
id|r
l_string|&quot; (fsr), &quot;
id|i
"&quot;"
(paren
id|ASI_BLK_P
)paren
)paren
suffix:semicolon
)brace
DECL|function|fpsave
r_extern
id|__inline__
r_void
id|fpsave
c_func
(paren
r_int
r_int
op_star
id|fpregs
comma
r_int
r_int
op_star
id|fsr
)paren
(brace
id|__asm__
id|__volatile__
(paren
"&quot;"
id|wr
op_mod
op_mod
id|g0
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|asi
id|stx
op_mod
op_mod
id|fsr
comma
(braket
op_mod
l_int|1
)braket
id|stda
op_mod
op_mod
id|f0
comma
(braket
op_mod
l_int|0
)braket
op_mod
op_mod
id|asi
id|stda
op_mod
op_mod
id|f16
comma
(braket
op_mod
l_int|0
op_plus
l_int|64
)braket
op_mod
op_mod
id|asi
id|stda
op_mod
op_mod
id|f32
comma
(braket
op_mod
l_int|0
op_plus
l_int|128
)braket
op_mod
op_mod
id|asi
id|stda
op_mod
op_mod
id|f48
comma
(braket
op_mod
l_int|0
op_plus
l_int|192
)braket
op_mod
op_mod
id|asi
l_string|&quot; : : &quot;
id|r
l_string|&quot; (fpregs), &quot;
id|r
l_string|&quot; (fsr), &quot;
id|i
"&quot;"
(paren
id|ASI_BLK_P
)paren
)paren
suffix:semicolon
)brace
DECL|function|fpload
r_extern
id|__inline__
r_void
id|fpload
c_func
(paren
r_int
r_int
op_star
id|fpregs
comma
r_int
r_int
op_star
id|fsr
)paren
(brace
id|__asm__
id|__volatile__
(paren
"&quot;"
id|wr
op_mod
op_mod
id|g0
comma
op_mod
l_int|2
comma
op_mod
op_mod
id|asi
id|ldda
(braket
op_mod
l_int|0
)braket
op_mod
op_mod
id|asi
comma
op_mod
op_mod
id|f0
id|ldda
(braket
op_mod
l_int|0
op_plus
l_int|64
)braket
op_mod
op_mod
id|asi
comma
op_mod
op_mod
id|f16
id|ldda
(braket
op_mod
l_int|0
op_plus
l_int|128
)braket
op_mod
op_mod
id|asi
comma
op_mod
op_mod
id|f32
id|ldda
(braket
op_mod
l_int|0
op_plus
l_int|192
)braket
op_mod
op_mod
id|asi
comma
op_mod
op_mod
id|f48
id|ldx
(braket
op_mod
l_int|1
)braket
comma
op_mod
op_mod
id|fsr
l_string|&quot; : : &quot;
id|r
l_string|&quot; (fpregs), &quot;
id|r
l_string|&quot; (fsr), &quot;
id|i
"&quot;"
(paren
id|ASI_BLK_P
)paren
)paren
suffix:semicolon
)brace
macro_line|#endif /* !(_SPARC64_FPUMACRO_H) */
eof
