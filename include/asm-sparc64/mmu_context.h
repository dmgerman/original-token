multiline_comment|/* $Id: mmu_context.h,v 1.24 1998/05/06 02:07:54 paulus Exp $ */
macro_line|#ifndef __SPARC64_MMU_CONTEXT_H
DECL|macro|__SPARC64_MMU_CONTEXT_H
mdefine_line|#define __SPARC64_MMU_CONTEXT_H
multiline_comment|/* Derived heavily from Linus&squot;s Alpha/AXP ASN code... */
macro_line|#include &lt;asm/system.h&gt;
macro_line|#include &lt;asm/spitfire.h&gt;
macro_line|#include &lt;asm/spinlock.h&gt;
DECL|macro|NO_CONTEXT
mdefine_line|#define NO_CONTEXT     0
macro_line|#ifndef __ASSEMBLY__
r_extern
r_int
r_int
id|tlb_context_cache
suffix:semicolon
r_extern
id|spinlock_t
id|scheduler_lock
suffix:semicolon
r_extern
r_int
r_int
id|mmu_context_bmap
(braket
)braket
suffix:semicolon
DECL|macro|CTX_VERSION_SHIFT
mdefine_line|#define CTX_VERSION_SHIFT&t;(PAGE_SHIFT - 3)
DECL|macro|CTX_VERSION_MASK
mdefine_line|#define CTX_VERSION_MASK&t;((~0UL) &lt;&lt; CTX_VERSION_SHIFT)
DECL|macro|CTX_FIRST_VERSION
mdefine_line|#define CTX_FIRST_VERSION&t;((1UL &lt;&lt; CTX_VERSION_SHIFT) + 1UL)
r_extern
r_void
id|get_new_mmu_context
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
)paren
suffix:semicolon
multiline_comment|/* Initialize/destroy the context related info for a new mm_struct&n; * instance.&n; */
DECL|macro|init_new_context
mdefine_line|#define init_new_context(mm)&t;((mm)-&gt;context = NO_CONTEXT)
DECL|macro|destroy_context
mdefine_line|#define destroy_context(mm)&t;do { &t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;if ((mm)-&gt;context != NO_CONTEXT) { &t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;spin_lock(&amp;scheduler_lock); &t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;if (!(((mm)-&gt;context ^ tlb_context_cache) &amp; CTX_VERSION_MASK))&t;&t;&t;&bslash;&n;&t;&t;&t;clear_bit((mm)-&gt;context &amp; ~(CTX_VERSION_MASK), mmu_context_bmap);&t;&bslash;&n;&t;&t;spin_unlock(&amp;scheduler_lock); &t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;(mm)-&gt;context = NO_CONTEXT; &t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;} &t;&t;&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;} while (0)
DECL|function|get_mmu_context
r_extern
id|__inline__
r_void
id|get_mmu_context
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
)paren
(brace
r_register
r_int
r_int
id|paddr
id|asm
c_func
(paren
l_string|&quot;o5&quot;
)paren
suffix:semicolon
r_struct
id|mm_struct
op_star
id|mm
op_assign
id|tsk-&gt;mm
suffix:semicolon
id|flushw_user
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|tsk-&gt;tss.flags
op_amp
id|SPARC_FLAG_KTHREAD
)paren
op_logical_and
op_logical_neg
(paren
id|tsk-&gt;flags
op_amp
id|PF_EXITING
)paren
)paren
(brace
r_int
r_int
id|ctx
op_assign
id|tlb_context_cache
suffix:semicolon
r_if
c_cond
(paren
(paren
id|mm-&gt;context
op_xor
id|ctx
)paren
op_amp
id|CTX_VERSION_MASK
)paren
(brace
id|get_new_mmu_context
c_func
(paren
id|mm
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
op_logical_neg
(paren
id|mm-&gt;cpu_vm_mask
op_amp
(paren
l_int|1UL
op_lshift
id|smp_processor_id
c_func
(paren
)paren
)paren
)paren
)paren
(brace
id|spitfire_set_secondary_context
c_func
(paren
id|mm-&gt;context
op_amp
l_int|0x3ff
)paren
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;flush %g6&quot;
)paren
suffix:semicolon
id|spitfire_flush_dtlb_secondary_context
c_func
(paren
)paren
suffix:semicolon
id|spitfire_flush_itlb_secondary_context
c_func
(paren
)paren
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;flush %g6&quot;
)paren
suffix:semicolon
)brace
multiline_comment|/* Don&squot;t worry, set_fs() will restore it... */
multiline_comment|/* Sigh, damned include loops... just poke seg directly.  */
id|tsk-&gt;tss.ctx
op_assign
(paren
id|tsk-&gt;tss.current_ds.seg
ques
c_cond
(paren
id|mm-&gt;context
op_amp
l_int|0x3ff
)paren
suffix:colon
l_int|0
)paren
suffix:semicolon
)brace
r_else
id|tsk-&gt;tss.ctx
op_assign
l_int|0
suffix:semicolon
id|spitfire_set_secondary_context
c_func
(paren
id|tsk-&gt;tss.ctx
)paren
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;flush %g6&quot;
)paren
suffix:semicolon
id|paddr
op_assign
id|__pa
c_func
(paren
id|mm-&gt;pgd
)paren
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
"&quot;"
id|rdpr
op_mod
op_mod
id|pstate
comma
op_mod
op_mod
id|o4
id|wrpr
op_mod
op_mod
id|o4
comma
op_mod
l_int|1
comma
op_mod
op_mod
id|pstate
id|mov
op_mod
l_int|0
comma
op_mod
op_mod
id|g7
id|wrpr
op_mod
op_mod
id|o4
comma
l_int|0x0
comma
op_mod
op_mod
id|pstate
"&quot;"
suffix:colon
multiline_comment|/* no outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|paddr
)paren
comma
l_string|&quot;i&quot;
(paren
id|PSTATE_MG
op_or
id|PSTATE_IE
)paren
suffix:colon
l_string|&quot;o4&quot;
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * After we have set current-&gt;mm to a new value, this activates&n; * the context for the new mm so we see the new mappings.&n; */
DECL|macro|activate_context
mdefine_line|#define activate_context(tsk)&t;get_mmu_context(tsk)
macro_line|#endif /* !(__ASSEMBLY__) */
macro_line|#endif /* !(__SPARC64_MMU_CONTEXT_H) */
eof
