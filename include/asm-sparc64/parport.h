multiline_comment|/* $Id: parport.h,v 1.9 2000/03/16 07:47:27 davem Exp $&n; * parport.h: sparc64 specific parport initialization and dma.&n; *&n; * Copyright (C) 1999  Eddie C. Dost  (ecd@skynet.be)&n; */
macro_line|#ifndef _ASM_SPARC64_PARPORT_H
DECL|macro|_ASM_SPARC64_PARPORT_H
mdefine_line|#define _ASM_SPARC64_PARPORT_H 1
macro_line|#include &lt;asm/ebus.h&gt;
macro_line|#include &lt;asm/ns87303.h&gt;
DECL|macro|PARPORT_PC_MAX_PORTS
mdefine_line|#define PARPORT_PC_MAX_PORTS&t;PARPORT_MAX
DECL|variable|sparc_ebus_dmas
r_static
r_struct
id|linux_ebus_dma
op_star
id|sparc_ebus_dmas
(braket
id|PARPORT_PC_MAX_PORTS
)braket
suffix:semicolon
r_static
id|__inline__
r_void
DECL|function|reset_dma
id|reset_dma
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
r_int
r_int
id|dcsr
suffix:semicolon
id|writel
c_func
(paren
id|EBUS_DCSR_RESET
comma
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
id|udelay
c_func
(paren
l_int|1
)paren
suffix:semicolon
id|dcsr
op_assign
id|EBUS_DCSR_BURST_SZ_16
op_or
id|EBUS_DCSR_TCI_DIS
op_or
id|EBUS_DCSR_EN_CNT
op_or
id|EBUS_DCSR_INT_EN
suffix:semicolon
id|writel
c_func
(paren
id|dcsr
comma
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_void
DECL|function|enable_dma
id|enable_dma
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
r_int
r_int
id|dcsr
suffix:semicolon
id|dcsr
op_assign
id|readl
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
id|dcsr
op_or_assign
id|EBUS_DCSR_EN_DMA
suffix:semicolon
id|writel
c_func
(paren
id|dcsr
comma
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_void
DECL|function|disable_dma
id|disable_dma
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
r_int
r_int
id|dcsr
suffix:semicolon
id|dcsr
op_assign
id|readl
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
r_if
c_cond
(paren
id|dcsr
op_amp
id|EBUS_DCSR_EN_DMA
)paren
(brace
r_while
c_loop
(paren
id|dcsr
op_amp
id|EBUS_DCSR_DRAIN
)paren
(brace
id|udelay
c_func
(paren
l_int|1
)paren
suffix:semicolon
id|dcsr
op_assign
id|readl
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
)brace
id|dcsr
op_and_assign
op_complement
(paren
id|EBUS_DCSR_EN_DMA
)paren
suffix:semicolon
id|writel
c_func
(paren
id|dcsr
comma
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
id|dcsr
op_assign
id|readl
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
r_if
c_cond
(paren
id|dcsr
op_amp
id|EBUS_DCSR_ERR_PEND
)paren
id|reset_dma
c_func
(paren
id|dmanr
)paren
suffix:semicolon
)brace
)brace
r_static
id|__inline__
r_void
DECL|function|clear_dma_ff
id|clear_dma_ff
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
multiline_comment|/* nothing */
)brace
r_static
id|__inline__
r_void
DECL|function|set_dma_mode
id|set_dma_mode
c_func
(paren
r_int
r_int
id|dmanr
comma
r_char
id|mode
)paren
(brace
r_int
r_int
id|dcsr
suffix:semicolon
id|dcsr
op_assign
id|readl
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
id|dcsr
op_or_assign
id|EBUS_DCSR_EN_CNT
op_or
id|EBUS_DCSR_TC
suffix:semicolon
r_if
c_cond
(paren
id|mode
op_eq
id|DMA_MODE_WRITE
)paren
id|dcsr
op_and_assign
op_complement
(paren
id|EBUS_DCSR_WRITE
)paren
suffix:semicolon
r_else
id|dcsr
op_or_assign
id|EBUS_DCSR_WRITE
suffix:semicolon
id|writel
c_func
(paren
id|dcsr
comma
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dcsr
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_void
DECL|function|set_dma_addr
id|set_dma_addr
c_func
(paren
r_int
r_int
id|dmanr
comma
r_int
r_int
id|addr
)paren
(brace
id|writel
c_func
(paren
id|addr
comma
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dacr
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_void
DECL|function|set_dma_count
id|set_dma_count
c_func
(paren
r_int
r_int
id|dmanr
comma
r_int
r_int
id|count
)paren
(brace
id|writel
c_func
(paren
id|count
comma
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dbcr
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_int
DECL|function|get_dma_residue
id|get_dma_residue
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
r_int
id|res
suffix:semicolon
id|res
op_assign
id|readl
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
op_member_access_from_pointer
id|dbcr
)paren
suffix:semicolon
r_if
c_cond
(paren
id|res
op_ne
l_int|0
)paren
id|reset_dma
c_func
(paren
id|dmanr
)paren
suffix:semicolon
r_return
id|res
suffix:semicolon
)brace
DECL|function|parport_pc_find_nonpci_ports
r_static
r_int
id|parport_pc_find_nonpci_ports
(paren
r_int
id|autoirq
comma
r_int
id|autodma
)paren
(brace
r_struct
id|linux_ebus
op_star
id|ebus
suffix:semicolon
r_struct
id|linux_ebus_device
op_star
id|edev
suffix:semicolon
r_int
id|count
op_assign
l_int|0
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|pci_present
c_func
(paren
)paren
)paren
r_return
l_int|0
suffix:semicolon
id|for_each_ebus
c_func
(paren
id|ebus
)paren
(brace
id|for_each_ebusdev
c_func
(paren
id|edev
comma
id|ebus
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|strcmp
c_func
(paren
id|edev-&gt;prom_name
comma
l_string|&quot;ecpp&quot;
)paren
)paren
(brace
r_int
r_int
id|base
op_assign
id|edev-&gt;resource
(braket
l_int|0
)braket
dot
id|start
suffix:semicolon
r_int
r_int
id|config
op_assign
id|edev-&gt;resource
(braket
l_int|1
)braket
dot
id|start
suffix:semicolon
id|sparc_ebus_dmas
(braket
id|count
)braket
op_assign
(paren
r_struct
id|linux_ebus_dma
op_star
)paren
id|edev-&gt;resource
(braket
l_int|2
)braket
dot
id|start
suffix:semicolon
id|reset_dma
c_func
(paren
id|count
)paren
suffix:semicolon
multiline_comment|/* Configure IRQ to Push Pull, Level Low */
multiline_comment|/* Enable ECP, set bit 2 of the CTR first */
id|outb
c_func
(paren
l_int|0x04
comma
id|base
op_plus
l_int|0x02
)paren
suffix:semicolon
id|ns87303_modify
c_func
(paren
id|config
comma
id|PCR
comma
id|PCR_EPP_ENABLE
op_or
id|PCR_IRQ_ODRAIN
comma
id|PCR_ECP_ENABLE
op_or
id|PCR_ECP_CLK_ENA
op_or
id|PCR_IRQ_POLAR
)paren
suffix:semicolon
multiline_comment|/* CTR bit 5 controls direction of port */
id|ns87303_modify
c_func
(paren
id|config
comma
id|PTR
comma
l_int|0
comma
id|PTR_LPT_REG_DIR
)paren
suffix:semicolon
r_if
c_cond
(paren
id|parport_pc_probe_port
c_func
(paren
id|base
comma
id|base
op_plus
l_int|0x400
comma
id|edev-&gt;irqs
(braket
l_int|0
)braket
comma
id|count
comma
id|ebus-&gt;self
)paren
)paren
id|count
op_increment
suffix:semicolon
)brace
)brace
)brace
r_return
id|count
suffix:semicolon
)brace
macro_line|#endif /* !(_ASM_SPARC64_PARPORT_H */
eof
