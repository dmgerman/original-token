multiline_comment|/* $Id: spitfire.h,v 1.10 2000/10/06 13:10:29 anton Exp $&n; * spitfire.h: SpitFire/BlackBird/Cheetah inline MMU operations.&n; *&n; * Copyright (C) 1996 David S. Miller (davem@caip.rutgers.edu)&n; */
macro_line|#ifndef _SPARC64_SPITFIRE_H
DECL|macro|_SPARC64_SPITFIRE_H
mdefine_line|#define _SPARC64_SPITFIRE_H
macro_line|#include &lt;asm/asi.h&gt;
multiline_comment|/* The following register addresses are accessible via ASI_DMMU&n; * and ASI_IMMU, that is there is a distinct and unique copy of&n; * each these registers for each TLB.&n; */
DECL|macro|TSB_TAG_TARGET
mdefine_line|#define TSB_TAG_TARGET&t;&t;0x0000000000000000
DECL|macro|TLB_SFSR
mdefine_line|#define TLB_SFSR&t;&t;0x0000000000000018
DECL|macro|TSB_REG
mdefine_line|#define TSB_REG&t;&t;&t;0x0000000000000028
DECL|macro|TLB_TAG_ACCESS
mdefine_line|#define TLB_TAG_ACCESS&t;&t;0x0000000000000030
multiline_comment|/* These registers only exist as one entity, and are accessed&n; * via ASI_DMMU only.&n; */
DECL|macro|PRIMARY_CONTEXT
mdefine_line|#define PRIMARY_CONTEXT&t;&t;0x0000000000000008
DECL|macro|SECONDARY_CONTEXT
mdefine_line|#define SECONDARY_CONTEXT&t;0x0000000000000010
DECL|macro|DMMU_SFAR
mdefine_line|#define DMMU_SFAR&t;&t;0x0000000000000020
DECL|macro|VIRT_WATCHPOINT
mdefine_line|#define VIRT_WATCHPOINT&t;&t;0x0000000000000038
DECL|macro|PHYS_WATCHPOINT
mdefine_line|#define PHYS_WATCHPOINT&t;&t;0x0000000000000040
macro_line|#ifndef __ASSEMBLY__
DECL|function|spitfire_get_isfsr
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_isfsr
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|ret
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|ret
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|TLB_SFSR
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IMMU
)paren
)paren
suffix:semicolon
r_return
id|ret
suffix:semicolon
)brace
DECL|function|spitfire_get_dsfsr
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_dsfsr
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|ret
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|ret
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|TLB_SFSR
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU
)paren
)paren
suffix:semicolon
r_return
id|ret
suffix:semicolon
)brace
DECL|function|spitfire_get_sfar
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_sfar
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|ret
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|ret
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|DMMU_SFAR
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU
)paren
)paren
suffix:semicolon
r_return
id|ret
suffix:semicolon
)brace
DECL|function|spitfire_put_isfsr
r_extern
id|__inline__
r_void
id|spitfire_put_isfsr
c_func
(paren
r_int
r_int
id|sfsr
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%0, [%1] %2&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|sfsr
)paren
comma
l_string|&quot;r&quot;
(paren
id|TLB_SFSR
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IMMU
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_put_dsfsr
r_extern
id|__inline__
r_void
id|spitfire_put_dsfsr
c_func
(paren
r_int
r_int
id|sfsr
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%0, [%1] %2&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|sfsr
)paren
comma
l_string|&quot;r&quot;
(paren
id|TLB_SFSR
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_get_primary_context
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_primary_context
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|ctx
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|ctx
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|PRIMARY_CONTEXT
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU
)paren
)paren
suffix:semicolon
r_return
id|ctx
suffix:semicolon
)brace
DECL|function|spitfire_set_primary_context
r_extern
id|__inline__
r_void
id|spitfire_set_primary_context
c_func
(paren
r_int
r_int
id|ctx
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%0, [%1] %2&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|ctx
op_amp
l_int|0x3ff
)paren
comma
l_string|&quot;r&quot;
(paren
id|PRIMARY_CONTEXT
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU
)paren
)paren
suffix:semicolon
id|membar
c_func
(paren
l_string|&quot;#Sync&quot;
)paren
suffix:semicolon
)brace
DECL|function|spitfire_get_secondary_context
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_secondary_context
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|ctx
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|ctx
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|SECONDARY_CONTEXT
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU
)paren
)paren
suffix:semicolon
r_return
id|ctx
suffix:semicolon
)brace
DECL|function|spitfire_set_secondary_context
r_extern
id|__inline__
r_void
id|spitfire_set_secondary_context
c_func
(paren
r_int
r_int
id|ctx
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%0, [%1] %2&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|ctx
op_amp
l_int|0x3ff
)paren
comma
l_string|&quot;r&quot;
(paren
id|SECONDARY_CONTEXT
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU
)paren
)paren
suffix:semicolon
id|membar
c_func
(paren
l_string|&quot;#Sync&quot;
)paren
suffix:semicolon
)brace
multiline_comment|/* The data cache is write through, so this just invalidates the&n; * specified line.&n; */
DECL|function|spitfire_put_dcache_tag
r_extern
id|__inline__
r_void
id|spitfire_put_dcache_tag
c_func
(paren
r_int
r_int
id|addr
comma
r_int
r_int
id|tag
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%0, [%1] %2&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|tag
)paren
comma
l_string|&quot;r&quot;
(paren
id|addr
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DCACHE_TAG
)paren
)paren
suffix:semicolon
id|membar
c_func
(paren
l_string|&quot;#Sync&quot;
)paren
suffix:semicolon
)brace
multiline_comment|/* The instruction cache lines are flushed with this, but note that&n; * this does not flush the pipeline.  It is possible for a line to&n; * get flushed but stale instructions to still be in the pipeline,&n; * a flush instruction (to any address) is sufficient to handle&n; * this issue after the line is invalidated.&n; */
DECL|function|spitfire_put_icache_tag
r_extern
id|__inline__
r_void
id|spitfire_put_icache_tag
c_func
(paren
r_int
r_int
id|addr
comma
r_int
r_int
id|tag
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%0, [%1] %2&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|tag
)paren
comma
l_string|&quot;r&quot;
(paren
id|addr
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IC_TAG
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_get_dtlb_data
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_dtlb_data
c_func
(paren
r_int
id|entry
)paren
(brace
r_int
r_int
id|data
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|data
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|entry
op_lshift
l_int|3
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DTLB_DATA_ACCESS
)paren
)paren
suffix:semicolon
r_return
id|data
suffix:semicolon
)brace
DECL|function|spitfire_get_dtlb_tag
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_dtlb_tag
c_func
(paren
r_int
id|entry
)paren
(brace
r_int
r_int
id|tag
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|tag
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|entry
op_lshift
l_int|3
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DTLB_TAG_READ
)paren
)paren
suffix:semicolon
r_return
id|tag
suffix:semicolon
)brace
DECL|function|spitfire_put_dtlb_data
r_extern
id|__inline__
r_void
id|spitfire_put_dtlb_data
c_func
(paren
r_int
id|entry
comma
r_int
r_int
id|data
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%0, [%1] %2&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|data
)paren
comma
l_string|&quot;r&quot;
(paren
id|entry
op_lshift
l_int|3
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DTLB_DATA_ACCESS
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_get_itlb_data
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_itlb_data
c_func
(paren
r_int
id|entry
)paren
(brace
r_int
r_int
id|data
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|data
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|entry
op_lshift
l_int|3
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_ITLB_DATA_ACCESS
)paren
)paren
suffix:semicolon
r_return
id|data
suffix:semicolon
)brace
DECL|function|spitfire_get_itlb_tag
r_extern
id|__inline__
r_int
r_int
id|spitfire_get_itlb_tag
c_func
(paren
r_int
id|entry
)paren
(brace
r_int
r_int
id|tag
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldxa&t;[%1] %2, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|tag
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|entry
op_lshift
l_int|3
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_ITLB_TAG_READ
)paren
)paren
suffix:semicolon
r_return
id|tag
suffix:semicolon
)brace
DECL|function|spitfire_put_itlb_data
r_extern
id|__inline__
r_void
id|spitfire_put_itlb_data
c_func
(paren
r_int
id|entry
comma
r_int
r_int
id|data
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%0, [%1] %2&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|data
)paren
comma
l_string|&quot;r&quot;
(paren
id|entry
op_lshift
l_int|3
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_ITLB_DATA_ACCESS
)paren
)paren
suffix:semicolon
)brace
multiline_comment|/* Spitfire hardware assisted TLB flushes. */
multiline_comment|/* Context level flushes. */
DECL|function|spitfire_flush_dtlb_primary_context
r_extern
id|__inline__
r_void
id|spitfire_flush_dtlb_primary_context
c_func
(paren
r_void
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|0x40
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_itlb_primary_context
r_extern
id|__inline__
r_void
id|spitfire_flush_itlb_primary_context
c_func
(paren
r_void
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|0x40
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_dtlb_secondary_context
r_extern
id|__inline__
r_void
id|spitfire_flush_dtlb_secondary_context
c_func
(paren
r_void
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|0x50
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_itlb_secondary_context
r_extern
id|__inline__
r_void
id|spitfire_flush_itlb_secondary_context
c_func
(paren
r_void
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|0x50
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_dtlb_nucleus_context
r_extern
id|__inline__
r_void
id|spitfire_flush_dtlb_nucleus_context
c_func
(paren
r_void
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|0x60
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_itlb_nucleus_context
r_extern
id|__inline__
r_void
id|spitfire_flush_itlb_nucleus_context
c_func
(paren
r_void
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|0x60
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
multiline_comment|/* Page level flushes. */
DECL|function|spitfire_flush_dtlb_primary_page
r_extern
id|__inline__
r_void
id|spitfire_flush_dtlb_primary_page
c_func
(paren
r_int
r_int
id|page
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|page
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_itlb_primary_page
r_extern
id|__inline__
r_void
id|spitfire_flush_itlb_primary_page
c_func
(paren
r_int
r_int
id|page
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|page
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_dtlb_secondary_page
r_extern
id|__inline__
r_void
id|spitfire_flush_dtlb_secondary_page
c_func
(paren
r_int
r_int
id|page
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|page
op_or
l_int|0x10
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_itlb_secondary_page
r_extern
id|__inline__
r_void
id|spitfire_flush_itlb_secondary_page
c_func
(paren
r_int
r_int
id|page
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|page
op_or
l_int|0x10
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_dtlb_nucleus_page
r_extern
id|__inline__
r_void
id|spitfire_flush_dtlb_nucleus_page
c_func
(paren
r_int
r_int
id|page
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|page
op_or
l_int|0x20
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_DMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
DECL|function|spitfire_flush_itlb_nucleus_page
r_extern
id|__inline__
r_void
id|spitfire_flush_itlb_nucleus_page
c_func
(paren
r_int
r_int
id|page
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;stxa&t;%%g0, [%0] %1&quot;
suffix:colon
multiline_comment|/* No outputs */
suffix:colon
l_string|&quot;r&quot;
(paren
id|page
op_or
l_int|0x20
)paren
comma
l_string|&quot;i&quot;
(paren
id|ASI_IMMU_DEMAP
)paren
)paren
suffix:semicolon
)brace
macro_line|#endif /* !(__ASSEMBLY__) */
macro_line|#endif /* !(_SPARC64_SPITFIRE_H) */
eof
