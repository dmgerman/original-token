multiline_comment|/*&n; * linux/include/asm-arm/arch-rpc/ide.h&n; *&n; * Copyright (c) 1997 Russell King&n; */
macro_line|#include &lt;asm/irq.h&gt;
r_static
id|__inline__
r_int
DECL|function|ide_default_irq
id|ide_default_irq
c_func
(paren
id|ide_ioreg_t
id|base
)paren
(brace
r_if
c_cond
(paren
id|base
op_eq
l_int|0x1f0
)paren
r_return
id|IRQ_HARDDISK
suffix:semicolon
r_return
l_int|0
suffix:semicolon
)brace
r_static
id|__inline__
id|ide_ioreg_t
DECL|function|ide_default_io_base
id|ide_default_io_base
c_func
(paren
r_int
id|index
)paren
(brace
r_if
c_cond
(paren
id|index
op_eq
l_int|0
)paren
r_return
l_int|0x1f0
suffix:semicolon
r_return
l_int|0
suffix:semicolon
)brace
r_static
id|__inline__
r_int
DECL|function|ide_default_stepping
id|ide_default_stepping
c_func
(paren
r_int
id|index
)paren
(brace
r_return
l_int|0
suffix:semicolon
)brace
r_static
id|__inline__
r_void
DECL|function|ide_init_hwif_ports
id|ide_init_hwif_ports
(paren
id|ide_ioreg_t
op_star
id|p
comma
id|ide_ioreg_t
id|base
comma
r_int
id|stepping
comma
r_int
op_star
id|irq
)paren
(brace
id|ide_ioreg_t
id|port
op_assign
id|base
suffix:semicolon
id|ide_ioreg_t
id|ctrl
op_assign
id|base
op_plus
l_int|0x206
suffix:semicolon
r_int
id|i
suffix:semicolon
id|i
op_assign
l_int|8
suffix:semicolon
r_while
c_loop
(paren
id|i
op_decrement
)paren
(brace
op_star
id|p
op_increment
op_assign
id|port
suffix:semicolon
id|port
op_add_assign
l_int|1
op_lshift
id|stepping
suffix:semicolon
)brace
op_star
id|p
op_increment
op_assign
id|ctrl
suffix:semicolon
r_if
c_cond
(paren
id|irq
op_ne
l_int|NULL
)paren
op_star
id|irq
op_assign
l_int|0
suffix:semicolon
)brace
eof
