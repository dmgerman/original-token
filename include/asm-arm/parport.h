multiline_comment|/*&n; * parport.h: ia32-specific parport initialisation&n; *&n; * Copyright (C) 1999  Tim Waugh &lt;tim@cyberelk.demon.co.uk&gt;&n; *&n; * This file should only be included by drivers/parport/parport_pc.c.&n; */
macro_line|#ifndef _ASM_I386_PARPORT_H
DECL|macro|_ASM_I386_PARPORT_H
mdefine_line|#define _ASM_I386_PARPORT_H 1
macro_line|#include &lt;linux/config.h&gt;
multiline_comment|/* Maximum number of ports to support.  It is useless to set this greater&n;   than PARPORT_MAX (in &lt;linux/parport.h&gt;).  */
DECL|macro|PARPORT_PC_MAX_PORTS
mdefine_line|#define PARPORT_PC_MAX_PORTS  8
multiline_comment|/* If parport_cs (PCMCIA) is managing ports for us, we&squot;ll need the&n; * probing routines forever; otherwise we can lose them at boot time. */
macro_line|#ifdef CONFIG_PARPORT_PC_PCMCIA
DECL|macro|__maybe_initdata
mdefine_line|#define __maybe_initdata
DECL|macro|__maybe_init
mdefine_line|#define __maybe_init
macro_line|#else
DECL|macro|__maybe_initdata
mdefine_line|#define __maybe_initdata __initdata
DECL|macro|__maybe_init
mdefine_line|#define __maybe_init __init
macro_line|#endif
r_static
r_int
id|__maybe_init
id|parport_pc_init_pci
c_func
(paren
r_int
id|irq
comma
r_int
id|dma
)paren
suffix:semicolon
DECL|variable|__maybe_initdata
r_static
r_int
id|user_specified
id|__maybe_initdata
op_assign
l_int|0
suffix:semicolon
r_int
id|__init
DECL|function|parport_pc_init
id|parport_pc_init
c_func
(paren
r_int
op_star
id|io
comma
r_int
op_star
id|io_hi
comma
r_int
op_star
id|irq
comma
r_int
op_star
id|dma
)paren
(brace
r_int
id|count
op_assign
l_int|0
comma
id|i
op_assign
l_int|0
suffix:semicolon
r_if
c_cond
(paren
id|io
op_logical_and
op_star
id|io
)paren
(brace
multiline_comment|/* Only probe the ports we were given. */
id|user_specified
op_assign
l_int|1
suffix:semicolon
r_do
(brace
r_if
c_cond
(paren
op_logical_neg
op_star
id|io_hi
)paren
op_star
id|io_hi
op_assign
l_int|0x400
op_plus
op_star
id|io
suffix:semicolon
r_if
c_cond
(paren
id|parport_pc_probe_port
c_func
(paren
op_star
(paren
id|io
op_increment
)paren
comma
op_star
(paren
id|io_hi
op_increment
)paren
comma
op_star
(paren
id|irq
op_increment
)paren
comma
op_star
(paren
id|dma
op_increment
)paren
)paren
)paren
id|count
op_increment
suffix:semicolon
)brace
r_while
c_loop
(paren
op_star
id|io
op_logical_and
(paren
op_increment
id|i
OL
id|PARPORT_PC_MAX_PORTS
)paren
)paren
suffix:semicolon
)brace
r_else
(brace
multiline_comment|/* Probe all the likely ports. */
r_if
c_cond
(paren
id|parport_pc_probe_port
c_func
(paren
l_int|0x3bc
comma
l_int|0x7bc
comma
id|irq
(braket
l_int|0
)braket
comma
id|dma
(braket
l_int|0
)braket
)paren
)paren
id|count
op_increment
suffix:semicolon
r_if
c_cond
(paren
id|parport_pc_probe_port
c_func
(paren
l_int|0x378
comma
l_int|0x778
comma
id|irq
(braket
l_int|0
)braket
comma
id|dma
(braket
l_int|0
)braket
)paren
)paren
id|count
op_increment
suffix:semicolon
r_if
c_cond
(paren
id|parport_pc_probe_port
c_func
(paren
l_int|0x278
comma
l_int|0x678
comma
id|irq
(braket
l_int|0
)braket
comma
id|dma
(braket
l_int|0
)braket
)paren
)paren
id|count
op_increment
suffix:semicolon
id|count
op_add_assign
id|parport_pc_init_pci
(paren
id|irq
(braket
l_int|0
)braket
comma
id|dma
(braket
l_int|0
)braket
)paren
suffix:semicolon
)brace
r_return
id|count
suffix:semicolon
)brace
macro_line|#endif /* !(_ASM_I386_PARPORT_H) */
eof
