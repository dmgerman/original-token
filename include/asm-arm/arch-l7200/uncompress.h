multiline_comment|/*&n; * linux/include/asm-arm/arch-l7200/uncompress.h&n; *&n; * Copyright (C) 2000 Steve Hill (sjhill@cotw.com)&n; *&n; * Changelog:&n; *  05-01-2000&t;SJH&t;Created&n; *  05-13-2000&t;SJH&t;Filled in function bodies&n; *  07-26-2000&t;SJH&t;Removed hard coded buad rate&n; */
macro_line|#include &lt;asm/hardware.h&gt;
DECL|macro|IO_UART
mdefine_line|#define IO_UART  IO_START + 0x00044000
DECL|macro|__raw_writeb
mdefine_line|#define __raw_writeb(v,p)&t;(*(volatile unsigned char *)(p) = (v))
DECL|macro|__raw_readb
mdefine_line|#define __raw_readb(p)&t;&t;(*(volatile unsigned char *)(p))
DECL|function|putc
r_static
id|__inline__
r_void
id|putc
c_func
(paren
r_char
id|c
)paren
(brace
r_while
c_loop
(paren
id|__raw_readb
c_func
(paren
id|IO_UART
op_plus
l_int|0x18
)paren
op_amp
l_int|0x20
op_logical_or
id|__raw_readb
c_func
(paren
id|IO_UART
op_plus
l_int|0x18
)paren
op_amp
l_int|0x08
)paren
(brace
suffix:semicolon
)brace
id|__raw_writeb
c_func
(paren
id|c
comma
id|IO_UART
op_plus
l_int|0x00
)paren
suffix:semicolon
)brace
DECL|function|puts
r_static
r_void
id|puts
c_func
(paren
r_const
r_char
op_star
id|s
)paren
(brace
r_while
c_loop
(paren
op_star
id|s
)paren
(brace
r_if
c_cond
(paren
op_star
id|s
op_eq
l_int|10
)paren
(brace
multiline_comment|/* If a LF, add CR */
id|putc
c_func
(paren
l_int|10
)paren
suffix:semicolon
id|putc
c_func
(paren
l_int|13
)paren
suffix:semicolon
)brace
id|putc
c_func
(paren
op_star
(paren
id|s
op_increment
)paren
)paren
suffix:semicolon
)brace
)brace
DECL|function|arch_decomp_setup
r_static
id|__inline__
r_void
id|arch_decomp_setup
c_func
(paren
r_void
)paren
(brace
id|__raw_writeb
c_func
(paren
l_int|0x00
comma
id|IO_UART
op_plus
l_int|0x08
)paren
suffix:semicolon
multiline_comment|/* Set HSB */
id|__raw_writeb
c_func
(paren
l_int|0x00
comma
id|IO_UART
op_plus
l_int|0x20
)paren
suffix:semicolon
multiline_comment|/* Disable IRQs */
id|__raw_writeb
c_func
(paren
l_int|0x01
comma
id|IO_UART
op_plus
l_int|0x14
)paren
suffix:semicolon
multiline_comment|/* Enable UART */
)brace
DECL|macro|arch_decomp_wdog
mdefine_line|#define arch_decomp_wdog()
eof
