multiline_comment|/*&n; * linux/include/asm-arm/arch-sa1100/ide.h&n; *&n; * Copyright (c) 1998 Hugo Fiennes &amp; Nicolas Pitre&n; *&n; * 18-aug-2000: Cleanup by Erik Mouw (J.A.K.Mouw@its.tudelft.nl)&n; *              Get rid of the special ide_init_hwif_ports() functions&n; *              and make a generalised function that can be used by all&n; *              architectures.&n; */
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;asm/irq.h&gt;
macro_line|#include &lt;asm/hardware.h&gt;
macro_line|#include &lt;asm/mach-types.h&gt;
DECL|macro|PCMCIA_IO_0_BASE
mdefine_line|#define PCMCIA_IO_0_BASE 0xe0000000
DECL|macro|PCMCIA_IO_1_BASE
mdefine_line|#define PCMCIA_IO_1_BASE 0xe4000000
multiline_comment|/*&n; * Set up a hw structure for a specified data port, control port and IRQ.&n; * This should follow whatever the default interface uses.&n; */
r_static
id|__inline__
r_void
DECL|function|ide_init_hwif_ports
id|ide_init_hwif_ports
c_func
(paren
id|hw_regs_t
op_star
id|hw
comma
r_int
id|data_port
comma
r_int
id|ctrl_port
comma
r_int
op_star
id|irq
)paren
(brace
id|ide_ioreg_t
id|reg
suffix:semicolon
r_int
id|i
suffix:semicolon
r_int
id|regincr
op_assign
l_int|1
suffix:semicolon
multiline_comment|/* The Empeg board has the first two address lines unused */
r_if
c_cond
(paren
id|machine_is_empeg
c_func
(paren
)paren
)paren
id|regincr
op_assign
l_int|1
op_lshift
l_int|2
suffix:semicolon
multiline_comment|/* The LART doesn&squot;t use A0 for IDE */
r_if
c_cond
(paren
id|machine_is_lart
c_func
(paren
)paren
)paren
id|regincr
op_assign
l_int|1
op_lshift
l_int|1
suffix:semicolon
id|memset
c_func
(paren
id|hw
comma
l_int|0
comma
r_sizeof
(paren
op_star
id|hw
)paren
)paren
suffix:semicolon
id|reg
op_assign
(paren
id|ide_ioreg_t
)paren
id|data_port
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
id|IDE_DATA_OFFSET
suffix:semicolon
id|i
op_le
id|IDE_STATUS_OFFSET
suffix:semicolon
id|i
op_increment
)paren
(brace
id|hw-&gt;io_ports
(braket
id|i
)braket
op_assign
id|reg
suffix:semicolon
id|reg
op_add_assign
id|regincr
suffix:semicolon
)brace
id|hw-&gt;io_ports
(braket
id|IDE_CONTROL_OFFSET
)braket
op_assign
(paren
id|ide_ioreg_t
)paren
id|ctrl_port
suffix:semicolon
r_if
c_cond
(paren
id|irq
)paren
op_star
id|irq
op_assign
l_int|0
suffix:semicolon
)brace
multiline_comment|/*&n; * This registers the standard ports for this architecture with the IDE&n; * driver.&n; */
r_static
id|__inline__
r_void
DECL|function|ide_init_default_hwifs
id|ide_init_default_hwifs
c_func
(paren
r_void
)paren
(brace
r_if
c_cond
(paren
id|machine_is_empeg
c_func
(paren
)paren
)paren
(brace
macro_line|#ifdef CONFIG_SA1100_EMPEG
id|hw_regs_t
id|hw
suffix:semicolon
multiline_comment|/* First, do the SA1100 setup */
multiline_comment|/* PCMCIA IO space */
id|MECR
op_assign
l_int|0x21062106
suffix:semicolon
multiline_comment|/* Issue 3 is much neater than issue 2 */
id|GPDR
op_and_assign
op_complement
(paren
id|EMPEG_IDE1IRQ
op_or
id|EMPEG_IDE2IRQ
)paren
suffix:semicolon
multiline_comment|/* Interrupts on rising edge: lines are inverted before they get to&n;           the SA */
id|set_GPIO_IRQ_edge
c_func
(paren
(paren
id|EMPEG_IDE1IRQ
op_or
id|EMPEG_IDE2IRQ
)paren
comma
id|GPIO_FALLING_EDGE
)paren
suffix:semicolon
multiline_comment|/* Take hard drives out of reset */
id|GPSR
op_assign
(paren
id|EMPEG_IDERESET
)paren
suffix:semicolon
multiline_comment|/* Sonja and her successors have two IDE ports. */
multiline_comment|/* MAC 23/4/1999, swap these round so that the left hand&n;&t;   hard disk is hda when viewed from the front. This&n;&t;   doesn&squot;t match the silkscreen however. */
id|ide_init_hwif_ports
c_func
(paren
op_amp
id|hw
comma
id|PCMCIA_IO_0_BASE
op_plus
l_int|0x40
comma
id|PCMCIA_IO_0_BASE
op_plus
l_int|0x78
comma
l_int|NULL
)paren
suffix:semicolon
id|hw.irq
op_assign
id|EMPEG_IRQ_IDE2
suffix:semicolon
id|ide_register_hw
c_func
(paren
op_amp
id|hw
comma
l_int|NULL
)paren
suffix:semicolon
id|ide_init_hwif_ports
c_func
(paren
op_amp
id|hw
comma
id|PCMCIA_IO_0_BASE
op_plus
l_int|0x00
comma
id|PCMCIA_IO_0_BASE
op_plus
l_int|0x38
comma
l_int|NULL
)paren
suffix:semicolon
id|hw.irq
op_assign
comma
id|EMPEG_IRQ_IDE1
suffix:semicolon
id|ide_register_hw
c_func
(paren
op_amp
id|hw
comma
l_int|NULL
)paren
suffix:semicolon
macro_line|#endif
)brace
r_else
r_if
c_cond
(paren
id|machine_is_victor
c_func
(paren
)paren
)paren
(brace
macro_line|#ifdef CONFIG_SA1100_VICTOR
id|hw_regs_t
id|hw
suffix:semicolon
multiline_comment|/* Enable appropriate GPIOs as interrupt lines */
id|GPDR
op_and_assign
op_complement
id|GPIO_GPIO7
suffix:semicolon
id|set_GPIO_IRQ_edge
c_func
(paren
id|GPIO_GPIO7
comma
id|GPIO_RISING_EDGE
)paren
suffix:semicolon
multiline_comment|/* set the pcmcia interface timing */
id|MECR
op_assign
l_int|0x00060006
suffix:semicolon
id|ide_init_hwif_ports
c_func
(paren
op_amp
id|hw
comma
id|PCMCIA_IO_0_BASE
op_plus
l_int|0x1f0
comma
id|PCMCIA_IO_0_BASE
op_plus
l_int|0x3f6
comma
l_int|NULL
)paren
suffix:semicolon
id|hw.irq
op_assign
id|IRQ_GPIO7
suffix:semicolon
id|ide_register_hw
c_func
(paren
op_amp
id|hw
comma
l_int|NULL
)paren
suffix:semicolon
macro_line|#endif
)brace
r_else
r_if
c_cond
(paren
id|machine_is_lart
c_func
(paren
)paren
)paren
(brace
macro_line|#ifdef CONFIG_SA1100_LART
id|hw_regs_t
id|hw
suffix:semicolon
multiline_comment|/* Enable GPIO as interrupt line */
id|GPDR
op_and_assign
op_complement
id|GPIO_GPIO1
suffix:semicolon
id|set_GPIO_IRQ_edge
c_func
(paren
id|GPIO_GPIO1
comma
id|GPIO_RISING_EDGE
)paren
suffix:semicolon
multiline_comment|/* set PCMCIA interface timing */
id|MECR
op_assign
l_int|0x00060006
suffix:semicolon
multiline_comment|/* init the interface */
id|ide_init_hwif_ports
c_func
(paren
op_amp
id|hw
comma
id|PCMCIA_IO_0_BASE
op_plus
l_int|0x0000
comma
id|PCMCIA_IO_0_BASE
op_plus
l_int|0x1000
comma
l_int|NULL
)paren
suffix:semicolon
id|hw.irq
op_assign
id|IRQ_GPIO1
suffix:semicolon
id|ide_register_hw
c_func
(paren
op_amp
id|hw
comma
l_int|NULL
)paren
suffix:semicolon
macro_line|#endif
)brace
)brace
eof
