multiline_comment|/*&n; * include/asm-arm/arch-vnc/irq.h&n; *&n; * Copyright (C) 1998 Russell King&n; *&n; * Changelog:&n; *   22-08-1998&t;RMK&t;Restructured IRQ routines&n; */
macro_line|#include &lt;asm/irq.h&gt;
multiline_comment|/*&n; * FootBridge IRQ translation table&n; *  Converts form our IRQ numbers into FootBridge masks (defined in irqs.h)&n; */
DECL|variable|fb_irq_mask
r_static
r_int
id|fb_irq_mask
(braket
l_int|16
)braket
op_assign
(brace
l_int|0
comma
id|IRQ_MASK_SOFTIRQ
comma
id|IRQ_MASK_UART_DEBUG
comma
l_int|0
comma
id|IRQ_MASK_TIMER0
comma
id|IRQ_MASK_TIMER1
comma
id|IRQ_MASK_TIMER2
comma
id|IRQ_MASK_WATCHDOG
comma
id|IRQ_MASK_ETHER10
comma
id|IRQ_MASK_ETHER100
comma
id|IRQ_MASK_VIDCOMP
comma
id|IRQ_MASK_EXTERN_IRQ
comma
id|IRQ_MASK_DMA1
comma
l_int|0
comma
l_int|0
comma
id|IRQ_MASK_PCI_ERR
)brace
suffix:semicolon
DECL|function|vnc_mask_csr_irq
r_static
r_void
id|vnc_mask_csr_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
op_star
id|CSR_IRQ_DISABLE
op_assign
id|fb_irq_mask
(braket
id|irq
)braket
suffix:semicolon
)brace
DECL|function|vnc_unmask_csr_irq
r_static
r_void
id|vnc_unmask_csr_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
op_star
id|CSR_IRQ_DISABLE
op_assign
id|fb_irq_mask
(braket
id|irq
)braket
suffix:semicolon
)brace
DECL|function|vnc_mask_pic_lo_irq
r_static
r_void
id|vnc_mask_pic_lo_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|mask
op_assign
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
suffix:semicolon
id|outb
c_func
(paren
id|inb
c_func
(paren
id|PIC_MASK_LO
)paren
op_or
id|mask
comma
id|PIC_MASK_LO
)paren
suffix:semicolon
)brace
DECL|function|vnc_unmask_pic_lo_irq
r_static
r_void
id|vnc_unmask_pic_lo_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|mask
op_assign
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
suffix:semicolon
id|outb
c_func
(paren
id|inb
c_func
(paren
id|PIC_MASK_LO
)paren
op_amp
op_complement
id|mask
comma
id|PIC_MASK_LO
)paren
suffix:semicolon
)brace
DECL|function|vnc_mask_pic_hi_irq
r_static
r_void
id|vnc_mask_pic_hi_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|mask
op_assign
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
suffix:semicolon
id|outb
c_func
(paren
id|inb
c_func
(paren
id|PIC_MASK_HI
)paren
op_or
id|mask
comma
id|PIC_MASK_HI
)paren
suffix:semicolon
)brace
DECL|function|vnc_unmask_pic_hi_irq
r_static
r_void
id|vnc_unmask_pic_hi_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|mask
op_assign
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
suffix:semicolon
id|outb
c_func
(paren
id|inb
c_func
(paren
id|PIC_MASK_HI
)paren
op_amp
op_complement
id|mask
comma
id|PIC_MASK_HI
)paren
suffix:semicolon
)brace
DECL|function|irq_init_irq
r_static
id|__inline__
r_void
id|irq_init_irq
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|irq
suffix:semicolon
id|outb
c_func
(paren
l_int|0x11
comma
id|PIC_LO
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x10
comma
id|PIC_MASK_LO
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x04
comma
id|PIC_MASK_LO
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|1
comma
id|PIC_MASK_LO
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x11
comma
id|PIC_HI
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x18
comma
id|PIC_MASK_HI
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x02
comma
id|PIC_MASK_HI
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|1
comma
id|PIC_MASK_HI
)paren
suffix:semicolon
op_star
id|CSR_IRQ_DISABLE
op_assign
op_complement
id|IRQ_MASK_EXTERN_IRQ
suffix:semicolon
op_star
id|CSR_IRQ_ENABLE
op_assign
id|IRQ_MASK_EXTERN_IRQ
suffix:semicolon
op_star
id|CSR_FIQ_DISABLE
op_assign
op_minus
l_int|1
suffix:semicolon
r_for
c_loop
(paren
id|irq
op_assign
l_int|0
suffix:semicolon
id|irq
OL
id|NR_IRQS
suffix:semicolon
id|irq
op_increment
)paren
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|probe_ok
op_assign
l_int|1
suffix:semicolon
r_if
c_cond
(paren
id|irq
OL
l_int|16
)paren
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|vnc_mask_csr_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|vnc_mask_csr_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|vnc_unmask_csr_irq
suffix:semicolon
)brace
r_else
r_if
c_cond
(paren
id|irq
OL
l_int|24
)paren
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|vnc_mask_pic_lo_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|vnc_mask_pic_lo_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|vnc_unmask_pic_lo_irq
suffix:semicolon
)brace
r_else
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|vnc_mask_pic_hi_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|vnc_mask_pic_hi_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|vnc_unmask_pic_hi_irq
suffix:semicolon
)brace
)brace
)brace
eof
