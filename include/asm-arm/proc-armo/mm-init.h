multiline_comment|/*&n; * linux/include/asm-arm/proc-armo/mm-init.h&n; *&n; * Copyright (C) 1996 Russell King&n; *&n; * This contains the code to setup the memory map on an ARM2/ARM250/ARM3&n; * machine. This is both processor &amp; architecture specific, and requires&n; * some more work to get it to fit into our separate processor and&n; * architecture structure.&n; */
r_extern
r_int
r_int
id|phys_screen_end
suffix:semicolon
r_extern
r_int
r_int
id|map_screen_mem
c_func
(paren
r_int
r_int
id|log_start
comma
r_int
r_int
id|kmem
comma
r_int
id|update
)paren
suffix:semicolon
DECL|variable|page_nr
r_int
id|page_nr
suffix:semicolon
DECL|macro|setup_processor_functions
mdefine_line|#define setup_processor_functions()
DECL|macro|PTE_SIZE
mdefine_line|#define PTE_SIZE&t;(PTRS_PER_PTE * BYTES_PER_PTR)
DECL|function|setup_swapper_dir
r_static
r_inline
r_void
id|setup_swapper_dir
(paren
r_int
id|index
comma
id|pte_t
op_star
id|ptep
)paren
(brace
id|set_pmd
(paren
id|pmd_offset
(paren
id|swapper_pg_dir
op_plus
id|index
comma
l_int|0
)paren
comma
id|mk_pmd
(paren
id|ptep
)paren
)paren
suffix:semicolon
)brace
DECL|function|setup_pagetables
r_static
r_inline
r_int
r_int
id|setup_pagetables
c_func
(paren
r_int
r_int
id|start_mem
comma
r_int
r_int
id|end_mem
)paren
(brace
r_int
r_int
id|i
suffix:semicolon
r_union
(brace
r_int
r_int
id|l
suffix:semicolon
id|pte_t
op_star
id|pte
suffix:semicolon
)brace
id|u
suffix:semicolon
id|page_nr
op_assign
id|MAP_NR
c_func
(paren
id|end_mem
)paren
suffix:semicolon
multiline_comment|/* map in pages for (0x0000 - 0x8000) */
id|u.l
op_assign
(paren
(paren
id|start_mem
op_plus
(paren
id|PTE_SIZE
op_minus
l_int|1
)paren
)paren
op_amp
op_complement
(paren
id|PTE_SIZE
op_minus
l_int|1
)paren
)paren
suffix:semicolon
id|start_mem
op_assign
id|u.l
op_plus
id|PTE_SIZE
suffix:semicolon
id|memzero
(paren
id|u.pte
comma
id|PTE_SIZE
)paren
suffix:semicolon
id|u.pte
(braket
l_int|0
)braket
op_assign
id|mk_pte
c_func
(paren
id|PAGE_OFFSET
op_plus
l_int|491520
comma
id|PAGE_READONLY
)paren
suffix:semicolon
id|setup_swapper_dir
(paren
l_int|0
comma
id|u.pte
)paren
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
l_int|1
suffix:semicolon
id|i
OL
id|PTRS_PER_PGD
suffix:semicolon
id|i
op_increment
)paren
id|pgd_val
c_func
(paren
id|swapper_pg_dir
(braket
id|i
)braket
)paren
op_assign
l_int|0
suffix:semicolon
multiline_comment|/* now map screen mem in */
id|phys_screen_end
op_assign
id|SCREEN2_END
suffix:semicolon
id|map_screen_mem
(paren
id|SCREEN1_END
op_minus
l_int|480
op_star
l_int|1024
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|start_mem
suffix:semicolon
)brace
DECL|function|mark_usable_memory_areas
r_static
r_inline
r_void
id|mark_usable_memory_areas
c_func
(paren
r_int
r_int
op_star
id|start_mem
comma
r_int
r_int
id|end_mem
)paren
(brace
r_int
r_int
id|smem
suffix:semicolon
op_star
id|start_mem
op_assign
id|smem
op_assign
id|PAGE_ALIGN
c_func
(paren
op_star
id|start_mem
)paren
suffix:semicolon
r_while
c_loop
(paren
id|smem
OL
id|end_mem
)paren
(brace
id|clear_bit
c_func
(paren
id|PG_reserved
comma
op_amp
id|mem_map
(braket
id|MAP_NR
c_func
(paren
id|smem
)paren
)braket
dot
id|flags
)paren
suffix:semicolon
id|smem
op_add_assign
id|PAGE_SIZE
suffix:semicolon
)brace
r_for
c_loop
(paren
id|smem
op_assign
id|phys_screen_end
suffix:semicolon
id|smem
OL
id|SCREEN2_END
suffix:semicolon
id|smem
op_add_assign
id|PAGE_SIZE
)paren
id|clear_bit
c_func
(paren
id|PG_reserved
comma
op_amp
id|mem_map
(braket
id|MAP_NR
c_func
(paren
id|smem
)paren
)braket
dot
id|flags
)paren
suffix:semicolon
)brace
eof
