multiline_comment|/*&n; * linux/include/asm-arm/proc-armo/mmap.h&n; *&n; * Copyright (C) 1996 Russell King&n; *&n; * This contains the code to setup the memory map on an ARM2/ARM250/ARM3&n; * machine. This is both processor &amp; architecture specific, and requires&n; * some more work to get it to fit into our separate processor and&n; * architecture structure.&n; */
DECL|variable|phys_screen_end
r_static
r_int
r_int
id|phys_screen_end
suffix:semicolon
DECL|variable|page_nr
r_int
id|page_nr
suffix:semicolon
DECL|macro|setup_processor_functions
mdefine_line|#define setup_processor_functions()
multiline_comment|/*&n; * This routine needs more work to make it dynamically release/allocate mem!&n; */
DECL|function|map_screen_mem
r_int
r_int
id|map_screen_mem
c_func
(paren
r_int
r_int
id|log_start
comma
r_int
r_int
id|kmem
comma
r_int
id|update
)paren
(brace
r_static
r_int
id|updated
op_assign
l_int|0
suffix:semicolon
r_int
r_int
id|address
op_assign
id|SCREEN_START
comma
id|i
suffix:semicolon
id|pgd_t
op_star
id|pg_dir
suffix:semicolon
id|pmd_t
op_star
id|pm_dir
suffix:semicolon
id|pte_t
op_star
id|pt_entry
suffix:semicolon
r_if
c_cond
(paren
id|updated
)paren
r_return
l_int|0
suffix:semicolon
id|updated
op_assign
id|update
suffix:semicolon
id|pg_dir
op_assign
id|swapper_pg_dir
op_plus
(paren
id|SCREEN1_BASE
op_rshift
id|PGDIR_SHIFT
)paren
suffix:semicolon
id|pm_dir
op_assign
id|pmd_offset
c_func
(paren
id|pg_dir
comma
id|SCREEN1_BASE
)paren
suffix:semicolon
id|pt_entry
op_assign
id|pte_offset
c_func
(paren
id|pm_dir
comma
id|SCREEN1_BASE
)paren
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
id|SCREEN1_BASE
suffix:semicolon
id|i
OL
id|SCREEN1_END
suffix:semicolon
id|i
op_add_assign
id|PAGE_SIZE
)paren
(brace
r_if
c_cond
(paren
id|i
op_ge
id|log_start
)paren
(brace
op_star
id|pt_entry
op_assign
id|mk_pte
c_func
(paren
id|address
comma
id|__pgprot
c_func
(paren
id|_PAGE_PRESENT
)paren
)paren
suffix:semicolon
id|address
op_add_assign
id|PAGE_SIZE
suffix:semicolon
)brace
r_else
op_star
id|pt_entry
op_assign
id|mk_pte
c_func
(paren
l_int|0
comma
id|__pgprot
c_func
(paren
l_int|0
)paren
)paren
suffix:semicolon
id|pt_entry
op_increment
suffix:semicolon
)brace
id|phys_screen_end
op_assign
id|address
suffix:semicolon
r_if
c_cond
(paren
id|update
)paren
id|flush_tlb_all
(paren
)paren
suffix:semicolon
r_return
id|kmem
suffix:semicolon
)brace
DECL|function|setup_pagetables
r_static
r_inline
r_int
r_int
id|setup_pagetables
c_func
(paren
r_int
r_int
id|start_mem
comma
r_int
r_int
id|end_mem
)paren
(brace
r_int
r_int
id|address
suffix:semicolon
r_int
r_int
id|spi
suffix:semicolon
id|page_nr
op_assign
id|MAP_NR
c_func
(paren
id|end_mem
)paren
suffix:semicolon
multiline_comment|/* Allocate zero page */
id|address
op_assign
id|PAGE_OFFSET
op_plus
l_int|480
op_star
l_int|1024
suffix:semicolon
r_for
c_loop
(paren
id|spi
op_assign
l_int|0
suffix:semicolon
id|spi
OL
l_int|32768
op_rshift
id|PAGE_SHIFT
suffix:semicolon
id|spi
op_increment
)paren
(brace
id|pgd_val
c_func
(paren
id|swapper_pg_dir
(braket
id|spi
)braket
)paren
op_assign
id|pte_val
c_func
(paren
id|mk_pte
c_func
(paren
id|address
comma
id|PAGE_READONLY
)paren
)paren
suffix:semicolon
id|address
op_add_assign
id|PAGE_SIZE
suffix:semicolon
)brace
r_while
c_loop
(paren
id|spi
OL
(paren
id|PAGE_OFFSET
op_rshift
id|PGDIR_SHIFT
)paren
)paren
id|pgd_val
c_func
(paren
id|swapper_pg_dir
(braket
id|spi
op_increment
)braket
)paren
op_assign
l_int|0
suffix:semicolon
id|map_screen_mem
(paren
id|SCREEN1_END
op_minus
l_int|480
op_star
l_int|1024
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|start_mem
suffix:semicolon
)brace
DECL|function|mark_usable_memory_areas
r_static
r_inline
r_void
id|mark_usable_memory_areas
c_func
(paren
r_int
r_int
op_star
id|start_mem
comma
r_int
r_int
id|end_mem
)paren
(brace
r_int
r_int
id|smem
op_assign
id|PAGE_ALIGN
c_func
(paren
op_star
id|start_mem
)paren
suffix:semicolon
r_while
c_loop
(paren
id|smem
OL
id|end_mem
)paren
(brace
id|clear_bit
c_func
(paren
id|PG_reserved
comma
op_amp
id|mem_map
(braket
id|MAP_NR
c_func
(paren
id|smem
)paren
)braket
dot
id|flags
)paren
suffix:semicolon
id|smem
op_add_assign
id|PAGE_SIZE
suffix:semicolon
)brace
r_for
c_loop
(paren
id|smem
op_assign
id|phys_screen_end
suffix:semicolon
id|smem
OL
id|SCREEN2_END
suffix:semicolon
id|smem
op_add_assign
id|PAGE_SIZE
)paren
id|clear_bit
c_func
(paren
id|PG_reserved
comma
op_amp
id|mem_map
(braket
id|MAP_NR
c_func
(paren
id|smem
)paren
)braket
dot
id|flags
)paren
suffix:semicolon
)brace
eof
