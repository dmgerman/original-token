multiline_comment|/*&n; * linux/include/asm-arm/arch-shark/irq.h&n; *&n; * by Alexander.Schulz@stud.uni-karlsruhe.de&n; *&n; * derived from linux/arch/ppc/kernel/i8259.c and:&n; * include/asm-arm/arch-ebsa110/irq.h&n; * Copyright (C) 1996-1998 Russell King&n; */
DECL|macro|fixup_irq
mdefine_line|#define fixup_irq(x) (x)
multiline_comment|/*&n; * 8259A PIC functions to handle ISA devices:&n; */
multiline_comment|/*&n; * This contains the irq mask for both 8259A irq controllers,&n; * Let through the cascade-interrupt no. 2 (ff-(1&lt;&lt;2)==fb)&n; */
DECL|variable|cached_irq_mask
r_static
r_int
r_char
id|cached_irq_mask
(braket
l_int|2
)braket
op_assign
(brace
l_int|0xfb
comma
l_int|0xff
)brace
suffix:semicolon
multiline_comment|/*&n; * These have to be protected by the irq controller spinlock&n; * before being called.&n; */
DECL|function|shark_disable_8259A_irq
r_static
r_void
id|shark_disable_8259A_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|mask
suffix:semicolon
r_if
c_cond
(paren
id|irq
OL
l_int|8
)paren
(brace
id|mask
op_assign
l_int|1
op_lshift
id|irq
suffix:semicolon
id|cached_irq_mask
(braket
l_int|0
)braket
op_or_assign
id|mask
suffix:semicolon
)brace
r_else
(brace
id|mask
op_assign
l_int|1
op_lshift
(paren
id|irq
op_minus
l_int|8
)paren
suffix:semicolon
id|cached_irq_mask
(braket
l_int|1
)braket
op_or_assign
id|mask
suffix:semicolon
)brace
id|outb
c_func
(paren
id|cached_irq_mask
(braket
l_int|1
)braket
comma
l_int|0xA1
)paren
suffix:semicolon
id|outb
c_func
(paren
id|cached_irq_mask
(braket
l_int|0
)braket
comma
l_int|0x21
)paren
suffix:semicolon
)brace
DECL|function|shark_enable_8259A_irq
r_static
r_void
id|shark_enable_8259A_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|mask
suffix:semicolon
r_if
c_cond
(paren
id|irq
OL
l_int|8
)paren
(brace
id|mask
op_assign
op_complement
(paren
l_int|1
op_lshift
id|irq
)paren
suffix:semicolon
id|cached_irq_mask
(braket
l_int|0
)braket
op_and_assign
id|mask
suffix:semicolon
)brace
r_else
(brace
id|mask
op_assign
op_complement
(paren
l_int|1
op_lshift
(paren
id|irq
op_minus
l_int|8
)paren
)paren
suffix:semicolon
id|cached_irq_mask
(braket
l_int|1
)braket
op_and_assign
id|mask
suffix:semicolon
)brace
id|outb
c_func
(paren
id|cached_irq_mask
(braket
l_int|1
)braket
comma
l_int|0xA1
)paren
suffix:semicolon
id|outb
c_func
(paren
id|cached_irq_mask
(braket
l_int|0
)braket
comma
l_int|0x21
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * Careful! The 8259A is a fragile beast, it pretty&n; * much _has_ to be done exactly like this (mask it&n; * first, _then_ send the EOI, and the order of EOI&n; * to the two 8259s is important!&n; */
DECL|function|shark_mask_and_ack_8259A_irq
r_static
r_void
id|shark_mask_and_ack_8259A_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_if
c_cond
(paren
id|irq
op_amp
l_int|8
)paren
(brace
id|cached_irq_mask
(braket
l_int|1
)braket
op_or_assign
l_int|1
op_lshift
(paren
id|irq
op_minus
l_int|8
)paren
suffix:semicolon
id|inb
c_func
(paren
l_int|0xA1
)paren
suffix:semicolon
multiline_comment|/* DUMMY */
id|outb
c_func
(paren
id|cached_irq_mask
(braket
l_int|1
)braket
comma
l_int|0xA1
)paren
suffix:semicolon
)brace
r_else
(brace
id|cached_irq_mask
(braket
l_int|0
)braket
op_or_assign
l_int|1
op_lshift
id|irq
suffix:semicolon
id|outb
c_func
(paren
id|cached_irq_mask
(braket
l_int|0
)braket
comma
l_int|0x21
)paren
suffix:semicolon
)brace
)brace
DECL|function|bogus_int
r_static
r_void
id|bogus_int
c_func
(paren
r_int
id|irq
comma
r_void
op_star
id|dev_id
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
(brace
id|printk
c_func
(paren
l_string|&quot;Got interrupt %i!&bslash;n&quot;
comma
id|irq
)paren
suffix:semicolon
)brace
DECL|variable|cascade
r_static
r_struct
id|irqaction
id|cascade
suffix:semicolon
DECL|function|irq_init_irq
r_static
id|__inline__
r_void
id|irq_init_irq
c_func
(paren
r_void
)paren
(brace
r_int
id|irq
suffix:semicolon
r_for
c_loop
(paren
id|irq
op_assign
l_int|0
suffix:semicolon
id|irq
OL
id|NR_IRQS
suffix:semicolon
id|irq
op_increment
)paren
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|probe_ok
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|shark_mask_and_ack_8259A_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|shark_disable_8259A_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|shark_enable_8259A_irq
suffix:semicolon
)brace
multiline_comment|/* The PICs are initialized to level triggered and auto eoi!&n;&t; * If they are set to edge triggered they lose some IRQs,&n;&t; * if they are set to manual eoi they get locked up after&n;&t; * a short time&n;&t; */
multiline_comment|/* init master interrupt controller */
id|outb
c_func
(paren
l_int|0x19
comma
l_int|0x20
)paren
suffix:semicolon
multiline_comment|/* Start init sequence, level triggered */
id|outb
c_func
(paren
l_int|0x00
comma
l_int|0x21
)paren
suffix:semicolon
multiline_comment|/* Vector base */
id|outb
c_func
(paren
l_int|0x04
comma
l_int|0x21
)paren
suffix:semicolon
multiline_comment|/* Cascade (slave) on IRQ2 */
id|outb
c_func
(paren
l_int|0x03
comma
l_int|0x21
)paren
suffix:semicolon
multiline_comment|/* Select 8086 mode , auto eoi*/
id|outb
c_func
(paren
l_int|0x0A
comma
l_int|0x20
)paren
suffix:semicolon
multiline_comment|/* init slave interrupt controller */
id|outb
c_func
(paren
l_int|0x19
comma
l_int|0xA0
)paren
suffix:semicolon
multiline_comment|/* Start init sequence, level triggered */
id|outb
c_func
(paren
l_int|0x08
comma
l_int|0xA1
)paren
suffix:semicolon
multiline_comment|/* Vector base */
id|outb
c_func
(paren
l_int|0x02
comma
l_int|0xA1
)paren
suffix:semicolon
multiline_comment|/* Cascade (slave) on IRQ2 */
id|outb
c_func
(paren
l_int|0x03
comma
l_int|0xA1
)paren
suffix:semicolon
multiline_comment|/* Select 8086 mode, auto eoi */
id|outb
c_func
(paren
l_int|0x0A
comma
l_int|0xA0
)paren
suffix:semicolon
id|outb
c_func
(paren
id|cached_irq_mask
(braket
l_int|1
)braket
comma
l_int|0xA1
)paren
suffix:semicolon
id|outb
c_func
(paren
id|cached_irq_mask
(braket
l_int|0
)braket
comma
l_int|0x21
)paren
suffix:semicolon
singleline_comment|//request_region(0x20,0x2,&quot;pic1&quot;);
singleline_comment|//request_region(0xA0,0x2,&quot;pic2&quot;);
id|cascade.handler
op_assign
id|bogus_int
suffix:semicolon
id|cascade.flags
op_assign
l_int|0
suffix:semicolon
id|cascade.mask
op_assign
l_int|0
suffix:semicolon
id|cascade.name
op_assign
l_string|&quot;cascade&quot;
suffix:semicolon
id|cascade.next
op_assign
l_int|NULL
suffix:semicolon
id|cascade.dev_id
op_assign
l_int|NULL
suffix:semicolon
id|setup_arm_irq
c_func
(paren
l_int|2
comma
op_amp
id|cascade
)paren
suffix:semicolon
)brace
eof
