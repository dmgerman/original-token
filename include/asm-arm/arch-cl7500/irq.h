multiline_comment|/*&n; * include/asm-arm/arch-cl7500/irq.h&n; *&n; * Copyright (C) 1996 Russell King&n; * Copyright (C) 1999 Nexus Electronics Ltd.&n; *&n; * Changelog:&n; *   10-10-1996&t;RMK&t;Brought up to date with arch-sa110eval&n; *   22-08-1998&t;RMK&t;Restructured IRQ routines&n; *   11-08-1999&t;PJB&t;Created ARM7500 version, derived from RiscPC code&n; */
macro_line|#include &lt;asm/hardware/iomd.h&gt;
DECL|function|fixup_irq
r_static
r_inline
r_int
id|fixup_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_if
c_cond
(paren
id|irq
op_eq
id|IRQ_ISA
)paren
(brace
r_int
id|isabits
op_assign
op_star
(paren
(paren
r_volatile
r_int
r_int
op_star
)paren
l_int|0xe002b700
)paren
suffix:semicolon
r_if
c_cond
(paren
id|isabits
op_eq
l_int|0
)paren
(brace
id|printk
c_func
(paren
l_string|&quot;Spurious ISA IRQ!&bslash;n&quot;
)paren
suffix:semicolon
r_return
id|irq
suffix:semicolon
)brace
id|irq
op_assign
l_int|40
suffix:semicolon
r_while
c_loop
(paren
op_logical_neg
(paren
id|isabits
op_amp
l_int|1
)paren
)paren
(brace
id|irq
op_increment
suffix:semicolon
id|isabits
op_rshift_assign
l_int|1
suffix:semicolon
)brace
)brace
r_return
id|irq
suffix:semicolon
)brace
DECL|function|cl7500_mask_irq_ack_a
r_static
r_void
id|cl7500_mask_irq_ack_a
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;bic&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;strb&t;%1, [%3]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKA
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQCLRA
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_mask_irq_a
r_static
r_void
id|cl7500_mask_irq_a
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;bic&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKA
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_unmask_irq_a
r_static
r_void
id|cl7500_unmask_irq_a
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;orr&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKA
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_mask_irq_b
r_static
r_void
id|cl7500_mask_irq_b
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;bic&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKB
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_unmask_irq_b
r_static
r_void
id|cl7500_unmask_irq_b
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;orr&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKB
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_mask_irq_c
r_static
r_void
id|cl7500_mask_irq_c
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;bic&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKC
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_unmask_irq_c
r_static
r_void
id|cl7500_unmask_irq_c
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;orr&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKC
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_mask_irq_d
r_static
r_void
id|cl7500_mask_irq_d
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;bic&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKD
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_unmask_irq_d
r_static
r_void
id|cl7500_unmask_irq_d
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;orr&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_IRQMASKD
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_mask_irq_dma
r_static
r_void
id|cl7500_mask_irq_dma
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;bic&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_DMAMASK
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_unmask_irq_dma
r_static
r_void
id|cl7500_unmask_irq_dma
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;orr&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_DMAMASK
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_mask_irq_fiq
r_static
r_void
id|cl7500_mask_irq_fiq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;bic&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_FIQMASK
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|cl7500_unmask_irq_fiq
r_static
r_void
id|cl7500_unmask_irq_fiq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
r_int
r_int
id|temp
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldrb&t;%0, [%2]&bslash;n&quot;
l_string|&quot;&t;orr&t;%0, %0, %1&bslash;n&quot;
l_string|&quot;&t;strb&t;%0, [%2]&quot;
suffix:colon
l_string|&quot;=&amp;r&quot;
(paren
id|temp
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|1
op_lshift
(paren
id|irq
op_amp
l_int|7
)paren
)paren
comma
l_string|&quot;r&quot;
(paren
id|ioaddr
c_func
(paren
id|IOMD_FIQMASK
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|no_action
r_static
r_void
id|no_action
c_func
(paren
r_int
id|cpl
comma
r_void
op_star
id|dev_id
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
(brace
)brace
DECL|variable|irq_isa
r_static
r_struct
id|irqaction
id|irq_isa
op_assign
(brace
id|no_action
comma
l_int|0
comma
l_int|0
comma
l_string|&quot;isa&quot;
comma
l_int|NULL
comma
l_int|NULL
)brace
suffix:semicolon
DECL|function|irq_init_irq
r_static
id|__inline__
r_void
id|irq_init_irq
c_func
(paren
r_void
)paren
(brace
r_extern
r_void
id|ecard_disableirq
c_func
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
r_extern
r_void
id|ecard_enableirq
c_func
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
r_int
id|irq
suffix:semicolon
id|outb
c_func
(paren
l_int|0
comma
id|IOMD_IRQMASKA
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0
comma
id|IOMD_IRQMASKB
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0
comma
id|IOMD_FIQMASK
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0
comma
id|IOMD_DMAMASK
)paren
suffix:semicolon
r_for
c_loop
(paren
id|irq
op_assign
l_int|0
suffix:semicolon
id|irq
OL
id|NR_IRQS
suffix:semicolon
id|irq
op_increment
)paren
(brace
r_switch
c_cond
(paren
id|irq
)paren
(brace
r_case
l_int|0
dot
dot
dot
l_int|6
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|probe_ok
op_assign
l_int|1
suffix:semicolon
r_case
l_int|7
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|cl7500_mask_irq_ack_a
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|cl7500_mask_irq_a
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|cl7500_unmask_irq_a
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|9
dot
dot
dot
l_int|15
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|probe_ok
op_assign
l_int|1
suffix:semicolon
r_case
l_int|8
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|cl7500_mask_irq_b
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|cl7500_mask_irq_b
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|cl7500_unmask_irq_b
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|16
dot
dot
dot
l_int|22
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|cl7500_mask_irq_dma
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|cl7500_mask_irq_dma
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|cl7500_unmask_irq_dma
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|24
dot
dot
dot
l_int|31
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|cl7500_mask_irq_c
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|cl7500_mask_irq_c
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|cl7500_unmask_irq_c
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|32
dot
dot
dot
l_int|39
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|cl7500_mask_irq_d
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|cl7500_mask_irq_d
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|cl7500_unmask_irq_d
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|40
dot
dot
dot
l_int|47
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|probe_ok
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|no_action
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|no_action
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|no_action
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|64
dot
dot
dot
l_int|72
suffix:colon
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|cl7500_mask_irq_fiq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|cl7500_mask_irq_fiq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|cl7500_unmask_irq_fiq
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
id|setup_arm_irq
c_func
(paren
id|IRQ_ISA
comma
op_amp
id|irq_isa
)paren
suffix:semicolon
)brace
eof
