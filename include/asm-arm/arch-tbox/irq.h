multiline_comment|/*&n; * include/asm-arm/arch-tbox/irq.h&n; *&n; * Copyright (C) 1998, 1999, 2000 Philip Blundell&n; */
multiline_comment|/*&n; * This program is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU General Public License&n; * as published by the Free Software Foundation; either version&n; * 2 of the License, or (at your option) any later version.&n; */
macro_line|#include &lt;asm/io.h&gt;
DECL|macro|fixup_irq
mdefine_line|#define fixup_irq(x) (x)
r_extern
r_int
r_int
id|soft_irq_mask
suffix:semicolon
DECL|function|tbox_mask_irq
r_static
r_void
id|tbox_mask_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
id|__raw_writel
c_func
(paren
l_int|0
comma
id|INTCONT
op_plus
(paren
id|irq
op_lshift
l_int|2
)paren
)paren
suffix:semicolon
id|soft_irq_mask
op_and_assign
op_complement
(paren
l_int|1
op_lshift
id|irq
)paren
suffix:semicolon
)brace
DECL|function|tbox_unmask_irq
r_static
r_void
id|tbox_unmask_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
id|soft_irq_mask
op_or_assign
(paren
l_int|1
op_lshift
id|irq
)paren
suffix:semicolon
id|__raw_writel
c_func
(paren
l_int|1
comma
id|INTCONT
op_plus
(paren
id|irq
op_lshift
l_int|2
)paren
)paren
suffix:semicolon
)brace
DECL|function|irq_init_irq
r_static
id|__inline__
r_void
id|irq_init_irq
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|i
suffix:semicolon
multiline_comment|/* Disable all interrupts initially. */
r_for
c_loop
(paren
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|NR_IRQS
suffix:semicolon
id|i
op_increment
)paren
(brace
r_if
c_cond
(paren
id|i
op_le
l_int|10
op_logical_or
(paren
id|i
op_ge
l_int|12
op_logical_and
id|i
op_le
l_int|13
)paren
)paren
(brace
id|irq_desc
(braket
id|i
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|i
)braket
dot
id|probe_ok
op_assign
l_int|0
suffix:semicolon
id|irq_desc
(braket
id|i
)braket
dot
id|mask_ack
op_assign
id|tbox_mask_irq
suffix:semicolon
id|irq_desc
(braket
id|i
)braket
dot
id|mask
op_assign
id|tbox_mask_irq
suffix:semicolon
id|irq_desc
(braket
id|i
)braket
dot
id|unmask
op_assign
id|tbox_unmask_irq
suffix:semicolon
id|tbox_mask_irq
c_func
(paren
id|i
)paren
suffix:semicolon
)brace
r_else
(brace
id|irq_desc
(braket
id|i
)braket
dot
id|valid
op_assign
l_int|0
suffix:semicolon
id|irq_desc
(braket
id|i
)braket
dot
id|probe_ok
op_assign
l_int|0
suffix:semicolon
)brace
)brace
)brace
eof
