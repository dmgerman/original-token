multiline_comment|/*&n; *  linux/include/asm-arm/fiq.h&n; *&n; * Support for FIQ on ARM architectures.&n; * Written by Philip Blundell &lt;philb@gnu.org&gt;, 1998&n; * Re-written by Russell King&n; */
macro_line|#ifndef __ASM_FIQ_H
DECL|macro|__ASM_FIQ_H
mdefine_line|#define __ASM_FIQ_H
macro_line|#include &lt;asm/ptrace.h&gt;
DECL|struct|fiq_handler
r_struct
id|fiq_handler
(brace
DECL|member|next
r_struct
id|fiq_handler
op_star
id|next
suffix:semicolon
multiline_comment|/* Name&n;&t; */
DECL|member|name
r_const
r_char
op_star
id|name
suffix:semicolon
multiline_comment|/* Called to ask driver to relinquish/&n;&t; * reacquire FIQ&n;&t; * return zero to accept, or -&lt;errno&gt;&n;&t; */
DECL|member|fiq_op
r_int
(paren
op_star
id|fiq_op
)paren
(paren
r_void
op_star
comma
r_int
id|relinquish
)paren
suffix:semicolon
multiline_comment|/* data for the relinquish/reacquire functions&n;&t; */
DECL|member|dev_id
r_void
op_star
id|dev_id
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|claim_fiq
c_func
(paren
r_struct
id|fiq_handler
op_star
id|f
)paren
suffix:semicolon
r_extern
r_void
id|release_fiq
c_func
(paren
r_struct
id|fiq_handler
op_star
id|f
)paren
suffix:semicolon
r_extern
r_void
id|set_fiq_handler
c_func
(paren
r_void
op_star
id|start
comma
r_int
r_int
id|length
)paren
suffix:semicolon
r_extern
r_void
id|set_fiq_regs
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_void
id|get_fiq_regs
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
macro_line|#endif
eof
