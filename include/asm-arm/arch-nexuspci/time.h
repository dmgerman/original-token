multiline_comment|/*&n; * linux/include/asm-arm/arch-nexuspci/time.h&n; *&n; * Copyright (c) 1997, 1998, 1999, 2000 FutureTV Labs Ltd.&n; *&n; * The FTV PCI card has no real-time clock.  We get timer ticks from the&n; * SCC chip.&n; */
multiline_comment|/*&n; * This program is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU General Public License&n; * as published by the Free Software Foundation; either version&n; * 2 of the License, or (at your option) any later version.&n; */
DECL|function|timer_interrupt
r_static
r_void
id|timer_interrupt
c_func
(paren
r_int
id|irq
comma
r_void
op_star
id|dev_id
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
(brace
r_static
r_int
id|count
op_assign
l_int|25
suffix:semicolon
r_int
r_char
id|stat
op_assign
id|__raw_readb
c_func
(paren
id|DUART_BASE
op_plus
l_int|0x14
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|stat
op_amp
l_int|0x10
)paren
)paren
r_return
suffix:semicolon
multiline_comment|/* Not for us */
multiline_comment|/* Reset counter */
id|__raw_writeb
c_func
(paren
l_int|0x90
comma
id|DUART_BASE
op_plus
l_int|8
)paren
suffix:semicolon
r_if
c_cond
(paren
op_decrement
id|count
op_eq
l_int|0
)paren
(brace
r_static
r_int
id|state
op_assign
l_int|1
suffix:semicolon
id|state
op_xor_assign
l_int|1
suffix:semicolon
id|__raw_writeb
c_func
(paren
l_int|0x1a
op_plus
id|state
comma
id|INTCONT_BASE
)paren
suffix:semicolon
id|__raw_writeb
c_func
(paren
l_int|0x18
op_plus
id|state
comma
id|INTCONT_BASE
)paren
suffix:semicolon
id|count
op_assign
l_int|50
suffix:semicolon
)brace
multiline_comment|/* Wait for slow rise time */
id|__raw_readb
c_func
(paren
id|DUART_BASE
op_plus
l_int|0x14
)paren
suffix:semicolon
id|__raw_readb
c_func
(paren
id|DUART_BASE
op_plus
l_int|0x14
)paren
suffix:semicolon
id|__raw_readb
c_func
(paren
id|DUART_BASE
op_plus
l_int|0x14
)paren
suffix:semicolon
id|__raw_readb
c_func
(paren
id|DUART_BASE
op_plus
l_int|0x14
)paren
suffix:semicolon
id|__raw_readb
c_func
(paren
id|DUART_BASE
op_plus
l_int|0x14
)paren
suffix:semicolon
id|__raw_readb
c_func
(paren
id|DUART_BASE
op_plus
l_int|0x14
)paren
suffix:semicolon
id|do_timer
c_func
(paren
id|regs
)paren
suffix:semicolon
)brace
DECL|function|setup_timer
r_extern
id|__inline__
r_void
id|setup_timer
c_func
(paren
r_void
)paren
(brace
r_int
id|tick
op_assign
l_int|3686400
op_div
l_int|16
op_div
l_int|2
op_div
l_int|100
suffix:semicolon
id|__raw_writeb
c_func
(paren
id|tick
op_amp
l_int|0xff
comma
id|DUART_BASE
op_plus
l_int|0x1c
)paren
suffix:semicolon
id|__raw_writeb
c_func
(paren
id|tick
op_rshift
l_int|8
comma
id|DUART_BASE
op_plus
l_int|0x18
)paren
suffix:semicolon
id|__raw_writeb
c_func
(paren
l_int|0x80
comma
id|DUART_BASE
op_plus
l_int|8
)paren
suffix:semicolon
id|__raw_writeb
c_func
(paren
l_int|0x10
comma
id|DUART_BASE
op_plus
l_int|0x14
)paren
suffix:semicolon
id|timer_irq.handler
op_assign
id|timer_interrupt
suffix:semicolon
id|timer_irq.flags
op_assign
id|SA_SHIRQ
suffix:semicolon
id|setup_arm_irq
c_func
(paren
id|IRQ_TIMER
comma
op_amp
id|timer_irq
)paren
suffix:semicolon
)brace
eof
