multiline_comment|/*&n; *  linux/include/asm-arm/arch-ebsa110/irq.h&n; *&n; *  Copyright (C) 1996-1998 Russell King&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License version 2 as&n; * published by the Free Software Foundation.&n; *&n; *  Changelog:&n; *   22-08-1998&t;RMK&t;Restructured IRQ routines&n; */
DECL|macro|IRQ_MCLR
mdefine_line|#define IRQ_MCLR&t;((volatile unsigned char *)0xf3000000)
DECL|macro|IRQ_MSET
mdefine_line|#define IRQ_MSET&t;((volatile unsigned char *)0xf2c00000)
DECL|macro|IRQ_MASK
mdefine_line|#define IRQ_MASK&t;((volatile unsigned char *)0xf2c00000)
DECL|macro|fixup_irq
mdefine_line|#define fixup_irq(x) (x)
DECL|function|ebsa110_mask_and_ack_irq
r_static
r_void
id|ebsa110_mask_and_ack_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
op_star
id|IRQ_MCLR
op_assign
l_int|1
op_lshift
id|irq
suffix:semicolon
)brace
DECL|function|ebsa110_mask_irq
r_static
r_void
id|ebsa110_mask_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
op_star
id|IRQ_MCLR
op_assign
l_int|1
op_lshift
id|irq
suffix:semicolon
)brace
DECL|function|ebsa110_unmask_irq
r_static
r_void
id|ebsa110_unmask_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
op_star
id|IRQ_MSET
op_assign
l_int|1
op_lshift
id|irq
suffix:semicolon
)brace
DECL|function|irq_init_irq
r_static
id|__inline__
r_void
id|irq_init_irq
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
r_int
id|irq
suffix:semicolon
id|save_flags_cli
(paren
id|flags
)paren
suffix:semicolon
op_star
id|IRQ_MCLR
op_assign
l_int|0xff
suffix:semicolon
op_star
id|IRQ_MSET
op_assign
l_int|0x55
suffix:semicolon
op_star
id|IRQ_MSET
op_assign
l_int|0x00
suffix:semicolon
r_if
c_cond
(paren
op_star
id|IRQ_MASK
op_ne
l_int|0x55
)paren
r_while
c_loop
(paren
l_int|1
)paren
suffix:semicolon
op_star
id|IRQ_MCLR
op_assign
l_int|0xff
suffix:semicolon
multiline_comment|/* clear all interrupt enables */
id|restore_flags
(paren
id|flags
)paren
suffix:semicolon
r_for
c_loop
(paren
id|irq
op_assign
l_int|0
suffix:semicolon
id|irq
OL
id|NR_IRQS
suffix:semicolon
id|irq
op_increment
)paren
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|probe_ok
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|ebsa110_mask_and_ack_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|ebsa110_mask_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|ebsa110_unmask_irq
suffix:semicolon
)brace
)brace
eof
