multiline_comment|/*&n; * include/asm-arm/arch-ebsa285/irq.h&n; *&n; * Copyright (C) 1996-1998 Russell King&n; *&n; * Changelog:&n; *   22-08-1998&t;RMK&t;Restructured IRQ routines&n; *   03-09-1998&t;PJB&t;Merged CATS support&n; */
macro_line|#include &lt;linux/config.h&gt;
DECL|function|ebsa285_mask_irq
r_static
r_void
id|ebsa285_mask_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
op_star
id|CSR_IRQ_DISABLE
op_assign
l_int|1
op_lshift
id|irq
suffix:semicolon
)brace
DECL|function|ebsa285_unmask_irq
r_static
r_void
id|ebsa285_unmask_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
op_star
id|CSR_IRQ_ENABLE
op_assign
l_int|1
op_lshift
id|irq
suffix:semicolon
)brace
macro_line|#ifdef CONFIG_CATS
multiline_comment|/*&n; * This contains the irq mask for both 8259A irq controllers,&n; */
DECL|variable|isa_irq_mask
r_static
r_int
r_int
id|isa_irq_mask
op_assign
l_int|0xffff
suffix:semicolon
DECL|macro|cached_21
mdefine_line|#define cached_21&t;(isa_irq_mask &amp; 0xff)
DECL|macro|cached_A1
mdefine_line|#define cached_A1&t;((isa_irq_mask &gt;&gt; 8) &amp; 0xff)
DECL|macro|update_8259
mdefine_line|#define update_8259(_irq)&t;&t;&t;&bslash;&n;&t;if ((_irq) &amp; 8)&t;&t;&t;&t;&bslash;&n;&t;&t;outb(cached_A1, 0xa1);&t;&t;&bslash;&n;&t;else&t;&t;&t;&t;&t;&bslash;&n;&t;&t;outb(cached_21, 0x21);
DECL|function|isa_interrupt
r_static
r_void
id|isa_interrupt
c_func
(paren
r_int
id|irq
comma
r_void
op_star
id|h
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
(brace
id|asmlinkage
r_void
id|do_IRQ
c_func
(paren
r_int
id|irq
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_int
r_int
id|irqbits
op_assign
id|inb
c_func
(paren
l_int|0x20
)paren
op_or
(paren
id|inb
c_func
(paren
l_int|0xa0
)paren
op_lshift
l_int|8
)paren
comma
id|irqnr
op_assign
l_int|0
suffix:semicolon
id|irqbits
op_and_assign
op_complement
(paren
l_int|1
op_lshift
l_int|2
)paren
suffix:semicolon
multiline_comment|/* don&squot;t try to service the cascade */
r_while
c_loop
(paren
id|irqbits
)paren
(brace
r_if
c_cond
(paren
id|irqbits
op_amp
l_int|1
)paren
id|do_IRQ
c_func
(paren
l_int|32
op_plus
id|irqnr
comma
id|regs
)paren
suffix:semicolon
id|irqbits
op_rshift_assign
l_int|1
suffix:semicolon
id|irqnr
op_increment
suffix:semicolon
)brace
)brace
DECL|function|no_action
r_static
r_void
id|no_action
c_func
(paren
r_int
id|cpl
comma
r_void
op_star
id|dev_id
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
(brace
)brace
DECL|variable|irq_isa
r_static
r_struct
id|irqaction
id|irq_isa
op_assign
(brace
id|isa_interrupt
comma
id|SA_INTERRUPT
comma
l_int|0
comma
l_string|&quot;ISA PIC&quot;
comma
l_int|NULL
comma
l_int|NULL
)brace
suffix:semicolon
DECL|variable|irq_cascade
r_static
r_struct
id|irqaction
id|irq_cascade
op_assign
(brace
id|no_action
comma
l_int|0
comma
l_int|0
comma
l_string|&quot;cascade&quot;
comma
l_int|NULL
comma
l_int|NULL
)brace
suffix:semicolon
DECL|function|cats_mask_and_ack_isa_irq
r_static
r_void
id|cats_mask_and_ack_isa_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
id|isa_irq_mask
op_or_assign
(paren
l_int|1
op_lshift
(paren
id|irq
op_minus
l_int|32
)paren
)paren
suffix:semicolon
id|update_8259
c_func
(paren
id|irq
)paren
suffix:semicolon
r_if
c_cond
(paren
id|irq
op_amp
l_int|8
)paren
(brace
id|inb
c_func
(paren
l_int|0xA1
)paren
suffix:semicolon
multiline_comment|/* DUMMY */
id|outb
c_func
(paren
id|cached_A1
comma
l_int|0xA1
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x62
comma
l_int|0x20
)paren
suffix:semicolon
multiline_comment|/* Specific EOI to cascade */
id|outb
c_func
(paren
l_int|0x20
comma
l_int|0xA0
)paren
suffix:semicolon
)brace
r_else
(brace
id|inb
c_func
(paren
l_int|0x21
)paren
suffix:semicolon
multiline_comment|/* DUMMY */
id|outb
c_func
(paren
id|cached_21
comma
l_int|0x21
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x20
comma
l_int|0x20
)paren
suffix:semicolon
)brace
)brace
DECL|function|cats_mask_isa_irq
r_static
r_void
id|cats_mask_isa_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
id|isa_irq_mask
op_or_assign
(paren
l_int|1
op_lshift
(paren
id|irq
op_minus
l_int|32
)paren
)paren
suffix:semicolon
id|update_8259
c_func
(paren
id|irq
)paren
suffix:semicolon
)brace
DECL|function|cats_unmask_isa_irq
r_static
r_void
id|cats_unmask_isa_irq
c_func
(paren
r_int
r_int
id|irq
)paren
(brace
id|isa_irq_mask
op_and_assign
op_complement
(paren
l_int|1
op_lshift
(paren
id|irq
op_minus
l_int|32
)paren
)paren
suffix:semicolon
id|update_8259
c_func
(paren
id|irq
)paren
suffix:semicolon
)brace
macro_line|#endif 
DECL|function|irq_init_irq
r_static
id|__inline__
r_void
id|irq_init_irq
c_func
(paren
r_void
)paren
(brace
r_int
id|irq
suffix:semicolon
op_star
id|CSR_IRQ_DISABLE
op_assign
op_minus
l_int|1
suffix:semicolon
op_star
id|CSR_FIQ_DISABLE
op_assign
op_minus
l_int|1
suffix:semicolon
r_for
c_loop
(paren
id|irq
op_assign
l_int|0
suffix:semicolon
id|irq
OL
id|NR_IRQS
suffix:semicolon
id|irq
op_increment
)paren
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|valid
op_assign
l_int|1
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|probe_ok
op_assign
l_int|1
suffix:semicolon
macro_line|#ifdef CONFIG_CATS
r_if
c_cond
(paren
id|machine_is_cats
c_func
(paren
)paren
op_logical_and
id|IRQ_IS_ISA
c_func
(paren
id|irq
)paren
)paren
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|cats_mask_and_ack_isa_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|cats_mask_isa_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|cats_unmask_isa_irq
suffix:semicolon
)brace
r_else
macro_line|#endif
(brace
id|irq_desc
(braket
id|irq
)braket
dot
id|mask_ack
op_assign
id|ebsa285_mask_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|mask
op_assign
id|ebsa285_mask_irq
suffix:semicolon
id|irq_desc
(braket
id|irq
)braket
dot
id|unmask
op_assign
id|ebsa285_unmask_irq
suffix:semicolon
)brace
)brace
macro_line|#ifdef CONFIG_CATS
r_if
c_cond
(paren
id|machine_is_cats
c_func
(paren
)paren
)paren
(brace
id|request_region
c_func
(paren
l_int|0x20
comma
l_int|2
comma
l_string|&quot;pic1&quot;
)paren
suffix:semicolon
id|request_region
c_func
(paren
l_int|0xa0
comma
l_int|2
comma
l_string|&quot;pic2&quot;
)paren
suffix:semicolon
multiline_comment|/* set up master 8259 */
id|outb
c_func
(paren
l_int|0x11
comma
l_int|0x20
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0
comma
l_int|0x21
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|1
op_lshift
l_int|2
comma
l_int|0x21
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x1
comma
l_int|0x21
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0xff
comma
l_int|0x21
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x68
comma
l_int|0x20
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0xa
comma
l_int|0x20
)paren
suffix:semicolon
multiline_comment|/* set up slave 8259 */
id|outb
c_func
(paren
l_int|0x11
comma
l_int|0xa0
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0
comma
l_int|0xa1
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|2
comma
l_int|0xa1
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x1
comma
l_int|0xa1
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0xff
comma
l_int|0xa1
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0x68
comma
l_int|0xa0
)paren
suffix:semicolon
id|outb
c_func
(paren
l_int|0xa
comma
l_int|0xa0
)paren
suffix:semicolon
id|setup_arm_irq
c_func
(paren
id|IRQ_ISA_PIC
comma
op_amp
id|irq_isa
)paren
suffix:semicolon
id|setup_arm_irq
c_func
(paren
id|IRQ_ISA_CASCADE
comma
op_amp
id|irq_cascade
)paren
suffix:semicolon
)brace
macro_line|#endif
)brace
eof
