multiline_comment|/*&n; * INET&t;&t;An implementation of the TCP/IP protocol suite for the LINUX&n; *&t;&t;operating system.  INET is implemented using the  BSD Socket&n; *&t;&t;interface as the means of communication with the user level.&n; *&n; *&t;&t;Checksumming functions for IP, TCP, UDP and so on&n; *&n; * Authors:&t;Jorge Cwik, &lt;jorge@laser.satlink.net&gt;&n; *&t;&t;Arnt Gulbrandsen, &lt;agulbra@nvg.unit.no&gt;&n; *&t;&t;Borrows very liberally from tcp.c and ip.c, see those&n; *&t;&t;files for more names.&n; *&n; *&t;&t;This program is free software; you can redistribute it and/or&n; *&t;&t;modify it under the terms of the GNU General Public License&n; *&t;&t;as published by the Free Software Foundation; either version&n; *&t;&t;2 of the License, or (at your option) any later version.&n; */
multiline_comment|/*&n; *&t;Fixes:&n; *&n; *&t;Ralf Baechle&t;&t;&t;:&t;generic ipv6 checksum&n; *&t;&lt;ralf@waldorf-gmbh.de&gt;&n; */
macro_line|#ifndef _CHECKSUM_H
DECL|macro|_CHECKSUM_H
mdefine_line|#define _CHECKSUM_H
macro_line|#include &lt;asm/byteorder.h&gt;
macro_line|#include &lt;net/ip.h&gt;
macro_line|#include &lt;asm/checksum.h&gt;
macro_line|#ifndef _HAVE_ARCH_IPV6_CSUM
DECL|function|csum_ipv6_magic
r_static
id|__inline__
r_int
r_int
r_int
id|csum_ipv6_magic
c_func
(paren
r_struct
id|in6_addr
op_star
id|saddr
comma
r_struct
id|in6_addr
op_star
id|daddr
comma
id|__u16
id|len
comma
r_int
r_int
id|proto
comma
r_int
r_int
id|csum
)paren
(brace
r_int
id|carry
suffix:semicolon
id|__u32
id|ulen
suffix:semicolon
id|__u32
id|uproto
suffix:semicolon
id|csum
op_add_assign
id|saddr-&gt;s6_addr32
(braket
l_int|0
)braket
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|saddr-&gt;s6_addr32
(braket
l_int|0
)braket
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|csum
op_add_assign
id|saddr-&gt;s6_addr32
(braket
l_int|1
)braket
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|saddr-&gt;s6_addr32
(braket
l_int|1
)braket
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|csum
op_add_assign
id|saddr-&gt;s6_addr32
(braket
l_int|2
)braket
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|saddr-&gt;s6_addr32
(braket
l_int|2
)braket
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|csum
op_add_assign
id|saddr-&gt;s6_addr32
(braket
l_int|3
)braket
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|saddr-&gt;s6_addr32
(braket
l_int|3
)braket
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|csum
op_add_assign
id|daddr-&gt;s6_addr32
(braket
l_int|0
)braket
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|daddr-&gt;s6_addr32
(braket
l_int|0
)braket
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|csum
op_add_assign
id|daddr-&gt;s6_addr32
(braket
l_int|1
)braket
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|daddr-&gt;s6_addr32
(braket
l_int|1
)braket
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|csum
op_add_assign
id|daddr-&gt;s6_addr32
(braket
l_int|2
)braket
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|daddr-&gt;s6_addr32
(braket
l_int|2
)braket
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|csum
op_add_assign
id|daddr-&gt;s6_addr32
(braket
l_int|3
)braket
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|daddr-&gt;s6_addr32
(braket
l_int|3
)braket
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|ulen
op_assign
id|htonl
c_func
(paren
(paren
id|__u32
)paren
id|len
)paren
suffix:semicolon
id|csum
op_add_assign
id|ulen
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|ulen
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
id|uproto
op_assign
id|htonl
c_func
(paren
id|proto
)paren
suffix:semicolon
id|csum
op_add_assign
id|proto
suffix:semicolon
id|carry
op_assign
(paren
id|csum
OL
id|proto
)paren
suffix:semicolon
id|csum
op_add_assign
id|carry
suffix:semicolon
r_return
id|csum_fold
c_func
(paren
id|csum
)paren
suffix:semicolon
)brace
macro_line|#endif
macro_line|#endif
eof
