multiline_comment|/*********************************************************************&n; *                &n; * Filename:      ircomm_event.h&n; * Version:       &n; * Description:   &n; * Status:        Experimental.&n; * Author:        Dag Brattli &lt;dagb@cs.uit.no&gt;&n; * Created at:    Sun Jun  6 23:51:13 1999&n; * Modified at:   Thu Jun 10 08:36:25 1999&n; * Modified by:   Dag Brattli &lt;dagb@cs.uit.no&gt;&n; * &n; *     Copyright (c) 1999 Dag Brattli, All Rights Reserved.&n; *     &n; *     This program is free software; you can redistribute it and/or &n; *     modify it under the terms of the GNU General Public License as &n; *     published by the Free Software Foundation; either version 2 of &n; *     the License, or (at your option) any later version.&n; * &n; *     This program is distributed in the hope that it will be useful,&n; *     but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the&n; *     GNU General Public License for more details.&n; * &n; *     You should have received a copy of the GNU General Public License &n; *     along with this program; if not, write to the Free Software &n; *     Foundation, Inc., 59 Temple Place, Suite 330, Boston, &n; *     MA 02111-1307 USA&n; *     &n; ********************************************************************/
macro_line|#ifndef IRCOMM_EVENT_H
DECL|macro|IRCOMM_EVENT_H
mdefine_line|#define IRCOMM_EVENT_H
r_typedef
r_enum
(brace
DECL|enumerator|IRCOMM_IDLE
id|IRCOMM_IDLE
comma
DECL|enumerator|IRCOMM_WAITI
id|IRCOMM_WAITI
comma
DECL|enumerator|IRCOMM_WAITR
id|IRCOMM_WAITR
comma
DECL|enumerator|IRCOMM_CONN
id|IRCOMM_CONN
comma
DECL|typedef|IRCOMM_STATE
)brace
id|IRCOMM_STATE
suffix:semicolon
multiline_comment|/* IrCOMM Events */
r_typedef
r_enum
(brace
DECL|enumerator|IRCOMM_CONNECT_REQUEST
id|IRCOMM_CONNECT_REQUEST
comma
DECL|enumerator|IRCOMM_CONNECT_RESPONSE
id|IRCOMM_CONNECT_RESPONSE
comma
DECL|enumerator|IRCOMM_TTP_CONNECT_INDICATION
id|IRCOMM_TTP_CONNECT_INDICATION
comma
DECL|enumerator|IRCOMM_LMP_CONNECT_INDICATION
id|IRCOMM_LMP_CONNECT_INDICATION
comma
DECL|enumerator|IRCOMM_TTP_CONNECT_CONFIRM
id|IRCOMM_TTP_CONNECT_CONFIRM
comma
DECL|enumerator|IRCOMM_LMP_CONNECT_CONFIRM
id|IRCOMM_LMP_CONNECT_CONFIRM
comma
DECL|enumerator|IRCOMM_LMP_DISCONNECT_INDICATION
id|IRCOMM_LMP_DISCONNECT_INDICATION
comma
DECL|enumerator|IRCOMM_TTP_DISCONNECT_INDICATION
id|IRCOMM_TTP_DISCONNECT_INDICATION
comma
DECL|enumerator|IRCOMM_DISCONNECT_REQUEST
id|IRCOMM_DISCONNECT_REQUEST
comma
DECL|enumerator|IRCOMM_TTP_DATA_INDICATION
id|IRCOMM_TTP_DATA_INDICATION
comma
DECL|enumerator|IRCOMM_LMP_DATA_INDICATION
id|IRCOMM_LMP_DATA_INDICATION
comma
DECL|enumerator|IRCOMM_DATA_REQUEST
id|IRCOMM_DATA_REQUEST
comma
DECL|enumerator|IRCOMM_CONTROL_REQUEST
id|IRCOMM_CONTROL_REQUEST
comma
DECL|enumerator|IRCOMM_CONTROL_INDICATION
id|IRCOMM_CONTROL_INDICATION
comma
DECL|typedef|IRCOMM_EVENT
)brace
id|IRCOMM_EVENT
suffix:semicolon
multiline_comment|/*&n; * Used for passing information through the state-machine&n; */
DECL|struct|ircomm_info
r_struct
id|ircomm_info
(brace
DECL|member|saddr
id|__u32
id|saddr
suffix:semicolon
multiline_comment|/* Source device address */
DECL|member|daddr
id|__u32
id|daddr
suffix:semicolon
multiline_comment|/* Destination device address */
DECL|member|dlsap_sel
id|__u8
id|dlsap_sel
suffix:semicolon
DECL|member|reason
id|LM_REASON
id|reason
suffix:semicolon
multiline_comment|/* Reason for disconnect */
DECL|member|max_data_size
id|__u32
id|max_data_size
suffix:semicolon
DECL|member|max_header_size
id|__u32
id|max_header_size
suffix:semicolon
DECL|member|qos
r_struct
id|qos_info
op_star
id|qos
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_char
op_star
id|ircomm_state
(braket
)braket
suffix:semicolon
r_extern
r_char
op_star
id|ircomm_event
(braket
)braket
suffix:semicolon
r_struct
id|ircomm_cb
suffix:semicolon
multiline_comment|/* Forward decl. */
r_int
id|ircomm_do_event
c_func
(paren
r_struct
id|ircomm_cb
op_star
id|self
comma
id|IRCOMM_EVENT
id|event
comma
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|ircomm_info
op_star
id|info
)paren
suffix:semicolon
r_void
id|ircomm_next_state
c_func
(paren
r_struct
id|ircomm_cb
op_star
id|self
comma
id|IRCOMM_STATE
id|state
)paren
suffix:semicolon
macro_line|#endif
eof
