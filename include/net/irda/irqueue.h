multiline_comment|/*********************************************************************&n; *                &n; * Filename:      irqueue.h&n; * Version:       0.3&n; * Description:   General queue implementation&n; * Status:        Experimental.&n; * Author:        Dag Brattli &lt;dagb@cs.uit.no&gt;&n; * Created at:    Tue Jun  9 13:26:50 1998&n; * Modified at:   Thu Oct  7 13:25:16 1999&n; * Modified by:   Dag Brattli &lt;dagb@cs.uit.no&gt;&n; * &n; *     Copyright (C) 1998-1999, Aage Kvalnes &lt;aage@cs.uit.no&gt;&n; *     Copyright (c) 1998, Dag Brattli&n; *     All Rights Reserved.&n; *      &n; *     This code is taken from the Vortex Operating System written by Aage&n; *     Kvalnes and has been ported to Linux and Linux/IR by Dag Brattli&n; *&n; *     This program is free software; you can redistribute it and/or &n; *     modify it under the terms of the GNU General Public License as &n; *     published by the Free Software Foundation; either version 2 of &n; *     the License, or (at your option) any later version.&n; *  &n; *     Neither Dag Brattli nor University of Troms&#xfffd; admit liability nor&n; *     provide warranty for any of this software. This material is &n; *     provided &quot;AS-IS&quot; and at no charge.&n; *     &n; ********************************************************************/
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/spinlock.h&gt;
macro_line|#ifndef IRDA_QUEUE_H
DECL|macro|IRDA_QUEUE_H
mdefine_line|#define IRDA_QUEUE_H
DECL|macro|NAME_SIZE
mdefine_line|#define NAME_SIZE      32
multiline_comment|/*&n; * Hash types&n; */
DECL|macro|HB_NOLOCK
mdefine_line|#define HB_NOLOCK      0
DECL|macro|HB_GLOBAL
mdefine_line|#define HB_GLOBAL      1
DECL|macro|HB_LOCAL
mdefine_line|#define HB_LOCAL       2
DECL|macro|HB_SORTED
mdefine_line|#define HB_SORTED      4
multiline_comment|/*&n; * Hash defines&n; */
DECL|macro|HASHBIN_SIZE
mdefine_line|#define HASHBIN_SIZE   8
DECL|macro|HASHBIN_MASK
mdefine_line|#define HASHBIN_MASK   0x7
macro_line|#ifndef ALIGN 
DECL|macro|ALIGN
mdefine_line|#define ALIGN __attribute__((aligned))
macro_line|#endif
DECL|macro|Q_NULL
mdefine_line|#define Q_NULL { NULL, NULL, &quot;&quot;, 0 }
DECL|typedef|FREE_FUNC
r_typedef
r_void
(paren
op_star
id|FREE_FUNC
)paren
(paren
r_void
op_star
id|arg
)paren
suffix:semicolon
multiline_comment|/*&n; * Hashbin&n; */
DECL|macro|GET_HASHBIN
mdefine_line|#define GET_HASHBIN(x) ( x &amp; HASHBIN_MASK )
DECL|struct|irda_queue
r_struct
id|irda_queue
(brace
DECL|member|q_next
r_struct
id|irda_queue
op_star
id|q_next
suffix:semicolon
DECL|member|q_prev
r_struct
id|irda_queue
op_star
id|q_prev
suffix:semicolon
DECL|member|q_name
r_char
id|q_name
(braket
id|NAME_SIZE
)braket
suffix:semicolon
DECL|member|q_hash
id|__u32
id|q_hash
suffix:semicolon
)brace
suffix:semicolon
DECL|typedef|irda_queue_t
r_typedef
r_struct
id|irda_queue
id|irda_queue_t
suffix:semicolon
DECL|struct|hashbin_t
r_typedef
r_struct
id|hashbin_t
(brace
DECL|member|magic
id|__u32
id|magic
suffix:semicolon
DECL|member|hb_type
r_int
id|hb_type
suffix:semicolon
DECL|member|hb_size
r_int
id|hb_size
suffix:semicolon
DECL|member|ALIGN
id|spinlock_t
id|hb_mutex
(braket
id|HASHBIN_SIZE
)braket
id|ALIGN
suffix:semicolon
DECL|member|ALIGN
id|irda_queue_t
op_star
id|hb_queue
(braket
id|HASHBIN_SIZE
)braket
id|ALIGN
suffix:semicolon
DECL|member|hb_current
id|irda_queue_t
op_star
id|hb_current
suffix:semicolon
DECL|typedef|hashbin_t
)brace
id|hashbin_t
suffix:semicolon
id|hashbin_t
op_star
id|hashbin_new
c_func
(paren
r_int
id|type
)paren
suffix:semicolon
r_int
id|hashbin_delete
c_func
(paren
id|hashbin_t
op_star
id|hashbin
comma
id|FREE_FUNC
id|func
)paren
suffix:semicolon
r_int
id|hashbin_clear
c_func
(paren
id|hashbin_t
op_star
id|hashbin
comma
id|FREE_FUNC
id|free_func
)paren
suffix:semicolon
r_void
id|hashbin_insert
c_func
(paren
id|hashbin_t
op_star
id|hashbin
comma
id|irda_queue_t
op_star
id|entry
comma
id|__u32
id|hashv
comma
r_char
op_star
id|name
)paren
suffix:semicolon
r_void
op_star
id|hashbin_find
c_func
(paren
id|hashbin_t
op_star
id|hashbin
comma
id|__u32
id|hashv
comma
r_char
op_star
id|name
)paren
suffix:semicolon
r_void
op_star
id|hashbin_remove
c_func
(paren
id|hashbin_t
op_star
id|hashbin
comma
id|__u32
id|hashv
comma
r_char
op_star
id|name
)paren
suffix:semicolon
r_void
op_star
id|hashbin_remove_first
c_func
(paren
id|hashbin_t
op_star
id|hashbin
)paren
suffix:semicolon
r_void
op_star
id|hashbin_remove_this
c_func
(paren
id|hashbin_t
op_star
id|hashbin
comma
id|irda_queue_t
op_star
id|entry
)paren
suffix:semicolon
id|irda_queue_t
op_star
id|hashbin_get_first
c_func
(paren
id|hashbin_t
op_star
id|hashbin
)paren
suffix:semicolon
id|irda_queue_t
op_star
id|hashbin_get_next
c_func
(paren
id|hashbin_t
op_star
id|hashbin
)paren
suffix:semicolon
r_void
id|enqueue_last
c_func
(paren
id|irda_queue_t
op_star
op_star
id|queue
comma
id|irda_queue_t
op_star
id|element
)paren
suffix:semicolon
r_void
id|enqueue_first
c_func
(paren
id|irda_queue_t
op_star
op_star
id|queue
comma
id|irda_queue_t
op_star
id|element
)paren
suffix:semicolon
id|irda_queue_t
op_star
id|dequeue_first
c_func
(paren
id|irda_queue_t
op_star
op_star
id|queue
)paren
suffix:semicolon
DECL|macro|HASHBIN_GET_SIZE
mdefine_line|#define HASHBIN_GET_SIZE(hashbin) hashbin-&gt;hb_size
macro_line|#endif
eof
