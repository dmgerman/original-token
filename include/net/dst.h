multiline_comment|/*&n; * net/dst.h&t;Protocol independent destination cache definitions.&n; *&n; * Authors:&t;Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;&n; *&n; */
macro_line|#ifndef _NET_DST_H
DECL|macro|_NET_DST_H
mdefine_line|#define _NET_DST_H
macro_line|#include &lt;net/neighbour.h&gt;
multiline_comment|/*&n; * 0 - no debugging messages&n; * 1 - rare events and bugs (default)&n; * 2 - trace mode.&n; */
macro_line|#ifdef  NO_ANK_FIX
DECL|macro|RT_CACHE_DEBUG
mdefine_line|#define RT_CACHE_DEBUG&t;&t;0
macro_line|#else
DECL|macro|RT_CACHE_DEBUG
mdefine_line|#define RT_CACHE_DEBUG&t;&t;1
macro_line|#endif
DECL|macro|DST_GC_MIN
mdefine_line|#define DST_GC_MIN&t;(1*HZ)
DECL|macro|DST_GC_INC
mdefine_line|#define DST_GC_INC&t;(5*HZ)
DECL|macro|DST_GC_MAX
mdefine_line|#define DST_GC_MAX&t;(120*HZ)
r_struct
id|sk_buff
suffix:semicolon
DECL|struct|dst_entry
r_struct
id|dst_entry
(brace
DECL|member|next
r_struct
id|dst_entry
op_star
id|next
suffix:semicolon
DECL|member|refcnt
id|atomic_t
id|refcnt
suffix:semicolon
multiline_comment|/* tree/hash references&t;*/
DECL|member|use
id|atomic_t
id|use
suffix:semicolon
multiline_comment|/* client references&t;*/
DECL|member|dev
r_struct
id|device
op_star
id|dev
suffix:semicolon
DECL|member|obsolete
r_char
id|obsolete
suffix:semicolon
DECL|member|priority
r_char
id|priority
suffix:semicolon
DECL|member|__pad1
DECL|member|__pad2
r_char
id|__pad1
comma
id|__pad2
suffix:semicolon
DECL|member|lastuse
r_int
r_int
id|lastuse
suffix:semicolon
DECL|member|window
r_int
id|window
suffix:semicolon
DECL|member|pmtu
r_int
id|pmtu
suffix:semicolon
DECL|member|rtt
r_int
id|rtt
suffix:semicolon
DECL|member|error
r_int
id|error
suffix:semicolon
DECL|member|neighbour
r_struct
id|neighbour
op_star
id|neighbour
suffix:semicolon
DECL|member|hh
r_struct
id|hh_cache
op_star
id|hh
suffix:semicolon
DECL|member|input
r_int
(paren
op_star
id|input
)paren
(paren
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
DECL|member|output
r_int
(paren
op_star
id|output
)paren
(paren
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
DECL|member|ops
r_struct
id|dst_ops
op_star
id|ops
suffix:semicolon
DECL|member|info
r_char
id|info
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|dst_ops
r_struct
id|dst_ops
(brace
DECL|member|family
r_int
r_int
id|family
suffix:semicolon
DECL|member|check
r_struct
id|dst_entry
op_star
(paren
op_star
id|check
)paren
(paren
r_struct
id|dst_entry
op_star
comma
id|u32
id|cookie
)paren
suffix:semicolon
DECL|member|reroute
r_struct
id|dst_entry
op_star
(paren
op_star
id|reroute
)paren
(paren
r_struct
id|dst_entry
op_star
comma
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
DECL|member|destroy
r_void
(paren
op_star
id|destroy
)paren
(paren
r_struct
id|dst_entry
op_star
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|dst_entry
op_star
id|dst_garbage_list
suffix:semicolon
r_extern
id|atomic_t
id|dst_total
suffix:semicolon
r_static
id|__inline__
DECL|function|dst_clone
r_struct
id|dst_entry
op_star
id|dst_clone
c_func
(paren
r_struct
id|dst_entry
op_star
id|dst
)paren
(brace
r_if
c_cond
(paren
id|dst
)paren
id|atomic_inc
c_func
(paren
op_amp
id|dst-&gt;use
)paren
suffix:semicolon
r_return
id|dst
suffix:semicolon
)brace
r_static
id|__inline__
DECL|function|dst_release
r_void
id|dst_release
c_func
(paren
r_struct
id|dst_entry
op_star
id|dst
)paren
(brace
r_if
c_cond
(paren
id|dst
)paren
id|atomic_dec
c_func
(paren
op_amp
id|dst-&gt;use
)paren
suffix:semicolon
)brace
r_static
id|__inline__
DECL|function|dst_check
r_struct
id|dst_entry
op_star
id|dst_check
c_func
(paren
r_struct
id|dst_entry
op_star
op_star
id|dst_p
comma
id|u32
id|cookie
)paren
(brace
r_struct
id|dst_entry
op_star
id|dst
op_assign
op_star
id|dst_p
suffix:semicolon
r_if
c_cond
(paren
id|dst
op_logical_and
id|dst-&gt;obsolete
)paren
id|dst
op_assign
id|dst-&gt;ops
op_member_access_from_pointer
id|check
c_func
(paren
id|dst
comma
id|cookie
)paren
suffix:semicolon
r_return
(paren
op_star
id|dst_p
op_assign
id|dst
)paren
suffix:semicolon
)brace
r_static
id|__inline__
DECL|function|dst_reroute
r_struct
id|dst_entry
op_star
id|dst_reroute
c_func
(paren
r_struct
id|dst_entry
op_star
op_star
id|dst_p
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
(brace
r_struct
id|dst_entry
op_star
id|dst
op_assign
op_star
id|dst_p
suffix:semicolon
r_if
c_cond
(paren
id|dst
op_logical_and
id|dst-&gt;obsolete
)paren
id|dst
op_assign
id|dst-&gt;ops
op_member_access_from_pointer
id|reroute
c_func
(paren
id|dst
comma
id|skb
)paren
suffix:semicolon
r_return
(paren
op_star
id|dst_p
op_assign
id|dst
)paren
suffix:semicolon
)brace
r_static
id|__inline__
DECL|function|dst_destroy
r_void
id|dst_destroy
c_func
(paren
r_struct
id|dst_entry
op_star
id|dst
)paren
(brace
r_if
c_cond
(paren
id|dst-&gt;neighbour
)paren
id|neigh_release
c_func
(paren
id|dst-&gt;neighbour
)paren
suffix:semicolon
r_if
c_cond
(paren
id|dst-&gt;ops-&gt;destroy
)paren
id|dst-&gt;ops
op_member_access_from_pointer
id|destroy
c_func
(paren
id|dst
)paren
suffix:semicolon
id|kfree
c_func
(paren
id|dst
)paren
suffix:semicolon
id|atomic_dec
c_func
(paren
op_amp
id|dst_total
)paren
suffix:semicolon
)brace
r_extern
r_void
op_star
id|dst_alloc
c_func
(paren
r_int
id|size
comma
r_struct
id|dst_ops
op_star
id|ops
)paren
suffix:semicolon
r_extern
r_void
id|__dst_free
c_func
(paren
r_struct
id|dst_entry
op_star
id|dst
)paren
suffix:semicolon
r_static
id|__inline__
DECL|function|dst_free
r_void
id|dst_free
c_func
(paren
r_struct
id|dst_entry
op_star
id|dst
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|atomic_read
c_func
(paren
op_amp
id|dst-&gt;use
)paren
)paren
(brace
id|dst_destroy
c_func
(paren
id|dst
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|__dst_free
c_func
(paren
id|dst
)paren
suffix:semicolon
)brace
macro_line|#endif /* _NET_DST_H */
eof
