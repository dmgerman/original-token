multiline_comment|/*&n; * INET&t;&t;An implementation of the TCP/IP protocol suite for the LINUX&n; *&t;&t;operating system.  INET is implemented using the  BSD Socket&n; *&t;&t;interface as the means of communication with the user level.&n; *&n; *&t;&t;Definitions for the IP module.&n; *&n; * Version:&t;@(#)ip.h&t;1.0.2&t;05/07/93&n; *&n; * Authors:&t;Ross Biro, &lt;bir7@leland.Stanford.Edu&gt;&n; *&t;&t;Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;&n; *&t;&t;Alan Cox, &lt;gw4pts@gw4pts.ampr.org&gt;&n; *&n; *&t;&t;This program is free software; you can redistribute it and/or&n; *&t;&t;modify it under the terms of the GNU General Public License&n; *&t;&t;as published by the Free Software Foundation; either version&n; *&t;&t;2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _IP_H
DECL|macro|_IP_H
mdefine_line|#define _IP_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/socket.h&gt;
macro_line|#include &lt;linux/ip.h&gt;
macro_line|#include &lt;linux/netdevice.h&gt;
macro_line|#include &lt;net/route.h&gt;
macro_line|#ifndef _SNMP_H
macro_line|#include &lt;net/snmp.h&gt;
macro_line|#endif
macro_line|#include &lt;net/sock.h&gt;&t;/* struct sock */
DECL|struct|inet_skb_parm
r_struct
id|inet_skb_parm
(brace
DECL|member|opt
r_struct
id|ip_options
id|opt
suffix:semicolon
multiline_comment|/* Compiled IP options&t;&t;*/
DECL|member|redirport
id|u16
id|redirport
suffix:semicolon
multiline_comment|/* Redirect port&t;&t;*/
DECL|member|flags
r_int
r_char
id|flags
suffix:semicolon
DECL|member|vif
r_char
id|vif
suffix:semicolon
DECL|macro|IPSKB_MASQUERADED
mdefine_line|#define IPSKB_MASQUERADED&t;1
DECL|macro|IPSKB_TRANSLATED
mdefine_line|#define IPSKB_TRANSLATED&t;2
DECL|macro|IPSKB_TUNNELED
mdefine_line|#define IPSKB_TUNNELED&t;&t;4
)brace
suffix:semicolon
DECL|struct|ipcm_cookie
r_struct
id|ipcm_cookie
(brace
DECL|member|addr
id|u32
id|addr
suffix:semicolon
DECL|member|opt
r_struct
id|ip_options
op_star
id|opt
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|IPCB
mdefine_line|#define IPCB(skb) ((struct inet_skb_parm*)((skb)-&gt;cb))
multiline_comment|/* IP flags. */
DECL|macro|IP_CE
mdefine_line|#define IP_CE&t;&t;0x8000&t;&t;/* Flag: &quot;Congestion&quot;&t;&t;*/
DECL|macro|IP_DF
mdefine_line|#define IP_DF&t;&t;0x4000&t;&t;/* Flag: &quot;Don&squot;t Fragment&quot;&t;*/
DECL|macro|IP_MF
mdefine_line|#define IP_MF&t;&t;0x2000&t;&t;/* Flag: &quot;More Fragments&quot;&t;*/
DECL|macro|IP_OFFSET
mdefine_line|#define IP_OFFSET&t;0x1FFF&t;&t;/* &quot;Fragment Offset&quot; part&t;*/
DECL|macro|IP_FRAG_TIME
mdefine_line|#define IP_FRAG_TIME&t;(30 * HZ)&t;&t;/* fragment lifetime&t;*/
r_extern
r_void
id|ip_mc_dropsocket
c_func
(paren
r_struct
id|sock
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ip_mc_dropdevice
c_func
(paren
r_struct
id|device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|ip_mc_procinfo
c_func
(paren
r_char
op_star
comma
r_char
op_star
op_star
comma
id|off_t
comma
r_int
comma
r_int
)paren
suffix:semicolon
multiline_comment|/* Describe an IP fragment. */
DECL|struct|ipfrag
r_struct
id|ipfrag
(brace
DECL|member|offset
r_int
id|offset
suffix:semicolon
multiline_comment|/* offset of fragment in IP datagram&t;*/
DECL|member|end
r_int
id|end
suffix:semicolon
multiline_comment|/* last byte of data in datagram&t;*/
DECL|member|len
r_int
id|len
suffix:semicolon
multiline_comment|/* length of this fragment&t;&t;*/
DECL|member|skb
r_struct
id|sk_buff
op_star
id|skb
suffix:semicolon
multiline_comment|/* complete received fragment&t;&t;*/
DECL|member|ptr
r_int
r_char
op_star
id|ptr
suffix:semicolon
multiline_comment|/* pointer into real fragment data&t;*/
DECL|member|next
r_struct
id|ipfrag
op_star
id|next
suffix:semicolon
multiline_comment|/* linked list pointers&t;&t;&t;*/
DECL|member|prev
r_struct
id|ipfrag
op_star
id|prev
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; *&t;Describe an entry in the &quot;incomplete datagrams&quot; queue. &n; */
DECL|struct|ipq
r_struct
id|ipq
(brace
DECL|member|mac
r_int
r_char
op_star
id|mac
suffix:semicolon
multiline_comment|/* pointer to MAC header&t;&t;*/
DECL|member|iph
r_struct
id|iphdr
op_star
id|iph
suffix:semicolon
multiline_comment|/* pointer to IP header&t;&t;&t;*/
DECL|member|len
r_int
id|len
suffix:semicolon
multiline_comment|/* total length of original datagram&t;*/
DECL|member|ihlen
r_int
id|ihlen
suffix:semicolon
multiline_comment|/* length of the IP header&t;&t;*/
DECL|member|maclen
r_int
id|maclen
suffix:semicolon
multiline_comment|/* length of the MAC header&t;&t;*/
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
multiline_comment|/* when will this queue expire?&t;&t;*/
DECL|member|fragments
r_struct
id|ipfrag
op_star
id|fragments
suffix:semicolon
multiline_comment|/* linked list of received fragments&t;*/
DECL|member|next
r_struct
id|ipq
op_star
id|next
suffix:semicolon
multiline_comment|/* linked list pointers&t;&t;&t;*/
DECL|member|prev
r_struct
id|ipq
op_star
id|prev
suffix:semicolon
DECL|member|dev
r_struct
id|device
op_star
id|dev
suffix:semicolon
multiline_comment|/* Device - for icmp replies */
)brace
suffix:semicolon
multiline_comment|/*&n; *&t;Functions provided by ip.c&n; */
r_extern
r_int
id|ip_ioctl
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|ip_build_pkt
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|sock
op_star
id|sk
comma
id|u32
id|saddr
comma
id|u32
id|daddr
comma
r_struct
id|ip_options
op_star
id|opt
)paren
suffix:semicolon
r_extern
r_int
id|ip_build_header
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|sock
op_star
id|sk
)paren
suffix:semicolon
r_extern
r_int
id|ip_rcv
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|device
op_star
id|dev
comma
r_struct
id|packet_type
op_star
id|pt
)paren
suffix:semicolon
r_extern
r_int
id|ip_local_deliver
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|ip_mr_input
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|ip_output
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|ip_mc_output
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_IP_ACCT
r_extern
r_int
id|ip_acct_output
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
macro_line|#else
DECL|macro|ip_acct_output
mdefine_line|#define ip_acct_output&t;dev_queue_xmit
macro_line|#endif
r_extern
r_void
id|ip_fragment
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_int
comma
r_int
(paren
op_star
id|out
)paren
(paren
r_struct
id|sk_buff
op_star
)paren
)paren
suffix:semicolon
r_extern
r_struct
id|sk_buff
op_star
id|ip_reply
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_int
id|payload
)paren
suffix:semicolon
r_extern
r_int
id|ip_do_nat
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_void
id|ip_send_check
c_func
(paren
r_struct
id|iphdr
op_star
id|ip
)paren
suffix:semicolon
r_extern
r_int
id|ip_id_count
suffix:semicolon
r_extern
r_void
id|ip_queue_xmit
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_void
id|ip_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|ip_build_xmit
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|getfrag
(paren
r_const
r_void
op_star
comma
r_char
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
comma
r_const
r_void
op_star
id|frag
comma
r_int
r_int
r_int
id|length
comma
r_struct
id|ipcm_cookie
op_star
id|ipc
comma
r_struct
id|rtable
op_star
id|rt
comma
r_int
id|flags
)paren
suffix:semicolon
r_static
id|__inline__
DECL|function|ip_send
r_void
id|ip_send
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
(brace
id|ip_ll_header
c_func
(paren
id|skb
)paren
suffix:semicolon
r_if
c_cond
(paren
id|skb-&gt;len
OG
id|skb-&gt;dev-&gt;mtu
op_plus
id|skb-&gt;dev-&gt;hard_header_len
)paren
id|ip_fragment
c_func
(paren
id|skb
comma
l_int|0
comma
id|ip_acct_output
)paren
suffix:semicolon
r_else
id|ip_acct_output
c_func
(paren
id|skb
)paren
suffix:semicolon
)brace
r_static
id|__inline__
DECL|function|ip_decrease_ttl
r_int
id|ip_decrease_ttl
c_func
(paren
r_struct
id|iphdr
op_star
id|iph
)paren
(brace
id|u16
id|check
op_assign
id|iph-&gt;check
suffix:semicolon
id|check
op_assign
id|ntohs
c_func
(paren
id|check
)paren
op_plus
l_int|0x0100
suffix:semicolon
r_if
c_cond
(paren
(paren
id|check
op_amp
l_int|0xFF00
)paren
op_eq
l_int|0
)paren
id|check
op_increment
suffix:semicolon
multiline_comment|/* carry overflow */
id|iph-&gt;check
op_assign
id|htons
c_func
(paren
id|check
)paren
suffix:semicolon
r_return
op_decrement
id|iph-&gt;ttl
suffix:semicolon
)brace
r_extern
r_struct
id|ip_mib
id|ip_statistics
suffix:semicolon
DECL|struct|ipv4_config
r_struct
id|ipv4_config
(brace
DECL|member|accept_redirects
r_int
id|accept_redirects
suffix:semicolon
DECL|member|secure_redirects
r_int
id|secure_redirects
suffix:semicolon
DECL|member|rfc1620_redirects
r_int
id|rfc1620_redirects
suffix:semicolon
DECL|member|rfc1812_filter
r_int
id|rfc1812_filter
suffix:semicolon
DECL|member|addrmask_agent
r_int
id|addrmask_agent
suffix:semicolon
DECL|member|log_martians
r_int
id|log_martians
suffix:semicolon
DECL|member|source_route
r_int
id|source_route
suffix:semicolon
DECL|member|multicast_route
r_int
id|multicast_route
suffix:semicolon
DECL|member|bootp_agent
r_int
id|bootp_agent
suffix:semicolon
DECL|member|bootp_relay
r_int
id|bootp_relay
suffix:semicolon
DECL|member|fib_model
r_int
id|fib_model
suffix:semicolon
DECL|member|no_pmtu_disc
r_int
id|no_pmtu_disc
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|ipv4_config
id|ipv4_config
suffix:semicolon
DECL|macro|IS_ROUTER
mdefine_line|#define IS_ROUTER&t;(ip_statistics.IpForwarding == 1)
multiline_comment|/*&n; *&t;Functions provided by ip_fragment.o&n; */
r_struct
id|sk_buff
op_star
id|ip_defrag
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
multiline_comment|/*&n; *&t;Functions provided by ip_forward.c&n; */
r_extern
r_int
id|ip_forward
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|ip_net_unreachable
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
multiline_comment|/*&n; *&t;Functions provided by ip_options.c&n; */
r_extern
r_void
id|ip_options_build
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|ip_options
op_star
id|opt
comma
id|u32
id|daddr
comma
id|u32
id|saddr
comma
r_int
id|is_frag
)paren
suffix:semicolon
r_extern
r_int
id|ip_options_echo
c_func
(paren
r_struct
id|ip_options
op_star
id|dopt
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_void
id|ip_options_fragment
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|ip_options_compile
c_func
(paren
r_struct
id|ip_options
op_star
id|opt
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|ip_options_getfromuser
c_func
(paren
r_struct
id|ip_options
op_star
op_star
id|optp
comma
r_int
r_char
op_star
id|data
comma
r_int
id|optlen
)paren
suffix:semicolon
r_extern
r_void
id|ip_options_undo
c_func
(paren
r_struct
id|ip_options
op_star
id|opt
)paren
suffix:semicolon
r_extern
r_void
id|ip_forward_options
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|ip_options_rcv_srr
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
multiline_comment|/*&n; *&t;Functions provided by ip_sockglue.c&n; */
r_extern
r_void
id|ip_cmsg_recv
c_func
(paren
r_struct
id|msghdr
op_star
id|msg
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|ip_cmsg_send
c_func
(paren
r_struct
id|msghdr
op_star
id|msg
comma
r_struct
id|ipcm_cookie
op_star
id|ipc
comma
r_struct
id|device
op_star
op_star
id|devp
)paren
suffix:semicolon
r_extern
r_int
id|ip_setsockopt
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|level
comma
r_int
id|optname
comma
r_char
op_star
id|optval
comma
r_int
id|optlen
)paren
suffix:semicolon
r_extern
r_int
id|ip_getsockopt
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_int
id|level
comma
r_int
id|optname
comma
r_char
op_star
id|optval
comma
r_int
op_star
id|optlen
)paren
suffix:semicolon
r_extern
r_int
id|ipv4_backlog_rcv
c_func
(paren
r_struct
id|sock
op_star
id|sk
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
macro_line|#endif&t;/* _IP_H */
eof
