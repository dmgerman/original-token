multiline_comment|/*&n; *&t;Declarations of AX.25 type objects.&n; *&n; *&t;Alan Cox (GW4PTS) &t;10/11/93&n; */
macro_line|#ifndef _AX25_H
DECL|macro|_AX25_H
mdefine_line|#define _AX25_H 
macro_line|#include &lt;linux/ax25.h&gt;
DECL|macro|PR_SLOWHZ
mdefine_line|#define PR_SLOWHZ&t;10&t;&t;/*  Run timing at 1/10 second - gives us better resolution for 56kbit links */
DECL|macro|AX25_T1CLAMPLO
mdefine_line|#define&t;AX25_T1CLAMPLO  (1 * PR_SLOWHZ)&t;/* If defined, clamp at 1 second **/
DECL|macro|AX25_T1CLAMPHI
mdefine_line|#define&t;AX25_T1CLAMPHI (30 * PR_SLOWHZ)&t;/* If defined, clamp at 30 seconds **/
DECL|macro|AX25_BROKEN_NETMAC
mdefine_line|#define&t;AX25_BROKEN_NETMAC
DECL|macro|AX25_BPQ_HEADER_LEN
mdefine_line|#define&t;AX25_BPQ_HEADER_LEN&t;16
DECL|macro|AX25_KISS_HEADER_LEN
mdefine_line|#define&t;AX25_KISS_HEADER_LEN&t;1
DECL|macro|AX25_HEADER_LEN
mdefine_line|#define&t;AX25_HEADER_LEN&t;&t;17
DECL|macro|AX25_ADDR_LEN
mdefine_line|#define&t;AX25_ADDR_LEN&t;&t;7
DECL|macro|AX25_DIGI_HEADER_LEN
mdefine_line|#define&t;AX25_DIGI_HEADER_LEN&t;(AX25_MAX_DIGIS * AX25_ADDR_LEN)
DECL|macro|AX25_MAX_HEADER_LEN
mdefine_line|#define&t;AX25_MAX_HEADER_LEN&t;(AX25_HEADER_LEN + AX25_DIGI_HEADER_LEN)
DECL|macro|AX25_P_IP
mdefine_line|#define AX25_P_IP&t;0xCC
DECL|macro|AX25_P_ARP
mdefine_line|#define AX25_P_ARP&t;0xCD
DECL|macro|AX25_P_TEXT
mdefine_line|#define AX25_P_TEXT &t;0xF0
DECL|macro|AX25_P_NETROM
mdefine_line|#define AX25_P_NETROM &t;0xCF
DECL|macro|AX25_P_SEGMENT
mdefine_line|#define&t;AX25_P_SEGMENT&t;0x08
DECL|macro|SEG_REM
mdefine_line|#define&t;SEG_REM&t;&t;0x7F
DECL|macro|SEG_FIRST
mdefine_line|#define&t;SEG_FIRST&t;0x80
DECL|macro|LAPB_UI
mdefine_line|#define LAPB_UI&t;&t;0x03
DECL|macro|LAPB_C
mdefine_line|#define LAPB_C&t;&t;0x80
DECL|macro|LAPB_E
mdefine_line|#define LAPB_E&t;&t;0x01
DECL|macro|SSSID_SPARE
mdefine_line|#define SSSID_SPARE&t;0x60&t;/* Unused bits in SSID for standard AX.25 */
DECL|macro|ESSID_SPARE
mdefine_line|#define ESSID_SPARE&t;0x20&t;/* Unused bits in SSID for extended AX.25 */
DECL|macro|AX25_REPEATED
mdefine_line|#define AX25_REPEATED&t;0x80
DECL|macro|ACK_PENDING_CONDITION
mdefine_line|#define&t;ACK_PENDING_CONDITION&t;&t;0x01
DECL|macro|REJECT_CONDITION
mdefine_line|#define&t;REJECT_CONDITION&t;&t;0x02
DECL|macro|PEER_RX_BUSY_CONDITION
mdefine_line|#define&t;PEER_RX_BUSY_CONDITION&t;&t;0x04
DECL|macro|OWN_RX_BUSY_CONDITION
mdefine_line|#define&t;OWN_RX_BUSY_CONDITION&t;&t;0x08
macro_line|#ifndef _LINUX_NETDEVICE_H
macro_line|#include &lt;linux/netdevice.h&gt;
macro_line|#endif
multiline_comment|/*&n; * These headers are taken from the KA9Q package by Phil Karn. These specific&n; * files have been placed under the GPL (not the whole package) by Phil.&n; *&n; *&n; * Copyright 1991 Phil Karn, KA9Q&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; version 2 dated June, 1991.&n; * &n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; * &n; * You should have received a copy of the GNU General Public License&n; * along with this program;  if not, write to the Free Software&n; * Foundation, Inc., 675 Mass Ave., Cambridge, MA 02139, USA.&n; */
multiline_comment|/* Upper sub-layer (LAPB) definitions */
multiline_comment|/* Control field templates */
DECL|macro|I
mdefine_line|#define&t;I&t;0x00&t;/* Information frames */
DECL|macro|S
mdefine_line|#define&t;S&t;0x01&t;/* Supervisory frames */
DECL|macro|RR
mdefine_line|#define&t;RR&t;0x01&t;/* Receiver ready */
DECL|macro|RNR
mdefine_line|#define&t;RNR&t;0x05&t;/* Receiver not ready */
DECL|macro|REJ
mdefine_line|#define&t;REJ&t;0x09&t;/* Reject */
DECL|macro|U
mdefine_line|#define&t;U&t;0x03&t;/* Unnumbered frames */
DECL|macro|SABM
mdefine_line|#define&t;SABM&t;0x2f&t;/* Set Asynchronous Balanced Mode */
DECL|macro|SABME
mdefine_line|#define&t;SABME&t;0x6f&t;/* Set Asynchronous Balanced Mode Extended */
DECL|macro|DISC
mdefine_line|#define&t;DISC&t;0x43&t;/* Disconnect */
DECL|macro|DM
mdefine_line|#define&t;DM&t;0x0f&t;/* Disconnected mode */
DECL|macro|UA
mdefine_line|#define&t;UA&t;0x63&t;/* Unnumbered acknowledge */
DECL|macro|FRMR
mdefine_line|#define&t;FRMR&t;0x87&t;/* Frame reject */
DECL|macro|UI
mdefine_line|#define&t;UI&t;0x03&t;/* Unnumbered information */
DECL|macro|PF
mdefine_line|#define&t;PF&t;0x10&t;/* Poll/final bit for standard AX.25 */
DECL|macro|EPF
mdefine_line|#define&t;EPF&t;0x01&t;/* Poll/final bit for extended AX.25 */
DECL|macro|ILLEGAL
mdefine_line|#define ILLEGAL&t;0x100&t;/* Impossible to be a real frame type */
DECL|macro|POLLOFF
mdefine_line|#define&t;POLLOFF&t;&t;0
DECL|macro|POLLON
mdefine_line|#define&t;POLLON&t;&t;1
multiline_comment|/* AX25 L2 C-bit */
DECL|macro|C_COMMAND
mdefine_line|#define C_COMMAND&t;1&t;/* C_ otherwise it clashes with the de600 defines (sigh)) */
DECL|macro|C_RESPONSE
mdefine_line|#define C_RESPONSE&t;2
multiline_comment|/* Define Link State constants. */
DECL|macro|AX25_STATE_0
mdefine_line|#define AX25_STATE_0&t;0
DECL|macro|AX25_STATE_1
mdefine_line|#define AX25_STATE_1&t;1
DECL|macro|AX25_STATE_2
mdefine_line|#define AX25_STATE_2&t;2
DECL|macro|AX25_STATE_3
mdefine_line|#define AX25_STATE_3&t;3
DECL|macro|AX25_STATE_4
mdefine_line|#define AX25_STATE_4&t;4
DECL|macro|MODULUS
mdefine_line|#define MODULUS &t;8&t;&t;&t;/*  Standard AX.25 modulus */
DECL|macro|EMODULUS
mdefine_line|#define&t;EMODULUS&t;128&t;&t;&t;/*  Extended AX.25 modulus */
DECL|macro|AX25_DEF_IPDEFMODE
mdefine_line|#define&t;AX25_DEF_IPDEFMODE&t;&squot;D&squot;
DECL|macro|AX25_DEF_AXDEFMODE
mdefine_line|#define&t;AX25_DEF_AXDEFMODE&t;8
DECL|macro|AX25_DEF_NETROM
mdefine_line|#define&t;AX25_DEF_NETROM&t;&t;1
DECL|macro|AX25_DEF_TEXT
mdefine_line|#define&t;AX25_DEF_TEXT&t;&t;1
DECL|macro|AX25_DEF_BACKOFF
mdefine_line|#define&t;AX25_DEF_BACKOFF&t;&squot;E&squot;
DECL|macro|AX25_DEF_CONMODE
mdefine_line|#define&t;AX25_DEF_CONMODE&t;1
DECL|macro|AX25_DEF_WINDOW
mdefine_line|#define&t;AX25_DEF_WINDOW&t;&t;2
DECL|macro|AX25_DEF_EWINDOW
mdefine_line|#define&t;AX25_DEF_EWINDOW&t;32
DECL|macro|AX25_DEF_T1
mdefine_line|#define&t;AX25_DEF_T1&t;&t;10
DECL|macro|AX25_DEF_T2
mdefine_line|#define&t;AX25_DEF_T2&t;&t;3
DECL|macro|AX25_DEF_T3
mdefine_line|#define&t;AX25_DEF_T3&t;&t;300
DECL|macro|AX25_DEF_N2
mdefine_line|#define&t;AX25_DEF_N2&t;&t;10
DECL|macro|AX25_DEF_DIGI
mdefine_line|#define&t;AX25_DEF_DIGI&t;&t;(AX25_DIGI_INBAND|AX25_DIGI_XBAND)
DECL|struct|ax25_uid_assoc
r_typedef
r_struct
id|ax25_uid_assoc
(brace
DECL|member|next
r_struct
id|ax25_uid_assoc
op_star
id|next
suffix:semicolon
DECL|member|uid
id|uid_t
id|uid
suffix:semicolon
DECL|member|call
id|ax25_address
id|call
suffix:semicolon
DECL|typedef|ax25_uid_assoc
)brace
id|ax25_uid_assoc
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|calls
id|ax25_address
id|calls
(braket
id|AX25_MAX_DIGIS
)braket
suffix:semicolon
DECL|member|repeated
r_int
r_char
id|repeated
(braket
id|AX25_MAX_DIGIS
)braket
suffix:semicolon
DECL|member|ndigi
r_int
r_char
id|ndigi
suffix:semicolon
DECL|member|lastrepeat
r_char
id|lastrepeat
suffix:semicolon
DECL|typedef|ax25_digi
)brace
id|ax25_digi
suffix:semicolon
DECL|struct|ax25_cb
r_typedef
r_struct
id|ax25_cb
(brace
DECL|member|next
r_struct
id|ax25_cb
op_star
id|next
suffix:semicolon
DECL|member|source_addr
DECL|member|dest_addr
id|ax25_address
id|source_addr
comma
id|dest_addr
suffix:semicolon
DECL|member|device
r_struct
id|device
op_star
id|device
suffix:semicolon
DECL|member|state
DECL|member|modulus
DECL|member|hdrincl
r_int
r_char
id|state
comma
id|modulus
comma
id|hdrincl
suffix:semicolon
DECL|member|vs
DECL|member|vr
DECL|member|va
r_int
r_int
id|vs
comma
id|vr
comma
id|va
suffix:semicolon
DECL|member|condition
DECL|member|backoff
r_int
r_char
id|condition
comma
id|backoff
suffix:semicolon
DECL|member|n2
DECL|member|n2count
r_int
r_char
id|n2
comma
id|n2count
suffix:semicolon
DECL|member|t1
DECL|member|t2
DECL|member|t3
DECL|member|rtt
r_int
r_int
id|t1
comma
id|t2
comma
id|t3
comma
id|rtt
suffix:semicolon
DECL|member|t1timer
DECL|member|t2timer
DECL|member|t3timer
r_int
r_int
id|t1timer
comma
id|t2timer
comma
id|t3timer
suffix:semicolon
DECL|member|fragno
DECL|member|fraglen
r_int
r_int
id|fragno
comma
id|fraglen
suffix:semicolon
DECL|member|digipeat
id|ax25_digi
op_star
id|digipeat
suffix:semicolon
DECL|member|write_queue
r_struct
id|sk_buff_head
id|write_queue
suffix:semicolon
DECL|member|reseq_queue
r_struct
id|sk_buff_head
id|reseq_queue
suffix:semicolon
DECL|member|ack_queue
r_struct
id|sk_buff_head
id|ack_queue
suffix:semicolon
DECL|member|frag_queue
r_struct
id|sk_buff_head
id|frag_queue
suffix:semicolon
DECL|member|window
r_int
r_char
id|window
suffix:semicolon
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
DECL|member|sk
r_struct
id|sock
op_star
id|sk
suffix:semicolon
multiline_comment|/* Backlink to socket */
DECL|typedef|ax25_cb
)brace
id|ax25_cb
suffix:semicolon
multiline_comment|/* af_ax25.c */
r_extern
r_char
op_star
id|ax2asc
c_func
(paren
id|ax25_address
op_star
)paren
suffix:semicolon
r_extern
r_int
id|ax25cmp
c_func
(paren
id|ax25_address
op_star
comma
id|ax25_address
op_star
)paren
suffix:semicolon
r_extern
r_int
id|ax25_send_frame
c_func
(paren
r_struct
id|sk_buff
op_star
comma
id|ax25_address
op_star
comma
id|ax25_address
op_star
comma
id|ax25_digi
op_star
comma
r_struct
id|device
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_destroy_socket
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|device
op_star
id|ax25rtr_get_dev
c_func
(paren
id|ax25_address
op_star
)paren
suffix:semicolon
r_extern
r_int
id|ax25_encapsulate
c_func
(paren
r_struct
id|sk_buff
op_star
comma
r_struct
id|device
op_star
comma
r_int
r_int
comma
r_void
op_star
comma
r_void
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_int
id|ax25_rebuild_header
c_func
(paren
r_int
r_char
op_star
comma
r_struct
id|device
op_star
comma
r_int
r_int
comma
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
r_extern
id|ax25_uid_assoc
op_star
id|ax25_uid_list
suffix:semicolon
r_extern
r_int
id|ax25_uid_policy
suffix:semicolon
r_extern
id|ax25_address
op_star
id|ax25_findbyuid
c_func
(paren
id|uid_t
)paren
suffix:semicolon
r_extern
r_void
id|ax25_queue_xmit
c_func
(paren
r_struct
id|sk_buff
op_star
comma
r_struct
id|device
op_star
comma
r_int
)paren
suffix:semicolon
macro_line|#include &lt;net/ax25call.h&gt;
multiline_comment|/* ax25_in.c */
r_extern
r_int
id|ax25_process_rx_frame
c_func
(paren
id|ax25_cb
op_star
comma
r_struct
id|sk_buff
op_star
comma
r_int
)paren
suffix:semicolon
multiline_comment|/* ax25_out.c */
r_extern
r_void
id|ax25_output
c_func
(paren
id|ax25_cb
op_star
comma
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_kick
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_transmit_buffer
c_func
(paren
id|ax25_cb
op_star
comma
r_struct
id|sk_buff
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|ax25_nr_error_recovery
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_establish_data_link
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_transmit_enquiry
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_enquiry_response
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_timeout_response
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_check_iframes_acked
c_func
(paren
id|ax25_cb
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|ax25_check_need_response
c_func
(paren
id|ax25_cb
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
multiline_comment|/* ax25_route.c */
r_extern
r_void
id|ax25_rt_rx_frame
c_func
(paren
id|ax25_address
op_star
comma
r_struct
id|device
op_star
comma
id|ax25_digi
op_star
)paren
suffix:semicolon
r_extern
r_int
id|ax25_rt_get_info
c_func
(paren
r_char
op_star
comma
r_char
op_star
op_star
comma
id|off_t
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|ax25_cs_get_info
c_func
(paren
r_char
op_star
comma
r_char
op_star
op_star
comma
id|off_t
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|ax25_rt_autobind
c_func
(paren
id|ax25_cb
op_star
comma
id|ax25_address
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_rt_device_down
c_func
(paren
r_struct
id|device
op_star
)paren
suffix:semicolon
r_extern
r_int
id|ax25_rt_ioctl
c_func
(paren
r_int
r_int
comma
r_void
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_ip_mode_set
c_func
(paren
id|ax25_address
op_star
comma
r_struct
id|device
op_star
comma
r_char
)paren
suffix:semicolon
r_extern
r_char
id|ax25_ip_mode_get
c_func
(paren
id|ax25_address
op_star
comma
r_struct
id|device
op_star
)paren
suffix:semicolon
r_extern
r_int
r_int
id|ax25_dev_get_value
c_func
(paren
r_struct
id|device
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|ax25_dev_device_up
c_func
(paren
r_struct
id|device
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_dev_device_down
c_func
(paren
r_struct
id|device
op_star
)paren
suffix:semicolon
r_extern
r_int
id|ax25_dev_ioctl
c_func
(paren
r_int
r_int
comma
r_void
op_star
)paren
suffix:semicolon
multiline_comment|/* ax25_subr.c */
r_extern
r_void
id|ax25_clear_queues
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_frames_acked
c_func
(paren
id|ax25_cb
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|ax25_requeue_frames
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_int
id|ax25_validate_nr
c_func
(paren
id|ax25_cb
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_int
id|ax25_decode
c_func
(paren
id|ax25_cb
op_star
comma
r_struct
id|sk_buff
op_star
comma
r_int
op_star
comma
r_int
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_send_control
c_func
(paren
id|ax25_cb
op_star
comma
r_int
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
r_int
id|ax25_calculate_t1
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_calculate_rtt
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
r_extern
r_int
r_char
op_star
id|ax25_parse_addr
c_func
(paren
r_int
r_char
op_star
comma
r_int
comma
id|ax25_address
op_star
comma
id|ax25_address
op_star
comma
id|ax25_digi
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_extern
r_int
id|build_ax25_addr
c_func
(paren
r_int
r_char
op_star
comma
id|ax25_address
op_star
comma
id|ax25_address
op_star
comma
id|ax25_digi
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|size_ax25_addr
c_func
(paren
id|ax25_digi
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_digi_invert
c_func
(paren
id|ax25_digi
op_star
comma
id|ax25_digi
op_star
)paren
suffix:semicolon
r_extern
r_void
id|ax25_return_dm
c_func
(paren
r_struct
id|device
op_star
comma
id|ax25_address
op_star
comma
id|ax25_address
op_star
comma
id|ax25_digi
op_star
)paren
suffix:semicolon
multiline_comment|/* ax25_timer */
r_extern
r_void
id|ax25_set_timer
c_func
(paren
id|ax25_cb
op_star
)paren
suffix:semicolon
macro_line|#endif
eof
