multiline_comment|/*&n; *&t;Linux INET6 implementation &n; *&n; *&t;Authors:&n; *&t;Pedro Roque&t;&t;&lt;roque@di.fc.ul.pt&gt;&t;&n; *&n; *&t;This program is free software; you can redistribute it and/or&n; *      modify it under the terms of the GNU General Public License&n; *      as published by the Free Software Foundation; either version&n; *      2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _NET_IPV6_ROUTE_H
DECL|macro|_NET_IPV6_ROUTE_H
mdefine_line|#define _NET_IPV6_ROUTE_H
macro_line|#include &lt;linux/ipv6_route.h&gt;
macro_line|#ifdef __KERNEL__
DECL|struct|fib6_node
r_struct
id|fib6_node
(brace
DECL|member|parent
r_struct
id|fib6_node
op_star
id|parent
suffix:semicolon
DECL|member|left
r_struct
id|fib6_node
op_star
id|left
suffix:semicolon
DECL|member|right
r_struct
id|fib6_node
op_star
id|right
suffix:semicolon
DECL|member|leaf
r_struct
id|rt6_info
op_star
id|leaf
suffix:semicolon
DECL|member|fn_bit
id|__u16
id|fn_bit
suffix:semicolon
multiline_comment|/* bit key */
DECL|member|fn_flags
id|__u16
id|fn_flags
suffix:semicolon
DECL|member|fn_sernum
id|__u32
id|fn_sernum
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|rt6_info
suffix:semicolon
DECL|typedef|rt6_output_method_t
r_typedef
r_void
(paren
op_star
id|rt6_output_method_t
)paren
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|rt6_info
op_star
id|rt
)paren
suffix:semicolon
DECL|struct|rt6_info
r_struct
id|rt6_info
(brace
DECL|member|fib_node
r_struct
id|fib6_node
op_star
id|fib_node
suffix:semicolon
DECL|member|next
r_struct
id|rt6_info
op_star
id|next
suffix:semicolon
DECL|member|rt_dst
r_struct
id|in6_addr
id|rt_dst
suffix:semicolon
DECL|member|rt_use
id|atomic_t
id|rt_use
suffix:semicolon
multiline_comment|/* dcache references&t;*/
DECL|member|rt_ref
id|atomic_t
id|rt_ref
suffix:semicolon
multiline_comment|/* fib references&t;*/
DECL|member|rt_nexthop
r_struct
id|neighbour
op_star
id|rt_nexthop
suffix:semicolon
DECL|member|rt_dev
r_struct
id|device
op_star
id|rt_dev
suffix:semicolon
DECL|member|rt_output_method
id|rt6_output_method_t
id|rt_output_method
suffix:semicolon
DECL|member|rt_metric
id|__u16
id|rt_metric
suffix:semicolon
DECL|member|rt_prefixlen
id|__u16
id|rt_prefixlen
suffix:semicolon
DECL|member|rt_flags
id|__u32
id|rt_flags
suffix:semicolon
DECL|member|rt_expires
r_int
r_int
id|rt_expires
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|rt6_info
op_star
id|default_rt_list
suffix:semicolon
r_extern
r_struct
id|rt6_info
op_star
id|last_resort_rt
suffix:semicolon
DECL|struct|dest_entry
r_struct
id|dest_entry
(brace
DECL|member|rt
r_struct
id|rt6_info
id|rt
suffix:semicolon
DECL|member|dc_irtt
id|__u32
id|dc_irtt
suffix:semicolon
DECL|member|dc_window
id|__u32
id|dc_window
suffix:semicolon
DECL|member|dc_pmtu
id|__u16
id|dc_pmtu
suffix:semicolon
DECL|member|dc_tstamp
r_int
r_int
id|dc_tstamp
suffix:semicolon
multiline_comment|/* for garbage collection */
DECL|macro|dc_addr
mdefine_line|#define dc_addr&t;&t;&t;rt.rt_dst
DECL|macro|dc_usecnt
mdefine_line|#define dc_usecnt&t;&t;rt.rt_use
DECL|macro|dc_nexthop
mdefine_line|#define dc_nexthop&t;&t;rt.rt_nexthop
DECL|macro|dc_flags
mdefine_line|#define dc_flags&t;&t;rt.rt_flags
)brace
suffix:semicolon
multiline_comment|/*&n; *&t;Structure for assync processing of operations on the routing&n; *&t;table&n; */
DECL|struct|rt6_req
r_struct
id|rt6_req
(brace
DECL|member|operation
r_int
id|operation
suffix:semicolon
DECL|member|ptr
r_struct
id|rt6_info
op_star
id|ptr
suffix:semicolon
DECL|member|next
r_struct
id|rt6_req
op_star
id|next
suffix:semicolon
DECL|member|prev
r_struct
id|rt6_req
op_star
id|prev
suffix:semicolon
DECL|macro|RT_OPER_ADD
mdefine_line|#define RT_OPER_ADD&t;&t;1
DECL|macro|RT_OPER_DEL
mdefine_line|#define RT_OPER_DEL&t;&t;2
)brace
suffix:semicolon
DECL|struct|rt6_statistics
r_struct
id|rt6_statistics
(brace
DECL|member|fib_nodes
id|__u32
id|fib_nodes
suffix:semicolon
DECL|member|fib_route_nodes
id|__u32
id|fib_route_nodes
suffix:semicolon
DECL|member|fib_rt_alloc
id|__u32
id|fib_rt_alloc
suffix:semicolon
DECL|member|fib_rt_entries
id|__u32
id|fib_rt_entries
suffix:semicolon
DECL|member|fib_dc_alloc
id|__u32
id|fib_dc_alloc
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|RTN_ROOT
mdefine_line|#define RTN_ROOT&t;0x0001&t;&t;/* root node&t;&t;&t;*/
DECL|macro|RTN_BACKTRACK
mdefine_line|#define RTN_BACKTRACK&t;0x0002&t;&t;/* backtrack point&t;&t;*/
DECL|macro|RTN_TAG
mdefine_line|#define RTN_TAG&t;&t;0x0010
multiline_comment|/*&n; *&t;Values for destination cache garbage colection&n; *&t;These are wild guesses for now...&n; */
DECL|macro|DC_WATER_MARK
mdefine_line|#define&t;DC_WATER_MARK&t;&t;512
DECL|macro|DC_SHORT_TIMEOUT
mdefine_line|#define DC_SHORT_TIMEOUT&t;(5*HZ)
DECL|macro|DC_LONG_TIMEOUT
mdefine_line|#define DC_LONG_TIMEOUT&t;        (15*HZ)
DECL|macro|DC_TIME_RUN
mdefine_line|#define DC_TIME_RUN&t;&t;(5*HZ)
DECL|macro|DC_TIME_RETRY
mdefine_line|#define DC_TIME_RETRY&t;&t;HZ
DECL|macro|RT6_FILTER_NONE
mdefine_line|#define RT6_FILTER_NONE&t;&t;0
DECL|macro|RT6_FILTER_RTNODES
mdefine_line|#define RT6_FILTER_RTNODES&t;1
multiline_comment|/*&n; *&t;Prototypes&n; */
multiline_comment|/*&n; *&t;check/obtain destination cache from routing table&n; */
r_extern
r_struct
id|dest_entry
op_star
id|ipv6_dst_check
c_func
(paren
r_struct
id|dest_entry
op_star
id|dc
comma
r_struct
id|in6_addr
op_star
id|daddr
comma
id|__u32
id|sernum
comma
r_int
id|flags
)paren
suffix:semicolon
r_extern
r_struct
id|dest_entry
op_star
id|ipv6_dst_route
c_func
(paren
r_struct
id|in6_addr
op_star
id|daddr
comma
r_struct
id|device
op_star
id|src_dev
comma
r_int
id|flags
)paren
suffix:semicolon
r_extern
r_void
id|ipv6_dst_unlock
c_func
(paren
r_struct
id|dest_entry
op_star
id|dest
)paren
suffix:semicolon
r_extern
r_struct
id|rt6_info
op_star
id|fibv6_lookup
c_func
(paren
r_struct
id|in6_addr
op_star
id|addr
comma
r_struct
id|device
op_star
id|dev
comma
r_int
id|flags
)paren
suffix:semicolon
multiline_comment|/*&n; *&t;user space set/del route&n; */
r_extern
r_int
id|ipv6_route_ioctl
c_func
(paren
r_int
r_int
id|cmd
comma
r_void
op_star
id|arg
)paren
suffix:semicolon
r_extern
r_void
id|ipv6_route_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|ipv6_route_cleanup
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|rt6_ifdown
c_func
(paren
r_struct
id|device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|ipv6_route_add
c_func
(paren
r_struct
id|in6_rtmsg
op_star
id|rt
)paren
suffix:semicolon
r_extern
r_int
id|fib6_del_rt
c_func
(paren
r_struct
id|rt6_info
op_star
id|rt
)paren
suffix:semicolon
r_extern
r_void
id|rt6_sndmsg
c_func
(paren
id|__u32
id|type
comma
r_struct
id|in6_addr
op_star
id|dst
comma
r_struct
id|in6_addr
op_star
id|gw
comma
id|__u16
id|plen
comma
id|__u16
id|metric
comma
r_char
op_star
id|devname
comma
id|__u16
id|flags
)paren
suffix:semicolon
multiline_comment|/*&n; *&t;ICMP interface&n; */
r_extern
r_struct
id|rt6_info
op_star
id|ipv6_rt_redirect
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_struct
id|in6_addr
op_star
id|dest
comma
r_struct
id|in6_addr
op_star
id|target
comma
r_int
id|on_link
)paren
suffix:semicolon
r_extern
r_void
id|rt6_handle_pmtu
c_func
(paren
r_struct
id|in6_addr
op_star
id|addr
comma
r_int
id|pmtu
)paren
suffix:semicolon
multiline_comment|/*&n; *&n; */
r_extern
r_struct
id|fib6_node
id|routing_table
suffix:semicolon
r_extern
r_struct
id|rt6_statistics
id|rt6_stats
suffix:semicolon
DECL|function|rt_release
r_static
id|__inline__
r_void
id|rt_release
c_func
(paren
r_struct
id|rt6_info
op_star
id|rt
)paren
(brace
id|atomic_dec
c_func
(paren
op_amp
id|rt-&gt;rt_ref
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
id|rt-&gt;rt_use
op_or
id|rt-&gt;rt_ref
)paren
op_eq
l_int|0
)paren
(brace
r_if
c_cond
(paren
id|rt-&gt;rt_nexthop
)paren
(brace
id|ndisc_dec_neigh
c_func
(paren
id|rt-&gt;rt_nexthop
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|rt-&gt;rt_flags
op_amp
id|RTI_DCACHE
)paren
(brace
id|rt6_stats.fib_dc_alloc
op_decrement
suffix:semicolon
)brace
id|rt6_stats.fib_rt_alloc
op_decrement
suffix:semicolon
id|kfree
c_func
(paren
id|rt
)paren
suffix:semicolon
)brace
)brace
macro_line|#endif
macro_line|#endif
eof
