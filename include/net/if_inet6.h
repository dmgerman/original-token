multiline_comment|/*&n; *&t;inet6 interface/address list definitions&n; *&t;Linux INET6 implementation &n; *&n; *&t;Authors:&n; *&t;Pedro Roque&t;&t;&lt;roque@di.fc.ul.pt&gt;&t;&n; *&n; *&n; *&t;This program is free software; you can redistribute it and/or&n; *      modify it under the terms of the GNU General Public License&n; *      as published by the Free Software Foundation; either version&n; *      2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _NET_IF_INET6_H
DECL|macro|_NET_IF_INET6_H
mdefine_line|#define _NET_IF_INET6_H
DECL|macro|DAD_COMPLETE
mdefine_line|#define DAD_COMPLETE&t;0x00
DECL|macro|DAD_INCOMPLETE
mdefine_line|#define DAD_INCOMPLETE&t;0x01
DECL|macro|DAD_STATUS
mdefine_line|#define DAD_STATUS&t;0x01
DECL|macro|ADDR_STATUS
mdefine_line|#define ADDR_STATUS&t;0x06
DECL|macro|ADDR_DEPRECATED
mdefine_line|#define ADDR_DEPRECATED 0x02
DECL|macro|ADDR_INVALID
mdefine_line|#define ADDR_INVALID&t;0x04
DECL|macro|ADDR_PERMANENT
mdefine_line|#define ADDR_PERMANENT&t;0x80
DECL|macro|IF_RA_RCVD
mdefine_line|#define IF_RA_RCVD&t;0x20
DECL|macro|IF_RS_SENT
mdefine_line|#define IF_RS_SENT&t;0x10
macro_line|#ifdef __KERNEL__
DECL|struct|inet6_ifaddr
r_struct
id|inet6_ifaddr
(brace
DECL|member|addr
r_struct
id|in6_addr
id|addr
suffix:semicolon
DECL|member|prefix_len
id|__u32
id|prefix_len
suffix:semicolon
DECL|member|valid_lft
id|__u32
id|valid_lft
suffix:semicolon
DECL|member|prefered_lft
id|__u32
id|prefered_lft
suffix:semicolon
DECL|member|tstamp
r_int
r_int
id|tstamp
suffix:semicolon
DECL|member|probes
id|__u8
id|probes
suffix:semicolon
DECL|member|flags
id|__u8
id|flags
suffix:semicolon
DECL|member|scope
id|__u16
id|scope
suffix:semicolon
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
DECL|member|idev
r_struct
id|inet6_dev
op_star
id|idev
suffix:semicolon
DECL|member|lst_next
r_struct
id|inet6_ifaddr
op_star
id|lst_next
suffix:semicolon
multiline_comment|/* next addr in addr_lst */
DECL|member|if_next
r_struct
id|inet6_ifaddr
op_star
id|if_next
suffix:semicolon
multiline_comment|/* next addr in inet6_dev */
)brace
suffix:semicolon
DECL|struct|ipv6_mc_socklist
r_struct
id|ipv6_mc_socklist
(brace
DECL|member|addr
r_struct
id|in6_addr
id|addr
suffix:semicolon
DECL|member|dev
r_struct
id|device
op_star
id|dev
suffix:semicolon
DECL|member|next
r_struct
id|ipv6_mc_socklist
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ipv6_mc_list
r_struct
id|ipv6_mc_list
(brace
DECL|member|addr
r_struct
id|in6_addr
id|addr
suffix:semicolon
DECL|member|dev
r_struct
id|device
op_star
id|dev
suffix:semicolon
DECL|member|next
r_struct
id|ipv6_mc_list
op_star
id|next
suffix:semicolon
DECL|member|if_next
r_struct
id|ipv6_mc_list
op_star
id|if_next
suffix:semicolon
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
DECL|member|tm_running
r_int
id|tm_running
suffix:semicolon
DECL|member|users
id|atomic_t
id|users
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|IFA_HOST
mdefine_line|#define&t;IFA_HOST&t;IPV6_ADDR_LOOPBACK
DECL|macro|IFA_LINK
mdefine_line|#define&t;IFA_LINK&t;IPV6_ADDR_LINKLOCAL
DECL|macro|IFA_SITE
mdefine_line|#define&t;IFA_SITE&t;IPV6_ADDR_SITELOCAL
DECL|macro|IFA_GLOBAL
mdefine_line|#define&t;IFA_GLOBAL&t;0x0000U
r_extern
r_int
id|in6_ifnum
suffix:semicolon
DECL|struct|inet6_dev
r_struct
id|inet6_dev
(brace
DECL|member|dev
r_struct
id|device
op_star
id|dev
suffix:semicolon
DECL|member|addr_list
r_struct
id|inet6_ifaddr
op_star
id|addr_list
suffix:semicolon
DECL|member|mc_list
r_struct
id|ipv6_mc_list
op_star
id|mc_list
suffix:semicolon
DECL|member|if_index
id|__u32
id|if_index
suffix:semicolon
DECL|member|if_flags
id|__u32
id|if_flags
suffix:semicolon
DECL|member|router
id|__u32
id|router
suffix:colon
l_int|1
comma
DECL|member|unused
id|unused
suffix:colon
l_int|31
suffix:semicolon
DECL|member|next
r_struct
id|inet6_dev
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
DECL|function|ipv6_mc_map
r_extern
id|__inline__
r_void
id|ipv6_mc_map
c_func
(paren
r_struct
id|in6_addr
op_star
id|addr
comma
r_char
op_star
id|buf
)paren
(brace
multiline_comment|/*&n;&t; *&t;+-------+-------+-------+-------+-------+-------+&n;&t; *      |   33  |   33  | DST13 | DST14 | DST15 | DST16 |&n;&t; *      +-------+-------+-------+-------+-------+-------+&n;&t; */
id|buf
(braket
l_int|0
)braket
op_assign
l_int|0x33
suffix:semicolon
id|buf
(braket
l_int|1
)braket
op_assign
l_int|0x33
suffix:semicolon
id|memcpy
c_func
(paren
id|buf
op_plus
l_int|2
comma
op_amp
id|addr-&gt;s6_addr32
(braket
l_int|3
)braket
comma
r_sizeof
(paren
id|__u32
)paren
)paren
suffix:semicolon
)brace
macro_line|#endif
macro_line|#endif
eof
