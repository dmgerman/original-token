multiline_comment|/*&n; *&t;inet6 interface/address list definitions&n; *&t;Linux INET6 implementation &n; *&n; *&t;Authors:&n; *&t;Pedro Roque&t;&t;&lt;roque@di.fc.ul.pt&gt;&t;&n; *&n; *&n; *&t;This program is free software; you can redistribute it and/or&n; *      modify it under the terms of the GNU General Public License&n; *      as published by the Free Software Foundation; either version&n; *      2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _NET_IF_INET6_H
DECL|macro|_NET_IF_INET6_H
mdefine_line|#define _NET_IF_INET6_H
DECL|macro|IF_RA_RCVD
mdefine_line|#define IF_RA_RCVD&t;0x20
DECL|macro|IF_RS_SENT
mdefine_line|#define IF_RS_SENT&t;0x10
macro_line|#ifdef __KERNEL__
DECL|struct|inet6_ifaddr
r_struct
id|inet6_ifaddr
(brace
DECL|member|addr
r_struct
id|in6_addr
id|addr
suffix:semicolon
DECL|member|prefix_len
id|__u32
id|prefix_len
suffix:semicolon
DECL|member|valid_lft
id|__u32
id|valid_lft
suffix:semicolon
DECL|member|prefered_lft
id|__u32
id|prefered_lft
suffix:semicolon
DECL|member|tstamp
r_int
r_int
id|tstamp
suffix:semicolon
DECL|member|refcnt
id|atomic_t
id|refcnt
suffix:semicolon
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
DECL|member|probes
id|__u8
id|probes
suffix:semicolon
DECL|member|flags
id|__u8
id|flags
suffix:semicolon
DECL|member|scope
id|__u16
id|scope
suffix:semicolon
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
DECL|member|idev
r_struct
id|inet6_dev
op_star
id|idev
suffix:semicolon
DECL|member|lst_next
r_struct
id|inet6_ifaddr
op_star
id|lst_next
suffix:semicolon
multiline_comment|/* next addr in addr_lst */
DECL|member|if_next
r_struct
id|inet6_ifaddr
op_star
id|if_next
suffix:semicolon
multiline_comment|/* next addr in inet6_dev */
DECL|member|dead
r_int
id|dead
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ipv6_mc_socklist
r_struct
id|ipv6_mc_socklist
(brace
DECL|member|addr
r_struct
id|in6_addr
id|addr
suffix:semicolon
DECL|member|ifindex
r_int
id|ifindex
suffix:semicolon
DECL|member|next
r_struct
id|ipv6_mc_socklist
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|MAF_TIMER_RUNNING
mdefine_line|#define MAF_TIMER_RUNNING&t;0x01
DECL|macro|MAF_LAST_REPORTER
mdefine_line|#define MAF_LAST_REPORTER&t;0x02
DECL|macro|MAF_LOADED
mdefine_line|#define MAF_LOADED&t;&t;0x04
DECL|struct|ifmcaddr6
r_struct
id|ifmcaddr6
(brace
DECL|member|mca_addr
r_struct
id|in6_addr
id|mca_addr
suffix:semicolon
DECL|member|idev
r_struct
id|inet6_dev
op_star
id|idev
suffix:semicolon
DECL|member|next
r_struct
id|ifmcaddr6
op_star
id|next
suffix:semicolon
DECL|member|mca_timer
r_struct
id|timer_list
id|mca_timer
suffix:semicolon
DECL|member|mca_flags
r_int
id|mca_flags
suffix:semicolon
DECL|member|mca_users
r_int
id|mca_users
suffix:semicolon
DECL|member|mca_refcnt
id|atomic_t
id|mca_refcnt
suffix:semicolon
DECL|member|mca_lock
id|spinlock_t
id|mca_lock
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|IFA_HOST
mdefine_line|#define&t;IFA_HOST&t;IPV6_ADDR_LOOPBACK
DECL|macro|IFA_LINK
mdefine_line|#define&t;IFA_LINK&t;IPV6_ADDR_LINKLOCAL
DECL|macro|IFA_SITE
mdefine_line|#define&t;IFA_SITE&t;IPV6_ADDR_SITELOCAL
DECL|macro|IFA_GLOBAL
mdefine_line|#define&t;IFA_GLOBAL&t;0x0000U
DECL|struct|ipv6_devconf
r_struct
id|ipv6_devconf
(brace
DECL|member|forwarding
r_int
id|forwarding
suffix:semicolon
DECL|member|hop_limit
r_int
id|hop_limit
suffix:semicolon
DECL|member|mtu6
r_int
id|mtu6
suffix:semicolon
DECL|member|accept_ra
r_int
id|accept_ra
suffix:semicolon
DECL|member|accept_redirects
r_int
id|accept_redirects
suffix:semicolon
DECL|member|autoconf
r_int
id|autoconf
suffix:semicolon
DECL|member|dad_transmits
r_int
id|dad_transmits
suffix:semicolon
DECL|member|rtr_solicits
r_int
id|rtr_solicits
suffix:semicolon
DECL|member|rtr_solicit_interval
r_int
id|rtr_solicit_interval
suffix:semicolon
DECL|member|rtr_solicit_delay
r_int
id|rtr_solicit_delay
suffix:semicolon
DECL|member|sysctl
r_void
op_star
id|sysctl
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|inet6_dev
r_struct
id|inet6_dev
(brace
DECL|member|dev
r_struct
id|net_device
op_star
id|dev
suffix:semicolon
DECL|member|addr_list
r_struct
id|inet6_ifaddr
op_star
id|addr_list
suffix:semicolon
DECL|member|mc_list
r_struct
id|ifmcaddr6
op_star
id|mc_list
suffix:semicolon
DECL|member|lock
id|rwlock_t
id|lock
suffix:semicolon
DECL|member|refcnt
id|atomic_t
id|refcnt
suffix:semicolon
DECL|member|if_flags
id|__u32
id|if_flags
suffix:semicolon
DECL|member|dead
r_int
id|dead
suffix:semicolon
DECL|member|nd_parms
r_struct
id|neigh_parms
op_star
id|nd_parms
suffix:semicolon
DECL|member|next
r_struct
id|inet6_dev
op_star
id|next
suffix:semicolon
DECL|member|cnf
r_struct
id|ipv6_devconf
id|cnf
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|ipv6_devconf
id|ipv6_devconf
suffix:semicolon
DECL|function|ipv6_eth_mc_map
r_static
r_inline
r_void
id|ipv6_eth_mc_map
c_func
(paren
r_struct
id|in6_addr
op_star
id|addr
comma
r_char
op_star
id|buf
)paren
(brace
multiline_comment|/*&n;&t; *&t;+-------+-------+-------+-------+-------+-------+&n;&t; *      |   33  |   33  | DST13 | DST14 | DST15 | DST16 |&n;&t; *      +-------+-------+-------+-------+-------+-------+&n;&t; */
id|buf
(braket
l_int|0
)braket
op_assign
l_int|0x33
suffix:semicolon
id|buf
(braket
l_int|1
)braket
op_assign
l_int|0x33
suffix:semicolon
id|memcpy
c_func
(paren
id|buf
op_plus
l_int|2
comma
op_amp
id|addr-&gt;s6_addr32
(braket
l_int|3
)braket
comma
r_sizeof
(paren
id|__u32
)paren
)paren
suffix:semicolon
)brace
DECL|function|ipv6_tr_mc_map
r_static
r_inline
r_void
id|ipv6_tr_mc_map
c_func
(paren
r_struct
id|in6_addr
op_star
id|addr
comma
r_char
op_star
id|buf
)paren
(brace
multiline_comment|/* All nodes FF01::1, FF02::1, FF02::1:FFxx:xxxx */
r_if
c_cond
(paren
(paren
(paren
id|addr-&gt;s6_addr
(braket
l_int|0
)braket
op_eq
l_int|0xFF
)paren
op_logical_and
(paren
(paren
id|addr-&gt;s6_addr
(braket
l_int|1
)braket
op_eq
l_int|0x01
)paren
op_logical_or
(paren
id|addr-&gt;s6_addr
(braket
l_int|1
)braket
op_eq
l_int|0x02
)paren
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr16
(braket
l_int|1
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr32
(braket
l_int|1
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr32
(braket
l_int|2
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr16
(braket
l_int|6
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr
(braket
l_int|15
)braket
op_eq
l_int|1
)paren
)paren
op_logical_or
(paren
(paren
id|addr-&gt;s6_addr
(braket
l_int|0
)braket
op_eq
l_int|0xFF
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr
(braket
l_int|1
)braket
op_eq
l_int|0x02
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr16
(braket
l_int|1
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr32
(braket
l_int|1
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr16
(braket
l_int|4
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr
(braket
l_int|10
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr
(braket
l_int|11
)braket
op_eq
l_int|1
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr
(braket
l_int|12
)braket
op_eq
l_int|0xff
)paren
)paren
)paren
(brace
id|buf
(braket
l_int|0
)braket
op_assign
l_int|0xC0
suffix:semicolon
id|buf
(braket
l_int|1
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|2
)braket
op_assign
l_int|0x01
suffix:semicolon
id|buf
(braket
l_int|3
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|4
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|5
)braket
op_assign
l_int|0x00
suffix:semicolon
multiline_comment|/* All routers FF0x::2 */
)brace
r_else
r_if
c_cond
(paren
(paren
id|addr-&gt;s6_addr
(braket
l_int|0
)braket
op_eq
l_int|0xff
)paren
op_logical_and
(paren
(paren
id|addr-&gt;s6_addr
(braket
l_int|1
)braket
op_amp
l_int|0xF0
)paren
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr16
(braket
l_int|1
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr32
(braket
l_int|1
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr32
(braket
l_int|2
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr16
(braket
l_int|6
)braket
op_eq
l_int|0
)paren
op_logical_and
(paren
id|addr-&gt;s6_addr
(braket
l_int|15
)braket
op_eq
l_int|2
)paren
)paren
(brace
id|buf
(braket
l_int|0
)braket
op_assign
l_int|0xC0
suffix:semicolon
id|buf
(braket
l_int|1
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|2
)braket
op_assign
l_int|0x02
suffix:semicolon
id|buf
(braket
l_int|3
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|4
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|5
)braket
op_assign
l_int|0x00
suffix:semicolon
)brace
r_else
(brace
r_int
r_char
id|i
suffix:semicolon
id|i
op_assign
id|addr-&gt;s6_addr
(braket
l_int|15
)braket
op_amp
l_int|7
suffix:semicolon
id|buf
(braket
l_int|0
)braket
op_assign
l_int|0xC0
suffix:semicolon
id|buf
(braket
l_int|1
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|2
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|3
)braket
op_assign
l_int|0x01
op_lshift
id|i
suffix:semicolon
id|buf
(braket
l_int|4
)braket
op_assign
l_int|0x00
suffix:semicolon
id|buf
(braket
l_int|5
)braket
op_assign
l_int|0x00
suffix:semicolon
)brace
)brace
macro_line|#endif
macro_line|#endif
eof
