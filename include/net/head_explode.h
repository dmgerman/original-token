multiline_comment|/*&n; *&t;Header exploders. We inline those only appearing once.&n; *&n; *&t;We assume 8 bit bytes.&n; *&n; *&t;This is oriented to getting good code out of GCC. It may need&n; *&t;tuning for other processors.&n; *&n; *&t;Note only IGMP uses this so far. Just as an experiment.&n; */
DECL|function|exp_getu16
r_extern
id|__inline__
r_int
r_char
op_star
id|exp_getu16
c_func
(paren
r_int
r_char
op_star
id|bp
comma
r_int
r_int
op_star
id|u
)paren
(brace
op_star
id|u
op_assign
(paren
op_star
id|bp
op_lshift
l_int|8
)paren
op_or
id|bp
(braket
l_int|1
)braket
suffix:semicolon
r_return
id|bp
op_plus
l_int|2
suffix:semicolon
)brace
DECL|function|exp_getn16
r_extern
id|__inline__
r_int
r_char
op_star
id|exp_getn16
c_func
(paren
r_int
r_char
op_star
id|bp
comma
r_int
r_int
op_star
id|u
)paren
(brace
r_int
r_char
op_star
id|tp
op_assign
(paren
r_int
r_char
op_star
)paren
id|u
suffix:semicolon
op_star
id|tp
op_increment
op_assign
op_star
id|bp
op_increment
suffix:semicolon
op_star
id|tp
op_increment
op_assign
op_star
id|bp
op_increment
suffix:semicolon
r_return
id|bp
suffix:semicolon
)brace
DECL|function|imp_putu16
r_extern
id|__inline__
r_int
r_char
op_star
id|imp_putu16
c_func
(paren
r_int
r_char
op_star
id|bp
comma
r_int
r_int
id|n
)paren
(brace
op_star
id|bp
op_assign
(paren
id|n
op_rshift
l_int|8
)paren
suffix:semicolon
id|bp
(braket
l_int|1
)braket
op_assign
id|n
op_amp
l_int|0xFF
suffix:semicolon
r_return
id|bp
op_plus
l_int|2
suffix:semicolon
)brace
DECL|function|imp_putn16
r_extern
id|__inline__
r_int
r_char
op_star
id|imp_putn16
c_func
(paren
r_int
r_char
op_star
id|bp
comma
r_int
r_int
id|n
)paren
(brace
r_int
r_char
op_star
id|sp
op_assign
(paren
r_int
r_char
op_star
)paren
op_amp
id|n
suffix:semicolon
op_star
id|bp
op_increment
op_assign
op_star
id|sp
op_increment
suffix:semicolon
op_star
id|bp
op_increment
op_assign
op_star
id|sp
op_increment
suffix:semicolon
r_return
id|bp
suffix:semicolon
)brace
DECL|function|exp_getu32
r_extern
id|__inline__
r_int
r_char
op_star
id|exp_getu32
c_func
(paren
r_int
r_char
op_star
id|bp
comma
r_int
r_int
op_star
id|u
)paren
(brace
op_star
id|u
op_assign
(paren
id|bp
(braket
l_int|0
)braket
op_lshift
l_int|24
)paren
op_or
(paren
id|bp
(braket
l_int|1
)braket
op_lshift
l_int|16
)paren
op_or
(paren
id|bp
(braket
l_int|2
)braket
op_lshift
l_int|8
)paren
op_or
id|bp
(braket
l_int|3
)braket
suffix:semicolon
r_return
id|bp
op_plus
l_int|4
suffix:semicolon
)brace
DECL|function|exp_getn32
r_extern
id|__inline__
r_int
r_char
op_star
id|exp_getn32
c_func
(paren
r_int
r_char
op_star
id|bp
comma
r_int
r_int
op_star
id|u
)paren
(brace
r_int
r_char
op_star
id|tp
op_assign
(paren
r_int
r_char
op_star
)paren
id|u
suffix:semicolon
op_star
id|tp
op_increment
op_assign
op_star
id|bp
op_increment
suffix:semicolon
op_star
id|tp
op_increment
op_assign
op_star
id|bp
op_increment
suffix:semicolon
op_star
id|tp
op_increment
op_assign
op_star
id|bp
op_increment
suffix:semicolon
op_star
id|tp
op_increment
op_assign
op_star
id|bp
op_increment
suffix:semicolon
r_return
id|bp
suffix:semicolon
)brace
DECL|function|imp_putu32
r_extern
id|__inline__
r_int
r_char
op_star
id|imp_putu32
c_func
(paren
r_int
r_char
op_star
id|bp
comma
r_int
r_int
id|n
)paren
(brace
id|bp
(braket
l_int|0
)braket
op_assign
id|n
op_rshift
l_int|24
suffix:semicolon
id|bp
(braket
l_int|1
)braket
op_assign
(paren
id|n
op_rshift
l_int|16
)paren
op_amp
l_int|0xFF
suffix:semicolon
id|bp
(braket
l_int|2
)braket
op_assign
(paren
id|n
op_rshift
l_int|8
)paren
op_amp
l_int|0xFF
suffix:semicolon
id|bp
(braket
l_int|3
)braket
op_assign
id|n
op_amp
l_int|0xFF
suffix:semicolon
r_return
id|bp
op_plus
l_int|4
suffix:semicolon
)brace
DECL|function|imp_putn32
r_extern
id|__inline__
r_int
r_char
op_star
id|imp_putn32
c_func
(paren
r_int
r_char
op_star
id|bp
comma
r_int
r_int
id|n
)paren
(brace
r_int
r_char
op_star
id|sp
op_assign
(paren
r_int
r_char
op_star
)paren
op_amp
id|n
suffix:semicolon
op_star
id|bp
op_increment
op_assign
op_star
id|sp
op_increment
suffix:semicolon
op_star
id|bp
op_increment
op_assign
op_star
id|sp
op_increment
suffix:semicolon
op_star
id|bp
op_increment
op_assign
op_star
id|sp
op_increment
suffix:semicolon
op_star
id|bp
op_increment
op_assign
op_star
id|sp
op_increment
suffix:semicolon
r_return
id|bp
suffix:semicolon
)brace
macro_line|#if 0
r_extern
id|__inline__
r_int
r_char
op_star
id|ip_explode
c_func
(paren
r_int
r_char
op_star
id|iph
comma
r_struct
id|ip_header
op_star
id|ip
)paren
(brace
id|ip-&gt;version
op_assign
op_star
id|iph
op_rshift
l_int|4
suffix:semicolon
multiline_comment|/* Avoid the shift. We do our equality checks shifted too */
id|ip-&gt;ihl
op_assign
(paren
op_star
id|iph
op_increment
)paren
op_amp
l_int|0xF
suffix:semicolon
multiline_comment|/* Length in long words */
id|ip-&gt;tos
op_assign
op_star
id|iph
op_increment
suffix:semicolon
multiline_comment|/* Service type */
id|iph
op_assign
id|exp_getu16
c_func
(paren
id|iph
comma
op_amp
id|ip-&gt;tot_len
)paren
suffix:semicolon
multiline_comment|/* Length of packet */
id|iph
op_assign
id|exp_getu16
c_func
(paren
id|iph
comma
op_amp
id|ip-&gt;id
)paren
suffix:semicolon
multiline_comment|/* Packet identity */
id|iph
op_assign
id|exp_getu16
c_func
(paren
id|iph
comma
op_amp
id|ip-&gt;frag_off
)paren
suffix:semicolon
multiline_comment|/* Fragment offset */
id|ip-&gt;ttl
op_assign
op_star
id|iph
op_increment
suffix:semicolon
id|ip-&gt;protocol
op_assign
op_star
id|iph
op_increment
suffix:semicolon
id|iph
op_assign
id|exp_getn16
c_func
(paren
id|iph
comma
op_amp
id|ip-&gt;check
)paren
suffix:semicolon
id|iph
op_assign
id|exp_getn32
c_func
(paren
id|iph
comma
op_amp
id|ip-&gt;saddr
)paren
suffix:semicolon
id|iph
op_assign
id|exp_getn32
c_func
(paren
id|iph
comma
op_amp
id|ip-&gt;daddr
)paren
suffix:semicolon
r_return
id|iph
suffix:semicolon
)brace
r_extern
id|__inline__
r_int
r_char
op_star
id|icmp_explode
c_func
(paren
r_int
r_char
op_star
id|icmph
comma
r_struct
id|icmp_header
op_star
id|icmp
)paren
(brace
id|icmp-&gt;type
op_assign
op_star
id|icmp
op_increment
suffix:semicolon
id|icmp-&gt;code
op_assign
op_star
id|icmp
op_increment
suffix:semicolon
id|icmph
op_assign
id|exp_getn16
c_func
(paren
id|icmph
comma
op_amp
id|icmp-&gt;checksum
)paren
suffix:semicolon
multiline_comment|/* These two pairs are a union... expand both */
id|exp_getu32
c_func
(paren
id|icmph
comma
op_amp
id|icmp-&gt;gateway
)paren
suffix:semicolon
id|icmph
op_assign
id|exp_getu16
c_func
(paren
id|icmph
comma
op_amp
id|icmp-&gt;id
)paren
suffix:semicolon
id|icmph
op_assign
id|exp_getu16
c_func
(paren
id|icmph
comma
op_amp
id|icmp-&gt;sequence
)paren
suffix:semicolon
r_return
id|icmph
suffix:semicolon
)brace
macro_line|#endif
DECL|function|igmp_explode
r_extern
id|__inline__
r_int
r_char
op_star
id|igmp_explode
c_func
(paren
r_int
r_char
op_star
id|igmph
comma
r_struct
id|igmp_header
op_star
id|igmp
)paren
(brace
id|igmp-&gt;type
op_assign
op_star
id|igmph
op_increment
suffix:semicolon
id|igmph
op_increment
suffix:semicolon
multiline_comment|/* unused */
id|igmph
op_assign
id|exp_getn16
c_func
(paren
id|igmph
comma
op_amp
id|igmp-&gt;csum
)paren
suffix:semicolon
id|igmph
op_assign
id|exp_getn32
c_func
(paren
id|igmph
comma
op_amp
id|igmp-&gt;group
)paren
suffix:semicolon
r_return
id|igmph
suffix:semicolon
)brace
macro_line|#if 0
r_extern
id|__inline__
r_int
r_char
op_star
id|tcp_explode
c_func
(paren
r_int
r_char
op_star
id|tcph
comma
r_struct
id|tcp_header
op_star
id|tcp
)paren
(brace
id|tcph
op_assign
id|exp_getu16
c_func
(paren
id|tcph
comma
op_amp
id|tcp-&gt;source
)paren
suffix:semicolon
id|tcph
op_assign
id|exp_getu16
c_func
(paren
id|tcph
comma
op_amp
id|tcp-&gt;dest
)paren
suffix:semicolon
id|tcph
op_assign
id|exp_getu32
c_func
(paren
id|tcph
comma
op_amp
id|tcp-&gt;seq
)paren
suffix:semicolon
id|tcph
op_assign
id|exp_getu32
c_func
(paren
id|tcph
comma
op_amp
id|tcp-&gt;ack_seq
)paren
suffix:semicolon
id|tcph
op_assign
id|exp_getu16
c_func
(paren
id|tcph
comma
op_amp
id|tcp-&gt;u.bitmask
)paren
suffix:semicolon
id|tcph
op_assign
id|exp_getu16
c_func
(paren
id|tcph
comma
op_amp
id|tcp-&gt;window
)paren
suffix:semicolon
id|tcph
op_assign
id|exp_getn16
c_func
(paren
id|tcph
comma
op_amp
id|tcp-&gt;check
)paren
suffix:semicolon
id|tcph
op_assign
id|exp_getu16
c_func
(paren
id|tcph
comma
op_amp
id|tcp-&gt;urg_ptr
)paren
suffix:semicolon
r_return
id|tcph
suffix:semicolon
)brace
r_extern
id|__inline__
r_int
r_char
op_star
id|udp_explode
c_func
(paren
r_int
r_char
op_star
id|udph
comma
r_struct
id|udp_header
op_star
id|udp
)paren
(brace
id|udph
op_assign
id|exp_getu16
c_func
(paren
id|tcph
comma
op_amp
id|udp-&gt;source
)paren
suffix:semicolon
id|udph
op_assign
id|exp_getu16
c_func
(paren
id|udph
comma
op_amp
id|udp-&gt;dest
)paren
suffix:semicolon
id|udph
op_assign
id|exp_getu16
c_func
(paren
id|udph
comma
op_amp
id|udp-&gt;len
)paren
suffix:semicolon
id|udph
op_assign
id|exp_getn16
c_func
(paren
id|udph
comma
op_amp
id|udp-&gt;check
)paren
suffix:semicolon
r_return
id|udph
suffix:semicolon
)brace
macro_line|#endif
eof
