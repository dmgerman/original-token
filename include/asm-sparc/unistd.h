macro_line|#ifndef _SPARC_UNISTD_H
DECL|macro|_SPARC_UNISTD_H
mdefine_line|#define _SPARC_UNISTD_H
multiline_comment|/*&n; * System calls under the Sparc.&n; *&n; * Don&squot;t be scared by the ugly clobbers, it is the only way I can&n; * think of right now to force the arguments into fixed registers&n; * before the trap into the system call with gcc &squot;asm&squot; statements.&n; *&n; * Copyright (C) 1994 David S. Miller (davem@caip.rutgers.edu)&n; */
multiline_comment|/* XXX - _foo needs to be __foo, while __NR_bar could be _NR_bar. */
DECL|macro|_syscall0
mdefine_line|#define _syscall0(type,name) &bslash;&n;type name(void) &bslash;&n;{ &bslash;&n;long __res; &bslash;&n;__asm__ volatile (&quot;or %%g0, %0, %%o0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;t 0xa&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  : &quot;=r&quot; (__res) &bslash;&n;&t;&t;  : &quot;0&quot; (__NR_##name) &bslash;&n;&t;&t;  : &quot;o0&quot;); &bslash;&n;if (__res &gt;= 0) &bslash;&n;    return (type) __res; &bslash;&n;errno = -__res; &bslash;&n;return -1; &bslash;&n;}
DECL|macro|_syscall1
mdefine_line|#define _syscall1(type,name,type1,arg1) &bslash;&n;type name(type1 arg1) &bslash;&n;{ &bslash;&n;long __res; &bslash;&n;__asm__ volatile (&quot;or %%g0, %0, %%o0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %1, %%o1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;t 0xa&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  : &quot;=r&quot; (__res), &quot;=r&quot; ((long)(arg1)) &bslash;&n;&t;&t;  : &quot;0&quot; (__NR_##name),&quot;1&quot; ((long)(arg1)) &bslash;&n;&t;&t;  : &quot;o0&quot;, &quot;o1&quot;); &bslash;&n;if (__res &gt;= 0) &bslash;&n;&t;return (type) __res; &bslash;&n;errno = -__res; &bslash;&n;return -1; &bslash;&n;}
DECL|macro|_syscall2
mdefine_line|#define _syscall2(type,name,type1,arg1,type2,arg2) &bslash;&n;type name(type1 arg1,type2 arg2) &bslash;&n;{ &bslash;&n;long __res; &bslash;&n;__asm__ volatile (&quot;or %%g0, %0, %%o0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %1, %%o1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %2, %%o2&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;t 0xa&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  : &quot;=r&quot; (__res), &quot;=r&quot; ((long)(arg1)), &quot;=r&quot; ((long)(args)) &bslash;&n;&t;&t;  : &quot;0&quot; (__NR_##name),&quot;1&quot; ((long)(arg1)),&quot;2&quot; ((long)(arg2)) &bslash;&n;&t;&t;  : &quot;o0&quot;, &quot;o1&quot;, &quot;o2&quot;); &bslash;&n;if (__res &gt;= 0) &bslash;&n;&t;return (type) __res; &bslash;&n;errno = -__res; &bslash;&n;return -1; &bslash;&n;}
DECL|macro|_syscall3
mdefine_line|#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) &bslash;&n;type name(type1 arg1,type2 arg2,type3 arg3) &bslash;&n;{ &bslash;&n;long __res; &bslash;&n;__asm__ volatile (&quot;or %%g0, %0, %%o0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %1, %%o1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %2, %%o2&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %3, %%o3&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;t 0xa&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  : &quot;=r&quot; (__res), &quot;=r&quot; ((long)(arg1)), &quot;=r&quot; ((long)(arg2)), &bslash;&n;&t;&t;    &quot;=r&quot; ((long)(arg3)) &bslash;&n;&t;&t;  : &quot;0&quot; (__NR_##name), &quot;1&quot; ((long)(arg1)), &quot;2&quot; ((long)(arg2)), &bslash;&n;&t;&t;    &quot;3&quot; ((long)(arg3)) &bslash;&n;&t;&t;  : &quot;o0&quot;, &quot;o1&quot;, &quot;o2&quot;, &quot;o3&quot;); &bslash;&n;if (__res&gt;=0) &bslash;&n;&t;return (type) __res; &bslash;&n;errno=-__res; &bslash;&n;return -1; &bslash;&n;}
DECL|macro|_syscall4
mdefine_line|#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) &bslash;&n;type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) &bslash;&n;{ &bslash;&n;long __res; &bslash;&n;__asm__ volatile (&quot;or %%g0, %0, %%o0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %1, %%o1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %2, %%o2&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %3, %%o3&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %4, %%o4&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;t 0xa&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  : &quot;=r&quot; (__res), &quot;=r&quot; ((long)(arg1)), &quot;=r&quot; ((long)(arg2)), &bslash;&n;&t;&t;    &quot;=r&quot; ((long)(arg3)), &quot;=r&quot; ((long)(arg4)) &bslash;&n;&t;&t;  : &quot;0&quot; (__NR_##name),&quot;1&quot; ((long)(arg1)),&quot;2&quot; ((long)(arg2)), &bslash;&n;&t;&t;    &quot;3&quot; ((long)(arg3)),&quot;4&quot; ((long)(arg4)) &bslash;&n;&t;&t;  : &quot;o0&quot;, &quot;o1&quot;, &quot;o2&quot;, &quot;o3&quot;, &quot;o4&quot;); &bslash;&n;if (__res&gt;=0) &bslash;&n;&t;return (type) __res; &bslash;&n;errno=-__res; &bslash;&n;return -1; &bslash;&n;} 
DECL|macro|_syscall5
mdefine_line|#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, &bslash;&n;&t;  type5,arg5) &bslash;&n;type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) &bslash;&n;{ &bslash;&n;long __res; &bslash;&n;__asm__ volatile (&quot;or %%g0, %0, %%o0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %1, %%o1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %2, %%o2&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %3, %%o3&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %4, %%o4&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;or %%g0, %5, %%o5&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  &quot;t 0xa&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;  : &quot;=r&quot; (__res), &quot;=r&quot; ((long)(arg1)), &quot;=r&quot; ((long)(arg2)), &bslash;&n;&t;&t;    &quot;=r&quot; ((long)(arg3)), &quot;=r&quot; ((long)(arg4)), &quot;=r&quot; ((long)(arg5)) &bslash;&n;&t;&t;  : &quot;0&quot; (__NR_##name),&quot;1&quot; ((long)(arg1)),&quot;2&quot; ((long)(arg2)), &bslash;&n;&t;&t;    &quot;3&quot; ((long)(arg3)),&quot;4&quot; ((long)(arg4)),&quot;5&quot; ((long)(arg5)) &bslash;&n;&t;&t;  : &quot;o0&quot;, &quot;o1&quot;, &quot;o2&quot;, &quot;o3&quot;, &quot;o4&quot;, &quot;o5&quot;); &bslash;&n;if (__res&gt;=0) &bslash;&n;&t;return (type) __res; &bslash;&n;errno=-__res; &bslash;&n;return -1; &bslash;&n;}
macro_line|#endif /* _SPARC_UNISTD_H */
eof
