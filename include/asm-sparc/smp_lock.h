multiline_comment|/* smp_lock.h: Locking and unlocking the kernel on the Sparc.&n; *&n; * Copyright (C) 1996 David S. Miller (davem@caip.rutgers.edu)&n; */
macro_line|#ifndef __SPARC_SMPLOCK_H
DECL|macro|__SPARC_SMPLOCK_H
mdefine_line|#define __SPARC_SMPLOCK_H
macro_line|#ifdef __SMP__
DECL|function|ldstub
r_extern
id|_inline_
r_int
r_char
id|ldstub
c_func
(paren
id|klock_t
op_star
id|lock
)paren
(brace
id|klock_t
id|retval
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldstub [%1], %0&bslash;n&bslash;t&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|retval
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
id|lock
)paren
)paren
suffix:semicolon
r_return
id|retval
suffix:semicolon
)brace
multiline_comment|/* Knock knock... */
DECL|function|lock_kernel
r_extern
id|_inline_
r_void
id|lock_kernel
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
r_int
id|proc
op_assign
id|smp_processor_id
c_func
(paren
)paren
suffix:semicolon
id|save_flags
c_func
(paren
id|flags
)paren
suffix:semicolon
id|cli
c_func
(paren
)paren
suffix:semicolon
multiline_comment|/* need this on sparc? */
r_while
c_loop
(paren
id|ldstub
c_func
(paren
op_amp
id|kernel_lock
)paren
)paren
(brace
r_if
c_cond
(paren
id|proc
op_eq
id|active_kernel_processor
)paren
(brace
r_break
suffix:semicolon
)brace
r_if
c_cond
(paren
id|test_bit
c_func
(paren
id|proc
comma
(paren
r_int
r_int
op_star
)paren
op_amp
id|smp_invalidate_needed
)paren
)paren
r_if
c_cond
(paren
id|clear_bit
c_func
(paren
id|proc
comma
(paren
r_int
r_int
op_star
)paren
op_amp
id|smp_invalidate_needed
)paren
)paren
(brace
id|local_invalidate
c_func
(paren
)paren
suffix:semicolon
)brace
)brace
id|active_kernel_processor
op_assign
id|proc
suffix:semicolon
id|kernel_counter
op_increment
suffix:semicolon
id|restore_flags
c_func
(paren
id|flags
)paren
suffix:semicolon
)brace
multiline_comment|/* I want out... */
DECL|function|unlock_kernel
r_extern
id|_inline_
r_void
id|unlock_kernel
c_func
(paren
r_void
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|save_flags
c_func
(paren
id|flags
)paren
suffix:semicolon
id|cli
c_func
(paren
)paren
suffix:semicolon
multiline_comment|/* need this on sparc? */
r_if
c_cond
(paren
id|kernel_counter
op_eq
l_int|0
)paren
(brace
id|panic
c_func
(paren
l_string|&quot;Bogus kernel counter.&bslash;n&quot;
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
op_logical_neg
op_decrement
id|kernel_counter
)paren
(brace
id|active_kernel_processor
op_assign
id|NO_PROC_ID
suffix:semicolon
id|kernel_lock
op_assign
id|KLOCK_CLEAR
suffix:semicolon
)brace
id|restore_flag
c_func
(paren
id|flags
)paren
suffix:semicolon
)brace
macro_line|#endif /* !(__SPARC_SMPLOCK_H) */
macro_line|#endif /* (__SMP__) */
eof
