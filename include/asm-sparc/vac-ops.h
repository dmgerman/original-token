macro_line|#ifndef _SPARC_VAC_OPS_H
DECL|macro|_SPARC_VAC_OPS_H
mdefine_line|#define _SPARC_VAC_OPS_H
multiline_comment|/* vac-ops.h: Inline assembly routines to do operations on the Sparc&n;              VAC (virtual address cache).&n;&n;   Copyright (C) 1994, David S. Miller (davem@caip.rutgers.edu)&n;*/
r_extern
r_int
r_int
op_star
id|trapbase
suffix:semicolon
r_extern
r_char
id|end
comma
id|etext
comma
id|edata
suffix:semicolon
r_extern
r_void
id|flush_vac_context
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|flush_vac_segment
c_func
(paren
r_int
r_int
id|foo_segment
)paren
suffix:semicolon
r_extern
r_void
id|flush_vac_page
c_func
(paren
r_int
r_int
id|foo_addr
)paren
suffix:semicolon
r_extern
r_int
id|vac_do_hw_vac_flushes
comma
id|vac_size
comma
id|vac_linesize
suffix:semicolon
r_extern
r_int
id|vac_entries_per_context
comma
id|vac_entries_per_segment
suffix:semicolon
r_extern
r_int
id|vac_entries_per_page
suffix:semicolon
multiline_comment|/* enable_vac() enables the virtual address cache. It returns 0 on&n;   success, 1 on failure.&n;*/
DECL|function|enable_vac
r_extern
id|__inline__
r_int
id|enable_vac
c_func
(paren
r_void
)paren
(brace
r_int
id|success
op_assign
l_int|0
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;lduba [%1] 2, %0&bslash;n&bslash;t&quot;
l_string|&quot;or    %0, 0x10, %0&bslash;n&bslash;t&quot;
l_string|&quot;stba  %0, [%1] 2&bslash;n&bslash;t&quot;
l_string|&quot;or    %%g0, %%g0, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|success
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
(paren
r_int
r_int
)paren
l_int|0x40000000
)paren
comma
l_string|&quot;0&quot;
(paren
id|success
)paren
)paren
suffix:semicolon
r_return
id|success
suffix:semicolon
)brace
multiline_comment|/* disable_vac() disables the virtual address cache. It returns 0 on&n;   success, 1 on failure.&n;*/
DECL|function|disable_vac
r_extern
id|__inline__
r_int
id|disable_vac
c_func
(paren
r_void
)paren
(brace
r_int
id|success
op_assign
l_int|0
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;lduba [%1] 0x2, %0&bslash;n&bslash;t&quot;
l_string|&quot;xor   %0, 0x10, %0&bslash;n&bslash;t&quot;
l_string|&quot;stba  %0, [%1] 0x2&bslash;n&bslash;t&quot;
l_string|&quot;or    %%g0, %%g0, %0&quot;
suffix:colon
l_string|&quot;=r&quot;
(paren
id|success
)paren
suffix:colon
l_string|&quot;r&quot;
(paren
l_int|0x40000000
)paren
comma
l_string|&quot;0&quot;
(paren
id|success
)paren
)paren
suffix:semicolon
r_return
id|success
suffix:semicolon
)brace
multiline_comment|/* Various one-shot VAC entry flushes on the Sparc */
DECL|function|hw_flush_vac_context_entry
r_extern
id|__inline__
r_void
id|hw_flush_vac_context_entry
c_func
(paren
r_char
op_star
id|addr
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;sta %%g0, [%0] 0x7&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|addr
)paren
)paren
suffix:semicolon
)brace
DECL|function|sw_flush_vac_context_entry
r_extern
id|__inline__
r_void
id|sw_flush_vac_context_entry
c_func
(paren
r_char
op_star
id|addr
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;sta %%g0, [%0] 0xe&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|addr
)paren
)paren
suffix:semicolon
)brace
DECL|function|hw_flush_vac_segment_entry
r_extern
id|__inline__
r_void
id|hw_flush_vac_segment_entry
c_func
(paren
r_char
op_star
id|addr
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;sta %%g0, [%0] 0x5&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|addr
)paren
)paren
suffix:semicolon
)brace
DECL|function|sw_flush_vac_segment_entry
r_extern
id|__inline__
r_void
id|sw_flush_vac_segment_entry
c_func
(paren
r_char
op_star
id|addr
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;sta %%g0, [%0] 0xc&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|addr
)paren
)paren
suffix:semicolon
)brace
DECL|function|hw_flush_vac_page_entry
r_extern
id|__inline__
r_void
id|hw_flush_vac_page_entry
c_func
(paren
r_int
r_int
op_star
id|addr
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;sta %%g0, [%0] 0x6&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|addr
)paren
)paren
suffix:semicolon
)brace
DECL|function|sw_flush_vac_page_entry
r_extern
id|__inline__
r_void
id|sw_flush_vac_page_entry
c_func
(paren
r_int
r_int
op_star
id|addr
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;sta %%g0, [%0] 0xd&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|addr
)paren
)paren
suffix:semicolon
)brace
macro_line|#endif /* !(_SPARC_VAC_OPS_H) */
eof
