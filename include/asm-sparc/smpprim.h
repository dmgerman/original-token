multiline_comment|/*  $Id: smpprim.h,v 1.5 1996/08/29 09:48:49 davem Exp $&n; *  smpprim.h:  SMP locking primitives on the Sparc&n; *&n; *  God knows we won&squot;t be actually using this code for some time&n; *  but I thought I&squot;d write it since I knew how.&n; *&n; *  Copyright (C) 1995 David S. Miller (davem@caip.rutgers.edu)&n; */
macro_line|#ifndef __SPARC_SMPPRIM_H
DECL|macro|__SPARC_SMPPRIM_H
mdefine_line|#define __SPARC_SMPPRIM_H
multiline_comment|/* Test and set the unsigned byte at ADDR to 1.  Returns the previous&n; * value.  On the Sparc we use the ldstub instruction since it is&n; * atomic.&n; */
DECL|function|test_and_set
r_extern
id|__inline__
id|__volatile__
r_char
id|test_and_set
c_func
(paren
r_void
op_star
id|addr
)paren
(brace
r_char
id|state
op_assign
l_int|0
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
l_string|&quot;ldstub [%0], %1         ! test_and_set&bslash;n&bslash;t&quot;
l_string|&quot;=r&quot;
(paren
id|addr
)paren
comma
l_string|&quot;=r&quot;
(paren
id|state
)paren
suffix:colon
l_string|&quot;0&quot;
(paren
id|addr
)paren
comma
l_string|&quot;1&quot;
(paren
id|state
)paren
suffix:colon
l_string|&quot;memory&quot;
)paren
suffix:semicolon
r_return
id|state
suffix:semicolon
)brace
multiline_comment|/* Initialize a spin-lock. */
DECL|function|smp_initlock
r_extern
id|__inline__
id|__volatile__
id|smp_initlock
c_func
(paren
r_void
op_star
id|spinlock
)paren
(brace
multiline_comment|/* Unset the lock. */
op_star
(paren
(paren
r_int
r_char
op_star
)paren
id|spinlock
)paren
op_assign
l_int|0
suffix:semicolon
r_return
suffix:semicolon
)brace
multiline_comment|/* This routine spins until it acquires the lock at ADDR. */
DECL|function|smp_lock
r_extern
id|__inline__
id|__volatile__
id|smp_lock
c_func
(paren
r_void
op_star
id|addr
)paren
(brace
r_while
c_loop
(paren
id|test_and_set
c_func
(paren
id|addr
)paren
op_eq
l_int|0xff
)paren
(brace
suffix:semicolon
)brace
multiline_comment|/* We now have the lock */
r_return
suffix:semicolon
)brace
multiline_comment|/* This routine releases the lock at ADDR. */
DECL|function|smp_unlock
r_extern
id|__inline__
id|__volatile__
id|smp_unlock
c_func
(paren
r_void
op_star
id|addr
)paren
(brace
op_star
(paren
(paren
r_int
r_char
op_star
)paren
id|addr
)paren
op_assign
l_int|0
suffix:semicolon
)brace
macro_line|#endif /* !(__SPARC_SMPPRIM_H) */
eof
