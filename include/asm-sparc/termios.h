multiline_comment|/* $Id: termios.h,v 1.21 1996/11/13 02:30:40 davem Exp $ */
macro_line|#ifndef _SPARC_TERMIOS_H
DECL|macro|_SPARC_TERMIOS_H
mdefine_line|#define _SPARC_TERMIOS_H
macro_line|#include &lt;asm/ioctls.h&gt;
macro_line|#include &lt;asm/termbits.h&gt;
macro_line|#if defined(__KERNEL__) || defined(__DEFINE_BSD_TERMIOS)
DECL|struct|sgttyb
r_struct
id|sgttyb
(brace
DECL|member|sg_ispeed
r_char
id|sg_ispeed
suffix:semicolon
DECL|member|sg_ospeed
r_char
id|sg_ospeed
suffix:semicolon
DECL|member|sg_erase
r_char
id|sg_erase
suffix:semicolon
DECL|member|sg_kill
r_char
id|sg_kill
suffix:semicolon
DECL|member|sg_flags
r_int
id|sg_flags
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|tchars
r_struct
id|tchars
(brace
DECL|member|t_intrc
r_char
id|t_intrc
suffix:semicolon
DECL|member|t_quitc
r_char
id|t_quitc
suffix:semicolon
DECL|member|t_startc
r_char
id|t_startc
suffix:semicolon
DECL|member|t_stopc
r_char
id|t_stopc
suffix:semicolon
DECL|member|t_eofc
r_char
id|t_eofc
suffix:semicolon
DECL|member|t_brkc
r_char
id|t_brkc
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ltchars
r_struct
id|ltchars
(brace
DECL|member|t_suspc
r_char
id|t_suspc
suffix:semicolon
DECL|member|t_dsuspc
r_char
id|t_dsuspc
suffix:semicolon
DECL|member|t_rprntc
r_char
id|t_rprntc
suffix:semicolon
DECL|member|t_flushc
r_char
id|t_flushc
suffix:semicolon
DECL|member|t_werasc
r_char
id|t_werasc
suffix:semicolon
DECL|member|t_lnextc
r_char
id|t_lnextc
suffix:semicolon
)brace
suffix:semicolon
macro_line|#endif /* __KERNEL__ */
DECL|struct|sunos_ttysize
r_struct
id|sunos_ttysize
(brace
DECL|member|st_lines
r_int
id|st_lines
suffix:semicolon
multiline_comment|/* Lines on the terminal */
DECL|member|st_columns
r_int
id|st_columns
suffix:semicolon
multiline_comment|/* Columns on the terminal */
)brace
suffix:semicolon
multiline_comment|/* Used for packet mode */
DECL|macro|TIOCPKT_DATA
mdefine_line|#define TIOCPKT_DATA&t;&t; 0
DECL|macro|TIOCPKT_FLUSHREAD
mdefine_line|#define TIOCPKT_FLUSHREAD&t; 1
DECL|macro|TIOCPKT_FLUSHWRITE
mdefine_line|#define TIOCPKT_FLUSHWRITE&t; 2
DECL|macro|TIOCPKT_STOP
mdefine_line|#define TIOCPKT_STOP&t;&t; 4
DECL|macro|TIOCPKT_START
mdefine_line|#define TIOCPKT_START&t;&t; 8
DECL|macro|TIOCPKT_NOSTOP
mdefine_line|#define TIOCPKT_NOSTOP&t;&t;16
DECL|macro|TIOCPKT_DOSTOP
mdefine_line|#define TIOCPKT_DOSTOP&t;&t;32
DECL|struct|winsize
r_struct
id|winsize
(brace
DECL|member|ws_row
r_int
r_int
id|ws_row
suffix:semicolon
DECL|member|ws_col
r_int
r_int
id|ws_col
suffix:semicolon
DECL|member|ws_xpixel
r_int
r_int
id|ws_xpixel
suffix:semicolon
DECL|member|ws_ypixel
r_int
r_int
id|ws_ypixel
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* line disciplines */
DECL|macro|N_TTY
mdefine_line|#define N_TTY&t;&t;0
DECL|macro|N_SLIP
mdefine_line|#define N_SLIP&t;&t;1
DECL|macro|N_MOUSE
mdefine_line|#define N_MOUSE&t;&t;2
DECL|macro|N_PPP
mdefine_line|#define N_PPP&t;&t;3
DECL|macro|N_STRIP
mdefine_line|#define N_STRIP&t;&t;4
DECL|macro|N_AX25
mdefine_line|#define N_AX25&t;&t;5
macro_line|#ifdef __KERNEL__
multiline_comment|/*&n; * c_cc characters in the termio structure.  Oh, how I love being&n; * backwardly compatible.  Notice that character 4 and 5 are&n; * interpreted differently depending on whether ICANON is set in&n; * c_lflag.  If it&squot;s set, they are used as _VEOF and _VEOL, otherwise&n; * as _VMIN and V_TIME.  This is for compatibility with OSF/1 (which&n; * is compatible with sysV)...&n; */
DECL|macro|_VMIN
mdefine_line|#define _VMIN&t;4
DECL|macro|_VTIME
mdefine_line|#define _VTIME&t;5
macro_line|#include &lt;linux/string.h&gt;
multiline_comment|/*&t;intr=^C&t;&t;quit=^&bslash;&t;&t;erase=del&t;kill=^U&n;&t;eof=^D&t;&t;eol=&bslash;0&t;&t;eol2=&bslash;0&t;&t;sxtc=&bslash;0&n;&t;start=^Q&t;stop=^S&t;&t;susp=^Z&t;&t;dsusp=^Y&n;&t;reprint=^R&t;discard=^U&t;werase=^W&t;lnext=^V&n;&t;vmin=&bslash;1         vtime=&bslash;0&n;*/
DECL|macro|INIT_C_CC
mdefine_line|#define INIT_C_CC &quot;&bslash;003&bslash;034&bslash;177&bslash;025&bslash;004&bslash;000&bslash;000&bslash;000&bslash;021&bslash;023&bslash;032&bslash;031&bslash;022&bslash;025&bslash;027&bslash;026&bslash;001&bslash;000&quot;
multiline_comment|/*&n; * Translate a &quot;termio&quot; structure into a &quot;termios&quot;. Ugh.&n; */
DECL|function|trans_from_termio
r_extern
id|__inline__
r_void
id|trans_from_termio
c_func
(paren
r_struct
id|termio
op_star
id|termio
comma
r_struct
id|termios
op_star
id|termios
)paren
(brace
DECL|macro|SET_LOW_BITS
mdefine_line|#define SET_LOW_BITS(x,y)&t;((x) = (0xffff0000 &amp; (x)) | (y))
id|SET_LOW_BITS
c_func
(paren
id|termios-&gt;c_iflag
comma
id|termio-&gt;c_iflag
)paren
suffix:semicolon
id|SET_LOW_BITS
c_func
(paren
id|termios-&gt;c_oflag
comma
id|termio-&gt;c_oflag
)paren
suffix:semicolon
id|SET_LOW_BITS
c_func
(paren
id|termios-&gt;c_cflag
comma
id|termio-&gt;c_cflag
)paren
suffix:semicolon
id|SET_LOW_BITS
c_func
(paren
id|termios-&gt;c_lflag
comma
id|termio-&gt;c_lflag
)paren
suffix:semicolon
DECL|macro|SET_LOW_BITS
macro_line|#undef SET_LOW_BITS
id|memcpy
(paren
id|termios-&gt;c_cc
comma
id|termio-&gt;c_cc
comma
id|NCC
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * Translate a &quot;termios&quot; structure into a &quot;termio&quot;. Ugh.&n; *&n; * Note the &quot;fun&quot; _VMIN overloading.&n; */
DECL|function|trans_to_termio
r_extern
id|__inline__
r_void
id|trans_to_termio
c_func
(paren
r_struct
id|termios
op_star
id|termios
comma
r_struct
id|termio
op_star
id|termio
)paren
(brace
id|termio-&gt;c_iflag
op_assign
id|termios-&gt;c_iflag
suffix:semicolon
id|termio-&gt;c_oflag
op_assign
id|termios-&gt;c_oflag
suffix:semicolon
id|termio-&gt;c_cflag
op_assign
id|termios-&gt;c_cflag
suffix:semicolon
id|termio-&gt;c_lflag
op_assign
id|termios-&gt;c_lflag
suffix:semicolon
id|termio-&gt;c_line
op_assign
id|termios-&gt;c_line
suffix:semicolon
id|memcpy
c_func
(paren
id|termio-&gt;c_cc
comma
id|termios-&gt;c_cc
comma
id|NCC
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|termios-&gt;c_lflag
op_amp
id|ICANON
)paren
)paren
(brace
id|termio-&gt;c_cc
(braket
id|_VMIN
)braket
op_assign
id|termios-&gt;c_cc
(braket
id|VMIN
)braket
suffix:semicolon
id|termio-&gt;c_cc
(braket
id|_VTIME
)braket
op_assign
id|termios-&gt;c_cc
(braket
id|VTIME
)braket
suffix:semicolon
)brace
)brace
multiline_comment|/* Note that in this case DEST is a user buffer and thus the checking&n; * and this ugly macro to avoid header file problems.&n; */
DECL|macro|termios_to_userland
mdefine_line|#define termios_to_userland(d, s) &bslash;&n;do { &bslash;&n;&t;struct termios *dest = (d); &bslash;&n;&t;struct termios *source = (s); &bslash;&n;&t;put_user(source-&gt;c_iflag, &amp;dest-&gt;c_iflag); &bslash;&n;&t;put_user(source-&gt;c_oflag, &amp;dest-&gt;c_oflag); &bslash;&n;&t;put_user(source-&gt;c_cflag, &amp;dest-&gt;c_cflag); &bslash;&n;&t;put_user(source-&gt;c_lflag, &amp;dest-&gt;c_lflag); &bslash;&n;&t;put_user(source-&gt;c_line, &amp;dest-&gt;c_line); &bslash;&n;&t;copy_to_user(dest-&gt;c_cc, source-&gt;c_cc, NCCS); &bslash;&n;&t;if (!(source-&gt;c_lflag &amp; ICANON)){ &bslash;&n;&t;&t;put_user(source-&gt;c_cc[VMIN], &amp;dest-&gt;c_cc[_VMIN]); &bslash;&n;&t;&t;put_user(source-&gt;c_cc[VTIME], &amp;dest-&gt;c_cc[_VTIME]); &bslash;&n;&t;} else { &bslash;&n;&t;&t;put_user(source-&gt;c_cc[VEOF], &amp;dest-&gt;c_cc[VEOF]); &bslash;&n;&t;&t;put_user(source-&gt;c_cc[VEOL], &amp;dest-&gt;c_cc[VEOL]); &bslash;&n;&t;} &bslash;&n;} while(0)
multiline_comment|/* termios to termios handling SunOS overloading of eof,eol/vmin,vtime&n; * In this case we are only working with kernel buffers so direct&n; * accesses are ok.&n; */
DECL|function|termios_from_userland
r_extern
id|__inline__
r_void
id|termios_from_userland
c_func
(paren
r_struct
id|termios
op_star
id|source
comma
r_struct
id|termios
op_star
id|dest
)paren
(brace
id|dest-&gt;c_iflag
op_assign
id|source-&gt;c_iflag
suffix:semicolon
id|dest-&gt;c_oflag
op_assign
id|source-&gt;c_oflag
suffix:semicolon
id|dest-&gt;c_cflag
op_assign
id|source-&gt;c_cflag
suffix:semicolon
id|dest-&gt;c_lflag
op_assign
id|source-&gt;c_lflag
suffix:semicolon
id|dest-&gt;c_line
op_assign
id|source-&gt;c_line
suffix:semicolon
id|memcpy
c_func
(paren
id|dest-&gt;c_cc
comma
id|source-&gt;c_cc
comma
id|NCCS
)paren
suffix:semicolon
r_if
c_cond
(paren
id|dest-&gt;c_lflag
op_amp
id|ICANON
)paren
(brace
id|dest-&gt;c_cc
(braket
id|VEOF
)braket
op_assign
id|source-&gt;c_cc
(braket
id|VEOF
)braket
suffix:semicolon
id|dest-&gt;c_cc
(braket
id|VEOL
)braket
op_assign
id|source-&gt;c_cc
(braket
id|VEOL
)braket
suffix:semicolon
)brace
r_else
(brace
id|dest-&gt;c_cc
(braket
id|VMIN
)braket
op_assign
id|source-&gt;c_cc
(braket
id|_VMIN
)braket
suffix:semicolon
id|dest-&gt;c_cc
(braket
id|VTIME
)braket
op_assign
id|source-&gt;c_cc
(braket
id|_VTIME
)braket
suffix:semicolon
)brace
)brace
macro_line|#endif&t;/* __KERNEL__ */
macro_line|#endif /* _SPARC_TERMIOS_H */
eof
