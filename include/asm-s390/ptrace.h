multiline_comment|/*&n; *  include/asm-s390/ptrace.h&n; *&n; *  S390 version&n; *    Copyright (C) 1999,2000 IBM Deutschland Entwicklung GmbH, IBM Corporation&n; *    Author(s): Denis Joseph Barrow (djbarrow@de.ibm.com,barrow_dj@yahoo.com)&n; */
macro_line|#ifndef _S390_PTRACE_H
DECL|macro|_S390_PTRACE_H
mdefine_line|#define _S390_PTRACE_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;asm/s390-regs-common.h&gt;
macro_line|#include &lt;asm/current.h&gt;
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;asm/setup.h&gt;
macro_line|#include &lt;linux/stddef.h&gt;
DECL|macro|S390_REGS
mdefine_line|#define S390_REGS   &bslash;&n;S390_REGS_COMMON    &bslash;&n;__u32 orig_gpr2;
r_typedef
r_struct
(brace
id|S390_REGS
DECL|typedef|s390_regs
)brace
id|s390_regs
suffix:semicolon
DECL|struct|pt_regs
r_struct
id|pt_regs
(brace
id|S390_REGS
DECL|member|trap
id|__u32
id|trap
suffix:semicolon
)brace
suffix:semicolon
macro_line|#if CONFIG_REMOTE_DEBUG
r_typedef
r_struct
(brace
id|S390_REGS
DECL|member|trap
id|__u32
id|trap
suffix:semicolon
DECL|member|crs
id|__u32
id|crs
(braket
l_int|16
)braket
suffix:semicolon
DECL|member|fp_regs
id|s390_fp_regs
id|fp_regs
suffix:semicolon
DECL|typedef|gdb_pt_regs
)brace
id|gdb_pt_regs
suffix:semicolon
macro_line|#endif
r_typedef
r_struct
(brace
DECL|member|cr
id|__u32
id|cr
(braket
l_int|3
)braket
suffix:semicolon
DECL|typedef|per_cr_words
)brace
id|per_cr_words
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|macro|PER_EM_MASK
mdefine_line|#define PER_EM_MASK 0xE8000000
r_typedef
r_struct
(brace
DECL|member|em_branching
r_int
id|em_branching
suffix:colon
l_int|1
suffix:semicolon
DECL|member|em_instruction_fetch
r_int
id|em_instruction_fetch
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Switching on storage alteration automatically fixes&n;&t;   the storage alteration event bit in the users std. */
DECL|member|em_storage_alteration
r_int
id|em_storage_alteration
suffix:colon
l_int|1
suffix:semicolon
DECL|member|em_gpr_alt_unused
r_int
id|em_gpr_alt_unused
suffix:colon
l_int|1
suffix:semicolon
DECL|member|em_store_real_address
r_int
id|em_store_real_address
suffix:colon
l_int|1
suffix:semicolon
r_int
suffix:colon
l_int|3
suffix:semicolon
DECL|member|branch_addr_ctl
r_int
id|branch_addr_ctl
suffix:colon
l_int|1
suffix:semicolon
r_int
suffix:colon
l_int|1
suffix:semicolon
DECL|member|storage_alt_space_ctl
r_int
id|storage_alt_space_ctl
suffix:colon
l_int|1
suffix:semicolon
r_int
suffix:colon
l_int|5
suffix:semicolon
r_int
suffix:colon
l_int|16
suffix:semicolon
DECL|member|starting_addr
id|__u32
id|starting_addr
suffix:semicolon
DECL|member|ending_addr
id|__u32
id|ending_addr
suffix:semicolon
DECL|typedef|per_cr_bits
)brace
id|per_cr_bits
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|perc_atmid
id|__u16
id|perc_atmid
suffix:semicolon
multiline_comment|/* 0x096 */
DECL|member|address
id|__u32
id|address
suffix:semicolon
multiline_comment|/* 0x098 */
DECL|member|access_id
id|__u8
id|access_id
suffix:semicolon
multiline_comment|/* 0x0a1 */
DECL|typedef|per_lowcore_words
)brace
id|per_lowcore_words
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|perc_branching
r_int
id|perc_branching
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* 0x096 */
DECL|member|perc_instruction_fetch
r_int
id|perc_instruction_fetch
suffix:colon
l_int|1
suffix:semicolon
DECL|member|perc_storage_alteration
r_int
id|perc_storage_alteration
suffix:colon
l_int|1
suffix:semicolon
DECL|member|perc_gpr_alt_unused
r_int
id|perc_gpr_alt_unused
suffix:colon
l_int|1
suffix:semicolon
DECL|member|perc_store_real_address
r_int
id|perc_store_real_address
suffix:colon
l_int|1
suffix:semicolon
r_int
suffix:colon
l_int|3
suffix:semicolon
r_int
suffix:colon
l_int|1
suffix:semicolon
DECL|member|atmid
r_int
id|atmid
suffix:colon
l_int|5
suffix:semicolon
DECL|member|si
r_int
id|si
suffix:colon
l_int|2
suffix:semicolon
DECL|member|address
id|__u32
id|address
suffix:semicolon
multiline_comment|/* 0x098 */
r_int
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* 0x0a1 */
DECL|member|access_id
r_int
id|access_id
suffix:colon
l_int|4
suffix:semicolon
DECL|typedef|per_lowcore_bits
)brace
id|per_lowcore_bits
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
r_typedef
r_struct
(brace
r_union
(brace
DECL|member|words
id|per_cr_words
id|words
suffix:semicolon
DECL|member|bits
id|per_cr_bits
id|bits
suffix:semicolon
DECL|member|control_regs
)brace
id|control_regs
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* Use these flags instead of setting em_instruction_fetch */
multiline_comment|/* directly they are used so that single stepping can be */
multiline_comment|/* switched on &amp; off while not affecting other tracing */
DECL|member|single_step
r_int
id|single_step
suffix:colon
l_int|1
suffix:semicolon
DECL|member|instruction_fetch
r_int
id|instruction_fetch
suffix:colon
l_int|1
suffix:semicolon
r_int
suffix:colon
l_int|30
suffix:semicolon
multiline_comment|/* These addresses are copied into cr10 &amp; cr11 if single stepping&n;&t;   is switched off */
DECL|member|starting_addr
id|__u32
id|starting_addr
suffix:semicolon
DECL|member|ending_addr
id|__u32
id|ending_addr
suffix:semicolon
r_union
(brace
DECL|member|words
id|per_lowcore_words
id|words
suffix:semicolon
DECL|member|bits
id|per_lowcore_bits
id|bits
suffix:semicolon
DECL|member|lowcore
)brace
id|lowcore
suffix:semicolon
DECL|typedef|per_struct
)brace
id|per_struct
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* this struct defines the way the registers are stored on the&n;   stack during a system call. If you change the pt_regs structure,&n;   you&squot;ll need to change user.h too. &n;&n;   N.B. if you modify the pt_regs struct the strace command also has to be&n;   modified &amp; recompiled  ( just wait till we have gdb going ).&n;&n;*/
DECL|struct|user_regs_struct
r_struct
id|user_regs_struct
(brace
id|S390_REGS
DECL|member|fp_regs
id|s390_fp_regs
id|fp_regs
suffix:semicolon
multiline_comment|/* These per registers are in here so that gdb can modify them itself&n; * as there is no &quot;official&quot; ptrace interface for hardware watchpoints.&n; * this is the way intel does it&n; */
DECL|member|per_info
id|per_struct
id|per_info
suffix:semicolon
)brace
suffix:semicolon
DECL|typedef|user_regs_struct
r_typedef
r_struct
id|user_regs_struct
id|user_regs_struct
suffix:semicolon
DECL|typedef|pt_regs
r_typedef
r_struct
id|pt_regs
id|pt_regs
suffix:semicolon
macro_line|#ifdef __KERNEL__
DECL|macro|user_mode
mdefine_line|#define user_mode(regs) (((regs)-&gt;psw.mask &amp; PSW_PROBLEM_STATE) != 0)
DECL|macro|instruction_pointer
mdefine_line|#define instruction_pointer(regs) ((regs)-&gt;psw.addr)
r_struct
id|thread_struct
suffix:semicolon
r_extern
r_int
id|sprintf_regs
c_func
(paren
r_int
id|line
comma
r_char
op_star
id|buff
comma
r_struct
id|task_struct
op_star
id|task
comma
r_struct
id|thread_struct
op_star
id|tss
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_void
id|show_regs
c_func
(paren
r_struct
id|task_struct
op_star
id|task
comma
r_struct
id|thread_struct
op_star
id|tss
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
macro_line|#endif
DECL|macro|FIX_PSW
mdefine_line|#define FIX_PSW(addr) ((unsigned long)(addr)|0x80000000UL)
DECL|macro|MULT_PROCPTR_TYPES
mdefine_line|#define MULT_PROCPTR_TYPES    ((CONFIG_BINFMT_ELF)&amp;&amp;(CONFIG_BINFMT_TOC))
r_typedef
r_struct
(brace
DECL|member|addr
r_int
id|addr
suffix:semicolon
DECL|member|toc
r_int
id|toc
suffix:semicolon
DECL|typedef|routine_descriptor
)brace
id|routine_descriptor
suffix:semicolon
r_extern
r_void
id|fix_routine_descriptor_regs
c_func
(paren
id|routine_descriptor
op_star
id|rdes
comma
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
id|__inline__
r_void
DECL|function|fix_routine_descriptor_regs
id|fix_routine_descriptor_regs
c_func
(paren
id|routine_descriptor
op_star
id|rdes
comma
id|pt_regs
op_star
id|regs
)paren
(brace
id|regs-&gt;psw.addr
op_assign
id|FIX_PSW
c_func
(paren
id|rdes-&gt;addr
)paren
suffix:semicolon
id|regs-&gt;gprs
(braket
l_int|12
)braket
op_assign
id|rdes-&gt;toc
suffix:semicolon
)brace
multiline_comment|/*&n; * Compiler optimisation should save this stuff from being non optimal&n; * &amp; remove uneccessary code ( isnt gcc great DJB. )&n; */
multiline_comment|/*I&squot;m just using this an indicator of what binformat we are using&n; * (DJB) N.B. this needs to stay a macro unfortunately as I am otherwise&n; * dereferencing incomplete pointer types in with load_toc_binary&n; */
macro_line|#if MULT_PROCPTR_TYPES
DECL|macro|uses_routine_descriptors
mdefine_line|#define uses_routine_descriptors() &bslash;&n;(current-&gt;binfmt-&gt;load_binary==load_toc_binary)
macro_line|#else
macro_line|#if CONFIG_BINFMT_TOC
DECL|macro|uses_routine_descriptors
mdefine_line|#define uses_routine_descriptors() 1
macro_line|#else
DECL|macro|uses_routine_descriptors
mdefine_line|#define uses_routine_descriptors() 0
macro_line|#endif
macro_line|#endif
DECL|macro|pt_off
mdefine_line|#define pt_off(ptreg)   offsetof(user_regs_struct,ptreg)
r_enum
(brace
DECL|enumerator|PT_PSWMASK
id|PT_PSWMASK
op_assign
id|pt_off
c_func
(paren
id|psw.mask
)paren
comma
DECL|enumerator|PT_PSWADDR
id|PT_PSWADDR
op_assign
id|pt_off
c_func
(paren
id|psw.addr
)paren
comma
DECL|enumerator|PT_GPR0
id|PT_GPR0
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|0
)braket
)paren
comma
DECL|enumerator|PT_GPR1
id|PT_GPR1
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|1
)braket
)paren
comma
DECL|enumerator|PT_GPR2
id|PT_GPR2
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|2
)braket
)paren
comma
DECL|enumerator|PT_GPR3
id|PT_GPR3
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|3
)braket
)paren
comma
DECL|enumerator|PT_GPR4
id|PT_GPR4
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|4
)braket
)paren
comma
DECL|enumerator|PT_GPR5
id|PT_GPR5
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|5
)braket
)paren
comma
DECL|enumerator|PT_GPR6
id|PT_GPR6
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|6
)braket
)paren
comma
DECL|enumerator|PT_GPR7
id|PT_GPR7
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|7
)braket
)paren
comma
DECL|enumerator|PT_GPR8
id|PT_GPR8
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|8
)braket
)paren
comma
DECL|enumerator|PT_GPR9
id|PT_GPR9
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|9
)braket
)paren
comma
DECL|enumerator|PT_GPR10
id|PT_GPR10
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|10
)braket
)paren
comma
DECL|enumerator|PT_GPR11
id|PT_GPR11
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|11
)braket
)paren
comma
DECL|enumerator|PT_GPR12
id|PT_GPR12
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|12
)braket
)paren
comma
DECL|enumerator|PT_GPR13
id|PT_GPR13
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|13
)braket
)paren
comma
DECL|enumerator|PT_GPR14
id|PT_GPR14
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|14
)braket
)paren
comma
DECL|enumerator|PT_GPR15
id|PT_GPR15
op_assign
id|pt_off
c_func
(paren
id|gprs
(braket
l_int|15
)braket
)paren
comma
DECL|enumerator|PT_ACR0
id|PT_ACR0
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|0
)braket
)paren
comma
DECL|enumerator|PT_ACR1
id|PT_ACR1
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|1
)braket
)paren
comma
DECL|enumerator|PT_ACR2
id|PT_ACR2
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|2
)braket
)paren
comma
DECL|enumerator|PT_ACR3
id|PT_ACR3
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|3
)braket
)paren
comma
DECL|enumerator|PT_ACR4
id|PT_ACR4
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|4
)braket
)paren
comma
DECL|enumerator|PT_ACR5
id|PT_ACR5
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|5
)braket
)paren
comma
DECL|enumerator|PT_ACR6
id|PT_ACR6
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|6
)braket
)paren
comma
DECL|enumerator|PT_ACR7
id|PT_ACR7
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|7
)braket
)paren
comma
DECL|enumerator|PT_ACR8
id|PT_ACR8
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|8
)braket
)paren
comma
DECL|enumerator|PT_ACR9
id|PT_ACR9
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|9
)braket
)paren
comma
DECL|enumerator|PT_ACR10
id|PT_ACR10
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|10
)braket
)paren
comma
DECL|enumerator|PT_ACR11
id|PT_ACR11
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|11
)braket
)paren
comma
DECL|enumerator|PT_ACR12
id|PT_ACR12
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|12
)braket
)paren
comma
DECL|enumerator|PT_ACR13
id|PT_ACR13
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|13
)braket
)paren
comma
DECL|enumerator|PT_ACR14
id|PT_ACR14
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|14
)braket
)paren
comma
DECL|enumerator|PT_ACR15
id|PT_ACR15
op_assign
id|pt_off
c_func
(paren
id|acrs
(braket
l_int|15
)braket
)paren
comma
DECL|enumerator|PT_ORIGGPR2
id|PT_ORIGGPR2
op_assign
id|pt_off
c_func
(paren
id|orig_gpr2
)paren
comma
DECL|enumerator|PT_FPC
id|PT_FPC
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fpc
)paren
comma
multiline_comment|/*&n; *      A nasty fact of life that the ptrace api&n; *      only supports passing of longs.&n; */
DECL|enumerator|PT_FPR0_HI
id|PT_FPR0_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|0
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR0_LO
id|PT_FPR0_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|0
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR1_HI
id|PT_FPR1_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|1
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR1_LO
id|PT_FPR1_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|1
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR2_HI
id|PT_FPR2_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|2
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR2_LO
id|PT_FPR2_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|2
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR3_HI
id|PT_FPR3_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|3
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR3_LO
id|PT_FPR3_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|3
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR4_HI
id|PT_FPR4_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|4
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR4_LO
id|PT_FPR4_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|4
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR5_HI
id|PT_FPR5_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|5
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR5_LO
id|PT_FPR5_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|5
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR6_HI
id|PT_FPR6_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|6
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR6_LO
id|PT_FPR6_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|6
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR7_HI
id|PT_FPR7_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|7
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR7_LO
id|PT_FPR7_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|7
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR8_HI
id|PT_FPR8_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|8
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR8_LO
id|PT_FPR8_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|8
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR9_HI
id|PT_FPR9_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|9
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR9_LO
id|PT_FPR9_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|9
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR10_HI
id|PT_FPR10_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|10
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR10_LO
id|PT_FPR10_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|10
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR11_HI
id|PT_FPR11_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|11
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR11_LO
id|PT_FPR11_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|11
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR12_HI
id|PT_FPR12_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|12
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR12_LO
id|PT_FPR12_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|12
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR13_HI
id|PT_FPR13_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|13
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR13_LO
id|PT_FPR13_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|13
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR14_HI
id|PT_FPR14_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|14
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR14_LO
id|PT_FPR14_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|14
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_FPR15_HI
id|PT_FPR15_HI
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|15
)braket
dot
id|fp.hi
)paren
comma
DECL|enumerator|PT_FPR15_LO
id|PT_FPR15_LO
op_assign
id|pt_off
c_func
(paren
id|fp_regs.fprs
(braket
l_int|15
)braket
dot
id|fp.lo
)paren
comma
DECL|enumerator|PT_CR_9
id|PT_CR_9
op_assign
id|pt_off
c_func
(paren
id|per_info.control_regs.words.cr
(braket
l_int|0
)braket
)paren
comma
DECL|enumerator|PT_CR_10
id|PT_CR_10
op_assign
id|pt_off
c_func
(paren
id|per_info.control_regs.words.cr
(braket
l_int|1
)braket
)paren
comma
DECL|enumerator|PT_CR_11
id|PT_CR_11
op_assign
id|pt_off
c_func
(paren
id|per_info.control_regs.words.cr
(braket
l_int|2
)braket
)paren
comma
DECL|enumerator|PT_LASTOFF
id|PT_LASTOFF
op_assign
id|PT_CR_11
comma
DECL|enumerator|PT_ENDREGS
id|PT_ENDREGS
op_assign
m_offsetof
(paren
id|user_regs_struct
comma
id|per_info.lowcore.words.perc_atmid
)paren
)brace
suffix:semicolon
DECL|macro|PTRACE_AREA
mdefine_line|#define PTRACE_AREA &bslash;&n;__u32 len;          &bslash;&n;addr_t  kernel_addr; &bslash;&n;addr_t  process_addr;
r_typedef
r_struct
(brace
id|PTRACE_AREA
DECL|typedef|ptrace_area
)brace
id|ptrace_area
suffix:semicolon
multiline_comment|/*&n;  390 specific non posix ptrace requests&n;  I chose unusual values so they are unlikely to clash with future ptrace definitions.&n; */
DECL|macro|PTRACE_PEEKUSR_AREA
mdefine_line|#define PTRACE_PEEKUSR_AREA           0x5000
DECL|macro|PTRACE_POKEUSR_AREA
mdefine_line|#define PTRACE_POKEUSR_AREA           0x5001
DECL|macro|PTRACE_PEEKTEXT_AREA
mdefine_line|#define PTRACE_PEEKTEXT_AREA&t;      0x5002
DECL|macro|PTRACE_PEEKDATA_AREA
mdefine_line|#define PTRACE_PEEKDATA_AREA&t;      0x5003
DECL|macro|PTRACE_POKETEXT_AREA
mdefine_line|#define PTRACE_POKETEXT_AREA&t;      0x5004
DECL|macro|PTRACE_POKEDATA_AREA
mdefine_line|#define PTRACE_POKEDATA_AREA &t;      0x5005
multiline_comment|/* PT_PROT definition is loosely based on hppa bsd definition in gdb/hppab-nat.c */
DECL|macro|PTRACE_PROT
mdefine_line|#define PTRACE_PROT                       21
r_typedef
r_enum
(brace
DECL|enumerator|ptprot_set_access_watchpoint
id|ptprot_set_access_watchpoint
comma
DECL|enumerator|ptprot_set_write_watchpoint
id|ptprot_set_write_watchpoint
comma
DECL|enumerator|ptprot_disable_watchpoint
id|ptprot_disable_watchpoint
DECL|typedef|ptprot_flags
)brace
id|ptprot_flags
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|lowaddr
id|addr_t
id|lowaddr
suffix:semicolon
DECL|member|hiaddr
id|addr_t
id|hiaddr
suffix:semicolon
DECL|member|prot
id|ptprot_flags
id|prot
suffix:semicolon
DECL|typedef|ptprot_area
)brace
id|ptprot_area
suffix:semicolon
macro_line|#endif
eof
