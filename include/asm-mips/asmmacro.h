multiline_comment|/*&n; * asmmacro.h: Assembler macros to make things easier to read.&n; *&n; * Copyright (C) 1996 David S. Miller (dm@engr.sgi.com)&n; * Copyright (C) 1998 Ralf Baechle&n; *&n; * $Id: asmmacro.h,v 1.3 1998/03/27 04:47:58 ralf Exp $&n; */
macro_line|#ifndef __MIPS_ASMMACRO_H
DECL|macro|__MIPS_ASMMACRO_H
mdefine_line|#define __MIPS_ASMMACRO_H
macro_line|#include &lt;asm/offset.h&gt;
DECL|macro|FPU_SAVE_DOUBLE
mdefine_line|#define FPU_SAVE_DOUBLE(thread, tmp) &bslash;&n;&t;cfc1&t;tmp,  fcr31;                    &bslash;&n;&t;sdc1&t;$f0,  (THREAD_FPU + 0x000)(thread); &bslash;&n;&t;sdc1&t;$f2,  (THREAD_FPU + 0x008)(thread); &bslash;&n;&t;sdc1&t;$f4,  (THREAD_FPU + 0x010)(thread); &bslash;&n;&t;sdc1&t;$f6,  (THREAD_FPU + 0x018)(thread); &bslash;&n;&t;sdc1&t;$f8,  (THREAD_FPU + 0x020)(thread); &bslash;&n;&t;sdc1&t;$f10, (THREAD_FPU + 0x028)(thread); &bslash;&n;&t;sdc1&t;$f12, (THREAD_FPU + 0x030)(thread); &bslash;&n;&t;sdc1&t;$f14, (THREAD_FPU + 0x038)(thread); &bslash;&n;&t;sdc1&t;$f16, (THREAD_FPU + 0x040)(thread); &bslash;&n;&t;sdc1&t;$f18, (THREAD_FPU + 0x048)(thread); &bslash;&n;&t;sdc1&t;$f20, (THREAD_FPU + 0x050)(thread); &bslash;&n;&t;sdc1&t;$f22, (THREAD_FPU + 0x058)(thread); &bslash;&n;&t;sdc1&t;$f24, (THREAD_FPU + 0x060)(thread); &bslash;&n;&t;sdc1&t;$f26, (THREAD_FPU + 0x068)(thread); &bslash;&n;&t;sdc1&t;$f28, (THREAD_FPU + 0x070)(thread); &bslash;&n;&t;sdc1&t;$f30, (THREAD_FPU + 0x078)(thread); &bslash;&n;&t;sw&t;tmp,  (THREAD_FPU + 0x080)(thread)
DECL|macro|FPU_SAVE_SINGLE
mdefine_line|#define FPU_SAVE_SINGLE(thread,tmp)                 &bslash;&n;&t;cfc1&t;tmp,  fcr31;                        &bslash;&n;&t;swc1&t;$f0,  (THREAD_FPU + 0x000)(thread); &bslash;&n;&t;swc1&t;$f1,  (THREAD_FPU + 0x004)(thread); &bslash;&n;&t;swc1&t;$f2,  (THREAD_FPU + 0x008)(thread); &bslash;&n;&t;swc1&t;$f3,  (THREAD_FPU + 0x00c)(thread); &bslash;&n;&t;swc1&t;$f4,  (THREAD_FPU + 0x010)(thread); &bslash;&n;&t;swc1&t;$f5,  (THREAD_FPU + 0x014)(thread); &bslash;&n;&t;swc1&t;$f6,  (THREAD_FPU + 0x018)(thread); &bslash;&n;&t;swc1&t;$f7,  (THREAD_FPU + 0x01c)(thread); &bslash;&n;&t;swc1&t;$f8,  (THREAD_FPU + 0x020)(thread); &bslash;&n;&t;swc1&t;$f9,  (THREAD_FPU + 0x024)(thread); &bslash;&n;&t;swc1&t;$f10, (THREAD_FPU + 0x028)(thread); &bslash;&n;&t;swc1&t;$f11, (THREAD_FPU + 0x02c)(thread); &bslash;&n;&t;swc1&t;$f12, (THREAD_FPU + 0x030)(thread); &bslash;&n;&t;swc1&t;$f13, (THREAD_FPU + 0x034)(thread); &bslash;&n;&t;swc1&t;$f14, (THREAD_FPU + 0x038)(thread); &bslash;&n;&t;swc1&t;$f15, (THREAD_FPU + 0x03c)(thread); &bslash;&n;&t;swc1&t;$f16, (THREAD_FPU + 0x040)(thread); &bslash;&n;&t;swc1&t;$f17, (THREAD_FPU + 0x044)(thread); &bslash;&n;&t;swc1&t;$f18, (THREAD_FPU + 0x048)(thread); &bslash;&n;&t;swc1&t;$f19, (THREAD_FPU + 0x04c)(thread); &bslash;&n;&t;swc1&t;$f20, (THREAD_FPU + 0x050)(thread); &bslash;&n;&t;swc1&t;$f21, (THREAD_FPU + 0x054)(thread); &bslash;&n;&t;swc1&t;$f22, (THREAD_FPU + 0x058)(thread); &bslash;&n;&t;swc1&t;$f23, (THREAD_FPU + 0x05c)(thread); &bslash;&n;&t;swc1&t;$f24, (THREAD_FPU + 0x060)(thread); &bslash;&n;&t;swc1&t;$f25, (THREAD_FPU + 0x064)(thread); &bslash;&n;&t;swc1&t;$f26, (THREAD_FPU + 0x068)(thread); &bslash;&n;&t;swc1&t;$f27, (THREAD_FPU + 0x06c)(thread); &bslash;&n;&t;swc1&t;$f28, (THREAD_FPU + 0x070)(thread); &bslash;&n;&t;swc1&t;$f29, (THREAD_FPU + 0x074)(thread); &bslash;&n;&t;swc1&t;$f30, (THREAD_FPU + 0x078)(thread); &bslash;&n;&t;swc1&t;$f31, (THREAD_FPU + 0x07c)(thread); &bslash;&n;&t;sw&t;tmp,  (THREAD_FPU + 0x080)(thread)
DECL|macro|FPU_RESTORE_DOUBLE
mdefine_line|#define FPU_RESTORE_DOUBLE(thread, tmp) &bslash;&n;&t;lw&t;tmp,  (THREAD_FPU + 0x080)(thread); &bslash;&n;&t;ldc1&t;$f0,  (THREAD_FPU + 0x000)(thread); &bslash;&n;&t;ldc1&t;$f2,  (THREAD_FPU + 0x008)(thread); &bslash;&n;&t;ldc1&t;$f4,  (THREAD_FPU + 0x010)(thread); &bslash;&n;&t;ldc1&t;$f6,  (THREAD_FPU + 0x018)(thread); &bslash;&n;&t;ldc1&t;$f8,  (THREAD_FPU + 0x020)(thread); &bslash;&n;&t;ldc1&t;$f10, (THREAD_FPU + 0x028)(thread); &bslash;&n;&t;ldc1&t;$f12, (THREAD_FPU + 0x030)(thread); &bslash;&n;&t;ldc1&t;$f14, (THREAD_FPU + 0x038)(thread); &bslash;&n;&t;ldc1&t;$f16, (THREAD_FPU + 0x040)(thread); &bslash;&n;&t;ldc1&t;$f18, (THREAD_FPU + 0x048)(thread); &bslash;&n;&t;ldc1&t;$f20, (THREAD_FPU + 0x050)(thread); &bslash;&n;&t;ldc1&t;$f22, (THREAD_FPU + 0x058)(thread); &bslash;&n;&t;ldc1&t;$f24, (THREAD_FPU + 0x060)(thread); &bslash;&n;&t;ldc1&t;$f26, (THREAD_FPU + 0x068)(thread); &bslash;&n;&t;ldc1&t;$f28, (THREAD_FPU + 0x070)(thread); &bslash;&n;&t;ldc1&t;$f30, (THREAD_FPU + 0x078)(thread); &bslash;&n;&t;ctc1&t;tmp,  fcr31
DECL|macro|FPU_RESTORE_SINGLE
mdefine_line|#define FPU_RESTORE_SINGLE(thread,tmp)              &bslash;&n;&t;lw&t;tmp,  (THREAD_FPU + 0x080)(thread); &bslash;&n;&t;lwc1&t;$f0,  (THREAD_FPU + 0x000)(thread); &bslash;&n;&t;lwc1&t;$f1,  (THREAD_FPU + 0x004)(thread); &bslash;&n;&t;lwc1&t;$f2,  (THREAD_FPU + 0x008)(thread); &bslash;&n;&t;lwc1&t;$f3,  (THREAD_FPU + 0x00c)(thread); &bslash;&n;&t;lwc1&t;$f4,  (THREAD_FPU + 0x010)(thread); &bslash;&n;&t;lwc1&t;$f5,  (THREAD_FPU + 0x014)(thread); &bslash;&n;&t;lwc1&t;$f6,  (THREAD_FPU + 0x018)(thread); &bslash;&n;&t;lwc1&t;$f7,  (THREAD_FPU + 0x01c)(thread); &bslash;&n;&t;lwc1&t;$f8,  (THREAD_FPU + 0x020)(thread); &bslash;&n;&t;lwc1&t;$f9,  (THREAD_FPU + 0x024)(thread); &bslash;&n;&t;lwc1&t;$f10, (THREAD_FPU + 0x028)(thread); &bslash;&n;&t;lwc1&t;$f11, (THREAD_FPU + 0x02c)(thread); &bslash;&n;&t;lwc1&t;$f12, (THREAD_FPU + 0x030)(thread); &bslash;&n;&t;lwc1&t;$f13, (THREAD_FPU + 0x034)(thread); &bslash;&n;&t;lwc1&t;$f14, (THREAD_FPU + 0x038)(thread); &bslash;&n;&t;lwc1&t;$f15, (THREAD_FPU + 0x03c)(thread); &bslash;&n;&t;lwc1&t;$f16, (THREAD_FPU + 0x040)(thread); &bslash;&n;&t;lwc1&t;$f17, (THREAD_FPU + 0x044)(thread); &bslash;&n;&t;lwc1&t;$f18, (THREAD_FPU + 0x048)(thread); &bslash;&n;&t;lwc1&t;$f19, (THREAD_FPU + 0x04c)(thread); &bslash;&n;&t;lwc1&t;$f20, (THREAD_FPU + 0x050)(thread); &bslash;&n;&t;lwc1&t;$f21, (THREAD_FPU + 0x054)(thread); &bslash;&n;&t;lwc1&t;$f22, (THREAD_FPU + 0x058)(thread); &bslash;&n;&t;lwc1&t;$f23, (THREAD_FPU + 0x05c)(thread); &bslash;&n;&t;lwc1&t;$f24, (THREAD_FPU + 0x060)(thread); &bslash;&n;&t;lwc1&t;$f25, (THREAD_FPU + 0x064)(thread); &bslash;&n;&t;lwc1&t;$f26, (THREAD_FPU + 0x068)(thread); &bslash;&n;&t;lwc1&t;$f27, (THREAD_FPU + 0x06c)(thread); &bslash;&n;&t;lwc1&t;$f28, (THREAD_FPU + 0x070)(thread); &bslash;&n;&t;lwc1&t;$f29, (THREAD_FPU + 0x074)(thread); &bslash;&n;&t;lwc1&t;$f30, (THREAD_FPU + 0x078)(thread); &bslash;&n;&t;lwc1&t;$f31, (THREAD_FPU + 0x07c)(thread); &bslash;&n;&t;ctc1&t;tmp,  fcr31
DECL|macro|CPU_SAVE_NONSCRATCH
mdefine_line|#define CPU_SAVE_NONSCRATCH(thread) &bslash;&n;&t;sw&t;s0, THREAD_REG16(thread); &bslash;&n;&t;sw&t;s1, THREAD_REG17(thread); &bslash;&n;&t;sw&t;s2, THREAD_REG18(thread); &bslash;&n;&t;sw&t;s3, THREAD_REG19(thread); &bslash;&n;&t;sw&t;s4, THREAD_REG20(thread); &bslash;&n;&t;sw&t;s5, THREAD_REG21(thread); &bslash;&n;&t;sw&t;s6, THREAD_REG22(thread); &bslash;&n;&t;sw&t;s7, THREAD_REG23(thread); &bslash;&n;&t;sw&t;sp, THREAD_REG29(thread); &bslash;&n;&t;sw&t;fp, THREAD_REG30(thread)
DECL|macro|CPU_RESTORE_NONSCRATCH
mdefine_line|#define CPU_RESTORE_NONSCRATCH(thread) &bslash;&n;&t;lw&t;s0, THREAD_REG16(thread); &bslash;&n;&t;lw&t;s1, THREAD_REG17(thread); &bslash;&n;&t;lw&t;s2, THREAD_REG18(thread); &bslash;&n;&t;lw&t;s3, THREAD_REG19(thread); &bslash;&n;&t;lw&t;s4, THREAD_REG20(thread); &bslash;&n;&t;lw&t;s5, THREAD_REG21(thread); &bslash;&n;&t;lw&t;s6, THREAD_REG22(thread); &bslash;&n;&t;lw&t;s7, THREAD_REG23(thread); &bslash;&n;&t;lw&t;sp, THREAD_REG29(thread); &bslash;&n;&t;lw&t;fp, THREAD_REG30(thread); &bslash;&n;&t;lw&t;ra, THREAD_REG31(thread)
macro_line|#endif /* !(__MIPS_ASMMACRO_H) */
eof
