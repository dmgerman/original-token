multiline_comment|/*&n; * include/asm-mips/vector.h&n; *&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; *&n; * Copyright (C) 1995, 1996, 1997 by Ralf Baechle&n; */
macro_line|#ifndef __ASM_MIPS_VECTOR_H
DECL|macro|__ASM_MIPS_VECTOR_H
mdefine_line|#define __ASM_MIPS_VECTOR_H
multiline_comment|/*&n; * These vector structures are not very good to maintain - they&squot;d probably&n; * grow to at leat three times the size - so I&squot;ll remove &squot;em and replace&n; * the with lots of ordinary variables.&n; */
r_extern
r_void
(paren
op_star
id|irq_setup
)paren
(paren
r_void
)paren
suffix:semicolon
r_extern
id|asmlinkage
r_void
(paren
op_star
id|fd_cacheflush
)paren
(paren
r_const
r_void
op_star
id|addr
comma
r_int
id|size
)paren
suffix:semicolon
multiline_comment|/*&n; * This structure defines how to access various features of&n; * different machine types and how to access them.&n; */
DECL|struct|feature
r_struct
id|feature
(brace
multiline_comment|/*&n;&t; * How to access the floppy controller&squot;s ports.&n;&t; */
DECL|member|fd_inb
r_int
r_char
(paren
op_star
id|fd_inb
)paren
(paren
r_int
r_int
id|port
)paren
suffix:semicolon
DECL|member|fd_outb
r_void
(paren
op_star
id|fd_outb
)paren
(paren
r_int
r_char
id|value
comma
r_int
r_int
id|port
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * How to access the floppy DMA functions.&n;&t; */
DECL|member|fd_enable_dma
r_void
(paren
op_star
id|fd_enable_dma
)paren
(paren
r_int
id|channel
)paren
suffix:semicolon
DECL|member|fd_disable_dma
r_void
(paren
op_star
id|fd_disable_dma
)paren
(paren
r_int
id|channel
)paren
suffix:semicolon
DECL|member|fd_request_dma
r_int
(paren
op_star
id|fd_request_dma
)paren
(paren
r_int
id|channel
)paren
suffix:semicolon
DECL|member|fd_free_dma
r_void
(paren
op_star
id|fd_free_dma
)paren
(paren
r_int
id|channel
)paren
suffix:semicolon
DECL|member|fd_clear_dma_ff
r_void
(paren
op_star
id|fd_clear_dma_ff
)paren
(paren
r_int
id|channel
)paren
suffix:semicolon
DECL|member|fd_set_dma_mode
r_void
(paren
op_star
id|fd_set_dma_mode
)paren
(paren
r_int
id|channel
comma
r_char
id|mode
)paren
suffix:semicolon
DECL|member|fd_set_dma_addr
r_void
(paren
op_star
id|fd_set_dma_addr
)paren
(paren
r_int
id|channel
comma
r_int
r_int
id|a
)paren
suffix:semicolon
DECL|member|fd_set_dma_count
r_void
(paren
op_star
id|fd_set_dma_count
)paren
(paren
r_int
id|channel
comma
r_int
r_int
id|count
)paren
suffix:semicolon
DECL|member|fd_get_dma_residue
r_int
(paren
op_star
id|fd_get_dma_residue
)paren
(paren
r_int
id|channel
)paren
suffix:semicolon
DECL|member|fd_enable_irq
r_void
(paren
op_star
id|fd_enable_irq
)paren
(paren
r_int
id|irq
)paren
suffix:semicolon
DECL|member|fd_disable_irq
r_void
(paren
op_star
id|fd_disable_irq
)paren
(paren
r_int
id|irq
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * How to access the RTC register of the DS1287?&n;&t; */
DECL|member|rtc_read_data
r_int
r_char
(paren
op_star
id|rtc_read_data
)paren
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
DECL|member|rtc_write_data
r_void
(paren
op_star
id|rtc_write_data
)paren
(paren
r_int
r_char
id|data
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|feature
op_star
id|feature
suffix:semicolon
macro_line|#endif /* __ASM_MIPS_VECTOR_H */
eof
