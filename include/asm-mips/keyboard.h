multiline_comment|/*&n; * CPU specific parts of the keyboard driver&n; *&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; *&n; * This file is a mess.  Put on your peril sensitive glasses.&n; *&n; * $Id: keyboard.h,v 1.4 1997/06/16 00:31:46 ralf Exp $&n; */
macro_line|#ifndef __ASM_MIPS_KEYBOARD_H
DECL|macro|__ASM_MIPS_KEYBOARD_H
mdefine_line|#define __ASM_MIPS_KEYBOARD_H
macro_line|#ifdef __KERNEL__
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/delay.h&gt;
macro_line|#include &lt;linux/ioport.h&gt;
r_extern
r_int
id|pckbd_setkeycode
c_func
(paren
r_int
r_int
id|scancode
comma
r_int
r_int
id|keycode
)paren
suffix:semicolon
r_extern
r_int
id|pckbd_getkeycode
c_func
(paren
r_int
r_int
id|scancode
)paren
suffix:semicolon
r_extern
r_int
id|pckbd_pretranslate
c_func
(paren
r_int
r_char
id|scancode
comma
r_char
id|raw_mode
)paren
suffix:semicolon
r_extern
r_int
id|pckbd_translate
c_func
(paren
r_int
r_char
id|scancode
comma
r_int
r_char
op_star
id|keycode
comma
r_char
id|raw_mode
)paren
suffix:semicolon
r_extern
r_char
id|pckbd_unexpected_up
c_func
(paren
r_int
r_char
id|keycode
)paren
suffix:semicolon
r_extern
r_void
id|pckbd_leds
c_func
(paren
r_int
r_char
id|leds
)paren
suffix:semicolon
r_extern
r_void
id|pckbd_init_hw
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|macro|kbd_setkeycode
mdefine_line|#define kbd_setkeycode&t;&t;pckbd_setkeycode
DECL|macro|kbd_getkeycode
mdefine_line|#define kbd_getkeycode&t;&t;pckbd_getkeycode
DECL|macro|kbd_pretranslate
mdefine_line|#define kbd_pretranslate&t;pckbd_pretranslate
DECL|macro|kbd_translate
mdefine_line|#define kbd_translate&t;&t;pckbd_translate
DECL|macro|kbd_unexpected_up
mdefine_line|#define kbd_unexpected_up&t;pckbd_unexpected_up
DECL|macro|kbd_leds
mdefine_line|#define kbd_leds&t;&t;pckbd_leds
DECL|macro|kbd_init_hw
mdefine_line|#define kbd_init_hw&t;&t;pckbd_init_hw
multiline_comment|/*&n; * The default IO slowdown is doing &squot;inb()&squot;s from 0x61, which should be&n; * safe. But as that is the keyboard controller chip address, we do our&n; * slowdowns here by doing short jumps: the keyboard controller should&n; * be able to keep up&n; */
DECL|macro|REALLY_SLOW_IO
mdefine_line|#define REALLY_SLOW_IO
DECL|macro|SLOW_IO_BY_JUMPING
mdefine_line|#define SLOW_IO_BY_JUMPING
macro_line|#include &lt;asm/io.h&gt;
multiline_comment|/*&n; * keyboard controller registers&n; */
DECL|macro|KBD_STATUS_REG
mdefine_line|#define KBD_STATUS_REG      (unsigned int) 0x64
DECL|macro|KBD_CNTL_REG
mdefine_line|#define KBD_CNTL_REG        (unsigned int) 0x64
DECL|macro|KBD_DATA_REG
mdefine_line|#define KBD_DATA_REG        (unsigned int) 0x60
macro_line|#ifdef CONFIG_SGI
macro_line|#include &lt;asm/segment.h&gt;
macro_line|#include &lt;asm/sgihpc.h&gt;
macro_line|#endif
macro_line|#include &lt;asm/bootinfo.h&gt;
macro_line|#include &lt;asm/jazz.h&gt;
macro_line|#ifdef CONFIG_SGI
DECL|macro|KEYBOARD_IRQ
mdefine_line|#define KEYBOARD_IRQ 20
macro_line|#else
multiline_comment|/* Not true for Jazz machines, we cheat a bit for &squot;em. */
DECL|macro|KEYBOARD_IRQ
mdefine_line|#define KEYBOARD_IRQ 1
macro_line|#endif
macro_line|#ifdef CONFIG_SGI
DECL|macro|DISABLE_KBD_DURING_INTERRUPTS
mdefine_line|#define DISABLE_KBD_DURING_INTERRUPTS 1
macro_line|#else
DECL|macro|DISABLE_KBD_DURING_INTERRUPTS
mdefine_line|#define DISABLE_KBD_DURING_INTERRUPTS 0
macro_line|#endif
macro_line|#ifndef CONFIG_SGI
DECL|macro|KBD_REPORT_ERR
mdefine_line|#define KBD_REPORT_ERR
macro_line|#endif
DECL|macro|KBD_REPORT_UNKN
mdefine_line|#define KBD_REPORT_UNKN
multiline_comment|/* #define KBD_IS_FOCUS_9000 */
DECL|variable|kbd_inb_p
r_int
(paren
op_star
id|kbd_inb_p
)paren
(paren
r_int
r_int
id|port
)paren
suffix:semicolon
DECL|variable|kbd_inb
r_int
(paren
op_star
id|kbd_inb
)paren
(paren
r_int
r_int
id|port
)paren
suffix:semicolon
DECL|variable|kbd_outb_p
r_void
(paren
op_star
id|kbd_outb_p
)paren
(paren
r_int
r_char
id|data
comma
r_int
r_int
id|port
)paren
suffix:semicolon
DECL|variable|kbd_outb
r_void
(paren
op_star
id|kbd_outb
)paren
(paren
r_int
r_char
id|data
comma
r_int
r_int
id|port
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_MIPS_JAZZ
DECL|macro|INIT_KBD
mdefine_line|#define INIT_KBD&t;/* full initialization for the keyboard controller. */
DECL|variable|jazz_kh
r_static
r_volatile
id|keyboard_hardware
op_star
id|jazz_kh
suffix:semicolon
r_static
r_int
DECL|function|jazz_kbd_inb_p
id|jazz_kbd_inb_p
c_func
(paren
r_int
r_int
id|port
)paren
(brace
r_int
id|result
suffix:semicolon
r_if
c_cond
(paren
id|port
op_eq
id|KBD_DATA_REG
)paren
(brace
id|result
op_assign
id|jazz_kh-&gt;data
suffix:semicolon
)brace
r_else
multiline_comment|/* Must be KBD_STATUS_REG */
id|result
op_assign
id|jazz_kh-&gt;command
suffix:semicolon
id|inb
c_func
(paren
l_int|0x80
)paren
suffix:semicolon
r_return
id|result
suffix:semicolon
)brace
r_static
r_int
DECL|function|jazz_kbd_inb
id|jazz_kbd_inb
c_func
(paren
r_int
r_int
id|port
)paren
(brace
r_int
id|result
suffix:semicolon
r_if
c_cond
(paren
id|port
op_eq
id|KBD_DATA_REG
)paren
(brace
id|result
op_assign
id|jazz_kh-&gt;data
suffix:semicolon
)brace
r_else
multiline_comment|/* Must be KBD_STATUS_REG */
id|result
op_assign
id|jazz_kh-&gt;command
suffix:semicolon
r_return
id|result
suffix:semicolon
)brace
r_static
r_void
DECL|function|jazz_kbd_outb_p
id|jazz_kbd_outb_p
c_func
(paren
r_int
r_char
id|data
comma
r_int
r_int
id|port
)paren
(brace
r_if
c_cond
(paren
id|port
op_eq
id|KBD_DATA_REG
)paren
(brace
id|jazz_kh-&gt;data
op_assign
id|data
suffix:semicolon
)brace
r_else
r_if
c_cond
(paren
id|port
op_eq
id|KBD_CNTL_REG
)paren
(brace
id|jazz_kh-&gt;command
op_assign
id|data
suffix:semicolon
)brace
id|inb
c_func
(paren
l_int|0x80
)paren
suffix:semicolon
)brace
r_static
r_void
DECL|function|jazz_kbd_outb
id|jazz_kbd_outb
c_func
(paren
r_int
r_char
id|data
comma
r_int
r_int
id|port
)paren
(brace
r_if
c_cond
(paren
id|port
op_eq
id|KBD_DATA_REG
)paren
(brace
id|jazz_kh-&gt;data
op_assign
id|data
suffix:semicolon
)brace
r_else
r_if
c_cond
(paren
id|port
op_eq
id|KBD_CNTL_REG
)paren
(brace
id|jazz_kh-&gt;command
op_assign
id|data
suffix:semicolon
)brace
)brace
macro_line|#endif /* CONFIG_MIPS_JAZZ */
macro_line|#ifdef CONFIG_SGI
DECL|macro|INIT_KBD
mdefine_line|#define INIT_KBD&t;/* full initialization for the keyboard controller. */
DECL|variable|sgi_kh
r_static
r_volatile
r_struct
id|hpc_keyb
op_star
id|sgi_kh
suffix:semicolon
r_static
r_int
DECL|function|sgi_kbd_inb
id|sgi_kbd_inb
c_func
(paren
r_int
r_int
id|port
)paren
(brace
r_int
id|result
suffix:semicolon
r_if
c_cond
(paren
id|port
op_eq
id|KBD_DATA_REG
)paren
(brace
id|result
op_assign
id|sgi_kh-&gt;data
suffix:semicolon
)brace
r_else
multiline_comment|/* Must be KBD_STATUS_REG */
id|result
op_assign
id|sgi_kh-&gt;command
suffix:semicolon
r_return
id|result
suffix:semicolon
)brace
r_static
r_void
DECL|function|sgi_kbd_outb
id|sgi_kbd_outb
c_func
(paren
r_int
r_char
id|data
comma
r_int
r_int
id|port
)paren
(brace
r_if
c_cond
(paren
id|port
op_eq
id|KBD_DATA_REG
)paren
(brace
id|sgi_kh-&gt;data
op_assign
id|data
suffix:semicolon
)brace
r_else
r_if
c_cond
(paren
id|port
op_eq
id|KBD_CNTL_REG
)paren
(brace
id|sgi_kh-&gt;command
op_assign
id|data
suffix:semicolon
)brace
)brace
macro_line|#endif /* CONFIG_SGI */
multiline_comment|/*&n; * Most other MIPS machines access the keyboard controller via&n; * ordinary I/O ports.&n; */
r_static
r_int
DECL|function|port_kbd_inb_p
id|port_kbd_inb_p
c_func
(paren
r_int
r_int
id|port
)paren
(brace
r_return
id|inb_p
c_func
(paren
id|port
)paren
suffix:semicolon
)brace
r_static
r_int
DECL|function|port_kbd_inb
id|port_kbd_inb
c_func
(paren
r_int
r_int
id|port
)paren
(brace
r_return
id|inb
c_func
(paren
id|port
)paren
suffix:semicolon
)brace
r_static
r_void
DECL|function|port_kbd_outb_p
id|port_kbd_outb_p
c_func
(paren
r_int
r_char
id|data
comma
r_int
r_int
id|port
)paren
(brace
r_return
id|outb_p
c_func
(paren
id|data
comma
id|port
)paren
suffix:semicolon
)brace
r_static
r_void
DECL|function|port_kbd_outb
id|port_kbd_outb
c_func
(paren
r_int
r_char
id|data
comma
r_int
r_int
id|port
)paren
(brace
r_return
id|outb
c_func
(paren
id|data
comma
id|port
)paren
suffix:semicolon
)brace
DECL|function|keyboard_setup
r_extern
id|__inline__
r_void
id|keyboard_setup
c_func
(paren
r_void
)paren
(brace
macro_line|#ifdef CONFIG_MIPS_JAZZ
r_if
c_cond
(paren
id|mips_machgroup
op_eq
id|MACH_GROUP_JAZZ
)paren
(brace
id|jazz_kh
op_assign
(paren
r_void
op_star
)paren
id|JAZZ_KEYBOARD_ADDRESS
suffix:semicolon
id|kbd_inb_p
op_assign
id|jazz_kbd_inb_p
suffix:semicolon
id|kbd_inb
op_assign
id|jazz_kbd_inb
suffix:semicolon
id|kbd_outb_p
op_assign
id|jazz_kbd_outb_p
suffix:semicolon
id|kbd_outb
op_assign
id|jazz_kbd_outb
suffix:semicolon
multiline_comment|/*&n;&t;&t; * Enable keyboard interrupts.&n;&t;&t; */
op_star
(paren
(paren
r_volatile
id|u16
op_star
)paren
id|JAZZ_IO_IRQ_ENABLE
)paren
op_or_assign
id|JAZZ_IE_KEYBOARD
suffix:semicolon
id|set_cp0_status
c_func
(paren
id|IE_IRQ1
comma
id|IE_IRQ1
)paren
suffix:semicolon
)brace
r_else
macro_line|#endif
r_if
c_cond
(paren
id|mips_machgroup
op_eq
id|MACH_GROUP_ARC
op_logical_or
multiline_comment|/* this is for Deskstation */
(paren
id|mips_machgroup
op_eq
id|MACH_GROUP_SNI_RM
op_logical_and
id|mips_machtype
op_eq
id|MACH_SNI_RM200_PCI
)paren
)paren
(brace
multiline_comment|/*&n;&t;&t; * These machines address their keyboard via the normal&n;&t;&t; * port address range.&n;&t;&t; *&n;&t;&t; * Also enable Scan Mode 2.&n;&t;&t; */
id|kbd_inb_p
op_assign
id|port_kbd_inb_p
suffix:semicolon
id|kbd_inb
op_assign
id|port_kbd_inb
suffix:semicolon
id|kbd_outb_p
op_assign
id|port_kbd_outb_p
suffix:semicolon
id|kbd_outb
op_assign
id|port_kbd_outb
suffix:semicolon
id|request_region
c_func
(paren
l_int|0x60
comma
l_int|16
comma
l_string|&quot;keyboard&quot;
)paren
suffix:semicolon
)brace
macro_line|#ifdef CONFIG_SGI
r_if
c_cond
(paren
id|mips_machgroup
op_eq
id|MACH_GROUP_SGI
)paren
(brace
id|sgi_kh
op_assign
(paren
r_struct
id|hpc_keyb
op_star
)paren
(paren
id|KSEG1
op_plus
l_int|0x1fbd9800
op_plus
l_int|64
)paren
suffix:semicolon
id|kbd_inb_p
op_assign
id|sgi_kbd_inb
suffix:semicolon
id|kbd_inb
op_assign
id|sgi_kbd_inb
suffix:semicolon
id|kbd_outb_p
op_assign
id|sgi_kbd_outb
suffix:semicolon
id|kbd_outb
op_assign
id|sgi_kbd_outb
suffix:semicolon
)brace
macro_line|#endif
)brace
macro_line|#endif /* __KERNEL */
macro_line|#endif /* __ASM_MIPS_KEYBOARD_H */
eof
