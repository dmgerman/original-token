macro_line|#ifndef _ASM_IA64_PAL_H
DECL|macro|_ASM_IA64_PAL_H
mdefine_line|#define _ASM_IA64_PAL_H
multiline_comment|/*&n; * Processor Abstraction Layer definitions.&n; *&n; * This is based on Intel IA-64 Architecture Software Developer&squot;s Manual rev 1.0&n; * chapter 11 IA-64 Processor Abstraction Layer&n; *&n; * Copyright (C) 1998-2000 Hewlett-Packard Co&n; * Copyright (C) 1998-2000 David Mosberger-Tang &lt;davidm@hpl.hp.com&gt;&n; * Copyright (C) 2000 Stephane Eranian &lt;eranian@hpl.hp.com&gt;&n; * Copyright (C) 1999 VA Linux Systems&n; * Copyright (C) 1999 Walt Drummond &lt;drummond@valinux.com&gt;&n; * Copyright (C) 1999 Srinivasa Prasad Thirumalachar &lt;sprasad@sprasad.engr.sgi.com&gt;&n; *&n; * 99/10/01&t;davidm&t;Make sure we pass zero for reserved parameters.&n; * 00/03/07&t;davidm&t;Updated pal_cache_flush() to be in sync with PAL v2.6.&n; * 00/03/23     cfleck  Modified processor min-state save area to match updated PAL &amp; SAL info&n; * 00/05/24     eranian Updated to latest PAL spec, fix structures bugs, added &n; * 00/05/25&t;eranian Support for stack calls, and static physical calls&n; * 00/06/18&t;eranian Support for stacked physical calls&n; */
multiline_comment|/*&n; * Note that some of these calls use a static-register only calling&n; * convention which has nothing to do with the regular calling&n; * convention.&n; */
DECL|macro|PAL_CACHE_FLUSH
mdefine_line|#define PAL_CACHE_FLUSH&t;&t;1&t;/* flush i/d cache */
DECL|macro|PAL_CACHE_INFO
mdefine_line|#define PAL_CACHE_INFO&t;&t;2&t;/* get detailed i/d cache info */
DECL|macro|PAL_CACHE_INIT
mdefine_line|#define PAL_CACHE_INIT&t;&t;3&t;/* initialize i/d cache */
DECL|macro|PAL_CACHE_SUMMARY
mdefine_line|#define PAL_CACHE_SUMMARY&t;4&t;/* get summary of cache heirarchy */
DECL|macro|PAL_MEM_ATTRIB
mdefine_line|#define PAL_MEM_ATTRIB&t;&t;5&t;/* list supported memory attributes */
DECL|macro|PAL_PTCE_INFO
mdefine_line|#define PAL_PTCE_INFO&t;&t;6&t;/* purge TLB info */
DECL|macro|PAL_VM_INFO
mdefine_line|#define PAL_VM_INFO&t;&t;7&t;/* return supported virtual memory features */
DECL|macro|PAL_VM_SUMMARY
mdefine_line|#define PAL_VM_SUMMARY&t;&t;8&t;/* return summary on supported vm features */
DECL|macro|PAL_BUS_GET_FEATURES
mdefine_line|#define PAL_BUS_GET_FEATURES&t;9&t;/* return processor bus interface features settings */
DECL|macro|PAL_BUS_SET_FEATURES
mdefine_line|#define PAL_BUS_SET_FEATURES&t;10&t;/* set processor bus features */
DECL|macro|PAL_DEBUG_INFO
mdefine_line|#define PAL_DEBUG_INFO&t;&t;11&t;/* get number of debug registers */
DECL|macro|PAL_FIXED_ADDR
mdefine_line|#define PAL_FIXED_ADDR&t;&t;12&t;/* get fixed component of processors&squot;s directed address */
DECL|macro|PAL_FREQ_BASE
mdefine_line|#define PAL_FREQ_BASE&t;&t;13&t;/* base frequency of the platform */
DECL|macro|PAL_FREQ_RATIOS
mdefine_line|#define PAL_FREQ_RATIOS&t;&t;14&t;/* ratio of processor, bus and ITC frequency */
DECL|macro|PAL_PERF_MON_INFO
mdefine_line|#define PAL_PERF_MON_INFO&t;15&t;/* return performance monitor info */
DECL|macro|PAL_PLATFORM_ADDR
mdefine_line|#define PAL_PLATFORM_ADDR&t;16&t;/* set processor interrupt block and IO port space addr */
DECL|macro|PAL_PROC_GET_FEATURES
mdefine_line|#define PAL_PROC_GET_FEATURES&t;17&t;/* get configurable processor features &amp; settings */
DECL|macro|PAL_PROC_SET_FEATURES
mdefine_line|#define PAL_PROC_SET_FEATURES&t;18&t;/* enable/disable configurable processor features */
DECL|macro|PAL_RSE_INFO
mdefine_line|#define PAL_RSE_INFO&t;&t;19&t;/* return rse information */
DECL|macro|PAL_VERSION
mdefine_line|#define PAL_VERSION&t;&t;20&t;/* return version of PAL code */
DECL|macro|PAL_MC_CLEAR_LOG
mdefine_line|#define PAL_MC_CLEAR_LOG&t;21&t;/* clear all processor log info */
DECL|macro|PAL_MC_DRAIN
mdefine_line|#define PAL_MC_DRAIN&t;&t;22&t;/* drain operations which could result in an MCA */
DECL|macro|PAL_MC_EXPECTED
mdefine_line|#define PAL_MC_EXPECTED&t;&t;23&t;/* set/reset expected MCA indicator */
DECL|macro|PAL_MC_DYNAMIC_STATE
mdefine_line|#define PAL_MC_DYNAMIC_STATE&t;24&t;/* get processor dynamic state */
DECL|macro|PAL_MC_ERROR_INFO
mdefine_line|#define PAL_MC_ERROR_INFO&t;25&t;/* get processor MCA info and static state */
DECL|macro|PAL_MC_RESUME
mdefine_line|#define PAL_MC_RESUME&t;&t;26&t;/* Return to interrupted process */
DECL|macro|PAL_MC_REGISTER_MEM
mdefine_line|#define PAL_MC_REGISTER_MEM&t;27&t;/* Register memory for PAL to use during MCAs and inits */
DECL|macro|PAL_HALT
mdefine_line|#define PAL_HALT&t;&t;28&t;/* enter the low power HALT state */
DECL|macro|PAL_HALT_LIGHT
mdefine_line|#define PAL_HALT_LIGHT&t;&t;29&t;/* enter the low power light halt state*/
DECL|macro|PAL_COPY_INFO
mdefine_line|#define PAL_COPY_INFO&t;&t;30&t;/* returns info needed to relocate PAL */
DECL|macro|PAL_CACHE_LINE_INIT
mdefine_line|#define PAL_CACHE_LINE_INIT&t;31&t;/* init tags &amp; data of cache line */
DECL|macro|PAL_PMI_ENTRYPOINT
mdefine_line|#define PAL_PMI_ENTRYPOINT&t;32&t;/* register PMI memory entry points with the processor */
DECL|macro|PAL_ENTER_IA_32_ENV
mdefine_line|#define PAL_ENTER_IA_32_ENV&t;33&t;/* enter IA-32 system environment */
DECL|macro|PAL_VM_PAGE_SIZE
mdefine_line|#define PAL_VM_PAGE_SIZE&t;34&t;/* return vm TC and page walker page sizes */
DECL|macro|PAL_MEM_FOR_TEST
mdefine_line|#define PAL_MEM_FOR_TEST&t;37&t;/* get amount of memory needed for late processor test */
DECL|macro|PAL_CACHE_PROT_INFO
mdefine_line|#define PAL_CACHE_PROT_INFO&t;38&t;/* get i/d cache protection info */
DECL|macro|PAL_REGISTER_INFO
mdefine_line|#define PAL_REGISTER_INFO&t;39&t;/* return AR and CR register information*/
DECL|macro|PAL_SHUTDOWN
mdefine_line|#define PAL_SHUTDOWN&t;&t;40&t;/* enter processor shutdown state */
DECL|macro|PAL_PREFETCH_VISIBILITY
mdefine_line|#define PAL_PREFETCH_VISIBILITY&t;41
DECL|macro|PAL_COPY_PAL
mdefine_line|#define PAL_COPY_PAL&t;&t;256&t;/* relocate PAL procedures and PAL PMI */
DECL|macro|PAL_HALT_INFO
mdefine_line|#define PAL_HALT_INFO&t;&t;257&t;/* return the low power capabilities of processor */
DECL|macro|PAL_TEST_PROC
mdefine_line|#define PAL_TEST_PROC&t;&t;258&t;/* perform late processor self-test */
DECL|macro|PAL_CACHE_READ
mdefine_line|#define PAL_CACHE_READ&t;&t;259&t;/* read tag &amp; data of cacheline for diagnostic testing */
DECL|macro|PAL_CACHE_WRITE
mdefine_line|#define PAL_CACHE_WRITE&t;&t;260&t;/* write tag &amp; data of cacheline for diagnostic testing */
DECL|macro|PAL_VM_TR_READ
mdefine_line|#define PAL_VM_TR_READ&t;&t;261&t;/* read contents of translation register */
macro_line|#ifndef __ASSEMBLY__
macro_line|#include &lt;linux/types.h&gt;
multiline_comment|/*&n; * Data types needed to pass information into PAL procedures and&n; * interpret information returned by them.&n; */
multiline_comment|/* Return status from the PAL procedure */
DECL|typedef|pal_status_t
r_typedef
id|s64
id|pal_status_t
suffix:semicolon
DECL|macro|PAL_STATUS_SUCCESS
mdefine_line|#define PAL_STATUS_SUCCESS&t;&t;0&t;/* No error */
DECL|macro|PAL_STATUS_UNIMPLEMENTED
mdefine_line|#define PAL_STATUS_UNIMPLEMENTED&t;-1&t;/* Unimplemented procedure */
DECL|macro|PAL_STATUS_EINVAL
mdefine_line|#define PAL_STATUS_EINVAL&t;&t;-2&t;/* Invalid argument */
DECL|macro|PAL_STATUS_ERROR
mdefine_line|#define PAL_STATUS_ERROR&t;&t;-3&t;/* Error */
DECL|macro|PAL_STATUS_CACHE_INIT_FAIL
mdefine_line|#define PAL_STATUS_CACHE_INIT_FAIL&t;-4&t;/* Could not initialize the &n;&t;&t;&t;&t;&t;&t; * specified level and type of&n;&t;&t;&t;&t;&t;&t; * cache without sideeffects &n;&t;&t;&t;&t;&t;&t; * and &quot;restrict&quot; was 1&n;&t;&t;&t;&t;&t;&t; */
multiline_comment|/* Processor cache level in the heirarchy */
DECL|typedef|pal_cache_level_t
r_typedef
id|u64
id|pal_cache_level_t
suffix:semicolon
DECL|macro|PAL_CACHE_LEVEL_L0
mdefine_line|#define PAL_CACHE_LEVEL_L0&t;&t;0&t;/* L0 */
DECL|macro|PAL_CACHE_LEVEL_L1
mdefine_line|#define PAL_CACHE_LEVEL_L1&t;&t;1&t;/* L1 */
DECL|macro|PAL_CACHE_LEVEL_L2
mdefine_line|#define PAL_CACHE_LEVEL_L2&t;&t;2&t;/* L2 */
multiline_comment|/* Processor cache type at a particular level in the heirarchy */
DECL|typedef|pal_cache_type_t
r_typedef
id|u64
id|pal_cache_type_t
suffix:semicolon
DECL|macro|PAL_CACHE_TYPE_INSTRUCTION
mdefine_line|#define PAL_CACHE_TYPE_INSTRUCTION&t;1&t;/* Instruction cache */
DECL|macro|PAL_CACHE_TYPE_DATA
mdefine_line|#define PAL_CACHE_TYPE_DATA&t;&t;2&t;/* Data or unified cache */
DECL|macro|PAL_CACHE_TYPE_INSTRUCTION_DATA
mdefine_line|#define PAL_CACHE_TYPE_INSTRUCTION_DATA&t;3&t;/* Both Data &amp; Instruction */
DECL|macro|PAL_CACHE_FLUSH_INVALIDATE
mdefine_line|#define PAL_CACHE_FLUSH_INVALIDATE&t;1&t;/* Invalidate clean lines */
DECL|macro|PAL_CACHE_FLUSH_CHK_INTRS
mdefine_line|#define PAL_CACHE_FLUSH_CHK_INTRS&t;2&t;/* check for interrupts/mc while flushing */
multiline_comment|/* Processor cache line size in bytes  */
DECL|typedef|pal_cache_line_size_t
r_typedef
r_int
id|pal_cache_line_size_t
suffix:semicolon
multiline_comment|/* Processor cache line state */
DECL|typedef|pal_cache_line_state_t
r_typedef
id|u64
id|pal_cache_line_state_t
suffix:semicolon
DECL|macro|PAL_CACHE_LINE_STATE_INVALID
mdefine_line|#define PAL_CACHE_LINE_STATE_INVALID&t;0&t;/* Invalid */
DECL|macro|PAL_CACHE_LINE_STATE_SHARED
mdefine_line|#define PAL_CACHE_LINE_STATE_SHARED&t;1&t;/* Shared */
DECL|macro|PAL_CACHE_LINE_STATE_EXCLUSIVE
mdefine_line|#define PAL_CACHE_LINE_STATE_EXCLUSIVE&t;2&t;/* Exclusive */
DECL|macro|PAL_CACHE_LINE_STATE_MODIFIED
mdefine_line|#define PAL_CACHE_LINE_STATE_MODIFIED&t;3&t;/* Modified */
DECL|struct|pal_freq_ratio
r_typedef
r_struct
id|pal_freq_ratio
(brace
DECL|member|den
DECL|member|num
id|u64
id|den
suffix:colon
l_int|32
comma
id|num
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* numerator &amp; denominator */
DECL|typedef|itc_ratio
DECL|typedef|proc_ratio
)brace
id|itc_ratio
comma
id|proc_ratio
suffix:semicolon
DECL|union|pal_cache_config_info_1_s
r_typedef
r_union
id|pal_cache_config_info_1_s
(brace
r_struct
(brace
DECL|member|u
id|u64
id|u
suffix:colon
l_int|1
comma
multiline_comment|/* 0 Unified cache ? */
DECL|member|at
id|at
suffix:colon
l_int|2
comma
multiline_comment|/* 2-1 Cache mem attr*/
DECL|member|reserved
id|reserved
suffix:colon
l_int|5
comma
multiline_comment|/* 7-3 Reserved */
DECL|member|associativity
id|associativity
suffix:colon
l_int|8
comma
multiline_comment|/* 16-8 Associativity*/
DECL|member|line_size
id|line_size
suffix:colon
l_int|8
comma
multiline_comment|/* 23-17 Line size */
DECL|member|stride
id|stride
suffix:colon
l_int|8
comma
multiline_comment|/* 31-24 Stride */
DECL|member|store_latency
id|store_latency
suffix:colon
l_int|8
comma
multiline_comment|/*39-32 Store latency*/
DECL|member|load_latency
id|load_latency
suffix:colon
l_int|8
comma
multiline_comment|/* 47-40 Load latency*/
DECL|member|store_hints
id|store_hints
suffix:colon
l_int|8
comma
multiline_comment|/* 55-48 Store hints*/
DECL|member|load_hints
id|load_hints
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* 63-56 Load hints */
DECL|member|pcci1_bits
)brace
id|pcci1_bits
suffix:semicolon
DECL|member|pcci1_data
id|u64
id|pcci1_data
suffix:semicolon
DECL|typedef|pal_cache_config_info_1_t
)brace
id|pal_cache_config_info_1_t
suffix:semicolon
DECL|union|pal_cache_config_info_2_s
r_typedef
r_union
id|pal_cache_config_info_2_s
(brace
r_struct
(brace
DECL|member|cache_size
id|u64
id|cache_size
suffix:colon
l_int|32
comma
multiline_comment|/*cache size in bytes*/
DECL|member|alias_boundary
id|alias_boundary
suffix:colon
l_int|8
comma
multiline_comment|/* 39-32 aliased addr&n;&t;&t;&t;&t;&t;&t;&t; * separation for max&n;&t;&t;&t;&t;&t;&t;&t; * performance.&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|tag_ls_bit
id|tag_ls_bit
suffix:colon
l_int|8
comma
multiline_comment|/* 47-40 LSb of addr*/
DECL|member|tag_ms_bit
id|tag_ms_bit
suffix:colon
l_int|8
comma
multiline_comment|/* 55-48 MSb of addr*/
DECL|member|reserved
id|reserved
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* 63-56 Reserved */
DECL|member|pcci2_bits
)brace
id|pcci2_bits
suffix:semicolon
DECL|member|pcci2_data
id|u64
id|pcci2_data
suffix:semicolon
DECL|typedef|pal_cache_config_info_2_t
)brace
id|pal_cache_config_info_2_t
suffix:semicolon
DECL|struct|pal_cache_config_info_s
r_typedef
r_struct
id|pal_cache_config_info_s
(brace
DECL|member|pcci_status
id|pal_status_t
id|pcci_status
suffix:semicolon
DECL|member|pcci_info_1
id|pal_cache_config_info_1_t
id|pcci_info_1
suffix:semicolon
DECL|member|pcci_info_2
id|pal_cache_config_info_2_t
id|pcci_info_2
suffix:semicolon
DECL|member|pcci_reserved
id|u64
id|pcci_reserved
suffix:semicolon
DECL|typedef|pal_cache_config_info_t
)brace
id|pal_cache_config_info_t
suffix:semicolon
DECL|macro|pcci_ld_hints
mdefine_line|#define pcci_ld_hints&t;&t;pcci_info_1.pcci1_bits.load_hints
DECL|macro|pcci_st_hints
mdefine_line|#define pcci_st_hints&t;&t;pcci_info_1.pcci1_bits.store_hints
DECL|macro|pcci_ld_latency
mdefine_line|#define pcci_ld_latency&t;&t;pcci_info_1.pcci1_bits.load_latency
DECL|macro|pcci_st_latency
mdefine_line|#define pcci_st_latency&t;&t;pcci_info_1.pcci1_bits.store_latency
DECL|macro|pcci_stride
mdefine_line|#define pcci_stride&t;&t;pcci_info_1.pcci1_bits.stride
DECL|macro|pcci_line_size
mdefine_line|#define pcci_line_size&t;&t;pcci_info_1.pcci1_bits.line_size
DECL|macro|pcci_assoc
mdefine_line|#define pcci_assoc&t;&t;pcci_info_1.pcci1_bits.associativity
DECL|macro|pcci_cache_attr
mdefine_line|#define pcci_cache_attr&t;&t;pcci_info_1.pcci1_bits.at
DECL|macro|pcci_unified
mdefine_line|#define pcci_unified&t;&t;pcci_info_1.pcci1_bits.u
DECL|macro|pcci_tag_msb
mdefine_line|#define pcci_tag_msb&t;&t;pcci_info_2.pcci2_bits.tag_ms_bit
DECL|macro|pcci_tag_lsb
mdefine_line|#define pcci_tag_lsb&t;&t;pcci_info_2.pcci2_bits.tag_ls_bit
DECL|macro|pcci_alias_boundary
mdefine_line|#define pcci_alias_boundary&t;pcci_info_2.pcci2_bits.alias_boundary
DECL|macro|pcci_cache_size
mdefine_line|#define pcci_cache_size&t;&t;pcci_info_2.pcci2_bits.cache_size
multiline_comment|/* Possible values for cache attributes */
DECL|macro|PAL_CACHE_ATTR_WT
mdefine_line|#define PAL_CACHE_ATTR_WT&t;&t;0&t;/* Write through cache */
DECL|macro|PAL_CACHE_ATTR_WB
mdefine_line|#define PAL_CACHE_ATTR_WB&t;&t;1&t;/* Write back cache */
DECL|macro|PAL_CACHE_ATTR_WT_OR_WB
mdefine_line|#define PAL_CACHE_ATTR_WT_OR_WB&t;&t;2&t;/* Either write thru or write &n;&t;&t;&t;&t;&t;&t; * back depending on TLB &n;&t;&t;&t;&t;&t;&t; * memory attributes&n;&t;&t;&t;&t;&t;&t; */
multiline_comment|/* Possible values for cache hints */
DECL|macro|PAL_CACHE_HINT_TEMP_1
mdefine_line|#define PAL_CACHE_HINT_TEMP_1&t;&t;0&t;/* Temporal level 1 */
DECL|macro|PAL_CACHE_HINT_NTEMP_1
mdefine_line|#define PAL_CACHE_HINT_NTEMP_1&t;&t;1&t;/* Non-temporal level 1 */
DECL|macro|PAL_CACHE_HINT_NTEMP_ALL
mdefine_line|#define PAL_CACHE_HINT_NTEMP_ALL&t;3&t;/* Non-temporal all levels */
multiline_comment|/* Processor cache protection  information */
DECL|union|pal_cache_protection_element_u
r_typedef
r_union
id|pal_cache_protection_element_u
(brace
DECL|member|pcpi_data
id|u32
id|pcpi_data
suffix:semicolon
r_struct
(brace
DECL|member|data_bits
id|u32
id|data_bits
suffix:colon
l_int|8
comma
multiline_comment|/* # data bits covered by&n;&t;&t;&t;&t;&t;&t;      * each unit of protection&n;&t;&t;&t;&t;&t;&t;      */
DECL|member|tagprot_lsb
id|tagprot_lsb
suffix:colon
l_int|6
comma
multiline_comment|/* Least -do- */
DECL|member|tagprot_msb
id|tagprot_msb
suffix:colon
l_int|6
comma
multiline_comment|/* Most Sig. tag address&n;&t;&t;&t;&t;&t;&t;      * bit that this &n;&t;&t;&t;&t;&t;&t;      * protection covers.&n;&t;&t;&t;&t;&t;&t;      */
DECL|member|prot_bits
id|prot_bits
suffix:colon
l_int|6
comma
multiline_comment|/* # of protection bits */
DECL|member|method
id|method
suffix:colon
l_int|4
comma
multiline_comment|/* Protection method */
DECL|member|t_d
id|t_d
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Indicates which part&n;&t;&t;&t;&t;&t;&t;      * of the cache this &n;&t;&t;&t;&t;&t;&t;      * protection encoding&n;&t;&t;&t;&t;&t;&t;      * applies.&n;&t;&t;&t;&t;&t;&t;      */
DECL|member|pcp_info
)brace
id|pcp_info
suffix:semicolon
DECL|typedef|pal_cache_protection_element_t
)brace
id|pal_cache_protection_element_t
suffix:semicolon
DECL|macro|pcpi_cache_prot_part
mdefine_line|#define pcpi_cache_prot_part&t;pcp_info.t_d
DECL|macro|pcpi_prot_method
mdefine_line|#define pcpi_prot_method&t;pcp_info.method
DECL|macro|pcpi_prot_bits
mdefine_line|#define pcpi_prot_bits&t;&t;pcp_info.prot_bits
DECL|macro|pcpi_tagprot_msb
mdefine_line|#define pcpi_tagprot_msb&t;pcp_info.tagprot_msb
DECL|macro|pcpi_tagprot_lsb
mdefine_line|#define pcpi_tagprot_lsb&t;pcp_info.tagprot_lsb
DECL|macro|pcpi_data_bits
mdefine_line|#define pcpi_data_bits&t;&t;pcp_info.data_bits
multiline_comment|/* Processor cache part encodings */
DECL|macro|PAL_CACHE_PROT_PART_DATA
mdefine_line|#define PAL_CACHE_PROT_PART_DATA&t;0&t;/* Data protection  */
DECL|macro|PAL_CACHE_PROT_PART_TAG
mdefine_line|#define PAL_CACHE_PROT_PART_TAG&t;&t;1&t;/* Tag  protection */
DECL|macro|PAL_CACHE_PROT_PART_TAG_DATA
mdefine_line|#define PAL_CACHE_PROT_PART_TAG_DATA&t;2&t;/* Tag+data protection (tag is&n;&t;&t;&t;&t;&t;&t; * more significant )&n;&t;&t;&t;&t;&t;&t; */
DECL|macro|PAL_CACHE_PROT_PART_DATA_TAG
mdefine_line|#define PAL_CACHE_PROT_PART_DATA_TAG&t;3&t;/* Data+tag protection (data is&n;&t;&t;&t;&t;&t;&t; * more significant )&n;&t;&t;&t;&t;&t;&t; */ 
DECL|macro|PAL_CACHE_PROT_PART_MAX
mdefine_line|#define PAL_CACHE_PROT_PART_MAX&t;&t;6
DECL|struct|pal_cache_protection_info_s
r_typedef
r_struct
id|pal_cache_protection_info_s
(brace
DECL|member|pcpi_status
id|pal_status_t
id|pcpi_status
suffix:semicolon
DECL|member|pcp_info
id|pal_cache_protection_element_t
id|pcp_info
(braket
id|PAL_CACHE_PROT_PART_MAX
)braket
suffix:semicolon
DECL|typedef|pal_cache_protection_info_t
)brace
id|pal_cache_protection_info_t
suffix:semicolon
multiline_comment|/* Processor cache protection method encodings */
DECL|macro|PAL_CACHE_PROT_METHOD_NONE
mdefine_line|#define PAL_CACHE_PROT_METHOD_NONE&t;&t;0&t;/* No protection */
DECL|macro|PAL_CACHE_PROT_METHOD_ODD_PARITY
mdefine_line|#define PAL_CACHE_PROT_METHOD_ODD_PARITY&t;1&t;/* Odd parity */
DECL|macro|PAL_CACHE_PROT_METHOD_EVEN_PARITY
mdefine_line|#define PAL_CACHE_PROT_METHOD_EVEN_PARITY&t;2&t;/* Even parity */
DECL|macro|PAL_CACHE_PROT_METHOD_ECC
mdefine_line|#define PAL_CACHE_PROT_METHOD_ECC&t;&t;3&t;/* ECC protection */
multiline_comment|/* Processor cache line identification in the heirarchy */
DECL|union|pal_cache_line_id_u
r_typedef
r_union
id|pal_cache_line_id_u
(brace
DECL|member|pclid_data
id|u64
id|pclid_data
suffix:semicolon
r_struct
(brace
DECL|member|cache_type
id|u64
id|cache_type
suffix:colon
l_int|8
comma
multiline_comment|/* 7-0 cache type */
DECL|member|level
id|level
suffix:colon
l_int|8
comma
multiline_comment|/* 15-8 level of the&n;&t;&t;&t;&t;&t;&t;&t; * cache in the &n;&t;&t;&t;&t;&t;&t;&t; * heirarchy.&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|way
id|way
suffix:colon
l_int|8
comma
multiline_comment|/* 23-16 way in the set&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|part
id|part
suffix:colon
l_int|8
comma
multiline_comment|/* 31-24 part of the&n;&t;&t;&t;&t;&t;&t;&t; * cache &n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|reserved
id|reserved
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* 63-32 is reserved*/
DECL|member|pclid_info_read
)brace
id|pclid_info_read
suffix:semicolon
r_struct
(brace
DECL|member|cache_type
id|u64
id|cache_type
suffix:colon
l_int|8
comma
multiline_comment|/* 7-0 cache type */
DECL|member|level
id|level
suffix:colon
l_int|8
comma
multiline_comment|/* 15-8 level of the&n;&t;&t;&t;&t;&t;&t;&t; * cache in the &n;&t;&t;&t;&t;&t;&t;&t; * heirarchy.&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|way
id|way
suffix:colon
l_int|8
comma
multiline_comment|/* 23-16 way in the set&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|part
id|part
suffix:colon
l_int|8
comma
multiline_comment|/* 31-24 part of the&n;&t;&t;&t;&t;&t;&t;&t; * cache &n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|mesi
id|mesi
suffix:colon
l_int|8
comma
multiline_comment|/* 39-32 cache line &n;&t;&t;&t;&t;&t;&t;&t; * state&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|start
id|start
suffix:colon
l_int|8
comma
multiline_comment|/* 47-40 lsb of data to&n;&t;&t;&t;&t;&t;&t;&t; * invert&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|length
id|length
suffix:colon
l_int|8
comma
multiline_comment|/* 55-48 #bits to&n;&t;&t;&t;&t;&t;&t;&t; * invert &n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|trigger
id|trigger
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* 63-56 Trigger error&n;&t;&t;&t;&t;&t;&t;&t; * by doing a load &n;&t;&t;&t;&t;&t;&t;&t; * after the write &n;&t;&t;&t;&t;&t;&t;         */
DECL|member|pclid_info_write
)brace
id|pclid_info_write
suffix:semicolon
DECL|typedef|pal_cache_line_id_u_t
)brace
id|pal_cache_line_id_u_t
suffix:semicolon
DECL|macro|pclid_read_part
mdefine_line|#define pclid_read_part&t;&t;pclid_info_read.part
DECL|macro|pclid_read_way
mdefine_line|#define pclid_read_way&t;&t;pclid_info_read.way
DECL|macro|pclid_read_level
mdefine_line|#define pclid_read_level&t;pclid_info_read.level
DECL|macro|pclid_read_cache_type
mdefine_line|#define pclid_read_cache_type&t;pclid_info_read.cache_type
DECL|macro|pclid_write_trigger
mdefine_line|#define pclid_write_trigger&t;pclid_info_write.trigger
DECL|macro|pclid_write_length
mdefine_line|#define pclid_write_length&t;pclid_info_write.length
DECL|macro|pclid_write_start
mdefine_line|#define pclid_write_start&t;pclid_info_write.start
DECL|macro|pclid_write_mesi
mdefine_line|#define pclid_write_mesi&t;pclid_info_write.mesi
DECL|macro|pclid_write_part
mdefine_line|#define pclid_write_part&t;pclid_info_write.part
DECL|macro|pclid_write_way
mdefine_line|#define pclid_write_way&t;&t;pclid_info_write.way
DECL|macro|pclid_write_level
mdefine_line|#define pclid_write_level&t;pclid_info_write.level
DECL|macro|pclid_write_cache_type
mdefine_line|#define pclid_write_cache_type&t;pclid_info_write.cache_type
multiline_comment|/* Processor cache line part encodings */
DECL|macro|PAL_CACHE_LINE_ID_PART_DATA
mdefine_line|#define PAL_CACHE_LINE_ID_PART_DATA&t;&t;0&t;/* Data */
DECL|macro|PAL_CACHE_LINE_ID_PART_TAG
mdefine_line|#define PAL_CACHE_LINE_ID_PART_TAG&t;&t;1&t;/* Tag */
DECL|macro|PAL_CACHE_LINE_ID_PART_DATA_PROT
mdefine_line|#define PAL_CACHE_LINE_ID_PART_DATA_PROT&t;2&t;/* Data protection */
DECL|macro|PAL_CACHE_LINE_ID_PART_TAG_PROT
mdefine_line|#define PAL_CACHE_LINE_ID_PART_TAG_PROT&t;&t;3&t;/* Tag protection */
DECL|macro|PAL_CACHE_LINE_ID_PART_DATA_TAG_PROT
mdefine_line|#define PAL_CACHE_LINE_ID_PART_DATA_TAG_PROT&t;4&t;/* Data+tag &n;&t;&t;&t;&t;&t;&t;&t; * protection&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|struct|pal_cache_line_info_s
r_typedef
r_struct
id|pal_cache_line_info_s
(brace
DECL|member|pcli_status
id|pal_status_t
id|pcli_status
suffix:semicolon
multiline_comment|/* Return status of the read cache line &n;&t;&t;&t;&t;&t;&t;&t; * info call.&n;&t;&t;&t;&t;&t;&t;&t; */
DECL|member|pcli_data
id|u64
id|pcli_data
suffix:semicolon
multiline_comment|/* 64-bit data, tag, protection bits .. */
DECL|member|pcli_data_len
id|u64
id|pcli_data_len
suffix:semicolon
multiline_comment|/* data length in bits */
DECL|member|pcli_cache_line_state
id|pal_cache_line_state_t
id|pcli_cache_line_state
suffix:semicolon
multiline_comment|/* mesi state */
DECL|typedef|pal_cache_line_info_t
)brace
id|pal_cache_line_info_t
suffix:semicolon
multiline_comment|/* Machine Check related crap */
multiline_comment|/* Pending event status bits  */
DECL|typedef|pal_mc_pending_events_t
r_typedef
id|u64
id|pal_mc_pending_events_t
suffix:semicolon
DECL|macro|PAL_MC_PENDING_MCA
mdefine_line|#define PAL_MC_PENDING_MCA&t;&t;&t;(1 &lt;&lt; 0)
DECL|macro|PAL_MC_PENDING_INIT
mdefine_line|#define PAL_MC_PENDING_INIT&t;&t;&t;(1 &lt;&lt; 1)
multiline_comment|/* Error information type */
DECL|typedef|pal_mc_info_index_t
r_typedef
id|u64
id|pal_mc_info_index_t
suffix:semicolon
DECL|macro|PAL_MC_INFO_PROCESSOR
mdefine_line|#define PAL_MC_INFO_PROCESSOR&t;&t;&t;0&t;/* Processor */
DECL|macro|PAL_MC_INFO_CACHE_CHECK
mdefine_line|#define PAL_MC_INFO_CACHE_CHECK&t;&t;&t;1&t;/* Cache check */
DECL|macro|PAL_MC_INFO_TLB_CHECK
mdefine_line|#define PAL_MC_INFO_TLB_CHECK&t;&t;&t;2&t;/* Tlb check */
DECL|macro|PAL_MC_INFO_BUS_CHECK
mdefine_line|#define PAL_MC_INFO_BUS_CHECK&t;&t;&t;3&t;/* Bus check */
DECL|macro|PAL_MC_INFO_REQ_ADDR
mdefine_line|#define PAL_MC_INFO_REQ_ADDR&t;&t;&t;4&t;/* Requestor address */
DECL|macro|PAL_MC_INFO_RESP_ADDR
mdefine_line|#define PAL_MC_INFO_RESP_ADDR&t;&t;&t;5&t;/* Responder address */
DECL|macro|PAL_MC_INFO_TARGET_ADDR
mdefine_line|#define PAL_MC_INFO_TARGET_ADDR&t;&t;&t;6&t;/* Target address */
DECL|macro|PAL_MC_INFO_IMPL_DEP
mdefine_line|#define PAL_MC_INFO_IMPL_DEP&t;&t;&t;7&t;/* Implementation &n;&t;&t;&t;&t;&t;&t;&t; * dependent &n;&t;&t;&t;&t;&t;&t;&t; */
DECL|struct|pal_process_state_info_s
r_typedef
r_struct
id|pal_process_state_info_s
(brace
DECL|member|reserved1
id|u64
id|reserved1
suffix:colon
l_int|2
comma
DECL|member|rz
id|rz
suffix:colon
l_int|1
comma
multiline_comment|/* PAL_CHECK processor&n;&t;&t;&t;&t;&t;&t; * rendezvous &n;&t;&t;&t;&t;&t;&t; * successful.&n;&t;&t;&t;&t;&t;&t; */
DECL|member|ra
id|ra
suffix:colon
l_int|1
comma
multiline_comment|/* PAL_CHECK attempted&n;&t;&t;&t;&t;&t;&t; * a rendezvous.&n;&t;&t;&t;&t;&t;&t; */
DECL|member|me
id|me
suffix:colon
l_int|1
comma
multiline_comment|/* Distinct multiple&n;&t;&t;&t;&t;&t;&t; * errors occurred&n;&t;&t;&t;&t;&t;&t; */
DECL|member|mn
id|mn
suffix:colon
l_int|1
comma
multiline_comment|/* Min. state save &n;&t;&t;&t;&t;&t;&t; * area has been &n;&t;&t;&t;&t;&t;&t; * registered with PAL&n;&t;&t;&t;&t;&t;&t; */
DECL|member|sy
id|sy
suffix:colon
l_int|1
comma
multiline_comment|/* Storage integrity&n;&t;&t;&t;&t;&t;&t; * synched &n;&t;&t;&t;&t;&t;&t; */
DECL|member|co
id|co
suffix:colon
l_int|1
comma
multiline_comment|/* Continuable */
DECL|member|ci
id|ci
suffix:colon
l_int|1
comma
multiline_comment|/* MC isolated */
DECL|member|us
id|us
suffix:colon
l_int|1
comma
multiline_comment|/* Uncontained storage&n;&t;&t;&t;&t;&t;&t; * damage.&n;&t;&t;&t;&t;&t;&t; */
DECL|member|hd
id|hd
suffix:colon
l_int|1
comma
multiline_comment|/* Non-essential hw&n;&t;&t;&t;&t;&t;&t; * lost (no loss of&n;&t;&t;&t;&t;&t;&t; * functionality) &n;&t;&t;&t;&t;&t;&t; * causing the &n;&t;&t;&t;&t;&t;&t; * processor to run in&n;&t;&t;&t;&t;&t;&t; * degraded mode.&n;&t;&t;&t;&t;&t;&t; */
DECL|member|tl
id|tl
suffix:colon
l_int|1
comma
multiline_comment|/* 1 =&gt; MC occurred&n;&t;&t;&t;&t;&t;&t; * after an instr was&n;&t;&t;&t;&t;&t;&t; * executed but before&n;&t;&t;&t;&t;&t;&t; * the trap that &n;&t;&t;&t;&t;&t;&t; * resulted from instr&n;&t;&t;&t;&t;&t;&t; * execution was &n;&t;&t;&t;&t;&t;&t; * generated.&n;&t;&t;&t;&t;&t;&t; * (Trap Lost )&n;&t;&t;&t;&t;&t;&t; */
DECL|member|op
id|op
suffix:colon
l_int|3
comma
multiline_comment|/* Operation that&n;&t;&t;&t;&t;&t;&t; * caused the machine&n;&t;&t;&t;&t;&t;&t; * check&n;&t;&t;&t;&t;&t;&t; */
DECL|member|dy
id|dy
suffix:colon
l_int|1
comma
multiline_comment|/* Processor dynamic&n;&t;&t;&t;&t;&t;&t; * state valid &n;&t;&t;&t;&t;&t;&t; */
DECL|member|in
id|in
suffix:colon
l_int|1
comma
multiline_comment|/* 0 = MC, 1 = INIT */
DECL|member|rs
id|rs
suffix:colon
l_int|1
comma
multiline_comment|/* RSE valid */
DECL|member|cm
id|cm
suffix:colon
l_int|1
comma
multiline_comment|/* MC corrected */
DECL|member|ex
id|ex
suffix:colon
l_int|1
comma
multiline_comment|/* MC is expected */
DECL|member|cr
id|cr
suffix:colon
l_int|1
comma
multiline_comment|/* Control regs valid*/
DECL|member|pc
id|pc
suffix:colon
l_int|1
comma
multiline_comment|/* Perf cntrs valid */
DECL|member|dr
id|dr
suffix:colon
l_int|1
comma
multiline_comment|/* Debug regs valid */
DECL|member|tr
id|tr
suffix:colon
l_int|1
comma
multiline_comment|/* Translation regs&n;&t;&t;&t;&t;&t;&t; * valid&n;&t;&t;&t;&t;&t;&t; */
DECL|member|rr
id|rr
suffix:colon
l_int|1
comma
multiline_comment|/* Region regs valid */
DECL|member|ar
id|ar
suffix:colon
l_int|1
comma
multiline_comment|/* App regs valid */
DECL|member|br
id|br
suffix:colon
l_int|1
comma
multiline_comment|/* Branch regs valid */
DECL|member|pr
id|pr
suffix:colon
l_int|1
comma
multiline_comment|/* Predicate registers&n;&t;&t;&t;&t;&t;&t; * valid&n;&t;&t;&t;&t;&t;&t; */
DECL|member|fp
id|fp
suffix:colon
l_int|1
comma
multiline_comment|/* fp registers valid*/
DECL|member|b1
id|b1
suffix:colon
l_int|1
comma
multiline_comment|/* Preserved bank one&n;&t;&t;&t;&t;&t;&t; * general registers&n;&t;&t;&t;&t;&t;&t; * are valid&n;&t;&t;&t;&t;&t;&t; */
DECL|member|b0
id|b0
suffix:colon
l_int|1
comma
multiline_comment|/* Preserved bank zero&n;&t;&t;&t;&t;&t;&t; * general registers&n;&t;&t;&t;&t;&t;&t; * are valid&n;&t;&t;&t;&t;&t;&t; */
DECL|member|gr
id|gr
suffix:colon
l_int|1
comma
multiline_comment|/* General registers&n;&t;&t;&t;&t;&t;&t; * are valid &n;&t;&t;&t;&t;&t;&t; * (excl. banked regs)&n;&t;&t;&t;&t;&t;&t; */
DECL|member|dsize
id|dsize
suffix:colon
l_int|16
comma
multiline_comment|/* size of dynamic &n;&t;&t;&t;&t;&t;&t; * state returned&n;&t;&t;&t;&t;&t;&t; * by the processor&n;&t;&t;&t;&t;&t;&t; */
DECL|member|reserved2
id|reserved2
suffix:colon
l_int|12
comma
DECL|member|cc
id|cc
suffix:colon
l_int|1
comma
multiline_comment|/* Cache check */
DECL|member|tc
id|tc
suffix:colon
l_int|1
comma
multiline_comment|/* TLB check */
DECL|member|bc
id|bc
suffix:colon
l_int|1
comma
multiline_comment|/* Bus check */
DECL|member|uc
id|uc
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Unknown check */
DECL|typedef|pal_processor_state_info_t
)brace
id|pal_processor_state_info_t
suffix:semicolon
DECL|struct|pal_cache_check_info_s
r_typedef
r_struct
id|pal_cache_check_info_s
(brace
DECL|member|reserved1
id|u64
id|reserved1
suffix:colon
l_int|16
comma
DECL|member|way
id|way
suffix:colon
l_int|5
comma
multiline_comment|/* Way in which the &n;&t;&t;&t;&t;&t;&t; * error occurred &n;&t;&t;&t;&t;&t;&t; */
DECL|member|reserved2
id|reserved2
suffix:colon
l_int|1
comma
DECL|member|mc
id|mc
suffix:colon
l_int|1
comma
multiline_comment|/* Machine check corrected */
DECL|member|tv
id|tv
suffix:colon
l_int|1
comma
multiline_comment|/* Target address&n;&t;&t;&t;&t;&t;&t; * structure is valid&n;&t;&t;&t;&t;&t;&t; */
DECL|member|wv
id|wv
suffix:colon
l_int|1
comma
multiline_comment|/* Way field valid */
DECL|member|op
id|op
suffix:colon
l_int|3
comma
multiline_comment|/* Type of cache &n;&t;&t;&t;&t;&t;&t; * operation that &n;&t;&t;&t;&t;&t;&t; * caused the machine&n;&t;&t;&t;&t;&t;&t; * check.&n;&t;&t;&t;&t;&t;&t; */
DECL|member|dl
id|dl
suffix:colon
l_int|1
comma
multiline_comment|/* Failure in data part&n;&t;&t;&t;&t;&t;&t; * of cache line&n;&t;&t;&t;&t;&t;&t; */
DECL|member|tl
id|tl
suffix:colon
l_int|1
comma
multiline_comment|/* Failure in tag part&n;&t;&t;&t;&t;&t;&t; * of cache line&n;&t;&t;&t;&t;&t;&t; */
DECL|member|dc
id|dc
suffix:colon
l_int|1
comma
multiline_comment|/* Failure in dcache */
DECL|member|ic
id|ic
suffix:colon
l_int|1
comma
multiline_comment|/* Failure in icache */
DECL|member|index
id|index
suffix:colon
l_int|24
comma
multiline_comment|/* Cache line index */
DECL|member|mv
id|mv
suffix:colon
l_int|1
comma
multiline_comment|/* mesi valid */
DECL|member|mesi
id|mesi
suffix:colon
l_int|3
comma
multiline_comment|/* Cache line state */
DECL|member|level
id|level
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Cache level */
DECL|typedef|pal_cache_check_info_t
)brace
id|pal_cache_check_info_t
suffix:semicolon
DECL|struct|pal_tlb_check_info_s
r_typedef
r_struct
id|pal_tlb_check_info_s
(brace
DECL|member|tr_slot
id|u64
id|tr_slot
suffix:colon
l_int|8
comma
multiline_comment|/* Slot# of TR where&n;&t;&t;&t;&t;&t;&t; * error occurred &n;&t;&t;&t;&t;&t;&t; */
DECL|member|reserved2
id|reserved2
suffix:colon
l_int|8
comma
DECL|member|dtr
id|dtr
suffix:colon
l_int|1
comma
multiline_comment|/* Fail in data TR */
DECL|member|itr
id|itr
suffix:colon
l_int|1
comma
multiline_comment|/* Fail in inst TR */
DECL|member|dtc
id|dtc
suffix:colon
l_int|1
comma
multiline_comment|/* Fail in data TC */
DECL|member|itc
id|itc
suffix:colon
l_int|1
comma
multiline_comment|/* Fail in inst. TC */
DECL|member|mc
id|mc
suffix:colon
l_int|1
comma
multiline_comment|/* Machine check corrected */
DECL|member|reserved1
id|reserved1
suffix:colon
l_int|43
suffix:semicolon
DECL|typedef|pal_tlb_check_info_t
)brace
id|pal_tlb_check_info_t
suffix:semicolon
DECL|struct|pal_bus_check_info_s
r_typedef
r_struct
id|pal_bus_check_info_s
(brace
DECL|member|size
id|u64
id|size
suffix:colon
l_int|5
comma
multiline_comment|/* Xaction size*/
DECL|member|ib
id|ib
suffix:colon
l_int|1
comma
multiline_comment|/* Internal bus error */
DECL|member|eb
id|eb
suffix:colon
l_int|1
comma
multiline_comment|/* External bus error */
DECL|member|cc
id|cc
suffix:colon
l_int|1
comma
multiline_comment|/* Error occurred &n;&t;&t;&t;&t;&t;&t; * during cache-cache&n;&t;&t;&t;&t;&t;&t; * transfer.&n;&t;&t;&t;&t;&t;&t; */
DECL|member|type
id|type
suffix:colon
l_int|8
comma
multiline_comment|/* Bus xaction type*/
DECL|member|sev
id|sev
suffix:colon
l_int|5
comma
multiline_comment|/* Bus error severity*/
DECL|member|tv
id|tv
suffix:colon
l_int|1
comma
multiline_comment|/* Targ addr valid */
DECL|member|rp
id|rp
suffix:colon
l_int|1
comma
multiline_comment|/* Resp addr valid */
DECL|member|rq
id|rq
suffix:colon
l_int|1
comma
multiline_comment|/* Req addr valid */
DECL|member|bsi
id|bsi
suffix:colon
l_int|8
comma
multiline_comment|/* Bus error status &n;&t;&t;&t;&t;&t;&t; * info&n;&t;&t;&t;&t;&t;&t; */
DECL|member|mc
id|mc
suffix:colon
l_int|1
comma
multiline_comment|/* Machine check corrected */
DECL|member|reserved1
id|reserved1
suffix:colon
l_int|31
suffix:semicolon
DECL|typedef|pal_bus_check_info_t
)brace
id|pal_bus_check_info_t
suffix:semicolon
DECL|union|pal_mc_error_info_u
r_typedef
r_union
id|pal_mc_error_info_u
(brace
DECL|member|pmei_data
id|u64
id|pmei_data
suffix:semicolon
DECL|member|pme_processor
id|pal_processor_state_info_t
id|pme_processor
suffix:semicolon
DECL|member|pme_cache
id|pal_cache_check_info_t
id|pme_cache
suffix:semicolon
DECL|member|pme_tlb
id|pal_tlb_check_info_t
id|pme_tlb
suffix:semicolon
DECL|member|pme_bus
id|pal_bus_check_info_t
id|pme_bus
suffix:semicolon
DECL|typedef|pal_mc_error_info_t
)brace
id|pal_mc_error_info_t
suffix:semicolon
DECL|macro|pmci_proc_unknown_check
mdefine_line|#define pmci_proc_unknown_check&t;&t;&t;pme_processor.uc
DECL|macro|pmci_proc_bus_check
mdefine_line|#define pmci_proc_bus_check&t;&t;&t;pme_processor.bc
DECL|macro|pmci_proc_tlb_check
mdefine_line|#define pmci_proc_tlb_check&t;&t;&t;pme_processor.tc
DECL|macro|pmci_proc_cache_check
mdefine_line|#define pmci_proc_cache_check&t;&t;&t;pme_processor.cc
DECL|macro|pmci_proc_dynamic_state_size
mdefine_line|#define pmci_proc_dynamic_state_size&t;&t;pme_processor.dsize
DECL|macro|pmci_proc_gpr_valid
mdefine_line|#define pmci_proc_gpr_valid&t;&t;&t;pme_processor.gr
DECL|macro|pmci_proc_preserved_bank0_gpr_valid
mdefine_line|#define pmci_proc_preserved_bank0_gpr_valid&t;pme_processor.b0
DECL|macro|pmci_proc_preserved_bank1_gpr_valid
mdefine_line|#define pmci_proc_preserved_bank1_gpr_valid&t;pme_processor.b1
DECL|macro|pmci_proc_fp_valid
mdefine_line|#define pmci_proc_fp_valid&t;&t;&t;pme_processor.fp
DECL|macro|pmci_proc_predicate_regs_valid
mdefine_line|#define pmci_proc_predicate_regs_valid&t;&t;pme_processor.pr
DECL|macro|pmci_proc_branch_regs_valid
mdefine_line|#define pmci_proc_branch_regs_valid&t;&t;pme_processor.br
DECL|macro|pmci_proc_app_regs_valid
mdefine_line|#define pmci_proc_app_regs_valid&t;&t;pme_processor.ar
DECL|macro|pmci_proc_region_regs_valid
mdefine_line|#define pmci_proc_region_regs_valid&t;&t;pme_processor.rr
DECL|macro|pmci_proc_translation_regs_valid
mdefine_line|#define pmci_proc_translation_regs_valid&t;pme_processor.tr
DECL|macro|pmci_proc_debug_regs_valid
mdefine_line|#define pmci_proc_debug_regs_valid&t;&t;pme_processor.dr
DECL|macro|pmci_proc_perf_counters_valid
mdefine_line|#define pmci_proc_perf_counters_valid&t;&t;pme_processor.pc
DECL|macro|pmci_proc_control_regs_valid
mdefine_line|#define pmci_proc_control_regs_valid&t;&t;pme_processor.cr
DECL|macro|pmci_proc_machine_check_expected
mdefine_line|#define pmci_proc_machine_check_expected&t;pme_processor.ex
DECL|macro|pmci_proc_machine_check_corrected
mdefine_line|#define pmci_proc_machine_check_corrected&t;pme_processor.cm
DECL|macro|pmci_proc_rse_valid
mdefine_line|#define pmci_proc_rse_valid&t;&t;&t;pme_processor.rs
DECL|macro|pmci_proc_machine_check_or_init
mdefine_line|#define pmci_proc_machine_check_or_init&t;&t;pme_processor.in
DECL|macro|pmci_proc_dynamic_state_valid
mdefine_line|#define pmci_proc_dynamic_state_valid&t;&t;pme_processor.dy
DECL|macro|pmci_proc_operation
mdefine_line|#define pmci_proc_operation&t;&t;&t;pme_processor.op
DECL|macro|pmci_proc_trap_lost
mdefine_line|#define pmci_proc_trap_lost&t;&t;&t;pme_processor.tl
DECL|macro|pmci_proc_hardware_damage
mdefine_line|#define pmci_proc_hardware_damage&t;&t;pme_processor.hd
DECL|macro|pmci_proc_uncontained_storage_damage
mdefine_line|#define pmci_proc_uncontained_storage_damage&t;pme_processor.us
DECL|macro|pmci_proc_machine_check_isolated
mdefine_line|#define pmci_proc_machine_check_isolated&t;pme_processor.ci
DECL|macro|pmci_proc_continuable
mdefine_line|#define pmci_proc_continuable&t;&t;&t;pme_processor.co
DECL|macro|pmci_proc_storage_intergrity_synced
mdefine_line|#define pmci_proc_storage_intergrity_synced&t;pme_processor.sy
DECL|macro|pmci_proc_min_state_save_area_regd
mdefine_line|#define pmci_proc_min_state_save_area_regd&t;pme_processor.mn
DECL|macro|pmci_proc_distinct_multiple_errors
mdefine_line|#define&t;pmci_proc_distinct_multiple_errors&t;pme_processor.me
DECL|macro|pmci_proc_pal_attempted_rendezvous
mdefine_line|#define pmci_proc_pal_attempted_rendezvous&t;pme_processor.ra
DECL|macro|pmci_proc_pal_rendezvous_complete
mdefine_line|#define pmci_proc_pal_rendezvous_complete&t;pme_processor.rz
DECL|macro|pmci_cache_level
mdefine_line|#define pmci_cache_level&t;&t;&t;pme_cache.level
DECL|macro|pmci_cache_line_state
mdefine_line|#define pmci_cache_line_state&t;&t;&t;pme_cache.mesi
DECL|macro|pmci_cache_line_state_valid
mdefine_line|#define pmci_cache_line_state_valid&t;&t;pme_cache.mv
DECL|macro|pmci_cache_line_index
mdefine_line|#define pmci_cache_line_index&t;&t;&t;pme_cache.index
DECL|macro|pmci_cache_instr_cache_fail
mdefine_line|#define pmci_cache_instr_cache_fail&t;&t;pme_cache.ic
DECL|macro|pmci_cache_data_cache_fail
mdefine_line|#define pmci_cache_data_cache_fail&t;&t;pme_cache.dc
DECL|macro|pmci_cache_line_tag_fail
mdefine_line|#define pmci_cache_line_tag_fail&t;&t;pme_cache.tl
DECL|macro|pmci_cache_line_data_fail
mdefine_line|#define pmci_cache_line_data_fail&t;&t;pme_cache.dl
DECL|macro|pmci_cache_operation
mdefine_line|#define pmci_cache_operation&t;&t;&t;pme_cache.op
DECL|macro|pmci_cache_way_valid
mdefine_line|#define pmci_cache_way_valid&t;&t;&t;pme_cache.wv
DECL|macro|pmci_cache_target_address_valid
mdefine_line|#define pmci_cache_target_address_valid&t;&t;pme_cache.tv
DECL|macro|pmci_cache_way
mdefine_line|#define pmci_cache_way&t;&t;&t;&t;pme_cache.way
DECL|macro|pmci_cache_mc
mdefine_line|#define pmci_cache_mc&t;&t;&t;&t;pme_cache.mc
DECL|macro|pmci_tlb_instr_translation_cache_fail
mdefine_line|#define pmci_tlb_instr_translation_cache_fail&t;pme_tlb.itc
DECL|macro|pmci_tlb_data_translation_cache_fail
mdefine_line|#define pmci_tlb_data_translation_cache_fail&t;pme_tlb.dtc
DECL|macro|pmci_tlb_instr_translation_reg_fail
mdefine_line|#define pmci_tlb_instr_translation_reg_fail&t;pme_tlb.itr
DECL|macro|pmci_tlb_data_translation_reg_fail
mdefine_line|#define pmci_tlb_data_translation_reg_fail&t;pme_tlb.dtr
DECL|macro|pmci_tlb_translation_reg_slot
mdefine_line|#define pmci_tlb_translation_reg_slot&t;&t;pme_tlb.tr_slot
DECL|macro|pmci_tlb_mc
mdefine_line|#define pmci_tlb_mc&t;&t;&t;&t;pme_tlb.mc
DECL|macro|pmci_bus_status_info
mdefine_line|#define pmci_bus_status_info&t;&t;&t;pme_bus.bsi
DECL|macro|pmci_bus_req_address_valid
mdefine_line|#define pmci_bus_req_address_valid&t;&t;pme_bus.rq
DECL|macro|pmci_bus_resp_address_valid
mdefine_line|#define pmci_bus_resp_address_valid&t;&t;pme_bus.rp
DECL|macro|pmci_bus_target_address_valid
mdefine_line|#define pmci_bus_target_address_valid&t;&t;pme_bus.tv
DECL|macro|pmci_bus_error_severity
mdefine_line|#define pmci_bus_error_severity&t;&t;&t;pme_bus.sev
DECL|macro|pmci_bus_transaction_type
mdefine_line|#define pmci_bus_transaction_type&t;&t;pme_bus.type
DECL|macro|pmci_bus_cache_cache_transfer
mdefine_line|#define pmci_bus_cache_cache_transfer&t;&t;pme_bus.cc
DECL|macro|pmci_bus_transaction_size
mdefine_line|#define pmci_bus_transaction_size&t;&t;pme_bus.size
DECL|macro|pmci_bus_internal_error
mdefine_line|#define pmci_bus_internal_error&t;&t;&t;pme_bus.ib
DECL|macro|pmci_bus_external_error
mdefine_line|#define pmci_bus_external_error&t;&t;&t;pme_bus.eb
DECL|macro|pmci_bus_mc
mdefine_line|#define pmci_bus_mc&t;&t;&t;&t;pme_bus.mc
multiline_comment|/* &n; * NOTE: this min_state_save area struct only includes the 1KB &n; * architectural state save area.  The other 3 KB is scratch space&n; * for PAL.&n; */
DECL|struct|pal_min_state_area_s
r_typedef
r_struct
id|pal_min_state_area_s
(brace
DECL|member|pmsa_nat_bits
id|u64
id|pmsa_nat_bits
suffix:semicolon
multiline_comment|/* nat bits for saved GRs  */
DECL|member|pmsa_gr
id|u64
id|pmsa_gr
(braket
l_int|15
)braket
suffix:semicolon
multiline_comment|/* GR1&t;- GR15&t;&t;   */
DECL|member|pmsa_bank0_gr
id|u64
id|pmsa_bank0_gr
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* GR16 - GR31&t;&t;   */
DECL|member|pmsa_bank1_gr
id|u64
id|pmsa_bank1_gr
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* GR16 - GR31&t;&t;   */
DECL|member|pmsa_pr
id|u64
id|pmsa_pr
suffix:semicolon
multiline_comment|/* predicate registers&t;   */
DECL|member|pmsa_br0
id|u64
id|pmsa_br0
suffix:semicolon
multiline_comment|/* branch register 0&t;   */
DECL|member|pmsa_rsc
id|u64
id|pmsa_rsc
suffix:semicolon
multiline_comment|/* ar.rsc&t;&t;   */
DECL|member|pmsa_iip
id|u64
id|pmsa_iip
suffix:semicolon
multiline_comment|/* cr.iip&t;&t;   */
DECL|member|pmsa_ipsr
id|u64
id|pmsa_ipsr
suffix:semicolon
multiline_comment|/* cr.ipsr&t;&t;   */
DECL|member|pmsa_ifs
id|u64
id|pmsa_ifs
suffix:semicolon
multiline_comment|/* cr.ifs&t;&t;   */
DECL|member|pmsa_xip
id|u64
id|pmsa_xip
suffix:semicolon
multiline_comment|/* previous iip&t;&t;   */
DECL|member|pmsa_xpsr
id|u64
id|pmsa_xpsr
suffix:semicolon
multiline_comment|/* previous psr&t;&t;   */
DECL|member|pmsa_xfs
id|u64
id|pmsa_xfs
suffix:semicolon
multiline_comment|/* previous ifs&t;&t;   */
DECL|member|pmsa_reserved
id|u64
id|pmsa_reserved
(braket
l_int|71
)braket
suffix:semicolon
multiline_comment|/* pal_min_state_area should total to 1KB */
DECL|typedef|pal_min_state_area_t
)brace
id|pal_min_state_area_t
suffix:semicolon
DECL|struct|ia64_pal_retval
r_struct
id|ia64_pal_retval
(brace
multiline_comment|/*&n;&t; * A zero status value indicates call completed without error.&n;&t; * A negative status value indicates reason of call failure.&n;&t; * A positive status value indicates success but an&n;&t; * informational value should be printed (e.g., &quot;reboot for&n;&t; * change to take effect&quot;).&n;&t; */
DECL|member|status
id|s64
id|status
suffix:semicolon
DECL|member|v0
id|u64
id|v0
suffix:semicolon
DECL|member|v1
id|u64
id|v1
suffix:semicolon
DECL|member|v2
id|u64
id|v2
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * Note: Currently unused PAL arguments are generally labeled&n; * &quot;reserved&quot; so the value specified in the PAL documentation&n; * (generally 0) MUST be passed.  Reserved parameters are not optional&n; * parameters.&n; */
r_extern
r_struct
id|ia64_pal_retval
id|ia64_pal_call_static
(paren
id|u64
comma
id|u64
comma
id|u64
comma
id|u64
comma
id|u64
)paren
suffix:semicolon
r_extern
r_struct
id|ia64_pal_retval
id|ia64_pal_call_stacked
(paren
id|u64
comma
id|u64
comma
id|u64
comma
id|u64
)paren
suffix:semicolon
r_extern
r_struct
id|ia64_pal_retval
id|ia64_pal_call_phys_static
(paren
id|u64
comma
id|u64
comma
id|u64
comma
id|u64
)paren
suffix:semicolon
r_extern
r_struct
id|ia64_pal_retval
id|ia64_pal_call_phys_stacked
(paren
id|u64
comma
id|u64
comma
id|u64
comma
id|u64
)paren
suffix:semicolon
DECL|macro|PAL_CALL
mdefine_line|#define PAL_CALL(iprv,a0,a1,a2,a3)&t;&t;iprv = ia64_pal_call_static(a0, a1, a2, a3, 0)
DECL|macro|PAL_CALL_IC_OFF
mdefine_line|#define PAL_CALL_IC_OFF(iprv,a0,a1,a2,a3)&t;iprv = ia64_pal_call_static(a0, a1, a2, a3, 1)
DECL|macro|PAL_CALL_STK
mdefine_line|#define PAL_CALL_STK(iprv,a0,a1,a2,a3)&t;&t;iprv = ia64_pal_call_stacked(a0, a1, a2, a3)
DECL|macro|PAL_CALL_PHYS
mdefine_line|#define PAL_CALL_PHYS(iprv,a0,a1,a2,a3)&t;&t;iprv = ia64_pal_call_phys_static(a0, a1, a2, a3)
DECL|macro|PAL_CALL_PHYS_STK
mdefine_line|#define PAL_CALL_PHYS_STK(iprv,a0,a1,a2,a3)&t;iprv = ia64_pal_call_phys_stacked(a0, a1, a2, a3)
DECL|typedef|ia64_pal_handler
r_typedef
r_int
(paren
op_star
id|ia64_pal_handler
)paren
(paren
id|u64
comma
dot
dot
dot
)paren
suffix:semicolon
r_extern
id|ia64_pal_handler
id|ia64_pal
suffix:semicolon
r_extern
r_void
id|ia64_pal_handler_init
(paren
r_void
op_star
)paren
suffix:semicolon
r_extern
id|ia64_pal_handler
id|ia64_pal
suffix:semicolon
r_extern
id|pal_cache_config_info_t
id|l0d_cache_config_info
suffix:semicolon
r_extern
id|pal_cache_config_info_t
id|l0i_cache_config_info
suffix:semicolon
r_extern
id|pal_cache_config_info_t
id|l1_cache_config_info
suffix:semicolon
r_extern
id|pal_cache_config_info_t
id|l2_cache_config_info
suffix:semicolon
r_extern
id|pal_cache_protection_info_t
id|l0d_cache_protection_info
suffix:semicolon
r_extern
id|pal_cache_protection_info_t
id|l0i_cache_protection_info
suffix:semicolon
r_extern
id|pal_cache_protection_info_t
id|l1_cache_protection_info
suffix:semicolon
r_extern
id|pal_cache_protection_info_t
id|l2_cache_protection_info
suffix:semicolon
r_extern
id|pal_cache_config_info_t
id|pal_cache_config_info_get
c_func
(paren
id|pal_cache_level_t
comma
id|pal_cache_type_t
)paren
suffix:semicolon
r_extern
id|pal_cache_protection_info_t
id|pal_cache_protection_info_get
c_func
(paren
id|pal_cache_level_t
comma
id|pal_cache_type_t
)paren
suffix:semicolon
r_extern
r_void
id|pal_error
c_func
(paren
r_int
)paren
suffix:semicolon
multiline_comment|/* Useful wrappers for the current list of pal procedures */
DECL|union|pal_bus_features_u
r_typedef
r_union
id|pal_bus_features_u
(brace
DECL|member|pal_bus_features_val
id|u64
id|pal_bus_features_val
suffix:semicolon
r_struct
(brace
DECL|member|pbf_reserved1
id|u64
id|pbf_reserved1
suffix:colon
l_int|29
suffix:semicolon
DECL|member|pbf_req_bus_parking
id|u64
id|pbf_req_bus_parking
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_bus_lock_mask
id|u64
id|pbf_bus_lock_mask
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_enable_half_xfer_rate
id|u64
id|pbf_enable_half_xfer_rate
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_reserved2
id|u64
id|pbf_reserved2
suffix:colon
l_int|22
suffix:semicolon
DECL|member|pbf_disable_xaction_queueing
id|u64
id|pbf_disable_xaction_queueing
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_resp_err_check
id|u64
id|pbf_disable_resp_err_check
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_berr_check
id|u64
id|pbf_disable_berr_check
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_bus_req_internal_err_signal
id|u64
id|pbf_disable_bus_req_internal_err_signal
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_bus_req_berr_signal
id|u64
id|pbf_disable_bus_req_berr_signal
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_bus_init_event_check
id|u64
id|pbf_disable_bus_init_event_check
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_bus_init_event_signal
id|u64
id|pbf_disable_bus_init_event_signal
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_bus_addr_err_check
id|u64
id|pbf_disable_bus_addr_err_check
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_bus_addr_err_signal
id|u64
id|pbf_disable_bus_addr_err_signal
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pbf_disable_bus_data_err_check
id|u64
id|pbf_disable_bus_data_err_check
suffix:colon
l_int|1
suffix:semicolon
DECL|member|pal_bus_features_s
)brace
id|pal_bus_features_s
suffix:semicolon
DECL|typedef|pal_bus_features_u_t
)brace
id|pal_bus_features_u_t
suffix:semicolon
r_extern
r_void
id|pal_bus_features_print
(paren
id|u64
)paren
suffix:semicolon
multiline_comment|/* Provide information about configurable processor bus features */
r_static
r_inline
id|s64
DECL|function|ia64_pal_bus_get_features
id|ia64_pal_bus_get_features
(paren
id|pal_bus_features_u_t
op_star
id|features_avail
comma
id|pal_bus_features_u_t
op_star
id|features_status
comma
id|pal_bus_features_u_t
op_star
id|features_control
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL_PHYS
c_func
(paren
id|iprv
comma
id|PAL_BUS_GET_FEATURES
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|features_avail
)paren
id|features_avail-&gt;pal_bus_features_val
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|features_status
)paren
id|features_status-&gt;pal_bus_features_val
op_assign
id|iprv.v1
suffix:semicolon
r_if
c_cond
(paren
id|features_control
)paren
id|features_control-&gt;pal_bus_features_val
op_assign
id|iprv.v2
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Enables/disables specific processor bus features */
r_static
r_inline
id|s64
DECL|function|ia64_pal_bus_set_features
id|ia64_pal_bus_set_features
(paren
id|pal_bus_features_u_t
id|feature_select
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL_PHYS
c_func
(paren
id|iprv
comma
id|PAL_BUS_SET_FEATURES
comma
id|feature_select.pal_bus_features_val
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Get detailed cache information */
r_static
r_inline
id|s64
DECL|function|ia64_pal_cache_config_info
id|ia64_pal_cache_config_info
(paren
id|u64
id|cache_level
comma
id|u64
id|cache_type
comma
id|pal_cache_config_info_t
op_star
id|conf
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_CACHE_INFO
comma
id|cache_level
comma
id|cache_type
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|iprv.status
op_eq
l_int|0
)paren
(brace
id|conf-&gt;pcci_status
op_assign
id|iprv.status
suffix:semicolon
id|conf-&gt;pcci_info_1.pcci1_data
op_assign
id|iprv.v0
suffix:semicolon
id|conf-&gt;pcci_info_2.pcci2_data
op_assign
id|iprv.v1
suffix:semicolon
id|conf-&gt;pcci_reserved
op_assign
id|iprv.v2
suffix:semicolon
)brace
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Get detailed cche protection information */
r_static
r_inline
id|s64
DECL|function|ia64_pal_cache_prot_info
id|ia64_pal_cache_prot_info
(paren
id|u64
id|cache_level
comma
id|u64
id|cache_type
comma
id|pal_cache_protection_info_t
op_star
id|prot
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_CACHE_PROT_INFO
comma
id|cache_level
comma
id|cache_type
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|iprv.status
op_eq
l_int|0
)paren
(brace
id|prot-&gt;pcpi_status
op_assign
id|iprv.status
suffix:semicolon
id|prot-&gt;pcp_info
(braket
l_int|0
)braket
dot
id|pcpi_data
op_assign
id|iprv.v0
op_amp
l_int|0xffffffff
suffix:semicolon
id|prot-&gt;pcp_info
(braket
l_int|1
)braket
dot
id|pcpi_data
op_assign
id|iprv.v0
op_rshift
l_int|32
suffix:semicolon
id|prot-&gt;pcp_info
(braket
l_int|2
)braket
dot
id|pcpi_data
op_assign
id|iprv.v1
op_amp
l_int|0xffffffff
suffix:semicolon
id|prot-&gt;pcp_info
(braket
l_int|3
)braket
dot
id|pcpi_data
op_assign
id|iprv.v1
op_rshift
l_int|32
suffix:semicolon
id|prot-&gt;pcp_info
(braket
l_int|4
)braket
dot
id|pcpi_data
op_assign
id|iprv.v2
op_amp
l_int|0xffffffff
suffix:semicolon
id|prot-&gt;pcp_info
(braket
l_int|5
)braket
dot
id|pcpi_data
op_assign
id|iprv.v2
op_rshift
l_int|32
suffix:semicolon
)brace
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/*&n; * Flush the processor instruction or data caches.  *PROGRESS must be&n; * initialized to zero before calling this for the first time..&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_cache_flush
id|ia64_pal_cache_flush
(paren
id|u64
id|cache_type
comma
id|u64
id|invalidate
comma
id|u64
op_star
id|progress
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL_IC_OFF
c_func
(paren
id|iprv
comma
id|PAL_CACHE_FLUSH
comma
id|cache_type
comma
id|invalidate
comma
op_star
id|progress
)paren
suffix:semicolon
op_star
id|progress
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Initialize the processor controlled caches */
r_static
r_inline
id|s64
DECL|function|ia64_pal_cache_init
id|ia64_pal_cache_init
(paren
id|u64
id|level
comma
id|u64
id|cache_type
comma
id|u64
r_restrict
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_CACHE_INIT
comma
id|level
comma
id|cache_type
comma
r_restrict
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Initialize the tags and data of a data or unified cache line of &n; * processor controlled cache to known values without the availability &n; * of backing memory.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_cache_line_init
id|ia64_pal_cache_line_init
(paren
id|u64
id|physical_addr
comma
id|u64
id|data_value
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_CACHE_LINE_INIT
comma
id|physical_addr
comma
id|data_value
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Read the data and tag of a processor controlled cache line for diags */
r_static
r_inline
id|s64
DECL|function|ia64_pal_cache_read
id|ia64_pal_cache_read
(paren
id|pal_cache_line_id_u_t
id|line_id
comma
id|u64
id|physical_addr
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_CACHE_READ
comma
id|line_id.pclid_data
comma
id|physical_addr
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Return summary information about the heirarchy of caches controlled by the processor */
r_static
r_inline
id|s64
DECL|function|ia64_pal_cache_summary
id|ia64_pal_cache_summary
(paren
id|u64
op_star
id|cache_levels
comma
id|u64
op_star
id|unique_caches
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_CACHE_SUMMARY
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cache_levels
)paren
op_star
id|cache_levels
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|unique_caches
)paren
op_star
id|unique_caches
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Write the data and tag of a processor-controlled cache line for diags */
r_static
r_inline
id|s64
DECL|function|ia64_pal_cache_write
id|ia64_pal_cache_write
(paren
id|pal_cache_line_id_u_t
id|line_id
comma
id|u64
id|physical_addr
comma
id|u64
id|data
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_CACHE_WRITE
comma
id|line_id.pclid_data
comma
id|physical_addr
comma
id|data
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Return the parameters needed to copy relocatable PAL procedures from ROM to memory */
r_static
r_inline
id|s64
DECL|function|ia64_pal_copy_info
id|ia64_pal_copy_info
(paren
id|u64
id|copy_type
comma
id|u64
id|num_procs
comma
id|u64
id|num_iopics
comma
id|u64
op_star
id|buffer_size
comma
id|u64
op_star
id|buffer_align
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_COPY_INFO
comma
id|copy_type
comma
id|num_procs
comma
id|num_iopics
)paren
suffix:semicolon
r_if
c_cond
(paren
id|buffer_size
)paren
op_star
id|buffer_size
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|buffer_align
)paren
op_star
id|buffer_align
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Copy relocatable PAL procedures from ROM to memory */
r_static
r_inline
id|s64
DECL|function|ia64_pal_copy_pal
id|ia64_pal_copy_pal
(paren
id|u64
id|target_addr
comma
id|u64
id|alloc_size
comma
id|u64
id|processor
comma
id|u64
op_star
id|pal_proc_offset
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_COPY_PAL
comma
id|target_addr
comma
id|alloc_size
comma
id|processor
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pal_proc_offset
)paren
op_star
id|pal_proc_offset
op_assign
id|iprv.v0
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Return the number of instruction and data debug register pairs */
r_static
r_inline
id|s64
DECL|function|ia64_pal_debug_info
id|ia64_pal_debug_info
(paren
id|u64
op_star
id|inst_regs
comma
id|u64
op_star
id|data_regs
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_DEBUG_INFO
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|inst_regs
)paren
op_star
id|inst_regs
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|data_regs
)paren
op_star
id|data_regs
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
macro_line|#ifdef TBD
multiline_comment|/* Switch from IA64-system environment to IA-32 system environment */
r_static
r_inline
id|s64
DECL|function|ia64_pal_enter_ia32_env
id|ia64_pal_enter_ia32_env
(paren
id|ia32_env1
comma
id|ia32_env2
comma
id|ia32_env3
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_ENTER_IA_32_ENV
comma
id|ia32_env1
comma
id|ia32_env2
comma
id|ia32_env3
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
macro_line|#endif
multiline_comment|/* Get unique geographical address of this processor on its bus */
r_static
r_inline
id|s64
DECL|function|ia64_pal_fixed_addr
id|ia64_pal_fixed_addr
(paren
id|u64
op_star
id|global_unique_addr
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_FIXED_ADDR
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|global_unique_addr
)paren
op_star
id|global_unique_addr
op_assign
id|iprv.v0
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Get base frequency of the platform if generated by the processor */
r_static
r_inline
id|s64
DECL|function|ia64_pal_freq_base
id|ia64_pal_freq_base
(paren
id|u64
op_star
id|platform_base_freq
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_FREQ_BASE
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|platform_base_freq
)paren
op_star
id|platform_base_freq
op_assign
id|iprv.v0
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/*&n; * Get the ratios for processor frequency, bus frequency and interval timer to&n; * to base frequency of the platform &n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_freq_ratios
id|ia64_pal_freq_ratios
(paren
r_struct
id|pal_freq_ratio
op_star
id|proc_ratio
comma
r_struct
id|pal_freq_ratio
op_star
id|bus_ratio
comma
r_struct
id|pal_freq_ratio
op_star
id|itc_ratio
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_FREQ_RATIOS
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|proc_ratio
)paren
op_star
(paren
id|u64
op_star
)paren
id|proc_ratio
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|bus_ratio
)paren
op_star
(paren
id|u64
op_star
)paren
id|bus_ratio
op_assign
id|iprv.v1
suffix:semicolon
r_if
c_cond
(paren
id|itc_ratio
)paren
op_star
(paren
id|u64
op_star
)paren
id|itc_ratio
op_assign
id|iprv.v2
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Make the processor enter HALT or one of the implementation dependent low &n; * power states where prefetching and execution are suspended and cache and&n; * TLB coherency is not maintained.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_halt
id|ia64_pal_halt
(paren
id|u64
id|halt_state
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_HALT
comma
id|halt_state
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
DECL|union|pal_power_mgmt_info_u
r_typedef
r_union
id|pal_power_mgmt_info_u
(brace
DECL|member|ppmi_data
id|u64
id|ppmi_data
suffix:semicolon
r_struct
(brace
DECL|member|exit_latency
id|u64
id|exit_latency
suffix:colon
l_int|16
comma
DECL|member|entry_latency
id|entry_latency
suffix:colon
l_int|16
comma
DECL|member|power_consumption
id|power_consumption
suffix:colon
l_int|28
comma
DECL|member|im
id|im
suffix:colon
l_int|1
comma
DECL|member|co
id|co
suffix:colon
l_int|1
comma
DECL|member|reserved
id|reserved
suffix:colon
l_int|2
suffix:semicolon
DECL|member|pal_power_mgmt_info_s
)brace
id|pal_power_mgmt_info_s
suffix:semicolon
DECL|typedef|pal_power_mgmt_info_u_t
)brace
id|pal_power_mgmt_info_u_t
suffix:semicolon
multiline_comment|/* Return information about processor&squot;s optional power management capabilities. */
r_static
r_inline
id|s64
DECL|function|ia64_pal_halt_info
id|ia64_pal_halt_info
(paren
id|pal_power_mgmt_info_u_t
op_star
id|power_buf
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL_STK
c_func
(paren
id|iprv
comma
id|PAL_HALT_INFO
comma
(paren
r_int
r_int
)paren
id|power_buf
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Cause the processor to enter LIGHT HALT state, where prefetching and execution are&n; * suspended, but cache and TLB coherency is maintained.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_halt_light
id|ia64_pal_halt_light
(paren
r_void
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_HALT_LIGHT
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Clear all the processor error logging   registers and reset the indicator that allows&n; * the error logging registers to be written. This procedure also checks the pending&n; * machine check bit and pending INIT bit and reports their states.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mc_clear_log
id|ia64_pal_mc_clear_log
(paren
id|u64
op_star
id|pending_vector
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MC_CLEAR_LOG
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pending_vector
)paren
op_star
id|pending_vector
op_assign
id|iprv.v0
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Ensure that all outstanding transactions in a processor are completed or that any &n; * MCA due to thes outstanding transaction is taken.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mc_drain
id|ia64_pal_mc_drain
(paren
r_void
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MC_DRAIN
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Return the machine check dynamic processor state */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mc_dynamic_state
id|ia64_pal_mc_dynamic_state
(paren
id|u64
id|offset
comma
id|u64
op_star
id|size
comma
id|u64
op_star
id|pds
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MC_DYNAMIC_STATE
comma
id|offset
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|size
)paren
op_star
id|size
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|pds
)paren
op_star
id|pds
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Return processor machine check information */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mc_error_info
id|ia64_pal_mc_error_info
(paren
id|u64
id|info_index
comma
id|u64
id|type_index
comma
id|u64
op_star
id|size
comma
id|u64
op_star
id|error_info
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MC_ERROR_INFO
comma
id|info_index
comma
id|type_index
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|size
)paren
op_star
id|size
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|error_info
)paren
op_star
id|error_info
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Inform PALE_CHECK whether a machine check is expected so that PALE_CHECK willnot&n; * attempt to correct any expected machine checks.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mc_expected
id|ia64_pal_mc_expected
(paren
id|u64
id|expected
comma
id|u64
op_star
id|previous
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MC_EXPECTED
comma
id|expected
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|previous
)paren
op_star
id|previous
op_assign
id|iprv.v0
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Register a platform dependent location with PAL to which it can save&n; * minimal processor state in the event of a machine check or initialization&n; * event.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mc_register_mem
id|ia64_pal_mc_register_mem
(paren
id|u64
id|physical_addr
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MC_REGISTER_MEM
comma
id|physical_addr
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Restore minimal architectural processor state, set CMC interrupt if necessary&n; * and resume execution&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mc_resume
id|ia64_pal_mc_resume
(paren
id|u64
id|set_cmci
comma
id|u64
id|save_ptr
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MC_RESUME
comma
id|set_cmci
comma
id|save_ptr
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Return the memory attributes implemented by the processor */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mem_attrib
id|ia64_pal_mem_attrib
(paren
id|u64
op_star
id|mem_attrib
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MEM_ATTRIB
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|mem_attrib
)paren
op_star
id|mem_attrib
op_assign
id|iprv.v0
op_amp
l_int|0xff
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Return the amount of memory needed for second phase of processor&n; * self-test and the required alignment of memory.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_mem_for_test
id|ia64_pal_mem_for_test
(paren
id|u64
op_star
id|bytes_needed
comma
id|u64
op_star
id|alignment
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_MEM_FOR_TEST
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bytes_needed
)paren
op_star
id|bytes_needed
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|alignment
)paren
op_star
id|alignment
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
DECL|union|pal_perf_mon_info_u
r_typedef
r_union
id|pal_perf_mon_info_u
(brace
DECL|member|ppmi_data
id|u64
id|ppmi_data
suffix:semicolon
r_struct
(brace
DECL|member|generic
id|u64
id|generic
suffix:colon
l_int|8
comma
DECL|member|width
id|width
suffix:colon
l_int|8
comma
DECL|member|cycles
id|cycles
suffix:colon
l_int|8
comma
DECL|member|retired
id|retired
suffix:colon
l_int|8
comma
DECL|member|reserved
id|reserved
suffix:colon
l_int|32
suffix:semicolon
DECL|member|pal_perf_mon_info_s
)brace
id|pal_perf_mon_info_s
suffix:semicolon
DECL|typedef|pal_perf_mon_info_u_t
)brace
id|pal_perf_mon_info_u_t
suffix:semicolon
multiline_comment|/* Return the performance monitor information about what can be counted&n; * and how to configure the monitors to count the desired events.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_perf_mon_info
id|ia64_pal_perf_mon_info
(paren
id|u64
op_star
id|pm_buffer
comma
id|pal_perf_mon_info_u_t
op_star
id|pm_info
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_PERF_MON_INFO
comma
(paren
r_int
r_int
)paren
id|pm_buffer
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pm_info
)paren
id|pm_info-&gt;ppmi_data
op_assign
id|iprv.v0
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Specifies the physical address of the processor interrupt block&n; * and I/O port space.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_platform_addr
id|ia64_pal_platform_addr
(paren
id|u64
id|type
comma
id|u64
id|physical_addr
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_PLATFORM_ADDR
comma
id|type
comma
id|physical_addr
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Set the SAL PMI entrypoint in memory */
r_static
r_inline
id|s64
DECL|function|ia64_pal_pmi_entrypoint
id|ia64_pal_pmi_entrypoint
(paren
id|u64
id|sal_pmi_entry_addr
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_PMI_ENTRYPOINT
comma
id|sal_pmi_entry_addr
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
r_struct
id|pal_features_s
suffix:semicolon
multiline_comment|/* Provide information about configurable processor features */
r_static
r_inline
id|s64
DECL|function|ia64_pal_proc_get_features
id|ia64_pal_proc_get_features
(paren
id|u64
op_star
id|features_avail
comma
id|u64
op_star
id|features_status
comma
id|u64
op_star
id|features_control
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL_PHYS
c_func
(paren
id|iprv
comma
id|PAL_PROC_GET_FEATURES
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|iprv.status
op_eq
l_int|0
)paren
(brace
op_star
id|features_avail
op_assign
id|iprv.v0
suffix:semicolon
op_star
id|features_status
op_assign
id|iprv.v1
suffix:semicolon
op_star
id|features_control
op_assign
id|iprv.v2
suffix:semicolon
)brace
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Enable/disable processor dependent features */
r_static
r_inline
id|s64
DECL|function|ia64_pal_proc_set_features
id|ia64_pal_proc_set_features
(paren
id|u64
id|feature_select
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL_PHYS
c_func
(paren
id|iprv
comma
id|PAL_PROC_SET_FEATURES
comma
id|feature_select
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/*&n; * Put everything in a struct so we avoid the global offset table whenever&n; * possible.&n; */
DECL|struct|ia64_ptce_info_s
r_typedef
r_struct
id|ia64_ptce_info_s
(brace
DECL|member|base
id|u64
id|base
suffix:semicolon
DECL|member|count
id|u32
id|count
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|stride
id|u32
id|stride
(braket
l_int|2
)braket
suffix:semicolon
DECL|typedef|ia64_ptce_info_t
)brace
id|ia64_ptce_info_t
suffix:semicolon
multiline_comment|/* Return the information required for the architected loop used to purge&n; * (initialize) the entire TC&n; */
r_static
r_inline
id|s64
DECL|function|ia64_get_ptce
id|ia64_get_ptce
(paren
id|ia64_ptce_info_t
op_star
id|ptce
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|ptce
)paren
r_return
op_minus
l_int|1
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_PTCE_INFO
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|iprv.status
op_eq
l_int|0
)paren
(brace
id|ptce-&gt;base
op_assign
id|iprv.v0
suffix:semicolon
id|ptce-&gt;count
(braket
l_int|0
)braket
op_assign
id|iprv.v1
op_rshift
l_int|32
suffix:semicolon
id|ptce-&gt;count
(braket
l_int|1
)braket
op_assign
id|iprv.v1
op_amp
l_int|0xffffffff
suffix:semicolon
id|ptce-&gt;stride
(braket
l_int|0
)braket
op_assign
id|iprv.v2
op_rshift
l_int|32
suffix:semicolon
id|ptce-&gt;stride
(braket
l_int|1
)braket
op_assign
id|iprv.v2
op_amp
l_int|0xffffffff
suffix:semicolon
)brace
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Return info about implemented application and control registers. */
r_static
r_inline
id|s64
DECL|function|ia64_pal_register_info
id|ia64_pal_register_info
(paren
id|u64
id|info_request
comma
id|u64
op_star
id|reg_info_1
comma
id|u64
op_star
id|reg_info_2
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_REGISTER_INFO
comma
id|info_request
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|reg_info_1
)paren
op_star
id|reg_info_1
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|reg_info_2
)paren
op_star
id|reg_info_2
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
DECL|union|pal_hints_u
r_typedef
r_union
id|pal_hints_u
(brace
DECL|member|ph_data
id|u64
id|ph_data
suffix:semicolon
r_struct
(brace
DECL|member|si
id|u64
id|si
suffix:colon
l_int|1
comma
DECL|member|li
id|li
suffix:colon
l_int|1
comma
DECL|member|reserved
id|reserved
suffix:colon
l_int|62
suffix:semicolon
DECL|member|pal_hints_s
)brace
id|pal_hints_s
suffix:semicolon
DECL|typedef|pal_hints_u_t
)brace
id|pal_hints_u_t
suffix:semicolon
multiline_comment|/* Return information about the register stack and RSE for this processor &n; * implementation.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_rse_info
id|ia64_pal_rse_info
(paren
id|u64
op_star
id|num_phys_stacked
comma
id|pal_hints_u_t
op_star
id|hints
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_RSE_INFO
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|num_phys_stacked
)paren
op_star
id|num_phys_stacked
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|hints
)paren
id|hints-&gt;ph_data
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Cause the processor to enter&t;SHUTDOWN state, where prefetching and execution are &n; * suspended, but cause cache and TLB coherency to be maintained.&n; * This is usually called in IA-32 mode.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_shutdown
id|ia64_pal_shutdown
(paren
r_void
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_SHUTDOWN
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Perform the second phase of processor self-test. */
r_static
r_inline
id|s64
DECL|function|ia64_pal_test_proc
id|ia64_pal_test_proc
(paren
id|u64
id|test_addr
comma
id|u64
id|test_size
comma
id|u64
id|attributes
comma
id|u64
op_star
id|self_test_state
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_TEST_PROC
comma
id|test_addr
comma
id|test_size
comma
id|attributes
)paren
suffix:semicolon
r_if
c_cond
(paren
id|self_test_state
)paren
op_star
id|self_test_state
op_assign
id|iprv.v0
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
DECL|union|pal_version_u
r_typedef
r_union
id|pal_version_u
(brace
DECL|member|pal_version_val
id|u64
id|pal_version_val
suffix:semicolon
r_struct
(brace
DECL|member|pv_pal_b_rev
id|u64
id|pv_pal_b_rev
suffix:colon
l_int|8
suffix:semicolon
DECL|member|pv_pal_b_model
id|u64
id|pv_pal_b_model
suffix:colon
l_int|8
suffix:semicolon
DECL|member|pv_reserved1
id|u64
id|pv_reserved1
suffix:colon
l_int|8
suffix:semicolon
DECL|member|pv_pal_vendor
id|u64
id|pv_pal_vendor
suffix:colon
l_int|8
suffix:semicolon
DECL|member|pv_pal_a_rev
id|u64
id|pv_pal_a_rev
suffix:colon
l_int|8
suffix:semicolon
DECL|member|pv_pal_a_model
id|u64
id|pv_pal_a_model
suffix:colon
l_int|8
suffix:semicolon
DECL|member|pv_reserved2
id|u64
id|pv_reserved2
suffix:colon
l_int|16
suffix:semicolon
DECL|member|pal_version_s
)brace
id|pal_version_s
suffix:semicolon
DECL|typedef|pal_version_u_t
)brace
id|pal_version_u_t
suffix:semicolon
multiline_comment|/* Return PAL version information */
r_static
r_inline
id|s64
DECL|function|ia64_pal_version
id|ia64_pal_version
(paren
id|pal_version_u_t
op_star
id|pal_min_version
comma
id|pal_version_u_t
op_star
id|pal_cur_version
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_VERSION
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pal_min_version
)paren
id|pal_min_version-&gt;pal_version_val
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|pal_cur_version
)paren
id|pal_cur_version-&gt;pal_version_val
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
DECL|union|pal_tc_info_u
r_typedef
r_union
id|pal_tc_info_u
(brace
DECL|member|pti_val
id|u64
id|pti_val
suffix:semicolon
r_struct
(brace
DECL|member|num_sets
id|u64
id|num_sets
suffix:colon
l_int|8
comma
DECL|member|associativity
id|associativity
suffix:colon
l_int|8
comma
DECL|member|num_entries
id|num_entries
suffix:colon
l_int|16
comma
DECL|member|pf
id|pf
suffix:colon
l_int|1
comma
DECL|member|unified
id|unified
suffix:colon
l_int|1
comma
DECL|member|reduce_tr
id|reduce_tr
suffix:colon
l_int|1
comma
DECL|member|reserved
id|reserved
suffix:colon
l_int|29
suffix:semicolon
DECL|member|pal_tc_info_s
)brace
id|pal_tc_info_s
suffix:semicolon
DECL|typedef|pal_tc_info_u_t
)brace
id|pal_tc_info_u_t
suffix:semicolon
DECL|macro|tc_reduce_tr
mdefine_line|#define tc_reduce_tr&t;&t;pal_tc_info_s.reduce_tr
DECL|macro|tc_unified
mdefine_line|#define tc_unified&t;&t;pal_tc_info_s.unified
DECL|macro|tc_pf
mdefine_line|#define tc_pf&t;&t;&t;pal_tc_info_s.pf
DECL|macro|tc_num_entries
mdefine_line|#define tc_num_entries&t;&t;pal_tc_info_s.num_entries
DECL|macro|tc_associativity
mdefine_line|#define tc_associativity&t;pal_tc_info_s.associativity
DECL|macro|tc_num_sets
mdefine_line|#define tc_num_sets&t;&t;pal_tc_info_s.num_sets
multiline_comment|/* Return information about the virtual memory characteristics of the processor &n; * implementation.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_vm_info
id|ia64_pal_vm_info
(paren
id|u64
id|tc_level
comma
id|u64
id|tc_type
comma
id|pal_tc_info_u_t
op_star
id|tc_info
comma
id|u64
op_star
id|tc_pages
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_VM_INFO
comma
id|tc_level
comma
id|tc_type
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|tc_info
)paren
id|tc_info-&gt;pti_val
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|tc_pages
)paren
op_star
id|tc_pages
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
multiline_comment|/* Get page size information about the virtual memory characteristics of the processor &n; * implementation.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_vm_page_size
id|ia64_pal_vm_page_size
(paren
id|u64
op_star
id|tr_pages
comma
id|u64
op_star
id|vw_pages
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_VM_PAGE_SIZE
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|tr_pages
)paren
op_star
id|tr_pages
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|vw_pages
)paren
op_star
id|vw_pages
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
DECL|union|pal_vm_info_1_u
r_typedef
r_union
id|pal_vm_info_1_u
(brace
DECL|member|pvi1_val
id|u64
id|pvi1_val
suffix:semicolon
r_struct
(brace
DECL|member|vw
id|u64
id|vw
suffix:colon
l_int|1
comma
DECL|member|phys_add_size
id|phys_add_size
suffix:colon
l_int|7
comma
DECL|member|key_size
id|key_size
suffix:colon
l_int|8
comma
DECL|member|max_pkr
id|max_pkr
suffix:colon
l_int|8
comma
DECL|member|hash_tag_id
id|hash_tag_id
suffix:colon
l_int|8
comma
DECL|member|max_dtr_entry
id|max_dtr_entry
suffix:colon
l_int|8
comma
DECL|member|max_itr_entry
id|max_itr_entry
suffix:colon
l_int|8
comma
DECL|member|max_unique_tcs
id|max_unique_tcs
suffix:colon
l_int|8
comma
DECL|member|num_tc_levels
id|num_tc_levels
suffix:colon
l_int|8
suffix:semicolon
DECL|member|pal_vm_info_1_s
)brace
id|pal_vm_info_1_s
suffix:semicolon
DECL|typedef|pal_vm_info_1_u_t
)brace
id|pal_vm_info_1_u_t
suffix:semicolon
DECL|union|pal_vm_info_2_u
r_typedef
r_union
id|pal_vm_info_2_u
(brace
DECL|member|pvi2_val
id|u64
id|pvi2_val
suffix:semicolon
r_struct
(brace
DECL|member|impl_va_msb
id|u64
id|impl_va_msb
suffix:colon
l_int|8
comma
DECL|member|rid_size
id|rid_size
suffix:colon
l_int|8
comma
DECL|member|reserved
id|reserved
suffix:colon
l_int|48
suffix:semicolon
DECL|member|pal_vm_info_2_s
)brace
id|pal_vm_info_2_s
suffix:semicolon
DECL|typedef|pal_vm_info_2_u_t
)brace
id|pal_vm_info_2_u_t
suffix:semicolon
multiline_comment|/* Get summary information about the virtual memory characteristics of the processor &n; * implementation.&n; */
r_static
r_inline
id|s64
DECL|function|ia64_pal_vm_summary
id|ia64_pal_vm_summary
(paren
id|pal_vm_info_1_u_t
op_star
id|vm_info_1
comma
id|pal_vm_info_2_u_t
op_star
id|vm_info_2
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_VM_SUMMARY
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|vm_info_1
)paren
id|vm_info_1-&gt;pvi1_val
op_assign
id|iprv.v0
suffix:semicolon
r_if
c_cond
(paren
id|vm_info_2
)paren
id|vm_info_2-&gt;pvi2_val
op_assign
id|iprv.v1
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
DECL|union|pal_itr_valid_u
r_typedef
r_union
id|pal_itr_valid_u
(brace
DECL|member|piv_val
id|u64
id|piv_val
suffix:semicolon
r_struct
(brace
DECL|member|access_rights_valid
id|u64
id|access_rights_valid
suffix:colon
l_int|1
comma
DECL|member|priv_level_valid
id|priv_level_valid
suffix:colon
l_int|1
comma
DECL|member|dirty_bit_valid
id|dirty_bit_valid
suffix:colon
l_int|1
comma
DECL|member|mem_attr_valid
id|mem_attr_valid
suffix:colon
l_int|1
comma
DECL|member|reserved
id|reserved
suffix:colon
l_int|60
suffix:semicolon
DECL|member|pal_tr_valid_s
)brace
id|pal_tr_valid_s
suffix:semicolon
DECL|typedef|pal_tr_valid_u_t
)brace
id|pal_tr_valid_u_t
suffix:semicolon
multiline_comment|/* Read a translation register */
r_static
r_inline
id|s64
DECL|function|ia64_pal_tr_read
id|ia64_pal_tr_read
(paren
id|u64
id|reg_num
comma
id|u64
id|tr_type
comma
id|u64
op_star
id|tr_buffer
comma
id|pal_tr_valid_u_t
op_star
id|tr_valid
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL_PHYS_STK
c_func
(paren
id|iprv
comma
id|PAL_VM_TR_READ
comma
id|reg_num
comma
id|tr_type
comma
(paren
id|u64
)paren
id|__pa
c_func
(paren
id|tr_buffer
)paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|tr_valid
)paren
id|tr_valid-&gt;piv_val
op_assign
id|iprv.v0
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
r_static
r_inline
id|s64
DECL|function|ia64_pal_prefetch_visibility
id|ia64_pal_prefetch_visibility
(paren
r_void
)paren
(brace
r_struct
id|ia64_pal_retval
id|iprv
suffix:semicolon
id|PAL_CALL
c_func
(paren
id|iprv
comma
id|PAL_PREFETCH_VISIBILITY
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
suffix:semicolon
r_return
id|iprv.status
suffix:semicolon
)brace
macro_line|#endif /* __ASSEMBLY__ */
macro_line|#endif /* _ASM_IA64_PAL_H */
eof
