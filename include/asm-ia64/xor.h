multiline_comment|/*&n; * include/asm-ia64/xor.h&n; *&n; * Optimized RAID-5 checksumming functions for IA-64.&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2, or (at your option)&n; * any later version.&n; *&n; * You should have received a copy of the GNU General Public License&n; * (for example /usr/src/linux/COPYING); if not, write to the Free&n; * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; */
r_extern
r_void
id|xor_ia64_2
c_func
(paren
r_int
r_int
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
)paren
suffix:semicolon
r_extern
r_void
id|xor_ia64_3
c_func
(paren
r_int
r_int
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
)paren
suffix:semicolon
r_extern
r_void
id|xor_ia64_4
c_func
(paren
r_int
r_int
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
)paren
suffix:semicolon
r_extern
r_void
id|xor_ia64_5
c_func
(paren
r_int
r_int
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
comma
r_int
r_int
op_star
)paren
suffix:semicolon
id|asm
(paren
"&quot;"
dot
id|text
singleline_comment|// Assume L2 memory latency of 6 cycles.
dot
id|proc
id|xor_ia64_2
id|xor_ia64_2
suffix:colon
dot
id|prologue
dot
id|fframe
l_int|0
(brace
dot
id|mii
dot
id|save
id|ar.pfs
comma
id|r31
id|alloc
id|r31
op_assign
id|ar.pfs
comma
l_int|3
comma
l_int|0
comma
l_int|13
comma
l_int|16
dot
id|save
id|ar.lc
comma
id|r30
id|mov
id|r30
op_assign
id|ar.lc
dot
id|save
id|pr
comma
id|r29
id|mov
id|r29
op_assign
id|pr
suffix:semicolon
suffix:semicolon
)brace
dot
id|body
(brace
dot
id|mii
id|mov
id|r8
op_assign
id|in1
id|mov
id|ar.ec
op_assign
l_int|6
op_plus
l_int|2
id|shr
id|in0
op_assign
id|in0
comma
l_int|3
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mmi
id|adds
id|in0
op_assign
op_minus
l_int|1
comma
id|in0
id|mov
id|r16
op_assign
id|in1
id|mov
id|r17
op_assign
id|in2
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mii
id|mov
id|ar.lc
op_assign
id|in0
id|mov
id|pr.rot
op_assign
l_int|1
op_lshift
l_int|16
suffix:semicolon
suffix:semicolon
)brace
dot
id|rotr
id|s1
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s2
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|d
(braket
l_int|2
)braket
dot
id|rotp
id|p
(braket
l_int|6
op_plus
l_int|2
)braket
l_int|0
suffix:colon
(brace
dot
id|mmi
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s1
(braket
l_int|0
)braket
op_assign
(braket
id|r16
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s2
(braket
l_int|0
)braket
op_assign
(braket
id|r17
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|d
(braket
l_int|0
)braket
op_assign
id|s1
(braket
l_int|6
)braket
comma
id|s2
(braket
l_int|6
)braket
)brace
(brace
dot
id|mfb
(paren
id|p
(braket
l_int|6
op_plus
l_int|1
)braket
)paren
id|st8.nta
(braket
id|r8
)braket
op_assign
id|d
(braket
l_int|1
)braket
comma
l_int|8
id|nop.f
l_int|0
id|br.ctop.dptk.few
l_int|0
id|b
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mii
id|mov
id|ar.lc
op_assign
id|r30
id|mov
id|pr
op_assign
id|r29
comma
op_minus
l_int|1
)brace
(brace
dot
id|bbb
id|br.ret.sptk.few
id|rp
)brace
dot
id|endp
id|xor_ia64_2
dot
id|proc
id|xor_ia64_3
id|xor_ia64_3
suffix:colon
dot
id|prologue
dot
id|fframe
l_int|0
(brace
dot
id|mii
dot
id|save
id|ar.pfs
comma
id|r31
id|alloc
id|r31
op_assign
id|ar.pfs
comma
l_int|4
comma
l_int|0
comma
l_int|20
comma
l_int|24
dot
id|save
id|ar.lc
comma
id|r30
id|mov
id|r30
op_assign
id|ar.lc
dot
id|save
id|pr
comma
id|r29
id|mov
id|r29
op_assign
id|pr
suffix:semicolon
suffix:semicolon
)brace
dot
id|body
(brace
dot
id|mii
id|mov
id|r8
op_assign
id|in1
id|mov
id|ar.ec
op_assign
l_int|6
op_plus
l_int|2
id|shr
id|in0
op_assign
id|in0
comma
l_int|3
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mmi
id|adds
id|in0
op_assign
op_minus
l_int|1
comma
id|in0
id|mov
id|r16
op_assign
id|in1
id|mov
id|r17
op_assign
id|in2
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mii
id|mov
id|r18
op_assign
id|in3
id|mov
id|ar.lc
op_assign
id|in0
id|mov
id|pr.rot
op_assign
l_int|1
op_lshift
l_int|16
suffix:semicolon
suffix:semicolon
)brace
dot
id|rotr
id|s1
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s2
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s3
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|d
(braket
l_int|2
)braket
dot
id|rotp
id|p
(braket
l_int|6
op_plus
l_int|2
)braket
l_int|0
suffix:colon
(brace
dot
id|mmi
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s1
(braket
l_int|0
)braket
op_assign
(braket
id|r16
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s2
(braket
l_int|0
)braket
op_assign
(braket
id|r17
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|d
(braket
l_int|0
)braket
op_assign
id|s1
(braket
l_int|6
)braket
comma
id|s2
(braket
l_int|6
)braket
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mmi
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s3
(braket
l_int|0
)braket
op_assign
(braket
id|r18
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
op_plus
l_int|1
)braket
)paren
id|st8.nta
(braket
id|r8
)braket
op_assign
id|d
(braket
l_int|1
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|d
(braket
l_int|0
)braket
op_assign
id|d
(braket
l_int|0
)braket
comma
id|s3
(braket
l_int|6
)braket
)brace
(brace
dot
id|bbb
id|br.ctop.dptk.few
l_int|0
id|b
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mii
id|mov
id|ar.lc
op_assign
id|r30
id|mov
id|pr
op_assign
id|r29
comma
op_minus
l_int|1
)brace
(brace
dot
id|bbb
id|br.ret.sptk.few
id|rp
)brace
dot
id|endp
id|xor_ia64_3
dot
id|proc
id|xor_ia64_4
id|xor_ia64_4
suffix:colon
dot
id|prologue
dot
id|fframe
l_int|0
(brace
dot
id|mii
dot
id|save
id|ar.pfs
comma
id|r31
id|alloc
id|r31
op_assign
id|ar.pfs
comma
l_int|5
comma
l_int|0
comma
l_int|27
comma
l_int|32
dot
id|save
id|ar.lc
comma
id|r30
id|mov
id|r30
op_assign
id|ar.lc
dot
id|save
id|pr
comma
id|r29
id|mov
id|r29
op_assign
id|pr
suffix:semicolon
suffix:semicolon
)brace
dot
id|body
(brace
dot
id|mii
id|mov
id|r8
op_assign
id|in1
id|mov
id|ar.ec
op_assign
l_int|6
op_plus
l_int|2
id|shr
id|in0
op_assign
id|in0
comma
l_int|3
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mmi
id|adds
id|in0
op_assign
op_minus
l_int|1
comma
id|in0
id|mov
id|r16
op_assign
id|in1
id|mov
id|r17
op_assign
id|in2
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mii
id|mov
id|r18
op_assign
id|in3
id|mov
id|ar.lc
op_assign
id|in0
id|mov
id|pr.rot
op_assign
l_int|1
op_lshift
l_int|16
)brace
(brace
dot
id|mfb
id|mov
id|r19
op_assign
id|in4
suffix:semicolon
suffix:semicolon
)brace
dot
id|rotr
id|s1
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s2
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s3
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s4
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|d
(braket
l_int|2
)braket
dot
id|rotp
id|p
(braket
l_int|6
op_plus
l_int|2
)braket
l_int|0
suffix:colon
(brace
dot
id|mmi
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s1
(braket
l_int|0
)braket
op_assign
(braket
id|r16
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s2
(braket
l_int|0
)braket
op_assign
(braket
id|r17
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|d
(braket
l_int|0
)braket
op_assign
id|s1
(braket
l_int|6
)braket
comma
id|s2
(braket
l_int|6
)braket
)brace
(brace
dot
id|mmi
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s3
(braket
l_int|0
)braket
op_assign
(braket
id|r18
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s4
(braket
l_int|0
)braket
op_assign
(braket
id|r19
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|r20
op_assign
id|s3
(braket
l_int|6
)braket
comma
id|s4
(braket
l_int|6
)braket
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mib
(paren
id|p
(braket
l_int|6
op_plus
l_int|1
)braket
)paren
id|st8.nta
(braket
id|r8
)braket
op_assign
id|d
(braket
l_int|1
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|d
(braket
l_int|0
)braket
op_assign
id|d
(braket
l_int|0
)braket
comma
id|r20
id|br.ctop.dptk.few
l_int|0
id|b
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mii
id|mov
id|ar.lc
op_assign
id|r30
id|mov
id|pr
op_assign
id|r29
comma
op_minus
l_int|1
)brace
(brace
dot
id|bbb
id|br.ret.sptk.few
id|rp
)brace
dot
id|endp
id|xor_ia64_4
dot
id|proc
id|xor_ia64_5
id|xor_ia64_5
suffix:colon
dot
id|prologue
dot
id|fframe
l_int|0
(brace
dot
id|mii
dot
id|save
id|ar.pfs
comma
id|r31
id|alloc
id|r31
op_assign
id|ar.pfs
comma
l_int|6
comma
l_int|0
comma
l_int|34
comma
l_int|40
dot
id|save
id|ar.lc
comma
id|r30
id|mov
id|r30
op_assign
id|ar.lc
dot
id|save
id|pr
comma
id|r29
id|mov
id|r29
op_assign
id|pr
suffix:semicolon
suffix:semicolon
)brace
dot
id|body
(brace
dot
id|mii
id|mov
id|r8
op_assign
id|in1
id|mov
id|ar.ec
op_assign
l_int|6
op_plus
l_int|2
id|shr
id|in0
op_assign
id|in0
comma
l_int|3
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mmi
id|adds
id|in0
op_assign
op_minus
l_int|1
comma
id|in0
id|mov
id|r16
op_assign
id|in1
id|mov
id|r17
op_assign
id|in2
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mii
id|mov
id|r18
op_assign
id|in3
id|mov
id|ar.lc
op_assign
id|in0
id|mov
id|pr.rot
op_assign
l_int|1
op_lshift
l_int|16
)brace
(brace
dot
id|mib
id|mov
id|r19
op_assign
id|in4
id|mov
id|r20
op_assign
id|in5
suffix:semicolon
suffix:semicolon
)brace
dot
id|rotr
id|s1
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s2
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s3
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s4
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|s5
(braket
l_int|6
op_plus
l_int|1
)braket
comma
id|d
(braket
l_int|2
)braket
dot
id|rotp
id|p
(braket
l_int|6
op_plus
l_int|2
)braket
l_int|0
suffix:colon
(brace
dot
id|mmi
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s1
(braket
l_int|0
)braket
op_assign
(braket
id|r16
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s2
(braket
l_int|0
)braket
op_assign
(braket
id|r17
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|d
(braket
l_int|0
)braket
op_assign
id|s1
(braket
l_int|6
)braket
comma
id|s2
(braket
l_int|6
)braket
)brace
(brace
dot
id|mmi
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s3
(braket
l_int|0
)braket
op_assign
(braket
id|r18
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s4
(braket
l_int|0
)braket
op_assign
(braket
id|r19
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|r21
op_assign
id|s3
(braket
l_int|6
)braket
comma
id|s4
(braket
l_int|6
)braket
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mmi
(paren
id|p
(braket
l_int|0
)braket
)paren
id|ld8.nta
id|s5
(braket
l_int|0
)braket
op_assign
(braket
id|r20
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
op_plus
l_int|1
)braket
)paren
id|st8.nta
(braket
id|r8
)braket
op_assign
id|d
(braket
l_int|1
)braket
comma
l_int|8
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|d
(braket
l_int|0
)braket
op_assign
id|d
(braket
l_int|0
)braket
comma
id|r21
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mfb
(paren
id|p
(braket
l_int|6
)braket
)paren
op_xor
id|d
(braket
l_int|0
)braket
op_assign
id|d
(braket
l_int|0
)braket
comma
id|s5
(braket
l_int|6
)braket
id|nop.f
l_int|0
id|br.ctop.dptk.few
l_int|0
id|b
suffix:semicolon
suffix:semicolon
)brace
(brace
dot
id|mii
id|mov
id|ar.lc
op_assign
id|r30
id|mov
id|pr
op_assign
id|r29
comma
op_minus
l_int|1
)brace
(brace
dot
id|bbb
id|br.ret.sptk.few
id|rp
)brace
dot
id|endp
id|xor_ia64_5
"&quot;"
)paren
suffix:semicolon
DECL|variable|xor_block_ia64
r_static
r_struct
id|xor_block_template
id|xor_block_ia64
op_assign
(brace
id|name
suffix:colon
l_string|&quot;ia64&quot;
comma
id|do_2
suffix:colon
id|xor_ia64_2
comma
id|do_3
suffix:colon
id|xor_ia64_3
comma
id|do_4
suffix:colon
id|xor_ia64_4
comma
id|do_5
suffix:colon
id|xor_ia64_5
comma
)brace
suffix:semicolon
DECL|macro|XOR_TRY_TEMPLATES
mdefine_line|#define XOR_TRY_TEMPLATES&t;xor_speed(&amp;xor_block_ia64)
eof
