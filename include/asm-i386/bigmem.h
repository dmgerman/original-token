multiline_comment|/*&n; * bigmem.h:&t;virtual kernel memory mappings for big memory&n; *&n; * Used in CONFIG_BIGMEM systems for memory pages which&t;are not&n; * addressable by direct kernel virtual adresses.&n; *&n; * Copyright (C) 1999 Gerhard Wichert, Siemens AG&n; *&t;&t;      Gerhard.Wichert@pdb.siemens.de&n; */
macro_line|#ifndef _ASM_BIGMEM_H
DECL|macro|_ASM_BIGMEM_H
mdefine_line|#define _ASM_BIGMEM_H
macro_line|#include &lt;linux/init.h&gt;
DECL|macro|BIGMEM_DEBUG
mdefine_line|#define BIGMEM_DEBUG /* undef for production */
multiline_comment|/* declarations for bigmem.c */
r_extern
r_int
r_int
id|bigmem_start
comma
id|bigmem_end
suffix:semicolon
r_extern
r_int
id|nr_free_bigpages
suffix:semicolon
r_extern
id|pte_t
op_star
id|kmap_pte
suffix:semicolon
r_extern
id|pgprot_t
id|kmap_prot
suffix:semicolon
r_extern
r_void
id|kmap_init
c_func
(paren
r_void
)paren
id|__init
suffix:semicolon
multiline_comment|/* kmap helper functions necessary to access the bigmem pages in kernel */
macro_line|#include &lt;asm/pgtable.h&gt;
macro_line|#include &lt;asm/kmap_types.h&gt;
DECL|function|kmap
r_extern
r_inline
r_int
r_int
id|kmap
c_func
(paren
r_int
r_int
id|kaddr
comma
r_enum
id|km_type
id|type
)paren
(brace
r_if
c_cond
(paren
id|__pa
c_func
(paren
id|kaddr
)paren
OL
id|bigmem_start
)paren
r_return
id|kaddr
suffix:semicolon
(brace
r_enum
id|fixed_addresses
id|idx
op_assign
id|type
op_plus
id|KM_TYPE_NR
op_star
id|smp_processor_id
c_func
(paren
)paren
suffix:semicolon
r_int
r_int
id|vaddr
op_assign
id|__fix_to_virt
c_func
(paren
id|FIX_KMAP_BEGIN
op_plus
id|idx
)paren
suffix:semicolon
macro_line|#ifdef BIGMEM_DEBUG
r_if
c_cond
(paren
op_logical_neg
id|pte_none
c_func
(paren
op_star
(paren
id|kmap_pte
op_minus
id|idx
)paren
)paren
)paren
(brace
id|__label__
id|here
suffix:semicolon
id|here
suffix:colon
id|printk
c_func
(paren
id|KERN_ERR
l_string|&quot;not null pte on CPU %d from %p&bslash;n&quot;
comma
id|smp_processor_id
c_func
(paren
)paren
comma
op_logical_and
id|here
)paren
suffix:semicolon
)brace
macro_line|#endif
id|set_pte
c_func
(paren
id|kmap_pte
op_minus
id|idx
comma
id|mk_pte
c_func
(paren
id|kaddr
op_amp
id|PAGE_MASK
comma
id|kmap_prot
)paren
)paren
suffix:semicolon
id|__flush_tlb_one
c_func
(paren
id|vaddr
)paren
suffix:semicolon
r_return
id|vaddr
op_or
(paren
id|kaddr
op_amp
op_complement
id|PAGE_MASK
)paren
suffix:semicolon
)brace
)brace
DECL|function|kunmap
r_extern
r_inline
r_void
id|kunmap
c_func
(paren
r_int
r_int
id|vaddr
comma
r_enum
id|km_type
id|type
)paren
(brace
macro_line|#ifdef BIGMEM_DEBUG
r_enum
id|fixed_addresses
id|idx
op_assign
id|type
op_plus
id|KM_TYPE_NR
op_star
id|smp_processor_id
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
id|vaddr
op_amp
id|PAGE_MASK
)paren
op_eq
id|__fix_to_virt
c_func
(paren
id|FIX_KMAP_BEGIN
op_plus
id|idx
)paren
)paren
(brace
multiline_comment|/* force other mappings to Oops if they&squot;ll try to access&n;&t;&t;   this pte without first remap it */
id|pte_clear
c_func
(paren
id|kmap_pte
op_minus
id|idx
)paren
suffix:semicolon
id|__flush_tlb_one
c_func
(paren
id|vaddr
)paren
suffix:semicolon
)brace
macro_line|#endif
)brace
macro_line|#endif /* _ASM_BIGMEM_H */
eof
