multiline_comment|/*&n; * linux/include/asm-i386/timex.h&n; *&n; * i386 architecture timex specifications&n; */
macro_line|#ifndef _ASMi386_TIMEX_H
DECL|macro|_ASMi386_TIMEX_H
mdefine_line|#define _ASMi386_TIMEX_H
DECL|macro|CLOCK_TICK_RATE
mdefine_line|#define CLOCK_TICK_RATE&t;1193180 /* Underlying HZ */
DECL|macro|CLOCK_TICK_FACTOR
mdefine_line|#define CLOCK_TICK_FACTOR&t;20&t;/* Factor of both 1000000 and CLOCK_TICK_RATE */
DECL|macro|FINETUNE
mdefine_line|#define FINETUNE ((((((long)LATCH * HZ - CLOCK_TICK_RATE) &lt;&lt; SHIFT_HZ) * &bslash;&n;&t;(1000000/CLOCK_TICK_FACTOR) / (CLOCK_TICK_RATE/CLOCK_TICK_FACTOR)) &bslash;&n;&t;&t;&lt;&lt; (SHIFT_SCALE-SHIFT_HZ)) / HZ)
multiline_comment|/*&n; * Standard way to access the cycle counter on i586+ CPUs.&n; * Currently only used on SMP.&n; */
DECL|typedef|cycles_t
r_typedef
r_int
r_int
r_int
id|cycles_t
suffix:semicolon
r_extern
id|cycles_t
id|cacheflush_time
suffix:semicolon
DECL|function|get_cycles
r_static
r_inline
id|cycles_t
id|get_cycles
(paren
r_void
)paren
(brace
id|cycles_t
id|value
suffix:semicolon
id|__asm__
c_func
(paren
l_string|&quot;rdtsc&quot;
suffix:colon
l_string|&quot;=a&quot;
(paren
op_star
(paren
(paren
(paren
r_int
op_star
)paren
op_amp
id|value
)paren
op_plus
l_int|0
)paren
)paren
comma
l_string|&quot;=d&quot;
(paren
op_star
(paren
(paren
(paren
r_int
op_star
)paren
op_amp
id|value
)paren
op_plus
l_int|1
)paren
)paren
)paren
suffix:semicolon
r_return
id|value
suffix:semicolon
)brace
macro_line|#endif
eof
