multiline_comment|/*&n; * include/asm-i386/i387.h&n; *&n; * Copyright (C) 1994 Linus Torvalds&n; *&n; * Pentium III FXSR, SSE support&n; * General FPU state handling cleanups&n; *&t;Gareth Hughes &lt;gareth@valinux.com&gt;, May 2000&n; */
macro_line|#ifndef __ASM_I386_I387_H
DECL|macro|__ASM_I386_I387_H
mdefine_line|#define __ASM_I386_I387_H
macro_line|#include &lt;linux/sched.h&gt;
macro_line|#include &lt;asm/processor.h&gt;
macro_line|#include &lt;asm/sigcontext.h&gt;
macro_line|#include &lt;asm/user.h&gt;
r_extern
r_void
id|init_fpu
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n; * FPU lazy state save handling...&n; */
r_extern
r_void
id|save_init_fpu
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
)paren
suffix:semicolon
r_extern
r_void
id|restore_fpu
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
)paren
suffix:semicolon
DECL|macro|unlazy_fpu
mdefine_line|#define unlazy_fpu( tsk ) do { &bslash;&n;&t;if ( tsk-&gt;flags &amp; PF_USEDFPU ) &bslash;&n;&t;&t;save_init_fpu( tsk ); &bslash;&n;} while (0)
DECL|macro|clear_fpu
mdefine_line|#define clear_fpu( tsk ) do { &bslash;&n;&t;if ( tsk-&gt;flags &amp; PF_USEDFPU ) { &bslash;&n;&t;&t;asm volatile(&quot;fwait&quot;); &bslash;&n;&t;&t;tsk-&gt;flags &amp;= ~PF_USEDFPU; &bslash;&n;&t;&t;stts(); &bslash;&n;&t;} &bslash;&n;} while (0)
multiline_comment|/*&n; * FPU state interaction...&n; */
r_extern
r_int
r_int
id|get_fpu_cwd
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
)paren
suffix:semicolon
r_extern
r_int
r_int
id|get_fpu_swd
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
)paren
suffix:semicolon
r_extern
r_int
r_int
id|get_fpu_twd
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
)paren
suffix:semicolon
r_extern
r_int
r_int
id|get_fpu_mxcsr
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
)paren
suffix:semicolon
r_extern
r_void
id|set_fpu_cwd
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
comma
r_int
r_int
id|cwd
)paren
suffix:semicolon
r_extern
r_void
id|set_fpu_swd
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
comma
r_int
r_int
id|swd
)paren
suffix:semicolon
r_extern
r_void
id|set_fpu_twd
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
comma
r_int
r_int
id|twd
)paren
suffix:semicolon
r_extern
r_void
id|set_fpu_mxcsr
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
comma
r_int
r_int
id|mxcsr
)paren
suffix:semicolon
DECL|macro|load_mxcsr
mdefine_line|#define load_mxcsr( val ) do { &bslash;&n;&t;if ( cpu_has_xmm ) { &bslash;&n;&t;&t;unsigned long __mxcsr = ((unsigned long)(val) &amp; 0xffff); &bslash;&n;&t;&t;asm volatile( &quot;ldmxcsr %0&quot; : : &quot;m&quot; (__mxcsr) ); &bslash;&n;&t;} &bslash;&n;} while (0)
multiline_comment|/*&n; * Signal frame handlers...&n; */
r_extern
r_int
id|save_i387
c_func
(paren
r_struct
id|_fpstate
op_star
id|buf
)paren
suffix:semicolon
r_extern
r_int
id|restore_i387
c_func
(paren
r_struct
id|_fpstate
op_star
id|buf
)paren
suffix:semicolon
multiline_comment|/*&n; * ptrace request handers...&n; */
r_extern
r_int
id|get_fpregs
c_func
(paren
r_struct
id|user_i387_struct
op_star
id|buf
comma
r_struct
id|task_struct
op_star
id|tsk
)paren
suffix:semicolon
r_extern
r_int
id|set_fpregs
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
comma
r_struct
id|user_i387_struct
op_star
id|buf
)paren
suffix:semicolon
r_extern
r_int
id|get_fpxregs
c_func
(paren
r_struct
id|user_fxsr_struct
op_star
id|buf
comma
r_struct
id|task_struct
op_star
id|tsk
)paren
suffix:semicolon
r_extern
r_int
id|set_fpxregs
c_func
(paren
r_struct
id|task_struct
op_star
id|tsk
comma
r_struct
id|user_fxsr_struct
op_star
id|buf
)paren
suffix:semicolon
multiline_comment|/*&n; * FPU state for core dumps...&n; */
r_extern
r_int
id|dump_fpu
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
comma
r_struct
id|user_i387_struct
op_star
id|fpu
)paren
suffix:semicolon
r_extern
r_int
id|dump_extended_fpu
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
comma
r_struct
id|user_fxsr_struct
op_star
id|fpu
)paren
suffix:semicolon
macro_line|#endif /* __ASM_I386_I387_H */
eof
