macro_line|#ifndef __I386_SMPLOCK_H
DECL|macro|__I386_SMPLOCK_H
mdefine_line|#define __I386_SMPLOCK_H
macro_line|#ifndef __SMP__
DECL|macro|lock_kernel
mdefine_line|#define lock_kernel()&t;&t;do { } while(0)
DECL|macro|unlock_kernel
mdefine_line|#define unlock_kernel()&t;&t;do { } while(0)
macro_line|#else
multiline_comment|/* Locking the kernel */
DECL|function|lock_kernel
r_extern
id|__inline__
r_void
id|lock_kernel
c_func
(paren
r_void
)paren
(brace
r_int
id|cpu
op_assign
id|smp_processor_id
c_func
(paren
)paren
suffix:semicolon
id|__asm__
id|__volatile__
c_func
(paren
"&quot;"
id|pushfl
id|cli
id|cmpl
"$"
l_int|0
comma
op_mod
l_int|0
id|jne
l_float|0f
id|movl
"$"
l_float|0f
comma
op_mod
op_mod
id|eax
id|jmp
id|__lock_kernel
l_int|0
suffix:colon
id|incl
op_mod
l_int|0
id|popfl
"&quot;"
suffix:colon
suffix:colon
l_string|&quot;m&quot;
(paren
id|current_set
(braket
id|cpu
)braket
op_member_access_from_pointer
id|lock_depth
)paren
comma
l_string|&quot;d&quot;
(paren
id|cpu
)paren
suffix:colon
l_string|&quot;ax&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
DECL|function|unlock_kernel
r_extern
id|__inline__
r_void
id|unlock_kernel
c_func
(paren
r_void
)paren
(brace
id|__asm__
id|__volatile__
c_func
(paren
"&quot;"
id|pushfl
id|cli
id|decl
op_mod
l_int|0
id|jnz
l_float|1f
id|movb
op_mod
l_int|1
comma
id|active_kernel_processor
id|lock
id|btrl
"$"
l_int|0
comma
id|kernel_flag
l_int|1
suffix:colon
id|popfl
"&quot;"
suffix:colon
multiline_comment|/* no outputs */
suffix:colon
l_string|&quot;m&quot;
(paren
id|current-&gt;lock_depth
)paren
comma
l_string|&quot;i&quot;
(paren
id|NO_PROC_ID
)paren
suffix:colon
l_string|&quot;ax&quot;
comma
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
macro_line|#endif /* __SMP__ */
macro_line|#endif /* __I386_SMPLOCK_H */
eof
