macro_line|#ifndef&t;__ASM_SH_KEYBOARD_H
DECL|macro|__ASM_SH_KEYBOARD_H
mdefine_line|#define&t;__ASM_SH_KEYBOARD_H
multiline_comment|/*&n; *&t;$Id: keyboard.h,v 1.1 2000/06/10 21:45:48 yaegashi Exp $&n; */
macro_line|#include &lt;linux/config.h&gt;
DECL|function|kbd_setkeycode
r_static
id|__inline__
r_int
id|kbd_setkeycode
c_func
(paren
r_int
r_int
id|scancode
comma
r_int
r_int
id|keycode
)paren
(brace
r_return
op_minus
id|EOPNOTSUPP
suffix:semicolon
)brace
DECL|function|kbd_getkeycode
r_static
id|__inline__
r_int
id|kbd_getkeycode
c_func
(paren
r_int
r_int
id|scancode
)paren
(brace
r_return
id|scancode
OG
l_int|127
ques
c_cond
op_minus
id|EINVAL
suffix:colon
id|scancode
suffix:semicolon
)brace
DECL|function|kbd_translate
r_static
id|__inline__
r_int
id|kbd_translate
c_func
(paren
r_int
r_char
id|scancode
comma
r_int
r_char
op_star
id|keycode
comma
r_char
id|raw_mode
)paren
(brace
op_star
id|keycode
op_assign
id|scancode
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
DECL|function|kbd_unexpected_up
r_static
id|__inline__
r_char
id|kbd_unexpected_up
c_func
(paren
r_int
r_char
id|keycode
)paren
(brace
r_return
l_int|0200
suffix:semicolon
)brace
DECL|function|kbd_leds
r_static
id|__inline__
r_void
id|kbd_leds
c_func
(paren
r_int
r_char
id|leds
)paren
(brace
)brace
macro_line|#ifdef CONFIG_SH_HP600
r_void
id|__init
id|hp600_kbd_init_hw
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|macro|kbd_init_hw
mdefine_line|#define kbd_init_hw hp600_kbd_init_hw
macro_line|#else
DECL|function|kbd_init_hw
r_static
id|__inline__
r_void
id|kbd_init_hw
c_func
(paren
r_void
)paren
(brace
)brace
macro_line|#endif
macro_line|#endif
eof
