multiline_comment|/* Software floating-point emulation.&n;   Basic eight-word fraction declaration and manipulation.&n;   Copyright (C) 1997,1998,1999 Free Software Foundation, Inc.&n;   This file is part of the GNU C Library.&n;   Contributed by Richard Henderson (rth@cygnus.com),&n;&t;&t;  Jakub Jelinek (jj@ultra.linux.cz) and&n;&t;&t;  Peter Maydell (pmaydell@chiark.greenend.org.uk).&n;                                                         &n;   The GNU C Library is free software; you can redistribute it and/or&n;   modify it under the terms of the GNU Library General Public License as&n;   published by the Free Software Foundation; either version 2 of the&n;   License, or (at your option) any later version.&n;&n;   The GNU C Library is distributed in the hope that it will be useful,&n;   but WITHOUT ANY WARRANTY; without even the implied warranty of&n;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU&n;   Library General Public License for more details.&n;&n;   You should have received a copy of the GNU Library General Public&n;   License along with the GNU C Library; see the file COPYING.LIB.  If&n;   not, write to the Free Software Foundation, Inc.,&n;   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
multiline_comment|/* We need just a few things from here for op-4, if we ever need some&n;   other macros, they can be added. */
DECL|macro|_FP_FRAC_DECL_8
mdefine_line|#define _FP_FRAC_DECL_8(X)&t;_FP_W_TYPE X##_f[8]
DECL|macro|_FP_FRAC_HIGH_8
mdefine_line|#define _FP_FRAC_HIGH_8(X)&t;(X##_f[7])
DECL|macro|_FP_FRAC_LOW_8
mdefine_line|#define _FP_FRAC_LOW_8(X)&t;(X##_f[0])
DECL|macro|_FP_FRAC_WORD_8
mdefine_line|#define _FP_FRAC_WORD_8(X,w)&t;(X##_f[w])
DECL|macro|_FP_FRAC_SLL_8
mdefine_line|#define _FP_FRAC_SLL_8(X,N)&t;&t;&t;&t;&t;&t;&bslash;&n;  do {&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    _FP_I_TYPE _up, _down, _skip, _i;&t;&t;&t;&t;&t;&bslash;&n;    _skip = (N) / _FP_W_TYPE_SIZE;&t;&t;&t;&t;&t;&bslash;&n;    _up = (N) % _FP_W_TYPE_SIZE;&t;&t;&t;&t;&t;&bslash;&n;    _down = _FP_W_TYPE_SIZE - _up;&t;&t;&t;&t;&t;&bslash;&n;    if (!_up)&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;      for (_i = 7; _i &gt;= _skip; --_i)&t;&t;&t;&t;&t;&bslash;&n;&t;X##_f[_i] = X##_f[_i-_skip];&t;&t;&t;&t;&t;&bslash;&n;    else&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;      {&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;for (_i = 7; _i &gt; _skip; --_i)&t;&t;&t;&t;&t;&bslash;&n;&t;  X##_f[_i] = X##_f[_i-_skip] &lt;&lt; _up&t;&t;&t;&t;&bslash;&n;&t;&t;      | X##_f[_i-_skip-1] &gt;&gt; _down;&t;&t;&t;&bslash;&n;&t;X##_f[_i--] = X##_f[0] &lt;&lt; _up; &t;&t;&t;&t;&t;&bslash;&n;      }&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    for (; _i &gt;= 0; --_i)&t;&t;&t;&t;&t;&t;&bslash;&n;      X##_f[_i] = 0;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;  } while (0)
DECL|macro|_FP_FRAC_SRL_8
mdefine_line|#define _FP_FRAC_SRL_8(X,N)&t;&t;&t;&t;&t;&t;&bslash;&n;  do {&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    _FP_I_TYPE _up, _down, _skip, _i;&t;&t;&t;&t;&t;&bslash;&n;    _skip = (N) / _FP_W_TYPE_SIZE;&t;&t;&t;&t;&t;&bslash;&n;    _down = (N) % _FP_W_TYPE_SIZE;&t;&t;&t;&t;&t;&bslash;&n;    _up = _FP_W_TYPE_SIZE - _down;&t;&t;&t;&t;&t;&bslash;&n;    if (!_down)&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;      for (_i = 0; _i &lt;= 7-_skip; ++_i)&t;&t;&t;&t;&t;&bslash;&n;&t;X##_f[_i] = X##_f[_i+_skip];&t;&t;&t;&t;&t;&bslash;&n;    else&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;      {&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;for (_i = 0; _i &lt; 7-_skip; ++_i)&t;&t;&t;&t;&bslash;&n;&t;  X##_f[_i] = X##_f[_i+_skip] &gt;&gt; _down&t;&t;&t;&t;&bslash;&n;&t;&t;      | X##_f[_i+_skip+1] &lt;&lt; _up;&t;&t;&t;&bslash;&n;&t;X##_f[_i++] = X##_f[7] &gt;&gt; _down;&t;&t;&t;&t;&bslash;&n;      }&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    for (; _i &lt; 8; ++_i)&t;&t;&t;&t;&t;&t;&bslash;&n;      X##_f[_i] = 0;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;  } while (0)
multiline_comment|/* Right shift with sticky-lsb. &n; * What this actually means is that we do a standard right-shift,&n; * but that if any of the bits that fall off the right hand side&n; * were one then we always set the LSbit.&n; */
DECL|macro|_FP_FRAC_SRS_8
mdefine_line|#define _FP_FRAC_SRS_8(X,N,size)&t;&t;&t;&t;&t;&bslash;&n;  do {&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    _FP_I_TYPE _up, _down, _skip, _i;&t;&t;&t;&t;&t;&bslash;&n;    _FP_W_TYPE _s;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    _skip = (N) / _FP_W_TYPE_SIZE;&t;&t;&t;&t;&t;&bslash;&n;    _down = (N) % _FP_W_TYPE_SIZE;&t;&t;&t;&t;&t;&bslash;&n;    _up = _FP_W_TYPE_SIZE - _down;&t;&t;&t;&t;&t;&bslash;&n;    for (_s = _i = 0; _i &lt; _skip; ++_i)&t;&t;&t;&t;&t;&bslash;&n;      _s |= X##_f[_i];&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    _s |= X##_f[_i] &lt;&lt; _up;&t;&t;&t;&t;&t;&t;&bslash;&n;/* s is now != 0 if we want to set the LSbit */&t;&t;&t;&t;&bslash;&n;    if (!_down)&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;      for (_i = 0; _i &lt;= 7-_skip; ++_i)&t;&t;&t;&t;&t;&bslash;&n;&t;X##_f[_i] = X##_f[_i+_skip];&t;&t;&t;&t;&t;&bslash;&n;    else&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;      {&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;for (_i = 0; _i &lt; 7-_skip; ++_i)&t;&t;&t;&t;&bslash;&n;&t;  X##_f[_i] = X##_f[_i+_skip] &gt;&gt; _down&t;&t;&t;&t;&bslash;&n;&t;&t;      | X##_f[_i+_skip+1] &lt;&lt; _up;&t;&t;&t;&bslash;&n;&t;X##_f[_i++] = X##_f[7] &gt;&gt; _down;&t;&t;&t;&t;&bslash;&n;      }&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    for (; _i &lt; 8; ++_i)&t;&t;&t;&t;&t;&t;&bslash;&n;      X##_f[_i] = 0;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;    /* don&squot;t fix the LSB until the very end when we&squot;re sure f[0] is stable */&t;&bslash;&n;    X##_f[0] |= (_s != 0);&t;&t;&t;&t;&t;&t;&bslash;&n;  } while (0)
eof
