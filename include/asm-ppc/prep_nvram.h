multiline_comment|/*&n; * PreP compliant NVRAM access&n; */
multiline_comment|/* Corey Minyard (minyard@acm.org) - Stolen from PReP book.   Per the&n;   license I must say:&n;     (C) Copyright (Corey Minyard), (1998).  All rights reserved&n; */
multiline_comment|/* Structure map for NVRAM on PowerPC Reference Platform */
multiline_comment|/* All fields are either character/byte strings which are valid either&n;  endian or they are big-endian numbers.&n;&n;  There are a number of Date and Time fields which are in RTC format,&n;  big-endian. These are stored in UT (GMT).&n;&n;  For enum&squot;s: if given in hex then they are bit significant, i.e. only&n;  one bit is on for each enum.&n;*/
macro_line|#ifdef __KERNEL__
macro_line|#ifndef _PPC_PREP_NVRAM_H
DECL|macro|_PPC_PREP_NVRAM_H
mdefine_line|#define _PPC_PREP_NVRAM_H
DECL|macro|NVSIZE
mdefine_line|#define NVSIZE 4096&t;/* size of NVRAM */
DECL|macro|OSAREASIZE
mdefine_line|#define OSAREASIZE 512&t;/* size of OSArea space */
DECL|macro|CONFSIZE
mdefine_line|#define CONFSIZE 1024&t;/* guess at size of Configuration space */
DECL|struct|_SECURITY
r_typedef
r_struct
id|_SECURITY
(brace
DECL|member|BootErrCnt
r_int
r_int
id|BootErrCnt
suffix:semicolon
multiline_comment|/* Count of boot password errors */
DECL|member|ConfigErrCnt
r_int
r_int
id|ConfigErrCnt
suffix:semicolon
multiline_comment|/* Count of config password errors */
DECL|member|BootErrorDT
r_int
r_int
id|BootErrorDT
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last error in pw */
DECL|member|ConfigErrorDT
r_int
r_int
id|ConfigErrorDT
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last error in pw */
DECL|member|BootCorrectDT
r_int
r_int
id|BootCorrectDT
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last correct pw */
DECL|member|ConfigCorrectDT
r_int
r_int
id|ConfigCorrectDT
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last correct pw */
DECL|member|BootSetDT
r_int
r_int
id|BootSetDT
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last set of pw */
DECL|member|ConfigSetDT
r_int
r_int
id|ConfigSetDT
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last set of pw */
DECL|member|Serial
r_int
r_char
id|Serial
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Box serial number */
DECL|typedef|SECURITY
)brace
id|SECURITY
suffix:semicolon
DECL|enum|_OS_ID
r_typedef
r_enum
id|_OS_ID
(brace
DECL|enumerator|Unknown
id|Unknown
op_assign
l_int|0
comma
DECL|enumerator|Firmware
id|Firmware
op_assign
l_int|1
comma
DECL|enumerator|AIX
id|AIX
op_assign
l_int|2
comma
DECL|enumerator|NT
id|NT
op_assign
l_int|3
comma
DECL|enumerator|MKOS2
id|MKOS2
op_assign
l_int|4
comma
DECL|enumerator|MKAIX
id|MKAIX
op_assign
l_int|5
comma
DECL|enumerator|Taligent
id|Taligent
op_assign
l_int|6
comma
DECL|enumerator|Solaris
id|Solaris
op_assign
l_int|7
comma
DECL|enumerator|MK
id|MK
op_assign
l_int|12
DECL|typedef|OS_ID
)brace
id|OS_ID
suffix:semicolon
DECL|struct|_ERROR_LOG
r_typedef
r_struct
id|_ERROR_LOG
(brace
DECL|member|ErrorLogEntry
r_int
r_char
id|ErrorLogEntry
(braket
l_int|40
)braket
suffix:semicolon
multiline_comment|/* To be architected */
DECL|typedef|ERROR_LOG
)brace
id|ERROR_LOG
suffix:semicolon
DECL|enum|_BOOT_STATUS
r_typedef
r_enum
id|_BOOT_STATUS
(brace
DECL|enumerator|BootStarted
id|BootStarted
op_assign
l_int|0x01
comma
DECL|enumerator|BootFinished
id|BootFinished
op_assign
l_int|0x02
comma
DECL|enumerator|RestartStarted
id|RestartStarted
op_assign
l_int|0x04
comma
DECL|enumerator|RestartFinished
id|RestartFinished
op_assign
l_int|0x08
comma
DECL|enumerator|PowerFailStarted
id|PowerFailStarted
op_assign
l_int|0x10
comma
DECL|enumerator|PowerFailFinished
id|PowerFailFinished
op_assign
l_int|0x20
comma
DECL|enumerator|ProcessorReady
id|ProcessorReady
op_assign
l_int|0x40
comma
DECL|enumerator|ProcessorRunning
id|ProcessorRunning
op_assign
l_int|0x80
comma
DECL|enumerator|ProcessorStart
id|ProcessorStart
op_assign
l_int|0x0100
DECL|typedef|BOOT_STATUS
)brace
id|BOOT_STATUS
suffix:semicolon
DECL|struct|_RESTART_BLOCK
r_typedef
r_struct
id|_RESTART_BLOCK
(brace
DECL|member|Version
r_int
r_int
id|Version
suffix:semicolon
DECL|member|Revision
r_int
r_int
id|Revision
suffix:semicolon
DECL|member|ResumeReserve1
r_int
r_int
id|ResumeReserve1
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|BootStatus
r_volatile
r_int
r_int
id|BootStatus
suffix:semicolon
DECL|member|CheckSum
r_int
r_int
id|CheckSum
suffix:semicolon
multiline_comment|/* Checksum of RESTART_BLOCK */
DECL|member|RestartAddress
r_void
op_star
id|RestartAddress
suffix:semicolon
DECL|member|SaveAreaAddr
r_void
op_star
id|SaveAreaAddr
suffix:semicolon
DECL|member|SaveAreaLength
r_int
r_int
id|SaveAreaLength
suffix:semicolon
DECL|typedef|RESTART_BLOCK
)brace
id|RESTART_BLOCK
suffix:semicolon
DECL|enum|_OSAREA_USAGE
r_typedef
r_enum
id|_OSAREA_USAGE
(brace
DECL|enumerator|Empty
id|Empty
op_assign
l_int|0
comma
DECL|enumerator|Used
id|Used
op_assign
l_int|1
DECL|typedef|OSAREA_USAGE
)brace
id|OSAREA_USAGE
suffix:semicolon
DECL|enum|_PM_MODE
r_typedef
r_enum
id|_PM_MODE
(brace
DECL|enumerator|Suspend
id|Suspend
op_assign
l_int|0x80
comma
multiline_comment|/* Part of state is in memory */
DECL|enumerator|Normal
id|Normal
op_assign
l_int|0x00
multiline_comment|/* No power management in effect */
DECL|typedef|PMMode
)brace
id|PMMode
suffix:semicolon
DECL|struct|_HEADER
r_typedef
r_struct
id|_HEADER
(brace
DECL|member|Size
r_int
r_int
id|Size
suffix:semicolon
multiline_comment|/* NVRAM size in K(1024) */
DECL|member|Version
r_int
r_char
id|Version
suffix:semicolon
multiline_comment|/* Structure map different */
DECL|member|Revision
r_int
r_char
id|Revision
suffix:semicolon
multiline_comment|/* Structure map the same -may&n;                                be new values in old fields&n;                                in other words old code still works */
DECL|member|Crc1
r_int
r_int
id|Crc1
suffix:semicolon
multiline_comment|/* check sum from beginning of nvram to OSArea */
DECL|member|Crc2
r_int
r_int
id|Crc2
suffix:semicolon
multiline_comment|/* check sum of config */
DECL|member|LastOS
r_int
r_char
id|LastOS
suffix:semicolon
multiline_comment|/* OS_ID */
DECL|member|Endian
r_int
r_char
id|Endian
suffix:semicolon
multiline_comment|/* B if big endian, L if little endian */
DECL|member|OSAreaUsage
r_int
r_char
id|OSAreaUsage
suffix:semicolon
multiline_comment|/* OSAREA_USAGE */
DECL|member|PMMode
r_int
r_char
id|PMMode
suffix:semicolon
multiline_comment|/* Shutdown mode */
DECL|member|RestartBlock
id|RESTART_BLOCK
id|RestartBlock
suffix:semicolon
DECL|member|Security
id|SECURITY
id|Security
suffix:semicolon
DECL|member|ErrorLog
id|ERROR_LOG
id|ErrorLog
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Global Environment information */
DECL|member|GEAddress
r_void
op_star
id|GEAddress
suffix:semicolon
DECL|member|GELength
r_int
r_int
id|GELength
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last change to Global Environment */
DECL|member|GELastWriteDT
r_int
r_int
id|GELastWriteDT
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Configuration information */
DECL|member|ConfigAddress
r_void
op_star
id|ConfigAddress
suffix:semicolon
DECL|member|ConfigLength
r_int
r_int
id|ConfigLength
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last change to Configuration */
DECL|member|ConfigLastWriteDT
r_int
r_int
id|ConfigLastWriteDT
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|ConfigCount
r_int
r_int
id|ConfigCount
suffix:semicolon
multiline_comment|/* Count of entries in Configuration */
multiline_comment|/* OS dependent temp area */
DECL|member|OSAreaAddress
r_void
op_star
id|OSAreaAddress
suffix:semicolon
DECL|member|OSAreaLength
r_int
r_int
id|OSAreaLength
suffix:semicolon
multiline_comment|/* Date&amp;Time from RTC of last change to OSAreaArea */
DECL|member|OSAreaLastWriteDT
r_int
r_int
id|OSAreaLastWriteDT
(braket
l_int|2
)braket
suffix:semicolon
DECL|typedef|HEADER
)brace
id|HEADER
suffix:semicolon
multiline_comment|/* Here is the whole map of the NVRAM */
DECL|struct|_NVRAM_MAP
r_typedef
r_struct
id|_NVRAM_MAP
(brace
DECL|member|Header
id|HEADER
id|Header
suffix:semicolon
DECL|member|GEArea
r_int
r_char
id|GEArea
(braket
id|NVSIZE
op_minus
id|CONFSIZE
op_minus
id|OSAREASIZE
op_minus
r_sizeof
(paren
id|HEADER
)paren
)braket
suffix:semicolon
DECL|member|OSArea
r_int
r_char
id|OSArea
(braket
id|OSAREASIZE
)braket
suffix:semicolon
DECL|member|ConfigArea
r_int
r_char
id|ConfigArea
(braket
id|CONFSIZE
)braket
suffix:semicolon
DECL|typedef|NVRAM_MAP
)brace
id|NVRAM_MAP
suffix:semicolon
multiline_comment|/* Routines to manipulate the NVRAM */
r_void
id|init_prep_nvram
c_func
(paren
r_void
)paren
suffix:semicolon
r_char
op_star
id|prep_nvram_get_var
c_func
(paren
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
r_char
op_star
id|prep_nvram_first_var
c_func
(paren
r_void
)paren
suffix:semicolon
r_char
op_star
id|prep_nvram_next_var
c_func
(paren
r_char
op_star
id|name
)paren
suffix:semicolon
multiline_comment|/* Routines to read and write directly to the NVRAM */
r_int
r_char
id|prep_nvram_read_val
c_func
(paren
r_int
id|addr
)paren
suffix:semicolon
r_void
id|prep_nvram_write_val
c_func
(paren
r_int
id|addr
comma
r_int
r_char
id|val
)paren
suffix:semicolon
macro_line|#endif /* _PPC_PREP_NVRAM_H */
macro_line|#endif /* __KERNEL__ */
eof
