multiline_comment|/* $Id: kgdb.h,v 1.2 1998/04/11 17:29:07 geert Exp $&n; * kgdb.h: Defines and declarations for serial line source level&n; *         remote debugging of the Linux kernel using gdb.&n; *&n; * PPC Mods (C) 1998 Michael Tesch (tesch@cs.wisc.edu)&n; *&n; * Copyright (C) 1995 David S. Miller (davem@caip.rutgers.edu)&n; */
macro_line|#ifdef __KERNEL__
macro_line|#ifndef _PPC_KGDB_H
DECL|macro|_PPC_KGDB_H
mdefine_line|#define _PPC_KGDB_H
macro_line|#ifndef __ASSEMBLY__
multiline_comment|/* To initialize the serial, first thing called */
r_extern
r_void
id|zs_kgdb_hook
c_func
(paren
r_int
id|tty_num
)paren
suffix:semicolon
multiline_comment|/* To init the kgdb engine. (called by serial hook)*/
r_extern
r_void
id|set_debug_traps
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* To enter the debugger explicitly. */
r_extern
r_void
id|breakpoint
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* For taking exceptions&n; * these are defined in traps.c&n; */
r_extern
r_void
(paren
op_star
id|debugger
)paren
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_int
(paren
op_star
id|debugger_bpt
)paren
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_int
(paren
op_star
id|debugger_sstep
)paren
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_int
(paren
op_star
id|debugger_iabr_match
)paren
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_int
(paren
op_star
id|debugger_dabr_match
)paren
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_void
(paren
op_star
id|debugger_fault_handler
)paren
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
multiline_comment|/* What we bring to the party */
r_int
id|kgdb_bpt
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_int
id|kgdb_sstep
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_void
id|kgdb
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_int
id|kgdb_iabr_match
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_int
id|kgdb_dabr_match
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_static
r_void
id|kgdb_fault_handler
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_static
r_void
id|handle_exception
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
multiline_comment|/*&n; * external low-level support routines (ie macserial.c)&n; */
r_extern
r_void
id|kgdb_interruptible
c_func
(paren
r_int
)paren
suffix:semicolon
multiline_comment|/* control interrupts from serial */
r_extern
r_void
id|putDebugChar
c_func
(paren
r_char
)paren
suffix:semicolon
multiline_comment|/* write a single character      */
r_extern
r_char
id|getDebugChar
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* read and return a single char */
macro_line|#endif /* !(__ASSEMBLY__) */
macro_line|#endif /* !(_PPC_KGDB_H) */
macro_line|#endif /* __KERNEL__ */
eof
