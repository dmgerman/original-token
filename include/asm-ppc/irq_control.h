multiline_comment|/*&n; * $Id: irq_control.h,v 1.8 1999/09/15 23:58:48 cort Exp $&n; *&n; * Copyright (C) 1999 Cort Dougan &lt;cort@cs.nmt.edu&gt;&n; */
macro_line|#ifndef _PPC_IRQ_CONTROL_H
DECL|macro|_PPC_IRQ_CONTROL_H
mdefine_line|#define _PPC_IRQ_CONTROL_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;asm/irq.h&gt;
macro_line|#include &lt;asm/atomic.h&gt;
multiline_comment|/* Structure describing interrupts */
DECL|struct|hw_interrupt_type
r_struct
id|hw_interrupt_type
(brace
DECL|member|typename
r_const
r_char
op_star
r_typename
suffix:semicolon
DECL|member|startup
r_void
(paren
op_star
id|startup
)paren
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
DECL|member|shutdown
r_void
(paren
op_star
id|shutdown
)paren
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
DECL|member|enable
r_void
(paren
op_star
id|enable
)paren
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
DECL|member|disable
r_void
(paren
op_star
id|disable
)paren
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
DECL|member|mask_and_ack
r_void
(paren
op_star
id|mask_and_ack
)paren
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
DECL|member|irq_offset
r_int
id|irq_offset
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|irqdesc
r_struct
id|irqdesc
(brace
DECL|member|action
r_struct
id|irqaction
op_star
id|action
suffix:semicolon
DECL|member|ctl
r_struct
id|hw_interrupt_type
op_star
id|ctl
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|irqdesc
id|irq_desc
(braket
id|NR_IRQS
)braket
suffix:semicolon
DECL|struct|int_control_struct
r_struct
id|int_control_struct
(brace
DECL|member|int_cli
r_void
(paren
op_star
id|int_cli
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|int_sti
r_void
(paren
op_star
id|int_sti
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|int_restore_flags
r_void
(paren
op_star
id|int_restore_flags
)paren
(paren
r_int
r_int
)paren
suffix:semicolon
DECL|member|int_save_flags
r_void
(paren
op_star
id|int_save_flags
)paren
(paren
r_int
r_int
op_star
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|int_control_struct
id|int_control
suffix:semicolon
r_extern
r_int
r_int
id|timer_interrupt_intercept
suffix:semicolon
r_extern
r_int
r_int
id|do_IRQ_intercept
suffix:semicolon
r_void
id|timer_interrupt
c_func
(paren
r_struct
id|pt_regs
op_star
)paren
suffix:semicolon
r_extern
r_void
id|__no_use_sti
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|__no_use_cli
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|__no_use_restore_flags
c_func
(paren
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|__no_use_save_flags
c_func
(paren
r_int
r_int
op_star
)paren
suffix:semicolon
DECL|macro|__cli
mdefine_line|#define __cli() int_control.int_cli()
DECL|macro|__sti
mdefine_line|#define __sti() int_control.int_sti()
DECL|macro|__save_flags
mdefine_line|#define __save_flags(flags) int_control.int_save_flags(&amp;flags)
DECL|macro|__restore_flags
mdefine_line|#define __restore_flags(flags) int_control.int_restore_flags(flags)
DECL|macro|__save_and_cli
mdefine_line|#define __save_and_cli(flags) ({__save_flags(flags);__cli();})
r_extern
r_void
id|do_lost_interrupts
c_func
(paren
r_int
r_int
)paren
suffix:semicolon
r_extern
id|atomic_t
id|ppc_n_lost_interrupts
suffix:semicolon
DECL|macro|mask_irq
mdefine_line|#define mask_irq(irq) ({if (irq_desc[irq].ctl &amp;&amp; irq_desc[irq].ctl-&gt;disable) irq_desc[irq].ctl-&gt;disable(irq);})
DECL|macro|unmask_irq
mdefine_line|#define unmask_irq(irq) ({if (irq_desc[irq].ctl &amp;&amp; irq_desc[irq].ctl-&gt;enable) irq_desc[irq].ctl-&gt;enable(irq);})
DECL|macro|mask_and_ack_irq
mdefine_line|#define mask_and_ack_irq(irq) ({if (irq_desc[irq].ctl &amp;&amp; irq_desc[irq].ctl-&gt;mask_and_ack) irq_desc[irq].ctl-&gt;mask_and_ack(irq);})
macro_line|#endif /* _PPC_IRQ_CONTROL_H */
eof
