multiline_comment|/*&n; *  ncplib_kernel.h&n; *&n; *  Copyright (C) 1995, 1996 by Volker Lendecke&n; *  Modified for big endian by J.F. Chadima and David S. Miller&n; *  Modified 1997 Peter Waltenberg, Bill Hawes, David Woodhouse for 2.1 dcache&n; *  Modified 1998 Wolfram Pienkoss for NLS&n; *  Modified 1999 Wolfram Pienkoss for directory caching&n; *&n; */
macro_line|#ifndef _NCPLIB_H
DECL|macro|_NCPLIB_H
mdefine_line|#define _NCPLIB_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/fs.h&gt;
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/errno.h&gt;
macro_line|#include &lt;linux/malloc.h&gt;
macro_line|#include &lt;linux/stat.h&gt;
macro_line|#include &lt;linux/fcntl.h&gt;
macro_line|#include &lt;linux/pagemap.h&gt;
macro_line|#include &lt;asm/uaccess.h&gt;
macro_line|#include &lt;asm/byteorder.h&gt;
macro_line|#include &lt;asm/unaligned.h&gt;
macro_line|#include &lt;asm/string.h&gt;
macro_line|#ifdef CONFIG_NCPFS_NLS
macro_line|#include &lt;linux/nls.h&gt;
macro_line|#endif
macro_line|#include &lt;linux/ncp_fs.h&gt;
DECL|macro|NCP_MIN_SYMLINK_SIZE
mdefine_line|#define NCP_MIN_SYMLINK_SIZE&t;8
DECL|macro|NCP_MAX_SYMLINK_SIZE
mdefine_line|#define NCP_MAX_SYMLINK_SIZE&t;512
DECL|macro|NCP_BLOCK_SIZE
mdefine_line|#define NCP_BLOCK_SIZE&t;&t;512
r_int
id|ncp_negotiate_buffersize
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_int
comma
r_int
op_star
)paren
suffix:semicolon
r_int
id|ncp_negotiate_size_and_options
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_int
id|size
comma
r_int
id|options
comma
r_int
op_star
id|ret_size
comma
r_int
op_star
id|ret_options
)paren
suffix:semicolon
r_int
id|ncp_get_volume_info_with_number
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_int
comma
r_struct
id|ncp_volume_info
op_star
)paren
suffix:semicolon
r_int
id|ncp_close_file
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_const
r_char
op_star
)paren
suffix:semicolon
DECL|function|ncp_read_bounce_size
r_static
r_inline
r_int
id|ncp_read_bounce_size
c_func
(paren
id|__u32
id|size
)paren
(brace
r_return
r_sizeof
(paren
r_struct
id|ncp_reply_header
)paren
op_plus
l_int|2
op_plus
l_int|2
op_plus
id|size
op_plus
l_int|8
suffix:semicolon
)brace
suffix:semicolon
r_int
id|ncp_read_bounce
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_const
r_char
op_star
comma
id|__u32
comma
id|__u16
comma
r_char
op_star
comma
r_int
op_star
comma
r_void
op_star
id|bounce
comma
id|__u32
id|bouncelen
)paren
suffix:semicolon
r_int
id|ncp_read_kernel
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_const
r_char
op_star
comma
id|__u32
comma
id|__u16
comma
r_char
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_int
id|ncp_write_kernel
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_const
r_char
op_star
comma
id|__u32
comma
id|__u16
comma
r_const
r_char
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_int
id|ncp_obtain_info
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_struct
id|inode
op_star
comma
r_char
op_star
comma
r_struct
id|nw_info_struct
op_star
id|target
)paren
suffix:semicolon
r_int
id|ncp_lookup_volume
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_char
op_star
comma
r_struct
id|nw_info_struct
op_star
)paren
suffix:semicolon
r_int
id|ncp_modify_file_or_subdir_dos_info
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_struct
id|inode
op_star
comma
id|__u32
comma
r_const
r_struct
id|nw_modify_dos_info
op_star
id|info
)paren
suffix:semicolon
r_int
id|ncp_modify_file_or_subdir_dos_info_path
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_struct
id|inode
op_star
comma
r_const
r_char
op_star
id|path
comma
id|__u32
comma
r_const
r_struct
id|nw_modify_dos_info
op_star
id|info
)paren
suffix:semicolon
r_int
id|ncp_del_file_or_subdir2
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_int
id|ncp_del_file_or_subdir
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_struct
id|inode
op_star
comma
r_char
op_star
)paren
suffix:semicolon
r_int
id|ncp_open_create_file_or_subdir
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_struct
id|inode
op_star
comma
r_char
op_star
comma
r_int
comma
id|__u32
comma
r_int
comma
r_struct
id|ncp_entry_info
op_star
)paren
suffix:semicolon
r_int
id|ncp_initialize_search
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_struct
id|inode
op_star
comma
r_struct
id|nw_search_sequence
op_star
id|target
)paren
suffix:semicolon
r_int
id|ncp_search_for_file_or_subdir
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_struct
id|nw_search_sequence
op_star
id|seq
comma
r_struct
id|nw_info_struct
op_star
id|target
)paren
suffix:semicolon
r_int
id|ncp_ren_or_mov_file_or_subdir
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_struct
id|inode
op_star
comma
r_char
op_star
comma
r_struct
id|inode
op_star
comma
r_char
op_star
)paren
suffix:semicolon
r_int
id|ncp_LogPhysicalRecord
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_const
r_char
op_star
id|file_id
comma
id|__u8
id|locktype
comma
id|__u32
id|offset
comma
id|__u32
id|length
comma
id|__u16
id|timeout
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_NCPFS_IOCTL_LOCKING
r_int
id|ncp_ClearPhysicalRecord
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_const
r_char
op_star
id|file_id
comma
id|__u32
id|offset
comma
id|__u32
id|length
)paren
suffix:semicolon
macro_line|#endif&t;/* CONFIG_NCPFS_IOCTL_LOCKING */
macro_line|#ifdef CONFIG_NCPFS_MOUNT_SUBDIR
r_int
id|ncp_mount_subdir
c_func
(paren
r_struct
id|ncp_server
op_star
comma
r_struct
id|nw_info_struct
op_star
comma
id|__u8
comma
id|__u8
comma
id|__u32
)paren
suffix:semicolon
macro_line|#endif&t;/* CONFIG_NCPFS_MOUNT_SUBDIR */
macro_line|#ifdef CONFIG_NCPFS_NLS
multiline_comment|/* This are the NLS conversion routines with inspirations and code parts&n; * from the vfat file system and hints from Petr Vandrovec.&n; */
multiline_comment|/*&n; * It should be replaced by charset specifc conversion. Gordon Chaffee&n; * has prepared some things, but I don&squot;t know, what he thinks about it.&n; * The conversion tables for the io charsets should be generatable by&n; * Unicode table, shouldn&squot;t it? I have written so generation code for it.&n; * The tables for the vendor specific codepages...? Hmm. The Samba sources&n; * contains also any hints.&n; */
DECL|macro|toupperif
mdefine_line|#define toupperif(c, u) ((((u) != 0) &amp;&amp; ((c) &gt;= &squot;a&squot;) &amp;&amp; ((c) &lt;= &squot;z&squot;)) &bslash;&n;&t;&t;&t;? (c)-(&squot;a&squot;-&squot;A&squot;) : (c))
DECL|macro|tolowerif
mdefine_line|#define tolowerif(c, u) ((((u) != 0) &amp;&amp; ((c) &gt;= &squot;A&squot;) &amp;&amp; ((c) &lt;= &squot;Z&squot;)) &bslash;&n;&t;&t;&t;? (c)-(&squot;A&squot;-&squot;a&squot;) : (c))
r_static
r_inline
r_void
DECL|function|io2vol
id|io2vol
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_char
op_star
id|name
comma
r_int
id|case_trans
)paren
(brace
r_int
r_char
id|nc
suffix:semicolon
r_int
r_char
op_star
id|np
suffix:semicolon
r_int
r_char
op_star
id|up
suffix:semicolon
r_struct
id|nls_unicode
id|uc
suffix:semicolon
r_struct
id|nls_table
op_star
id|nls_in
suffix:semicolon
r_struct
id|nls_table
op_star
id|nls_out
suffix:semicolon
id|nls_in
op_assign
id|server-&gt;nls_io
suffix:semicolon
id|nls_out
op_assign
id|server-&gt;nls_vol
suffix:semicolon
id|np
op_assign
id|name
suffix:semicolon
r_while
c_loop
(paren
op_star
id|np
)paren
(brace
id|nc
op_assign
l_int|0
suffix:semicolon
id|uc
op_assign
id|nls_in-&gt;charset2uni
(braket
id|toupperif
c_func
(paren
op_star
id|np
comma
id|case_trans
)paren
)braket
suffix:semicolon
id|up
op_assign
id|nls_out-&gt;page_uni2charset
(braket
id|uc.uni2
)braket
suffix:semicolon
r_if
c_cond
(paren
id|up
op_ne
l_int|NULL
)paren
id|nc
op_assign
id|up
(braket
id|uc.uni1
)braket
suffix:semicolon
r_if
c_cond
(paren
id|nc
op_ne
l_int|0
)paren
op_star
id|np
op_assign
id|nc
suffix:semicolon
id|np
op_increment
suffix:semicolon
)brace
)brace
r_static
r_inline
r_void
DECL|function|vol2io
id|vol2io
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_char
op_star
id|name
comma
r_int
id|case_trans
)paren
(brace
r_int
r_char
id|nc
suffix:semicolon
r_int
r_char
op_star
id|np
suffix:semicolon
r_int
r_char
op_star
id|up
suffix:semicolon
r_struct
id|nls_unicode
id|uc
suffix:semicolon
r_struct
id|nls_table
op_star
id|nls_in
suffix:semicolon
r_struct
id|nls_table
op_star
id|nls_out
suffix:semicolon
id|nls_in
op_assign
id|server-&gt;nls_vol
suffix:semicolon
id|nls_out
op_assign
id|server-&gt;nls_io
suffix:semicolon
id|np
op_assign
id|name
suffix:semicolon
r_while
c_loop
(paren
op_star
id|np
)paren
(brace
id|nc
op_assign
l_int|0
suffix:semicolon
id|uc
op_assign
id|nls_in-&gt;charset2uni
(braket
op_star
id|np
)braket
suffix:semicolon
id|up
op_assign
id|nls_out-&gt;page_uni2charset
(braket
id|uc.uni2
)braket
suffix:semicolon
r_if
c_cond
(paren
id|up
op_ne
l_int|NULL
)paren
id|nc
op_assign
id|up
(braket
id|uc.uni1
)braket
suffix:semicolon
r_if
c_cond
(paren
id|nc
op_eq
l_int|0
)paren
id|nc
op_assign
op_star
id|np
suffix:semicolon
op_star
id|np
op_assign
id|tolowerif
c_func
(paren
id|nc
comma
id|case_trans
)paren
suffix:semicolon
id|np
op_increment
suffix:semicolon
)brace
)brace
macro_line|#else
DECL|macro|io2vol
mdefine_line|#define io2vol(S,N,U) if (U) str_upper(N)
DECL|macro|vol2io
mdefine_line|#define vol2io(S,N,U) if (U) str_lower(N)
macro_line|#endif /* CONFIG_NCPFS_NLS */
DECL|macro|NCP_GET_AGE
mdefine_line|#define NCP_GET_AGE(dentry)&t;(jiffies - (dentry)-&gt;d_time)
DECL|macro|NCP_MAX_AGE
mdefine_line|#define NCP_MAX_AGE&t;&t;(server-&gt;dentry_ttl)
DECL|macro|NCP_TEST_AGE
mdefine_line|#define NCP_TEST_AGE(server,dentry)&t;(NCP_GET_AGE(dentry) &lt; NCP_MAX_AGE)
r_static
r_inline
r_void
DECL|function|ncp_age_dentry
id|ncp_age_dentry
c_func
(paren
r_struct
id|ncp_server
op_star
id|server
comma
r_struct
id|dentry
op_star
id|dentry
)paren
(brace
id|dentry-&gt;d_time
op_assign
id|jiffies
op_minus
id|server-&gt;dentry_ttl
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|ncp_new_dentry
id|ncp_new_dentry
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
)paren
(brace
id|dentry-&gt;d_time
op_assign
id|jiffies
suffix:semicolon
)brace
DECL|macro|NCP_FPOS_EMPTY
mdefine_line|#define NCP_FPOS_EMPTY&t;0&t;/* init value for fpos variables. */
DECL|struct|ncp_cache_control
r_struct
id|ncp_cache_control
(brace
DECL|member|seq
r_struct
id|nw_search_sequence
id|seq
suffix:semicolon
DECL|member|firstcache
r_int
id|firstcache
suffix:semicolon
DECL|member|currentpos
r_int
id|currentpos
suffix:semicolon
DECL|member|cachehead
r_int
id|cachehead
suffix:semicolon
DECL|member|cachetail
r_int
id|cachetail
suffix:semicolon
DECL|member|eof
r_int
id|eof
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|NCP_DIRCACHE_SIZE
mdefine_line|#define NCP_DIRCACHE_SIZE&t;(PAGE_CACHE_SIZE-sizeof(struct ncp_cache_control))
DECL|struct|ncp_seq_cache
r_struct
id|ncp_seq_cache
(brace
DECL|member|ctl
r_struct
id|ncp_cache_control
id|ctl
suffix:semicolon
DECL|member|cache
r_int
r_char
id|cache
(braket
id|NCP_DIRCACHE_SIZE
)braket
suffix:semicolon
)brace
suffix:semicolon
macro_line|#endif /* _NCPLIB_H */
eof
