multiline_comment|/* r128_drv.h -- Private header for r128 driver -*- linux-c -*-&n; * Created: Mon Dec 13 09:51:11 1999 by faith@precisioninsight.com&n; *&n; * Copyright 1999 Precision Insight, Inc., Cedar Park, Texas.&n; * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.&n; * All rights reserved.&n; *&n; * Permission is hereby granted, free of charge, to any person obtaining a&n; * copy of this software and associated documentation files (the &quot;Software&quot;),&n; * to deal in the Software without restriction, including without limitation&n; * the rights to use, copy, modify, merge, publish, distribute, sublicense,&n; * and/or sell copies of the Software, and to permit persons to whom the&n; * Software is furnished to do so, subject to the following conditions:&n; * &n; * The above copyright notice and this permission notice (including the next&n; * paragraph) shall be included in all copies or substantial portions of the&n; * Software.&n; * &n; * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&n; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&n; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL&n; * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR&n; * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,&n; * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER&n; * DEALINGS IN THE SOFTWARE.&n; * &n; * Authors: Rickard E. (Rik) Faith &lt;faith@valinux.com&gt;&n; *          Kevin E. Martin &lt;martin@valinux.com&gt;&n; *&n; */
macro_line|#ifndef _R128_DRV_H_
DECL|macro|_R128_DRV_H_
mdefine_line|#define _R128_DRV_H_
DECL|struct|drm_r128_private
r_typedef
r_struct
id|drm_r128_private
(brace
DECL|member|is_pci
r_int
id|is_pci
suffix:semicolon
DECL|member|cce_mode
r_int
id|cce_mode
suffix:semicolon
DECL|member|cce_fifo_size
r_int
id|cce_fifo_size
suffix:semicolon
DECL|member|cce_is_bm_mode
r_int
id|cce_is_bm_mode
suffix:semicolon
DECL|member|cce_secure
r_int
id|cce_secure
suffix:semicolon
DECL|member|sarea_priv
id|drm_r128_sarea_t
op_star
id|sarea_priv
suffix:semicolon
DECL|member|ring_read_ptr
id|__volatile__
id|u32
op_star
id|ring_read_ptr
suffix:semicolon
DECL|member|ring_start
id|u32
op_star
id|ring_start
suffix:semicolon
DECL|member|ring_end
id|u32
op_star
id|ring_end
suffix:semicolon
DECL|member|ring_size
r_int
id|ring_size
suffix:semicolon
DECL|member|ring_sizel2qw
r_int
id|ring_sizel2qw
suffix:semicolon
DECL|member|ring_entries
r_int
id|ring_entries
suffix:semicolon
DECL|member|submit_age
r_int
id|submit_age
suffix:semicolon
DECL|member|usec_timeout
r_int
id|usec_timeout
suffix:semicolon
DECL|member|sarea
id|drm_map_t
op_star
id|sarea
suffix:semicolon
DECL|member|fb
id|drm_map_t
op_star
id|fb
suffix:semicolon
DECL|member|agp_ring
id|drm_map_t
op_star
id|agp_ring
suffix:semicolon
DECL|member|agp_read_ptr
id|drm_map_t
op_star
id|agp_read_ptr
suffix:semicolon
DECL|member|agp_vertbufs
id|drm_map_t
op_star
id|agp_vertbufs
suffix:semicolon
DECL|member|agp_indbufs
id|drm_map_t
op_star
id|agp_indbufs
suffix:semicolon
DECL|member|agp_textures
id|drm_map_t
op_star
id|agp_textures
suffix:semicolon
DECL|member|mmio
id|drm_map_t
op_star
id|mmio
suffix:semicolon
DECL|typedef|drm_r128_private_t
)brace
id|drm_r128_private_t
suffix:semicolon
DECL|struct|drm_r128_buf_priv
r_typedef
r_struct
id|drm_r128_buf_priv
(brace
DECL|member|age
id|u32
id|age
suffix:semicolon
DECL|typedef|drm_r128_buf_priv_t
)brace
id|drm_r128_buf_priv_t
suffix:semicolon
multiline_comment|/* r128_drv.c */
r_extern
r_int
id|r128_version
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_open
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
)paren
suffix:semicolon
r_extern
r_int
id|r128_release
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
)paren
suffix:semicolon
r_extern
r_int
id|r128_ioctl
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_lock
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_unlock
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* r128_dma.c */
r_extern
r_int
id|r128_init_cce
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_eng_reset
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_eng_flush
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_submit_pkt
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_cce_idle
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_vertex_buf
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* r128_bufs.c */
r_extern
r_int
id|r128_addbufs
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_mapbufs
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* r128_context.c */
r_extern
r_int
id|r128_resctx
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_addctx
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_modctx
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_getctx
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_switchctx
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_newctx
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_rmctx
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|r128_context_switch
c_func
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
id|old
comma
r_int
r_new
)paren
suffix:semicolon
r_extern
r_int
id|r128_context_switch_complete
c_func
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
r_new
)paren
suffix:semicolon
multiline_comment|/* Register definitions, register access macros and drmAddMap constants&n; * for Rage 128 kernel driver.&n; */
DECL|macro|R128_PC_NGUI_CTLSTAT
mdefine_line|#define R128_PC_NGUI_CTLSTAT&t;0x0184
DECL|macro|R128_PC_FLUSH_ALL
macro_line|#       define R128_PC_FLUSH_ALL&t;0x00ff
DECL|macro|R128_PC_BUSY
macro_line|#       define R128_PC_BUSY&t;&t;(1 &lt;&lt; 31)
DECL|macro|R128_CLOCK_CNTL_INDEX
mdefine_line|#define R128_CLOCK_CNTL_INDEX&t;0x0008
DECL|macro|R128_CLOCK_CNTL_DATA
mdefine_line|#define R128_CLOCK_CNTL_DATA&t;0x000c
DECL|macro|R128_PLL_WR_EN
macro_line|#       define R128_PLL_WR_EN&t;&t;(1 &lt;&lt; 7)
DECL|macro|R128_MCLK_CNTL
mdefine_line|#define R128_MCLK_CNTL&t;&t;0x000f
DECL|macro|R128_FORCE_GCP
macro_line|#       define R128_FORCE_GCP&t;&t;(1 &lt;&lt; 16)
DECL|macro|R128_FORCE_PIPE3D_CP
macro_line|#       define R128_FORCE_PIPE3D_CP&t;(1 &lt;&lt; 17)
DECL|macro|R128_FORCE_RCP
macro_line|#       define R128_FORCE_RCP&t;&t;(1 &lt;&lt; 18)
DECL|macro|R128_GEN_RESET_CNTL
mdefine_line|#define R128_GEN_RESET_CNTL&t;0x00f0
DECL|macro|R128_SOFT_RESET_GUI
macro_line|#       define R128_SOFT_RESET_GUI&t;(1 &lt;&lt;  0)
DECL|macro|R128_PM4_BUFFER_CNTL
mdefine_line|#define R128_PM4_BUFFER_CNTL&t;0x0704
DECL|macro|R128_PM4_NONPM4
macro_line|#       define R128_PM4_NONPM4&t;&t;&t;(0  &lt;&lt; 28)
DECL|macro|R128_PM4_192PIO
macro_line|#       define R128_PM4_192PIO&t;&t;&t;(1  &lt;&lt; 28)
DECL|macro|R128_PM4_192BM
macro_line|#       define R128_PM4_192BM&t;&t;&t;(2  &lt;&lt; 28)
DECL|macro|R128_PM4_128PIO_64INDBM
macro_line|#       define R128_PM4_128PIO_64INDBM&t;&t;(3  &lt;&lt; 28)
DECL|macro|R128_PM4_128BM_64INDBM
macro_line|#       define R128_PM4_128BM_64INDBM&t;&t;(4  &lt;&lt; 28)
DECL|macro|R128_PM4_64PIO_128INDBM
macro_line|#       define R128_PM4_64PIO_128INDBM&t;&t;(5  &lt;&lt; 28)
DECL|macro|R128_PM4_64BM_128INDBM
macro_line|#       define R128_PM4_64BM_128INDBM&t;&t;(6  &lt;&lt; 28)
DECL|macro|R128_PM4_64PIO_64VCBM_64INDBM
macro_line|#       define R128_PM4_64PIO_64VCBM_64INDBM&t;(7  &lt;&lt; 28)
DECL|macro|R128_PM4_64BM_64VCBM_64INDBM
macro_line|#       define R128_PM4_64BM_64VCBM_64INDBM&t;(8  &lt;&lt; 28)
DECL|macro|R128_PM4_64PIO_64VCPIO_64INDPIO
macro_line|#       define R128_PM4_64PIO_64VCPIO_64INDPIO&t;(15 &lt;&lt; 28)
DECL|macro|R128_PM4_BUFFER_DL_RPTR
mdefine_line|#define R128_PM4_BUFFER_DL_RPTR&t;0x0710
DECL|macro|R128_PM4_BUFFER_DL_WPTR
mdefine_line|#define R128_PM4_BUFFER_DL_WPTR&t;0x0714
DECL|macro|R128_PM4_BUFFER_DL_DONE
macro_line|#       define R128_PM4_BUFFER_DL_DONE&t;&t;(1 &lt;&lt; 31)
DECL|macro|R128_PM4_VC_FPU_SETUP
mdefine_line|#define R128_PM4_VC_FPU_SETUP&t;0x071c
DECL|macro|R128_PM4_STAT
mdefine_line|#define R128_PM4_STAT&t;&t;0x07b8
DECL|macro|R128_PM4_FIFOCNT_MASK
macro_line|#       define R128_PM4_FIFOCNT_MASK&t;&t;0x0fff
DECL|macro|R128_PM4_BUSY
macro_line|#       define R128_PM4_BUSY&t;&t;&t;(1 &lt;&lt; 16)
DECL|macro|R128_PM4_GUI_ACTIVE
macro_line|#       define R128_PM4_GUI_ACTIVE&t;&t;(1 &lt;&lt; 31)
DECL|macro|R128_PM4_BUFFER_ADDR
mdefine_line|#define R128_PM4_BUFFER_ADDR&t;0x07f0
DECL|macro|R128_PM4_MICRO_CNTL
mdefine_line|#define R128_PM4_MICRO_CNTL&t;0x07fc
DECL|macro|R128_PM4_MICRO_FREERUN
macro_line|#       define R128_PM4_MICRO_FREERUN&t;&t;(1 &lt;&lt; 30)
DECL|macro|R128_PM4_FIFO_DATA_EVEN
mdefine_line|#define R128_PM4_FIFO_DATA_EVEN&t;0x1000
DECL|macro|R128_PM4_FIFO_DATA_ODD
mdefine_line|#define R128_PM4_FIFO_DATA_ODD&t;0x1004
DECL|macro|R128_GUI_SCRATCH_REG0
mdefine_line|#define R128_GUI_SCRATCH_REG0&t;0x15e0
DECL|macro|R128_GUI_SCRATCH_REG1
mdefine_line|#define R128_GUI_SCRATCH_REG1&t;0x15e4
DECL|macro|R128_GUI_SCRATCH_REG2
mdefine_line|#define R128_GUI_SCRATCH_REG2&t;0x15e8
DECL|macro|R128_GUI_SCRATCH_REG3
mdefine_line|#define R128_GUI_SCRATCH_REG3&t;0x15ec
DECL|macro|R128_GUI_SCRATCH_REG4
mdefine_line|#define R128_GUI_SCRATCH_REG4&t;0x15f0
DECL|macro|R128_GUI_SCRATCH_REG5
mdefine_line|#define R128_GUI_SCRATCH_REG5&t;0x15f4
DECL|macro|R128_GUI_STAT
mdefine_line|#define R128_GUI_STAT&t;&t;0x1740
DECL|macro|R128_GUI_FIFOCNT_MASK
macro_line|#       define R128_GUI_FIFOCNT_MASK&t;&t;0x0fff
DECL|macro|R128_GUI_ACTIVE
macro_line|#       define R128_GUI_ACTIVE&t;&t;&t;(1 &lt;&lt; 31)
multiline_comment|/* CCE command packets */
DECL|macro|R128_CCE_PACKET0
mdefine_line|#define R128_CCE_PACKET0&t;0x00000000
DECL|macro|R128_CCE_PACKET1
mdefine_line|#define R128_CCE_PACKET1&t;0x40000000
DECL|macro|R128_CCE_PACKET2
mdefine_line|#define R128_CCE_PACKET2&t;0x80000000
DECL|macro|R128_CCE_PACKET_MASK
macro_line|#       define R128_CCE_PACKET_MASK&t;&t;0xC0000000
DECL|macro|R128_CCE_PACKET_COUNT_MASK
macro_line|#       define R128_CCE_PACKET_COUNT_MASK&t;0x3fff0000
DECL|macro|R128_CCE_PACKET0_REG_MASK
macro_line|#       define R128_CCE_PACKET0_REG_MASK&t;0x000007ff
DECL|macro|R128_CCE_PACKET1_REG0_MASK
macro_line|#       define R128_CCE_PACKET1_REG0_MASK&t;0x000007ff
DECL|macro|R128_CCE_PACKET1_REG1_MASK
macro_line|#       define R128_CCE_PACKET1_REG1_MASK&t;0x003ff800
DECL|macro|R128_MAX_USEC_TIMEOUT
mdefine_line|#define R128_MAX_USEC_TIMEOUT&t;100000&t;/* 100 ms */
DECL|macro|R128_BASE
mdefine_line|#define R128_BASE(reg)&t;&t;((unsigned long)(dev_priv-&gt;mmio-&gt;handle))
DECL|macro|R128_ADDR
mdefine_line|#define R128_ADDR(reg)&t;&t;(R128_BASE(reg) + reg)
DECL|macro|R128_DEREF
mdefine_line|#define R128_DEREF(reg)&t;&t;*(__volatile__ int *)R128_ADDR(reg)
DECL|macro|R128_READ
mdefine_line|#define R128_READ(reg)&t;&t;R128_DEREF(reg)
DECL|macro|R128_WRITE
mdefine_line|#define R128_WRITE(reg,val)&t;do { R128_DEREF(reg) = val; } while (0)
DECL|macro|R128_DEREF8
mdefine_line|#define R128_DEREF8(reg)&t;*(__volatile__ char *)R128_ADDR(reg)
DECL|macro|R128_READ8
mdefine_line|#define R128_READ8(reg)&t;&t;R128_DEREF8(reg)
DECL|macro|R128_WRITE8
mdefine_line|#define R128_WRITE8(reg,val)&t;do { R128_DEREF8(reg) = val; } while (0)
DECL|macro|R128_WRITE_PLL
mdefine_line|#define R128_WRITE_PLL(addr,val)                                              &bslash;&n;do {                                                                          &bslash;&n;&t;R128_WRITE8(R128_CLOCK_CNTL_INDEX, ((addr) &amp; 0x1f) | R128_PLL_WR_EN); &bslash;&n;&t;R128_WRITE(R128_CLOCK_CNTL_DATA, (val));                              &bslash;&n;} while (0)
r_extern
r_int
id|R128_READ_PLL
c_func
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
id|addr
)paren
suffix:semicolon
DECL|macro|R128CCE0
mdefine_line|#define R128CCE0(p,r,n)   ((p) | ((n) &lt;&lt; 16) | ((r) &gt;&gt; 2))
DECL|macro|R128CCE1
mdefine_line|#define R128CCE1(p,r1,r2) ((p) | (((r2) &gt;&gt; 2) &lt;&lt; 11) | ((r1) &gt;&gt; 2))
DECL|macro|R128CCE2
mdefine_line|#define R128CCE2(p)       ((p))
DECL|macro|R128CCE3
mdefine_line|#define R128CCE3(p,n)     ((p) | ((n) &lt;&lt; 16))
macro_line|#endif
eof
