multiline_comment|/*&n; *&n; *  (C) 1990 - 2000 Specialix International Ltd., Byfleet, Surrey, UK.&n; *&n; *      This program is free software; you can redistribute it and/or modify&n; *      it under the terms of the GNU General Public License as published by&n; *      the Free Software Foundation; either version 2 of the License, or&n; *      (at your option) any later version.&n; *&n; *      This program is distributed in the hope that it will be useful,&n; *      but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *      GNU General Public License for more details.&n; *&n; *      You should have received a copy of the GNU General Public License&n; *      along with this program; if not, write to the Free Software&n; *      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; */
macro_line|#ifndef&t;_prototypes_h
DECL|macro|_prototypes_h
mdefine_line|#define _prototypes_h
multiline_comment|/*&n;** boot.c&n;*/
r_void
id|init_boot
c_func
(paren
r_char
op_star
id|p
comma
r_int
id|stage
)paren
suffix:semicolon
multiline_comment|/*&n;** disconct.c&n;*/
r_void
id|kill_boot
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_void
id|disconnected
c_func
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_int
id|boot_3
c_func
(paren
id|LPB
op_star
id|link
comma
id|PKT
op_star
id|pkt
)paren
suffix:semicolon
r_int
id|send_3_pkt
c_func
(paren
id|LPB
op_star
id|link
comma
id|PKT
op_star
id|pkt
)paren
suffix:semicolon
multiline_comment|/*&n;** error.c&n;*/
r_void
id|du_error
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n;** formpkt.c&n;*/
id|ushort
id|sum_it
c_func
(paren
id|PKT
op_star
id|pkt
)paren
suffix:semicolon
r_void
id|form_rup_pkt
c_func
(paren
id|RUP
op_star
id|form_rup
comma
id|PKT
op_star
id|pkt
)paren
suffix:semicolon
r_void
id|form_poll_pkt
(paren
r_int
id|type
comma
id|LPB
op_star
id|link
comma
r_int
id|node
)paren
suffix:semicolon
r_void
id|form_route_pkt
(paren
r_int
id|type
comma
id|PKT
op_star
id|pkt
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** idle.c&n;*/
r_void
id|idle
c_func
(paren
id|Process
op_star
id|idle_p
)paren
suffix:semicolon
multiline_comment|/*&n;** init.c&n;*/
r_void
id|general_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|mem_halt
c_func
(paren
r_int
id|error
)paren
suffix:semicolon
multiline_comment|/*&n;** linkinit.c&n;*/
r_void
id|initlink
c_func
(paren
id|u_short
id|number
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_void
id|runlink
c_func
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** list.c&n;*/
id|PKT
op_star
id|get_free_start
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|put_free_start
c_func
(paren
id|PKT
op_star
id|pkt
)paren
suffix:semicolon
macro_line|#ifdef HOST
r_int
id|can_remove_transmit
(paren
id|PKT
op_star
op_star
id|pkt
comma
id|PKT
op_star
id|pointer
)paren
suffix:semicolon
macro_line|#endif
macro_line|#ifdef RTA
r_int
id|spl7
(paren
r_void
)paren
suffix:semicolon
r_int
id|spl0
(paren
r_void
)paren
suffix:semicolon
id|Q_BUF
op_star
id|get_free_q
c_func
(paren
r_void
)paren
suffix:semicolon
id|PKT
op_star
id|get_free_end
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|add_end
c_func
(paren
id|PKT
op_star
id|pkt
comma
id|PHB
op_star
id|phb
comma
r_int
id|type
)paren
suffix:semicolon
r_int
r_int
id|free_packets
c_func
(paren
id|PHB
op_star
id|phb
comma
r_int
id|type
)paren
suffix:semicolon
r_int
id|can_remove_start
c_func
(paren
id|PKT
op_star
op_star
id|pkt
comma
id|PHB
op_star
id|phb
comma
r_int
id|type
)paren
suffix:semicolon
r_int
id|can_add_start
c_func
(paren
id|PHB
op_star
id|phb
comma
r_int
id|type
)paren
suffix:semicolon
r_int
id|can_add_end
c_func
(paren
id|PHB
op_star
id|phb
comma
r_int
id|type
)paren
suffix:semicolon
r_void
id|put_free_end
c_func
(paren
id|PKT
op_star
id|pkt
)paren
suffix:semicolon
r_int
id|remove_start
c_func
(paren
id|PKT
op_star
op_star
id|pkt
comma
id|PHB
op_star
id|phb
comma
r_int
id|type
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n;** Lrt.c&n;*/
r_void
id|lrt
c_func
(paren
id|Process
op_star
id|lrt_p
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
macro_line|#ifdef RTA
r_void
id|set_led_red
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n;** ltt.c&n;*/
r_void
id|ltt
c_func
(paren
id|Process
op_star
id|ltt_p
comma
id|LPB
op_star
id|link
comma
id|PHB
op_star
id|phb_ptr
(braket
)braket
)paren
suffix:semicolon
r_void
id|send_poll
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_void
id|request_id
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_void
id|send_topology_update
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_void
id|send_topology
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_void
id|supply_id
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
macro_line|#ifdef RTA
r_void
id|redirect_queue
(paren
id|LPB
op_star
id|link
comma
id|ushort
id|flush
)paren
suffix:semicolon
r_int
id|obtain_rup
(paren
r_int
id|rup_number
comma
id|PKT
op_star
op_star
id|pkt_address
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
macro_line|#endif
macro_line|#ifdef TESTING_PERF
r_int
id|consume_cpu
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n;** lttwake.c&n;*/
macro_line|#ifdef HOST
r_void
id|ltt_wakeup
c_func
(paren
id|Process
op_star
id|ltt_wakeup_p
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n;** mapgen.c&n;*/
r_void
id|generate_id_map
c_func
(paren
r_int
id|mapping
comma
id|ROUTE_STR
id|route
(braket
)braket
)paren
suffix:semicolon
r_void
id|gen_map
c_func
(paren
r_int
id|mapping
comma
r_int
id|looking_at
comma
r_int
id|come_from
comma
id|ROUTE_STR
id|route
(braket
)braket
comma
r_int
id|link
comma
r_int
op_star
id|ttl
)paren
suffix:semicolon
r_void
id|adjust_ttl
c_func
(paren
r_int
id|mapping
comma
r_int
id|looking_at
comma
r_int
id|come_from
comma
id|ROUTE_STR
id|route
(braket
)braket
comma
r_int
id|link
comma
r_int
op_star
id|ttl
)paren
suffix:semicolon
r_void
id|init_sys_map
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n;** mmu.c&n;*/
r_char
op_star
id|rio_malloc
c_func
(paren
r_int
r_int
id|amount
)paren
suffix:semicolon
r_char
op_star
id|rio_calloc
c_func
(paren
r_int
r_int
id|num
comma
r_int
r_int
id|size
)paren
suffix:semicolon
id|ERROR
id|rio_mmu_init
c_func
(paren
id|uint
id|total_mem
)paren
suffix:semicolon
multiline_comment|/*&n;** partn.c&n;*/
r_void
id|partition_tx
c_func
(paren
r_struct
id|PHB
op_star
id|phb
comma
id|u_short
id|tx_size
comma
id|u_short
id|rx_size
comma
id|u_short
id|rx_limit
)paren
suffix:semicolon
multiline_comment|/*&n;** poll.c&n;*/
r_void
id|tx_poll
c_func
(paren
id|Process
op_star
id|tx_poll_p
)paren
suffix:semicolon
multiline_comment|/*&n;** process.c&n;*/
r_int
id|get_proc_space
c_func
(paren
id|Process
op_star
op_star
id|pd
comma
r_int
op_star
op_star
id|pws
comma
r_int
id|wssize
)paren
suffix:semicolon
multiline_comment|/*&n;** readrom.c&n;*/
r_void
id|read_serial_number
c_func
(paren
r_char
op_star
id|buf
)paren
suffix:semicolon
multiline_comment|/*&n;** rio.c&n;*/
r_int
id|main
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n;** route.c&n;*/
r_void
id|route_update
(paren
id|PKT
op_star
id|pkt
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** rtainit.c&n;*/
macro_line|#if defined(RTA)
r_void
id|rta_init
c_func
(paren
id|ushort
id|RtaType
)paren
suffix:semicolon
macro_line|#endif /* defined(RTA) */
multiline_comment|/*&n;** rupboot.c&n;*/
r_void
id|rup_boot
c_func
(paren
id|PKT
op_star
id|pkt
comma
id|RUP
op_star
id|this_rup
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
macro_line|#ifdef RTA
r_void
id|kill_your_neighbour
c_func
(paren
r_int
id|link_to_kill
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n;** rupcmd.c&n;*/
r_void
id|rup_command
c_func
(paren
id|PKT
op_star
id|pkt
comma
r_struct
id|RUP
op_star
id|this_rup
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** ruperr.c&n;*/
r_void
id|rup_error
c_func
(paren
id|PKT
op_star
id|pkt
comma
id|RUP
op_star
id|this_rup
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_void
id|illegal_cmd
c_func
(paren
id|PKT
op_star
id|src_pkt
)paren
suffix:semicolon
multiline_comment|/*&n;** ruppoll.c&n;*/
r_void
id|rup_poll
c_func
(paren
id|PKT
op_star
id|pkt
comma
id|RUP
op_star
id|this_rup
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** ruppower.c&n;*/
r_void
id|rup_power
c_func
(paren
id|PKT
op_star
id|pkt
comma
id|RUP
op_star
id|this_rup
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** ruprm.c&n;*/
r_void
id|rup_route_map
c_func
(paren
id|PKT
op_star
id|pkt
comma
id|RUP
op_star
id|this_rup
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** rupstat.c&n;*/
r_void
id|rup_status
c_func
(paren
id|PKT
op_star
id|pkt
comma
id|RUP
op_star
id|this_rup
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** rupsync.c&n;*/
r_void
id|rup_sync
c_func
(paren
id|PKT
op_star
id|pkt
)paren
suffix:semicolon
multiline_comment|/*&n;** rxpkt.c&n;*/
id|ERROR
id|rx_pkt
c_func
(paren
id|PKT_ptr_ptr
id|pkt_address
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
multiline_comment|/*&n;** sendsts.c&n;*/
r_void
id|send_status
c_func
(paren
id|PKT
op_star
id|requesting_pkt
comma
id|RUP
op_star
id|this_rup
)paren
suffix:semicolon
multiline_comment|/*&n;** serial.c&n;*/
r_void
id|assign_serial
(paren
r_char
op_star
id|ser_in
comma
r_char
op_star
id|ser_out
)paren
suffix:semicolon
r_int
id|cmp_serial
(paren
r_char
op_star
id|ser_1
comma
r_char
op_star
id|ser_2
)paren
suffix:semicolon
multiline_comment|/*&n;** txpkt.c&n;*/
id|ERROR
id|tx_pkt
c_func
(paren
id|PKT
op_star
id|pkt
comma
id|LPB
op_star
id|link
)paren
suffix:semicolon
r_int
id|send_sync
c_func
(paren
id|LPB
op_star
id|link
)paren
suffix:semicolon
macro_line|#endif&t;/* _prototypes_h */
eof
