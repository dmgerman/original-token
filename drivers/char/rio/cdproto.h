multiline_comment|/* &n; *&n; *  (C) 1990 - 2000 Specialix International Ltd., Byfleet, Surrey, UK.&n; *&n; *&n; *      This program is free software; you can redistribute it and/or modify&n; *      it under the terms of the GNU General Public License as published by&n; *      the Free Software Foundation; either version 2 of the License, or&n; *      (at your option) any later version.&n; *&n; *      This program is distributed in the hope that it will be useful,&n; *      but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *      GNU General Public License for more details.&n; *&n; *      You should have received a copy of the GNU General Public License&n; *      along with this program; if not, write to the Free Software&n; *      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n;*/
macro_line|#ifndef _cirrusprots_h
DECL|macro|_cirrusprots_h
mdefine_line|#define _cirrusprots_h
macro_line|#ifdef RTA
r_extern
r_void
id|cd1400_reset
(paren
r_int
id|uart
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_init
(paren
r_int
id|uart
)paren
suffix:semicolon
r_extern
r_void
id|ccr_wait
(paren
r_int
id|priority
comma
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_txstart
c_func
(paren
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_rxstart
(paren
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|command_acknowledge
(paren
id|PHB
op_star
id|port_header
)paren
suffix:semicolon
r_extern
r_int
id|close_port
(paren
id|ushort
id|port
comma
id|PHB
op_star
id|port_header
comma
id|ushort
id|preemptive
comma
r_int
id|pseudo
)paren
suffix:semicolon
r_extern
r_void
id|command_preemptive
(paren
id|PKT
op_star
id|packet
)paren
suffix:semicolon
r_extern
r_void
id|rup_service
(paren
r_void
)paren
suffix:semicolon
r_extern
id|ushort
id|GetModemLines
c_func
(paren
r_struct
id|PHB
op_star
comma
r_register
r_int
op_star
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_intr
(paren
id|Process
op_star
id|cirrus_p
comma
id|ushort
op_star
id|RtaType
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_mdint
(paren
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_rxint
(paren
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_rxexcept
(paren
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_txdata
(paren
r_int
id|port
comma
id|PHB
op_star
id|port_header
comma
id|PKT
op_star
id|packet
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_fast_clock
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_map_baud
(paren
id|ushort
id|host_rate
comma
id|ushort
op_star
id|prescaler
comma
id|ushort
op_star
id|divisor
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_modem
(paren
id|ushort
id|port
comma
id|ushort
id|way
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_txcommand
(paren
r_int
id|port
comma
id|PHB
op_star
id|port_header
comma
id|PKT
op_star
id|packet
)paren
suffix:semicolon
r_extern
r_void
id|cd1400_txint
(paren
r_int
id|port
)paren
suffix:semicolon
r_void
id|Rprintf
c_func
(paren
r_char
op_star
id|RIOPrBuf
comma
r_char
op_star
id|Str
comma
dot
dot
dot
)paren
suffix:semicolon
macro_line|#if defined(DCIRRUS)
r_void
id|debug_packet
c_func
(paren
id|PKT
op_star
id|pkt
comma
r_int
id|option
comma
r_char
op_star
id|string
comma
r_int
id|channel
)paren
suffix:semicolon
macro_line|#endif&t;/* defined(DCIRRUS) */
macro_line|#endif
macro_line|#ifdef HOST
r_extern
r_void
id|wflush
(paren
id|PHB
op_star
)paren
suffix:semicolon
r_extern
r_void
id|command_preemptive
(paren
id|PKT
op_star
)paren
suffix:semicolon
macro_line|#endif
macro_line|#endif /* _cirrusprots_h */
eof
