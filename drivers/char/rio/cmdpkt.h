multiline_comment|/*&n;** -----------------------------------------------------------------------------&n;**&n;**  Perle Specialix driver for Linux&n;**  Ported from existing RIO Driver for SCO sources.&n; *&n; *  (C) 1990 - 2000 Specialix International Ltd., Byfleet, Surrey, UK.&n; *&n; *      This program is free software; you can redistribute it and/or modify&n; *      it under the terms of the GNU General Public License as published by&n; *      the Free Software Foundation; either version 2 of the License, or&n; *      (at your option) any later version.&n; *&n; *      This program is distributed in the hope that it will be useful,&n; *      but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *      GNU General Public License for more details.&n; *&n; *      You should have received a copy of the GNU General Public License&n; *      along with this program; if not, write to the Free Software&n; *      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n;**&n;**&t;Module&t;&t;: cmdpkt.h&n;**&t;SID&t;&t;: 1.2&n;**&t;Last Modified&t;: 11/6/98 11:34:09&n;**&t;Retrieved&t;: 11/6/98 11:34:20&n;**&n;**  ident @(#)cmdpkt.h&t;1.2&n;**&n;** -----------------------------------------------------------------------------&n;*/
macro_line|#ifndef __rio_cmdpkt_h__
DECL|macro|__rio_cmdpkt_h__
mdefine_line|#define __rio_cmdpkt_h__
macro_line|#ifdef SCCS_LABELS
macro_line|#ifndef lint
DECL|variable|_cmdpkt_h_sccs_
r_static
r_char
op_star
id|_cmdpkt_h_sccs_
op_assign
l_string|&quot;@(#)cmdpkt.h&t;1.2&quot;
suffix:semicolon
macro_line|#endif
macro_line|#endif
multiline_comment|/*&n;** overlays for the data area of a packet. Used in both directions&n;** (to build a packet to send, and to interpret a packet that arrives)&n;** and is very inconvenient for MIPS, so they appear as two seperate&n;** structures - those used for modifying/reading packets on the card&n;** and those for modifying/reading packets in real memory, which have an _M&n;** suffix.&n;*/
DECL|macro|RTA_BOOT_DATA_SIZE
mdefine_line|#define&t;RTA_BOOT_DATA_SIZE (PKT_MAX_DATA_LEN-2)
multiline_comment|/*&n;** The boot information packet looks like this:&n;** This structure overlays a PktCmd-&gt;CmdData structure, and so starts&n;** at Data[2] in the actual pkt!&n;*/
DECL|struct|BootSequence
r_struct
id|BootSequence
(brace
DECL|member|NumPackets
id|WORD
id|NumPackets
suffix:semicolon
DECL|member|LoadBase
id|WORD
id|LoadBase
suffix:semicolon
DECL|member|CodeSize
id|WORD
id|CodeSize
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|BOOT_SEQUENCE_LEN
mdefine_line|#define&t;BOOT_SEQUENCE_LEN&t;8
DECL|struct|SamTop
r_struct
id|SamTop
(brace
DECL|member|Unit
id|BYTE
id|Unit
suffix:semicolon
DECL|member|Link
id|BYTE
id|Link
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|CmdHdr
r_struct
id|CmdHdr
(brace
DECL|member|PcCommand
id|BYTE
id|PcCommand
suffix:semicolon
r_union
(brace
DECL|member|PcPhbNum
id|BYTE
id|PcPhbNum
suffix:semicolon
DECL|member|PcLinkNum
id|BYTE
id|PcLinkNum
suffix:semicolon
DECL|member|PcIDNum
id|BYTE
id|PcIDNum
suffix:semicolon
DECL|member|U0
)brace
id|U0
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|PktCmd
r_struct
id|PktCmd
(brace
r_union
(brace
r_struct
(brace
DECL|member|CmdHdr
r_struct
id|CmdHdr
id|CmdHdr
suffix:semicolon
DECL|member|PcBootSequence
r_struct
id|BootSequence
id|PcBootSequence
suffix:semicolon
DECL|member|S1
)brace
id|S1
suffix:semicolon
r_struct
(brace
DECL|member|PcSequence
id|WORD
id|PcSequence
suffix:semicolon
DECL|member|PcBootData
id|BYTE
id|PcBootData
(braket
id|RTA_BOOT_DATA_SIZE
)braket
suffix:semicolon
DECL|member|S2
)brace
id|S2
suffix:semicolon
r_struct
(brace
DECL|member|__crud__
id|WORD
id|__crud__
suffix:semicolon
DECL|member|PcUniqNum
id|BYTE
id|PcUniqNum
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* this is really a uint. */
DECL|member|PcModuleTypes
id|BYTE
id|PcModuleTypes
suffix:semicolon
multiline_comment|/* what modules are fitted */
DECL|member|S3
)brace
id|S3
suffix:semicolon
r_struct
(brace
DECL|member|CmdHdr
r_struct
id|CmdHdr
id|CmdHdr
suffix:semicolon
DECL|member|__undefined__
id|BYTE
id|__undefined__
suffix:semicolon
DECL|member|PcModemStatus
id|BYTE
id|PcModemStatus
suffix:semicolon
DECL|member|PcPortStatus
id|BYTE
id|PcPortStatus
suffix:semicolon
DECL|member|PcSubCommand
id|BYTE
id|PcSubCommand
suffix:semicolon
multiline_comment|/* commands like mem or register dump */
DECL|member|PcSubAddr
id|WORD
id|PcSubAddr
suffix:semicolon
multiline_comment|/* Address for command */
DECL|member|PcSubData
id|BYTE
id|PcSubData
(braket
l_int|64
)braket
suffix:semicolon
multiline_comment|/* Date area for command */
DECL|member|S4
)brace
id|S4
suffix:semicolon
r_struct
(brace
DECL|member|CmdHdr
r_struct
id|CmdHdr
id|CmdHdr
suffix:semicolon
DECL|member|PcCommandText
id|BYTE
id|PcCommandText
(braket
l_int|1
)braket
suffix:semicolon
DECL|member|__crud__
id|BYTE
id|__crud__
(braket
l_int|20
)braket
suffix:semicolon
DECL|member|PcIDNum2
id|BYTE
id|PcIDNum2
suffix:semicolon
multiline_comment|/* It had to go somewhere! */
DECL|member|S5
)brace
id|S5
suffix:semicolon
r_struct
(brace
DECL|member|CmdHdr
r_struct
id|CmdHdr
id|CmdHdr
suffix:semicolon
DECL|member|Topology
r_struct
id|SamTop
id|Topology
(braket
id|LINKS_PER_UNIT
)braket
suffix:semicolon
DECL|member|S6
)brace
id|S6
suffix:semicolon
DECL|member|U1
)brace
id|U1
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|PktCmd_M
r_struct
id|PktCmd_M
(brace
r_union
(brace
r_struct
(brace
r_struct
(brace
DECL|member|PcCommand
id|uchar
id|PcCommand
suffix:semicolon
r_union
(brace
DECL|member|PcPhbNum
id|uchar
id|PcPhbNum
suffix:semicolon
DECL|member|PcLinkNum
id|uchar
id|PcLinkNum
suffix:semicolon
DECL|member|PcIDNum
id|uchar
id|PcIDNum
suffix:semicolon
DECL|member|U0
)brace
id|U0
suffix:semicolon
DECL|member|CmdHdr
)brace
id|CmdHdr
suffix:semicolon
r_struct
(brace
DECL|member|NumPackets
id|ushort
id|NumPackets
suffix:semicolon
DECL|member|LoadBase
id|ushort
id|LoadBase
suffix:semicolon
DECL|member|CodeSize
id|ushort
id|CodeSize
suffix:semicolon
DECL|member|PcBootSequence
)brace
id|PcBootSequence
suffix:semicolon
DECL|member|S1
)brace
id|S1
suffix:semicolon
r_struct
(brace
DECL|member|PcSequence
id|ushort
id|PcSequence
suffix:semicolon
DECL|member|PcBootData
id|uchar
id|PcBootData
(braket
id|RTA_BOOT_DATA_SIZE
)braket
suffix:semicolon
DECL|member|S2
)brace
id|S2
suffix:semicolon
r_struct
(brace
DECL|member|__crud__
id|ushort
id|__crud__
suffix:semicolon
DECL|member|PcUniqNum
id|uchar
id|PcUniqNum
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* this is really a uint. */
DECL|member|PcModuleTypes
id|uchar
id|PcModuleTypes
suffix:semicolon
multiline_comment|/* what modules are fitted */
DECL|member|S3
)brace
id|S3
suffix:semicolon
r_struct
(brace
DECL|member|__cmd_hdr__
id|ushort
id|__cmd_hdr__
suffix:semicolon
DECL|member|__undefined__
id|uchar
id|__undefined__
suffix:semicolon
DECL|member|PcModemStatus
id|uchar
id|PcModemStatus
suffix:semicolon
DECL|member|PcPortStatus
id|uchar
id|PcPortStatus
suffix:semicolon
DECL|member|PcSubCommand
id|uchar
id|PcSubCommand
suffix:semicolon
DECL|member|PcSubAddr
id|ushort
id|PcSubAddr
suffix:semicolon
DECL|member|PcSubData
id|uchar
id|PcSubData
(braket
l_int|64
)braket
suffix:semicolon
DECL|member|S4
)brace
id|S4
suffix:semicolon
r_struct
(brace
DECL|member|__cmd_hdr__
id|ushort
id|__cmd_hdr__
suffix:semicolon
DECL|member|PcCommandText
id|uchar
id|PcCommandText
(braket
l_int|1
)braket
suffix:semicolon
DECL|member|__crud__
id|uchar
id|__crud__
(braket
l_int|20
)braket
suffix:semicolon
DECL|member|PcIDNum2
id|uchar
id|PcIDNum2
suffix:semicolon
multiline_comment|/* Tacked on end */
DECL|member|S5
)brace
id|S5
suffix:semicolon
r_struct
(brace
DECL|member|__cmd_hdr__
id|ushort
id|__cmd_hdr__
suffix:semicolon
DECL|member|Topology
r_struct
id|Top
id|Topology
(braket
id|LINKS_PER_UNIT
)braket
suffix:semicolon
DECL|member|S6
)brace
id|S6
suffix:semicolon
DECL|member|U1
)brace
id|U1
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|Command
mdefine_line|#define Command&t;&t;U1.S1.CmdHdr.PcCommand
DECL|macro|PhbNum
mdefine_line|#define PhbNum&t;&t;U1.S1.CmdHdr.U0.PcPhbNum
DECL|macro|IDNum
mdefine_line|#define IDNum&t;&t;U1.S1.CmdHdr.U0.PcIDNum
DECL|macro|IDNum2
mdefine_line|#define IDNum2&t;&t;U1.S5.PcIDNum2
DECL|macro|LinkNum
mdefine_line|#define LinkNum&t;&t;U1.S1.CmdHdr.U0.PcLinkNum
DECL|macro|Sequence
mdefine_line|#define Sequence&t;U1.S2.PcSequence
DECL|macro|BootData
mdefine_line|#define BootData&t;U1.S2.PcBootData
DECL|macro|BootSequence
mdefine_line|#define BootSequence&t;U1.S1.PcBootSequence
DECL|macro|UniqNum
mdefine_line|#define UniqNum&t;&t;U1.S3.PcUniqNum
DECL|macro|ModemStatus
mdefine_line|#define ModemStatus&t;U1.S4.PcModemStatus
DECL|macro|PortStatus
mdefine_line|#define PortStatus&t;U1.S4.PcPortStatus
DECL|macro|SubCommand
mdefine_line|#define SubCommand&t;U1.S4.PcSubCommand
DECL|macro|SubAddr
mdefine_line|#define SubAddr&t;&t;U1.S4.PcSubAddr
DECL|macro|SubData
mdefine_line|#define SubData&t;&t;U1.S4.PcSubData
DECL|macro|CommandText
mdefine_line|#define CommandText&t;U1.S5.PcCommandText
DECL|macro|RouteTopology
mdefine_line|#define RouteTopology&t;U1.S6.Topology
DECL|macro|ModuleTypes
mdefine_line|#define ModuleTypes&t;U1.S3.PcModuleTypes
macro_line|#endif
eof
