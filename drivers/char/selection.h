multiline_comment|/*&n; * selection.h&n; *&n; * Interface between console.c, tty_io.c, vt.c, vc_screen.c and selection.c&n; */
r_extern
r_int
id|sel_cons
suffix:semicolon
r_extern
r_void
id|clear_selection
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|set_selection
c_func
(paren
r_const
r_int
r_int
id|arg
comma
r_struct
id|tty_struct
op_star
id|tty
)paren
suffix:semicolon
r_extern
r_int
id|paste_selection
c_func
(paren
r_struct
id|tty_struct
op_star
id|tty
)paren
suffix:semicolon
r_extern
r_int
id|sel_loadlut
c_func
(paren
r_const
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|mouse_reporting
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|mouse_report
c_func
(paren
r_struct
id|tty_struct
op_star
id|tty
comma
r_int
id|butt
comma
r_int
id|mrx
comma
r_int
id|mry
)paren
suffix:semicolon
r_extern
r_int
r_int
id|video_num_columns
suffix:semicolon
r_extern
r_int
r_int
id|video_num_lines
suffix:semicolon
r_extern
r_int
r_int
id|video_size_row
suffix:semicolon
r_extern
r_void
id|do_unblank_screen
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
r_int
op_star
id|screen_pos
c_func
(paren
r_int
id|currcons
comma
r_int
id|w_offset
comma
r_int
id|viewed
)paren
suffix:semicolon
r_extern
r_int
r_int
id|screen_word
c_func
(paren
r_int
id|currcons
comma
r_int
id|offset
comma
r_int
id|viewed
)paren
suffix:semicolon
r_extern
r_void
id|complement_pos
c_func
(paren
r_int
id|currcons
comma
r_int
id|offset
)paren
suffix:semicolon
r_extern
r_void
id|invert_screen
c_func
(paren
r_int
id|currcons
comma
r_int
id|offset
comma
r_int
id|count
comma
r_int
id|shift
)paren
suffix:semicolon
DECL|macro|reverse_video_char
mdefine_line|#define reverse_video_char(a)&t;(((a) &amp; 0x88) | ((((a) &gt;&gt; 4) | ((a) &lt;&lt; 4)) &amp; 0x77))
DECL|macro|reverse_video_short
mdefine_line|#define reverse_video_short(a)&t;(((a) &amp; 0x88ff) | &bslash;&n;&t;(((a) &amp; 0x7000) &gt;&gt; 4) | (((a) &amp; 0x0700) &lt;&lt; 4))
multiline_comment|/* this latter line used to have masks 0xf000 and 0x0f00, but selection&n;   requires a self-inverse operation; moreover, the old version looks wrong */
r_extern
r_void
id|getconsxy
c_func
(paren
r_int
id|currcons
comma
r_char
op_star
id|p
)paren
suffix:semicolon
r_extern
r_void
id|putconsxy
c_func
(paren
r_int
id|currcons
comma
r_char
op_star
id|p
)paren
suffix:semicolon
multiline_comment|/* how to access screen memory */
macro_line|#ifdef __alpha__
macro_line|#include &lt;asm/io.h&gt; 
DECL|function|scr_writew
r_static
r_inline
r_void
id|scr_writew
c_func
(paren
r_int
r_int
id|val
comma
r_int
r_int
op_star
id|addr
)paren
(brace
r_if
c_cond
(paren
(paren
r_int
)paren
id|addr
OL
l_int|0
)paren
op_star
id|addr
op_assign
id|val
suffix:semicolon
r_else
id|writew
c_func
(paren
id|val
comma
(paren
r_int
r_int
)paren
id|addr
)paren
suffix:semicolon
)brace
DECL|function|scr_readw
r_static
r_inline
r_int
r_int
id|scr_readw
c_func
(paren
r_int
r_int
op_star
id|addr
)paren
(brace
r_if
c_cond
(paren
(paren
r_int
)paren
id|addr
OL
l_int|0
)paren
r_return
op_star
id|addr
suffix:semicolon
r_return
id|readw
c_func
(paren
(paren
r_int
r_int
)paren
id|addr
)paren
suffix:semicolon
)brace
macro_line|#else
DECL|function|scr_writew
r_static
r_inline
r_void
id|scr_writew
c_func
(paren
r_int
r_int
id|val
comma
r_int
r_int
op_star
id|addr
)paren
(brace
op_star
id|addr
op_assign
id|val
suffix:semicolon
)brace
DECL|function|scr_readw
r_static
r_inline
r_int
r_int
id|scr_readw
c_func
(paren
r_int
r_int
op_star
id|addr
)paren
(brace
r_return
op_star
id|addr
suffix:semicolon
)brace
macro_line|#endif
eof
