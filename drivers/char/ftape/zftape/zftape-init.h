macro_line|#ifndef _ZFTAPE_INIT_H
DECL|macro|_ZFTAPE_INIT_H
mdefine_line|#define _ZFTAPE_INIT_H
multiline_comment|/*&n; * Copyright (C) 1996, 1997 Claus Heine.&n;&n; This program is free software; you can redistribute it and/or modify&n; it under the terms of the GNU General Public License as published by&n; the Free Software Foundation; either version 2, or (at your option)&n; any later version.&n;&n; This program is distributed in the hope that it will be useful,&n; but WITHOUT ANY WARRANTY; without even the implied warranty of&n; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; GNU General Public License for more details.&n;&n; You should have received a copy of the GNU General Public License&n; along with this program; see the file COPYING.  If not, write to&n; the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.&n;&n; *&n; * $Source: /homes/cvs/ftape-stacked/ftape/zftape/zftape-init.h,v $&n; * $Revision: 1.2 $&n; * $Date: 1997/10/05 19:19:05 $&n; *&n; * This file contains definitions and macro for the vfs &n; * interface defined by zftape&n; *&n; */
macro_line|#include &lt;linux/ftape-header-segment.h&gt;
macro_line|#include &quot;../lowlevel/ftape-tracing.h&quot;
macro_line|#include &quot;../lowlevel/ftape-ctl.h&quot;
macro_line|#include &quot;../lowlevel/ftape-read.h&quot;
macro_line|#include &quot;../lowlevel/ftape-write.h&quot;
macro_line|#include &quot;../lowlevel/ftape-bsm.h&quot;
macro_line|#include &quot;../lowlevel/ftape-io.h&quot;
macro_line|#include &quot;../lowlevel/ftape-buffer.h&quot;
macro_line|#include &quot;../lowlevel/ftape-format.h&quot;
macro_line|#include &quot;../zftape/zftape-rw.h&quot;
macro_line|#ifdef MODULE
DECL|macro|ftape_status
mdefine_line|#define ftape_status (*zft_status)
macro_line|#endif
r_extern
r_const
id|ftape_info
op_star
id|zft_status
suffix:semicolon
multiline_comment|/* needed for zftape-vtbl.h */
macro_line|#include &quot;../zftape/zftape-vtbl.h&quot;
DECL|struct|zft_cmpr_ops
r_struct
id|zft_cmpr_ops
(brace
DECL|member|write
r_int
(paren
op_star
id|write
)paren
(paren
r_int
op_star
id|write_cnt
comma
id|__u8
op_star
id|dst_buf
comma
r_const
r_int
id|seg_sz
comma
r_const
id|__u8
op_star
id|src_buf
comma
r_const
r_int
id|req_len
comma
r_const
id|zft_position
op_star
id|pos
comma
r_const
id|zft_volinfo
op_star
id|volume
)paren
suffix:semicolon
DECL|member|read
r_int
(paren
op_star
id|read
)paren
(paren
r_int
op_star
id|read_cnt
comma
id|__u8
op_star
id|dst_buf
comma
r_const
r_int
id|req_len
comma
r_const
id|__u8
op_star
id|src_buf
comma
r_const
r_int
id|seg_sz
comma
r_const
id|zft_position
op_star
id|pos
comma
r_const
id|zft_volinfo
op_star
id|volume
)paren
suffix:semicolon
DECL|member|seek
r_int
(paren
op_star
id|seek
)paren
(paren
r_int
r_int
id|new_block_pos
comma
id|zft_position
op_star
id|pos
comma
r_const
id|zft_volinfo
op_star
id|volume
comma
id|__u8
op_star
id|buffer
)paren
suffix:semicolon
DECL|member|lock
r_void
(paren
op_star
id|lock
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|reset
r_void
(paren
op_star
id|reset
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|cleanup
r_void
(paren
op_star
id|cleanup
)paren
(paren
r_void
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|zft_cmpr_ops
op_star
id|zft_cmpr_ops
suffix:semicolon
multiline_comment|/* zftape-init.c defined global functions.&n; */
r_extern
r_int
id|zft_cmpr_register
c_func
(paren
r_struct
id|zft_cmpr_ops
op_star
id|new_ops
)paren
suffix:semicolon
r_extern
r_struct
id|zft_cmpr_ops
op_star
id|zft_cmpr_unregister
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|zft_cmpr_lock
c_func
(paren
r_int
id|try_to_load
)paren
suffix:semicolon
macro_line|#ifdef MODULE
id|asmlinkage
r_extern
r_int
id|init_module
c_func
(paren
r_void
)paren
suffix:semicolon
id|asmlinkage
r_extern
r_void
id|cleanup_module
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#endif
macro_line|#endif
eof
