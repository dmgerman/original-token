multiline_comment|/* $Id: isdn_ppp.h,v 1.9 1997/02/11 18:32:59 fritz Exp $&n;&n; * header for Linux ISDN subsystem, functions for synchronous PPP (linklevel).&n; *&n; * Copyright 1995,96 by Michael Hipp (Michael.Hipp@student.uni-tuebingen.de)&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2, or (at your option)&n; * any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; *&n; * $Log: isdn_ppp.h,v $&n; * Revision 1.9  1997/02/11 18:32:59  fritz&n; * Bugfix in isdn_ppp_free_mpqueue().&n; *&n; * Revision 1.8  1997/02/10 10:11:33  fritz&n; * More changes for Kernel 2.1.X compatibility.&n; *&n; * Revision 1.7  1997/02/03 23:18:57  fritz&n; * Removed isdn_ppp_free_sqqueue prototype&n; *         and ippp_table (both static in isdn_ppp.c).&n; *&n; * Revision 1.6  1996/09/23 01:58:11  fritz&n; * Fix: With syncPPP encapsulation, discard LCP packets&n; *      when calculating hangup timeout.&n; *&n; * Revision 1.5  1996/09/07 12:51:34  hipp&n; * *** empty log message ***&n; *&n; * Revision 1.4  1996/05/06 11:34:56  hipp&n; * fixed a few bugs&n; *&n; * Revision 1.3  1996/04/30 09:33:10  fritz&n; * Removed compatibility-macros.&n; *&n; * Revision 1.2  1996/04/20 16:35:11  fritz&n; * Changed isdn_ppp_receive to use sk_buff as parameter.&n; * Added definition of isdn_ppp_dial_slave and ippp_table.&n; *&n; * Revision 1.1  1996/01/10 21:39:10  fritz&n; * Initial revision&n; *&n; */
macro_line|#include &lt;linux/ppp_defs.h&gt;     /* for PPP_PROTOCOL */
r_extern
r_void
id|isdn_ppp_timer_timeout
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_read
c_func
(paren
r_int
comma
r_struct
id|file
op_star
comma
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_write
c_func
(paren
r_int
comma
r_struct
id|file
op_star
comma
r_const
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_open
c_func
(paren
r_int
comma
r_struct
id|file
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|isdn_ppp_cleanup
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_free
c_func
(paren
id|isdn_net_local
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_bind
c_func
(paren
id|isdn_net_local
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_xmit
c_func
(paren
r_struct
id|sk_buff
op_star
comma
r_struct
id|device
op_star
)paren
suffix:semicolon
r_extern
r_void
id|isdn_ppp_receive
c_func
(paren
id|isdn_net_dev
op_star
comma
id|isdn_net_local
op_star
comma
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_dev_ioctl
c_func
(paren
r_struct
id|device
op_star
comma
r_struct
id|ifreq
op_star
comma
r_int
)paren
suffix:semicolon
macro_line|#if (LINUX_VERSION_CODE &lt; 0x020117)
r_extern
r_int
id|isdn_ppp_select
c_func
(paren
r_int
comma
r_struct
id|file
op_star
comma
r_int
comma
id|select_table
op_star
)paren
suffix:semicolon
macro_line|#else
r_extern
r_int
r_int
id|isdn_ppp_poll
c_func
(paren
r_struct
id|file
op_star
comma
id|poll_table
op_star
)paren
suffix:semicolon
macro_line|#endif
r_extern
r_int
id|isdn_ppp_ioctl
c_func
(paren
r_int
comma
r_struct
id|file
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|isdn_ppp_release
c_func
(paren
r_int
comma
r_struct
id|file
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_dial_slave
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
r_void
id|isdn_ppp_wakeup_daemon
c_func
(paren
id|isdn_net_local
op_star
)paren
suffix:semicolon
DECL|macro|IPPP_OPEN
mdefine_line|#define IPPP_OPEN&t;0x01
DECL|macro|IPPP_CONNECT
mdefine_line|#define IPPP_CONNECT&t;0x02
DECL|macro|IPPP_CLOSEWAIT
mdefine_line|#define IPPP_CLOSEWAIT&t;0x04
DECL|macro|IPPP_NOBLOCK
mdefine_line|#define IPPP_NOBLOCK&t;0x08
DECL|macro|IPPP_ASSIGNED
mdefine_line|#define IPPP_ASSIGNED&t;0x10
eof
