multiline_comment|/* $Id: isdn_ppp.h,v 1.17 2000/08/10 22:52:46 kai Exp $&n;&n; * header for Linux ISDN subsystem, functions for synchronous PPP (linklevel).&n; *&n; * Copyright 1995,96 by Michael Hipp (Michael.Hipp@student.uni-tuebingen.de)&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2, or (at your option)&n; * any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; *&n; */
macro_line|#include &lt;linux/ppp_defs.h&gt;     /* for PPP_PROTOCOL */
macro_line|#include &lt;linux/isdn_ppp.h&gt;&t;/* for isdn_ppp info */
r_extern
r_int
id|isdn_ppp_read
c_func
(paren
r_int
comma
r_struct
id|file
op_star
comma
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_write
c_func
(paren
r_int
comma
r_struct
id|file
op_star
comma
r_const
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_open
c_func
(paren
r_int
comma
r_struct
id|file
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|isdn_ppp_cleanup
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_free
c_func
(paren
id|isdn_net_local
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_bind
c_func
(paren
id|isdn_net_local
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_xmit
c_func
(paren
r_struct
id|sk_buff
op_star
comma
r_struct
id|net_device
op_star
)paren
suffix:semicolon
r_extern
r_void
id|isdn_ppp_receive
c_func
(paren
id|isdn_net_dev
op_star
comma
id|isdn_net_local
op_star
comma
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_dev_ioctl
c_func
(paren
r_struct
id|net_device
op_star
comma
r_struct
id|ifreq
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
r_int
id|isdn_ppp_poll
c_func
(paren
r_struct
id|file
op_star
comma
r_struct
id|poll_table_struct
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_ioctl
c_func
(paren
r_int
comma
r_struct
id|file
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|isdn_ppp_release
c_func
(paren
r_int
comma
r_struct
id|file
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_dial_slave
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
r_void
id|isdn_ppp_wakeup_daemon
c_func
(paren
id|isdn_net_local
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_register_compressor
c_func
(paren
r_struct
id|isdn_ppp_compressor
op_star
id|ipc
)paren
suffix:semicolon
r_extern
r_int
id|isdn_ppp_unregister_compressor
c_func
(paren
r_struct
id|isdn_ppp_compressor
op_star
id|ipc
)paren
suffix:semicolon
DECL|macro|IPPP_OPEN
mdefine_line|#define IPPP_OPEN&t;0x01
DECL|macro|IPPP_CONNECT
mdefine_line|#define IPPP_CONNECT&t;0x02
DECL|macro|IPPP_CLOSEWAIT
mdefine_line|#define IPPP_CLOSEWAIT&t;0x04
DECL|macro|IPPP_NOBLOCK
mdefine_line|#define IPPP_NOBLOCK&t;0x08
DECL|macro|IPPP_ASSIGNED
mdefine_line|#define IPPP_ASSIGNED&t;0x10
DECL|macro|IPPP_MAX_HEADER
mdefine_line|#define IPPP_MAX_HEADER 10
eof
