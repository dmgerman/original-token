multiline_comment|/*&n; *&n; * Copyright (C) Eicon Technology Corporation, 2000.&n; *&n; * This source file is supplied for the exclusive use with Eicon&n; * Technology Corporation&squot;s range of DIVA Server Adapters.&n; *&n; * Eicon File Revision :    1.7  &n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2, or (at your option)&n; * any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY OF ANY KIND WHATSOEVER INCLUDING ANY &n; * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  &n; * See the GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; *&n; */
multiline_comment|/* Main internal include file for Diva Server driver */
macro_line|#if !defined(ADAPTER_H)
DECL|macro|ADAPTER_H
mdefine_line|#define ADAPTER_H
macro_line|#include &quot;sys.h&quot;
macro_line|#include &quot;idi.h&quot;
macro_line|#include &quot;divas.h&quot;
DECL|macro|ID_MASK
macro_line|#undef ID_MASK
macro_line|#include &quot;pc.h&quot;
DECL|macro|XMOREC
mdefine_line|#define XMOREC 0x1f
DECL|macro|XMOREF
mdefine_line|#define XMOREF 0x20
DECL|macro|XBUSY
mdefine_line|#define XBUSY  0x40
DECL|macro|RMORE
mdefine_line|#define RMORE  0x80
multiline_comment|/* structure for all information we have to keep on a per   */
multiline_comment|/* adapater basis                                           */
DECL|typedef|ADAPTER
r_typedef
r_struct
id|adapter_s
id|ADAPTER
suffix:semicolon
DECL|struct|adapter_s
r_struct
id|adapter_s
(brace
DECL|member|io
r_void
op_star
id|io
suffix:semicolon
DECL|member|IdTable
id|byte
id|IdTable
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|ReadyInt
id|byte
id|ReadyInt
suffix:semicolon
DECL|member|ram_in
id|byte
(paren
op_star
id|ram_in
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
)paren
suffix:semicolon
DECL|member|ram_inw
id|word
(paren
op_star
id|ram_inw
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
)paren
suffix:semicolon
DECL|member|ram_in_buffer
r_void
(paren
op_star
id|ram_in_buffer
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
comma
r_void
op_star
id|P
comma
id|word
id|length
)paren
suffix:semicolon
DECL|member|ram_look_ahead
r_void
(paren
op_star
id|ram_look_ahead
)paren
(paren
id|ADAPTER
op_star
id|a
comma
id|PBUFFER
op_star
id|RBuffer
comma
id|ENTITY
op_star
id|e
)paren
suffix:semicolon
DECL|member|ram_out
r_void
(paren
op_star
id|ram_out
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
comma
id|byte
id|data
)paren
suffix:semicolon
DECL|member|ram_outw
r_void
(paren
op_star
id|ram_outw
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
comma
id|word
id|data
)paren
suffix:semicolon
DECL|member|ram_out_buffer
r_void
(paren
op_star
id|ram_out_buffer
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
comma
r_void
op_star
id|P
comma
id|word
id|length
)paren
suffix:semicolon
DECL|member|ram_inc
r_void
(paren
op_star
id|ram_inc
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|typedef|card_t
r_typedef
r_struct
id|card
id|card_t
suffix:semicolon
DECL|typedef|card_load_fn_t
r_typedef
r_int
id|card_load_fn_t
c_func
(paren
id|card_t
op_star
id|card
comma
id|dia_load_t
op_star
id|load
)paren
suffix:semicolon
DECL|typedef|card_config_fn_t
r_typedef
r_int
id|card_config_fn_t
c_func
(paren
id|card_t
op_star
id|card
comma
id|dia_config_t
op_star
id|config
)paren
suffix:semicolon
DECL|typedef|card_start_fn_t
r_typedef
r_int
id|card_start_fn_t
c_func
(paren
id|card_t
op_star
id|card
comma
id|byte
op_star
id|channels
)paren
suffix:semicolon
DECL|typedef|card_reset_fn_t
r_typedef
r_int
id|card_reset_fn_t
c_func
(paren
id|card_t
op_star
id|card
)paren
suffix:semicolon
DECL|typedef|card_mem_get_fn_t
r_typedef
r_int
id|card_mem_get_fn_t
c_func
(paren
id|card_t
op_star
id|card
comma
id|mem_block_t
op_star
id|mem_block
)paren
suffix:semicolon
DECL|macro|MAX_PENTITIES
mdefine_line|#define&t;MAX_PENTITIES&t;256&t;&t;/* Number of entities primary adapter */
DECL|macro|MAX_ENTITIES
mdefine_line|#define MAX_ENTITIES&t;16&t;&t;/* Number of entities standard adapter */
DECL|typedef|E_INFO
r_typedef
r_struct
id|e_info_s
id|E_INFO
suffix:semicolon
DECL|struct|e_info_s
r_struct
id|e_info_s
(brace
DECL|member|e
id|ENTITY
op_star
id|e
suffix:semicolon
multiline_comment|/* entity pointer */
DECL|member|next
id|byte
id|next
suffix:semicolon
multiline_comment|/* chaining index */
DECL|member|assign_ref
id|word
id|assign_ref
suffix:semicolon
multiline_comment|/* assign reference */
)brace
suffix:semicolon
multiline_comment|/* DIVA card info (details hidden from user) */
DECL|typedef|ux_diva_card_t
r_typedef
r_struct
id|ux_diva_card_s
id|ux_diva_card_t
suffix:semicolon
multiline_comment|/* card info */
DECL|struct|card
r_struct
id|card
(brace
DECL|member|a
id|ADAPTER
id|a
suffix:semicolon
multiline_comment|/* per-adapter information */
DECL|member|cfg
id|dia_card_t
id|cfg
suffix:semicolon
multiline_comment|/* card configuration */
DECL|member|state
r_int
id|state
suffix:semicolon
multiline_comment|/* State of the adapter */
DECL|member|serial_no
id|dword
id|serial_no
suffix:semicolon
multiline_comment|/* serial number */
DECL|member|test_int_pend
r_int
id|test_int_pend
suffix:semicolon
multiline_comment|/* set for interrupt testing */
DECL|member|hw
id|ux_diva_card_t
op_star
id|hw
suffix:semicolon
multiline_comment|/* O/S-specific handle */
DECL|member|card_reset
id|card_reset_fn_t
op_star
id|card_reset
suffix:semicolon
multiline_comment|/* call this to reset card */
DECL|member|card_load
id|card_load_fn_t
op_star
id|card_load
suffix:semicolon
multiline_comment|/* call this to load card */
DECL|member|card_config
id|card_config_fn_t
op_star
id|card_config
suffix:semicolon
multiline_comment|/* call this to config card */
DECL|member|card_start
id|card_start_fn_t
op_star
id|card_start
suffix:semicolon
multiline_comment|/* call this to start card */
DECL|member|card_mem_get
id|card_mem_get_fn_t
op_star
id|card_mem_get
suffix:semicolon
multiline_comment|/* call this to get card memory */
DECL|member|e_tbl
id|E_INFO
op_star
id|e_tbl
suffix:semicolon
multiline_comment|/* table of ENTITY pointers */
DECL|member|e_head
id|byte
id|e_head
suffix:semicolon
multiline_comment|/* list of active ENTITIES */
DECL|member|e_tail
id|byte
id|e_tail
suffix:semicolon
multiline_comment|/* list of active ENTITIES */
DECL|member|e_count
r_int
id|e_count
suffix:semicolon
multiline_comment|/* # of active ENTITIES */
DECL|member|e_max
r_int
id|e_max
suffix:semicolon
multiline_comment|/* total # of ENTITIES */
DECL|member|assign
id|byte
id|assign
suffix:semicolon
multiline_comment|/* assign queue entry */
DECL|member|RBuffer
id|PBUFFER
id|RBuffer
suffix:semicolon
multiline_comment|/* Copy of receive lookahead buffer */
DECL|member|log_types
r_int
id|log_types
suffix:semicolon
multiline_comment|/* bit-mask of active logs */
DECL|member|xlog_offset
id|word
id|xlog_offset
suffix:semicolon
multiline_comment|/* offset to XLOG buffer on card */
DECL|member|out
r_void
(paren
op_star
id|out
)paren
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
DECL|member|dpc
id|byte
(paren
op_star
id|dpc
)paren
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
DECL|member|test_int
id|byte
(paren
op_star
id|test_int
)paren
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
DECL|member|clear_int
r_void
(paren
op_star
id|clear_int
)paren
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
DECL|member|reset_int
r_void
(paren
op_star
id|reset_int
)paren
(paren
id|card_t
op_star
id|c
)paren
suffix:semicolon
DECL|member|is_live
r_int
id|is_live
suffix:semicolon
DECL|member|card_isr
r_int
(paren
op_star
id|card_isr
)paren
(paren
id|card_t
op_star
id|card
)paren
suffix:semicolon
DECL|member|int_pend
r_int
id|int_pend
suffix:semicolon
multiline_comment|/* interrupt pending */
DECL|member|interrupt_reentered
r_int
id|interrupt_reentered
suffix:semicolon
DECL|member|dpc_reentered
r_int
id|dpc_reentered
suffix:semicolon
DECL|member|set_xlog_request
r_int
id|set_xlog_request
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* card information */
DECL|macro|MAX_CARDS
mdefine_line|#define&t;MAX_CARDS&t;20&t;&t;/* max number of cards on a system */
r_extern
id|card_t
id|DivasCards
(braket
)braket
suffix:semicolon
r_extern
r_int
id|DivasCardNext
suffix:semicolon
r_extern
id|dia_config_t
id|DivasCardConfigs
(braket
)braket
suffix:semicolon
r_extern
id|byte
id|DivasFlavourConfig
(braket
)braket
suffix:semicolon
multiline_comment|/*------------------------------------------------------------------*/
multiline_comment|/* public functions of IDI common code                              */
multiline_comment|/*------------------------------------------------------------------*/
r_void
id|DivasOut
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
id|byte
id|DivasDpc
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
id|byte
id|DivasTestInt
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
r_void
id|DivasClearInt
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
multiline_comment|/*------------------------------------------------------------------*/
multiline_comment|/* public functions of configuration platform-specific code         */
multiline_comment|/*------------------------------------------------------------------*/
r_int
id|DivasConfigGet
c_func
(paren
id|dia_card_t
op_star
id|card
)paren
suffix:semicolon
multiline_comment|/*------------------------------------------------------------------*/
multiline_comment|/* public functions of LOG related code                             */
multiline_comment|/*------------------------------------------------------------------*/
r_void
id|DivasXlogReq
c_func
(paren
r_int
id|card_num
)paren
suffix:semicolon
r_int
id|DivasXlogRetrieve
c_func
(paren
id|card_t
op_star
id|card
)paren
suffix:semicolon
r_void
id|DivasLog
c_func
(paren
id|dia_log_t
op_star
id|log
)paren
suffix:semicolon
r_void
id|DivasLogIdi
c_func
(paren
id|card_t
op_star
id|card
comma
id|ENTITY
op_star
id|e
comma
r_int
id|request
)paren
suffix:semicolon
multiline_comment|/*------------------------------------------------------------------*/
multiline_comment|/* public functions to initialise cards for each type supported     */
multiline_comment|/*------------------------------------------------------------------*/
r_int
id|DivasPriInit
c_func
(paren
id|card_t
op_star
id|card
comma
id|dia_card_t
op_star
id|cfg
)paren
suffix:semicolon
r_int
id|DivasBriInit
c_func
(paren
id|card_t
op_star
id|card
comma
id|dia_card_t
op_star
id|cfg
)paren
suffix:semicolon
r_int
id|Divas4BriInit
c_func
(paren
id|card_t
op_star
id|card
comma
id|dia_card_t
op_star
id|cfg
)paren
suffix:semicolon
r_void
id|DivasBriPatch
c_func
(paren
id|card_t
op_star
id|card
)paren
suffix:semicolon
multiline_comment|/*------------------------------------------------------------------*/
multiline_comment|/* public functions of log common code                              */
multiline_comment|/*------------------------------------------------------------------*/
r_extern
r_char
op_star
id|DivasLogFifoRead
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|DivasLogFifoWrite
c_func
(paren
r_char
op_star
id|entry
comma
r_int
id|length
)paren
suffix:semicolon
r_extern
r_int
id|DivasLogFifoEmpty
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|DivasLogFifoFull
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|DivasLogAdd
c_func
(paren
r_void
op_star
id|buffer
comma
r_int
id|length
)paren
suffix:semicolon
multiline_comment|/*------------------------------------------------------------------*/
multiline_comment|/* public functions of misc. platform-specific code         &t;&t;*/
multiline_comment|/*------------------------------------------------------------------*/
r_int
id|DivasDpcSchedule
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|DivasDoDpc
c_func
(paren
r_void
op_star
)paren
suffix:semicolon
r_void
id|DivasDoRequestDpc
c_func
(paren
r_void
op_star
id|pData
)paren
suffix:semicolon
r_int
id|DivasScheduleRequestDpc
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* table of IDI request functions */
r_extern
id|IDI_CALL
id|DivasIdiRequest
(braket
)braket
suffix:semicolon
multiline_comment|/*&n; * intialisation entry point&n; */
r_int
id|DivasInit
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n; * Get information on the number and type of cards present&n; */
r_extern
r_int
id|DivasCardsDiscover
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n; * initialise a new card&n; */
r_int
id|DivasCardNew
c_func
(paren
id|dia_card_t
op_star
id|card
)paren
suffix:semicolon
multiline_comment|/*&n; * configure specified card&n; */
r_int
id|DivasCardConfig
c_func
(paren
id|dia_config_t
op_star
id|config
)paren
suffix:semicolon
multiline_comment|/*&n; * load specified binary code onto card&n; */
r_int
id|DivasCardLoad
c_func
(paren
id|dia_load_t
op_star
id|load
)paren
suffix:semicolon
multiline_comment|/*&n; * start specified card running&n; */
r_int
id|DivasCardStart
c_func
(paren
r_int
id|card_id
)paren
suffix:semicolon
multiline_comment|/*&n; * ISR for card&n; * Returns 0 if specified card was interrupting&n; */
r_int
id|DivasIsr
c_func
(paren
r_void
op_star
id|arg
)paren
suffix:semicolon
multiline_comment|/*&n; * Get number of active cards&n; */
r_int
id|DivasGetNum
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n; * Get list of active cards&n; */
r_int
id|DivasGetList
c_func
(paren
id|dia_card_list_t
op_star
id|card_list
)paren
suffix:semicolon
multiline_comment|/* definitions common to several card types */
DECL|macro|DIVAS_SHARED_OFFSET
mdefine_line|#define DIVAS_SHARED_OFFSET     (0x1000)
macro_line|#endif /* ADAPTER_H */
eof
