multiline_comment|/*&n; *&n; * Copyright (C) Eicon Technology Corporation, 2000.&n; *&n; * This source file is supplied for the exclusive use with Eicon&n; * Technology Corporation&squot;s range of DIVA Server Adapters.&n; *&n; * Eicon File Revision :    1.0  &n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2, or (at your option)&n; * any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY OF ANY KIND WHATSOEVER INCLUDING ANY &n; * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  &n; * See the GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; *&n; */
macro_line|#if !defined(PR_PC_H)
DECL|macro|PR_PC_H
mdefine_line|#define PR_PC_H
DECL|struct|pr_ram
r_struct
id|pr_ram
(brace
DECL|member|NextReq
id|word
id|NextReq
suffix:semicolon
multiline_comment|/* pointer to next Req Buffer               */
DECL|member|NextRc
id|word
id|NextRc
suffix:semicolon
multiline_comment|/* pointer to next Rc Buffer                */
DECL|member|NextInd
id|word
id|NextInd
suffix:semicolon
multiline_comment|/* pointer to next Ind Buffer               */
DECL|member|ReqInput
id|byte
id|ReqInput
suffix:semicolon
multiline_comment|/* number of Req Buffers sent               */
DECL|member|ReqOutput
id|byte
id|ReqOutput
suffix:semicolon
multiline_comment|/* number of Req Buffers returned           */
DECL|member|ReqReserved
id|byte
id|ReqReserved
suffix:semicolon
multiline_comment|/* number of Req Buffers reserved           */
DECL|member|Int
id|byte
id|Int
suffix:semicolon
multiline_comment|/* ISDN-P interrupt                         */
DECL|member|XLock
id|byte
id|XLock
suffix:semicolon
multiline_comment|/* Lock field for arbitration               */
DECL|member|RcOutput
id|byte
id|RcOutput
suffix:semicolon
multiline_comment|/* number of Rc buffers received            */
DECL|member|IndOutput
id|byte
id|IndOutput
suffix:semicolon
multiline_comment|/* number of Ind buffers received           */
DECL|member|IMask
id|byte
id|IMask
suffix:semicolon
multiline_comment|/* Interrupt Mask Flag                      */
DECL|member|Reserved1
id|byte
id|Reserved1
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* reserved field, do not use               */
DECL|member|ReadyInt
id|byte
id|ReadyInt
suffix:semicolon
multiline_comment|/* request field for ready interrupt        */
DECL|member|Reserved2
id|byte
id|Reserved2
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* reserved field, do not use               */
DECL|member|InterfaceType
id|byte
id|InterfaceType
suffix:semicolon
multiline_comment|/* interface type 1=16K interface           */
DECL|member|Signature
id|word
id|Signature
suffix:semicolon
multiline_comment|/* ISDN-P initialized indication            */
DECL|member|B
id|byte
id|B
(braket
l_int|1
)braket
suffix:semicolon
multiline_comment|/* buffer space for Req,Ind and Rc          */
)brace
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|next
id|word
id|next
suffix:semicolon
DECL|member|Req
id|byte
id|Req
suffix:semicolon
DECL|member|ReqId
id|byte
id|ReqId
suffix:semicolon
DECL|member|ReqCh
id|byte
id|ReqCh
suffix:semicolon
DECL|member|Reserved1
id|byte
id|Reserved1
suffix:semicolon
DECL|member|Reference
id|word
id|Reference
suffix:semicolon
DECL|member|Reserved
id|byte
id|Reserved
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|XBuffer
id|PBUFFER
id|XBuffer
suffix:semicolon
DECL|typedef|REQ
)brace
id|REQ
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|next
id|word
id|next
suffix:semicolon
DECL|member|Rc
id|byte
id|Rc
suffix:semicolon
DECL|member|RcId
id|byte
id|RcId
suffix:semicolon
DECL|member|RcCh
id|byte
id|RcCh
suffix:semicolon
DECL|member|Reserved1
id|byte
id|Reserved1
suffix:semicolon
DECL|member|Reference
id|word
id|Reference
suffix:semicolon
DECL|member|Reserved2
id|byte
id|Reserved2
(braket
l_int|8
)braket
suffix:semicolon
DECL|typedef|RC
)brace
id|RC
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|next
id|word
id|next
suffix:semicolon
DECL|member|Ind
id|byte
id|Ind
suffix:semicolon
DECL|member|IndId
id|byte
id|IndId
suffix:semicolon
DECL|member|IndCh
id|byte
id|IndCh
suffix:semicolon
DECL|member|MInd
id|byte
id|MInd
suffix:semicolon
DECL|member|MLength
id|word
id|MLength
suffix:semicolon
DECL|member|Reference
id|word
id|Reference
suffix:semicolon
DECL|member|RNR
id|byte
id|RNR
suffix:semicolon
DECL|member|Reserved
id|byte
id|Reserved
suffix:semicolon
DECL|member|Ack
id|dword
id|Ack
suffix:semicolon
DECL|member|RBuffer
id|PBUFFER
id|RBuffer
suffix:semicolon
DECL|typedef|IND
)brace
id|IND
suffix:semicolon
macro_line|#endif
eof
