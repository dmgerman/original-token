multiline_comment|/* $Id: isdn_audio.h,v 1.4 1996/06/06 14:43:32 fritz Exp $&n; *&n; * Linux ISDN subsystem, audio conversion and compression (linklevel).&n; *&n; * Copyright 1994,95,96 by Fritz Elfert (fritz@wuemaus.franken.de)&n; * &n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2, or (at your option)&n; * any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. &n; *&n; * $Log: isdn_audio.h,v $&n; * Revision 1.4  1996/06/06 14:43:32  fritz&n; * Changed to support DTMF decoding on audio playback also.&n; *&n; * Revision 1.3  1996/06/05 02:24:09  fritz&n; * Added DTMF decoder for audio mode.&n; *&n; * Revision 1.2  1996/05/10 08:48:32  fritz&n; * Corrected adpcm bugs.&n; *&n; * Revision 1.1  1996/04/30 09:29:06  fritz&n; * Taken under CVS control.&n; *&n; */
DECL|macro|DTMF_NPOINTS
mdefine_line|#define DTMF_NPOINTS 205       /* Number of samples for DTMF recognition */
DECL|struct|adpcm_state
r_typedef
r_struct
id|adpcm_state
(brace
DECL|member|a
r_int
id|a
suffix:semicolon
DECL|member|d
r_int
id|d
suffix:semicolon
DECL|member|word
r_int
id|word
suffix:semicolon
DECL|member|nleft
r_int
id|nleft
suffix:semicolon
DECL|member|nbits
r_int
id|nbits
suffix:semicolon
DECL|typedef|adpcm_state
)brace
id|adpcm_state
suffix:semicolon
DECL|struct|dtmf_state
r_typedef
r_struct
id|dtmf_state
(brace
DECL|member|last
r_char
id|last
suffix:semicolon
DECL|member|idx
r_int
id|idx
suffix:semicolon
DECL|member|buf
r_int
id|buf
(braket
id|DTMF_NPOINTS
)braket
suffix:semicolon
DECL|typedef|dtmf_state
)brace
id|dtmf_state
suffix:semicolon
r_extern
r_void
id|isdn_audio_ulaw2alaw
c_func
(paren
r_int
r_char
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_void
id|isdn_audio_alaw2ulaw
c_func
(paren
r_int
r_char
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
id|adpcm_state
op_star
id|isdn_audio_adpcm_init
c_func
(paren
id|adpcm_state
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|isdn_audio_adpcm2xlaw
c_func
(paren
id|adpcm_state
op_star
comma
r_int
comma
r_int
r_char
op_star
comma
r_int
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|isdn_audio_xlaw2adpcm
c_func
(paren
id|adpcm_state
op_star
comma
r_int
comma
r_int
r_char
op_star
comma
r_int
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|isdn_audio_2adpcm_flush
c_func
(paren
id|adpcm_state
op_star
id|s
comma
r_int
r_char
op_star
id|out
)paren
suffix:semicolon
r_extern
r_void
id|isdn_audio_calc_dtmf
c_func
(paren
id|modem_info
op_star
comma
r_int
r_char
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|isdn_audio_eval_dtmf
c_func
(paren
id|modem_info
op_star
)paren
suffix:semicolon
id|dtmf_state
op_star
id|isdn_audio_dtmf_init
c_func
(paren
id|dtmf_state
op_star
)paren
suffix:semicolon
eof
