multiline_comment|/*&n; *&t;eata.h - used by low-level scsi driver for EISA EATA controllers.&n; *&n; */
macro_line|#ifndef _EISA_EATA_H
DECL|macro|_EISA_EATA_H
mdefine_line|#define _EISA_EATA_H
DECL|macro|EATA_VERSION
mdefine_line|#define EATA_VERSION &quot;1.08.00&quot;
r_int
id|eata_detect
c_func
(paren
id|Scsi_Host_Template
op_star
)paren
suffix:semicolon
r_int
id|eata_queuecommand
c_func
(paren
id|Scsi_Cmnd
op_star
comma
r_void
(paren
op_star
id|done
)paren
(paren
id|Scsi_Cmnd
op_star
)paren
)paren
suffix:semicolon
r_int
id|eata_abort
c_func
(paren
id|Scsi_Cmnd
op_star
)paren
suffix:semicolon
r_const
r_char
op_star
id|eata_info
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|eata_reset
c_func
(paren
id|Scsi_Cmnd
op_star
)paren
suffix:semicolon
r_int
id|eata_bios_param
c_func
(paren
id|Disk
op_star
comma
r_int
comma
r_int
op_star
)paren
suffix:semicolon
DECL|macro|EATA
mdefine_line|#define EATA {  NULL, /* Ptr for modules */                    &bslash;&n;                &quot;EISA EATA 2.0A rev. &quot; EATA_VERSION &quot; by &quot;     &bslash;&n;                &quot;Dario_Ballabio@milano.europe.dg.com.&quot;,&bslash;&n;                eata_detect,&t;        &t;               &bslash;&n;                NULL, /* Release */     &t;               &bslash;&n;&t;&t;eata_info,                                     &bslash;&n;&t;&t;NULL,    &t;&t;&t;       &t;       &bslash;&n;&t;&t;eata_queuecommand,&t;&t;&t;       &bslash;&n;&t;&t;eata_abort,&t;&t;&t;&t;       &bslash;&n;&t;&t;eata_reset,&t;&t;&t;&t;       &bslash;&n;&t;        NULL,&t;&t;                               &bslash;&n;&t;&t;eata_bios_param,   &t;&t;&t;       &bslash;&n;&t;&t;0,   /* can_queue, reset by detect */          &bslash;&n;                7,   /* this_id, reset by detect */            &bslash;&n;                0,   /* sg_tablesize, reset by detect */       &bslash;&n;                0,   /* cmd_per_lun, reset by detect */        &bslash;&n;&t;&t;0,   /* number of boards present */            &bslash;&n;                0,   /* unchecked isa dma */                   &bslash;&n;                ENABLE_CLUSTERING                              &bslash;&n;                }
macro_line|#endif
eof
