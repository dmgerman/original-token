multiline_comment|/*&n; *      sr.h by David Giller&n; *      CD-ROM disk driver header file&n; *      &n; *      adapted from:&n; *&t;sd.h Copyright (C) 1992 Drew Eckhardt &n; *&t;SCSI disk driver header file by&n; *&t;&t;Drew Eckhardt &n; *&n; *&t;&lt;drew@colorado.edu&gt;&n; *&n; *       Modified by Eric Youngdale eric@aib.com to&n; *       add scatter-gather, multiple outstanding request, and other&n; *       enhancements.&n; */
macro_line|#ifndef _SR_H
DECL|macro|_SR_H
mdefine_line|#define _SR_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &quot;scsi.h&quot;
r_typedef
r_struct
(brace
DECL|member|capacity
r_int
id|capacity
suffix:semicolon
multiline_comment|/* size in blocks &t;&t;&t;*/
DECL|member|sector_size
r_int
id|sector_size
suffix:semicolon
multiline_comment|/* size in bytes &t;&t;&t;*/
DECL|member|device
id|Scsi_Device
op_star
id|device
suffix:semicolon
DECL|member|vendor
r_int
r_int
id|vendor
suffix:semicolon
multiline_comment|/* vendor code, see sr_vendor.c         */
DECL|member|ms_offset
r_int
r_int
id|ms_offset
suffix:semicolon
multiline_comment|/* for reading multisession-CD&squot;s        */
DECL|member|sector_bit_size
r_int
r_char
id|sector_bit_size
suffix:semicolon
multiline_comment|/* sector size = 2^sector_bit_size&t;*/
DECL|member|sector_bit_shift
r_int
r_char
id|sector_bit_shift
suffix:semicolon
multiline_comment|/* sectors/FS block = 2^sector_bit_shift*/
DECL|member|needs_sector_size
r_int
id|needs_sector_size
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* needs to get sector size */
DECL|member|ten
r_int
id|ten
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* support ten byte commands&t;&t;*/
DECL|member|remap
r_int
id|remap
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* support remapping&t;&t;&t;*/
DECL|member|use
r_int
id|use
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* is this device still supportable&t;*/
DECL|member|xa_flag
r_int
id|xa_flag
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* CD has XA sectors */
DECL|member|cdi
r_struct
id|cdrom_device_info
id|cdi
suffix:semicolon
DECL|typedef|Scsi_CD
)brace
id|Scsi_CD
suffix:semicolon
r_extern
id|Scsi_CD
op_star
id|scsi_CDs
suffix:semicolon
r_int
id|sr_do_ioctl
c_func
(paren
r_int
comma
r_int
r_char
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|sr_lock_door
c_func
(paren
r_struct
id|cdrom_device_info
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|sr_tray_move
c_func
(paren
r_struct
id|cdrom_device_info
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|sr_drive_status
c_func
(paren
r_struct
id|cdrom_device_info
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|sr_disk_status
c_func
(paren
r_struct
id|cdrom_device_info
op_star
)paren
suffix:semicolon
r_int
id|sr_get_last_session
c_func
(paren
r_struct
id|cdrom_device_info
op_star
comma
r_struct
id|cdrom_multisession
op_star
)paren
suffix:semicolon
r_int
id|sr_get_mcn
c_func
(paren
r_struct
id|cdrom_device_info
op_star
comma
r_struct
id|cdrom_mcn
op_star
)paren
suffix:semicolon
r_int
id|sr_reset
c_func
(paren
r_struct
id|cdrom_device_info
op_star
)paren
suffix:semicolon
r_int
id|sr_audio_ioctl
c_func
(paren
r_struct
id|cdrom_device_info
op_star
comma
r_int
r_int
comma
r_void
op_star
)paren
suffix:semicolon
r_int
id|sr_dev_ioctl
c_func
(paren
r_struct
id|cdrom_device_info
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
multiline_comment|/* vendor-specific */
macro_line|#ifdef CONFIG_BLK_DEV_SR_VENDOR
r_void
id|sr_vendor_init
c_func
(paren
r_int
id|minor
)paren
suffix:semicolon
r_int
id|sr_cd_check
c_func
(paren
r_struct
id|cdrom_device_info
op_star
)paren
suffix:semicolon
macro_line|#endif
macro_line|#endif
eof
