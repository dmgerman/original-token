multiline_comment|/*&n; * General definitions for the COMX driver &n; * &n; * Original authors:  Arpad Bakay &lt;bakay.arpad@synergon.hu&gt;,&n; *                    Peter Bajan &lt;bajan.peter@synergon.hu&gt;,&n; * Previous maintainer: Tivadar Szemethy &lt;tiv@itc.hu&gt;&n; * Currently maintained by: Gergely Madarasz &lt;gorgo@itc.hu&gt;&n; *&n; * Copyright (C) 1995-1999 ITConsult-Pro Co. &lt;info@itc.hu&gt;&n; *&n; * This program is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU General Public License&n; * as published by the Free Software Foundation; either version&n; * 2 of the License, or (at your option) any later version.&n; *&n; *&n; * net_device_stats:&n; *&t;rx_length_errors&t;rec_len &lt; 4 || rec_len &gt; 2000&n; *&t;rx_over_errors&t;&t;receive overrun (OVR)&n; *&t;rx_crc_errors&t;&t;rx crc error&n; *&t;rx_frame_errors&t;&t;aborts rec&squot;d (ABO)&n; *&t;rx_fifo_errors&t;&t;status fifo overrun (PBUFOVR)&n; *&t;rx_missed_errors&t;receive buffer overrun (BUFOVR)&n; *&t;tx_aborted_errors&t;?&n; *&t;tx_carrier_errors&t;modem line status changes&n; *&t;tx_fifo_errors&t;&t;tx underrun (locomx)&n; */
macro_line|#include &lt;linux/config.h&gt;
DECL|struct|comx_protocol
r_struct
id|comx_protocol
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|version
r_char
op_star
id|version
suffix:semicolon
DECL|member|encap_type
r_int
r_int
id|encap_type
suffix:semicolon
DECL|member|line_init
r_int
(paren
op_star
id|line_init
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|line_exit
r_int
(paren
op_star
id|line_exit
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|next
r_struct
id|comx_protocol
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|comx_hardware
r_struct
id|comx_hardware
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|version
r_char
op_star
id|version
suffix:semicolon
DECL|member|hw_init
r_int
(paren
op_star
id|hw_init
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|hw_exit
r_int
(paren
op_star
id|hw_exit
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|hw_dump
r_int
(paren
op_star
id|hw_dump
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|next
r_struct
id|comx_hardware
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|comx_channel
r_struct
id|comx_channel
(brace
DECL|member|if_ptr
r_void
op_star
id|if_ptr
suffix:semicolon
singleline_comment|// General purpose pointer
DECL|member|dev
r_struct
id|net_device
op_star
id|dev
suffix:semicolon
singleline_comment|// Where we belong to
DECL|member|twin
r_struct
id|net_device
op_star
id|twin
suffix:semicolon
singleline_comment|// On dual-port cards
DECL|member|procdir
r_struct
id|proc_dir_entry
op_star
id|procdir
suffix:semicolon
singleline_comment|// the directory
DECL|member|init_status
r_int
r_char
id|init_status
suffix:semicolon
DECL|member|line_status
r_int
r_char
id|line_status
suffix:semicolon
DECL|member|lineup_timer
r_struct
id|timer_list
id|lineup_timer
suffix:semicolon
singleline_comment|// against line jitter
DECL|member|lineup_pending
r_int
r_int
id|lineup_pending
suffix:semicolon
DECL|member|lineup_delay
r_int
r_char
id|lineup_delay
suffix:semicolon
macro_line|#if 0
r_struct
id|timer_list
id|reset_timer
suffix:semicolon
singleline_comment|// for board resetting
r_int
id|reset_pending
suffix:semicolon
r_int
id|reset_timeout
suffix:semicolon
macro_line|#endif
DECL|member|stats
r_struct
id|net_device_stats
id|stats
suffix:semicolon
DECL|member|current_stats
r_struct
id|net_device_stats
op_star
id|current_stats
suffix:semicolon
macro_line|#if 0
r_int
r_int
id|board_resets
suffix:semicolon
macro_line|#endif
DECL|member|avg_bytes
r_int
r_int
op_star
id|avg_bytes
suffix:semicolon
DECL|member|loadavg_counter
DECL|member|loadavg_size
r_int
id|loadavg_counter
comma
id|loadavg_size
suffix:semicolon
DECL|member|loadavg
r_int
id|loadavg
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|loadavg_timer
r_struct
id|timer_list
id|loadavg_timer
suffix:semicolon
DECL|member|debug_flags
r_int
id|debug_flags
suffix:semicolon
DECL|member|debug_area
r_char
op_star
id|debug_area
suffix:semicolon
DECL|member|debug_start
DECL|member|debug_end
DECL|member|debug_size
r_int
id|debug_start
comma
id|debug_end
comma
id|debug_size
suffix:semicolon
DECL|member|debug_file
r_struct
id|proc_dir_entry
op_star
id|debug_file
suffix:semicolon
macro_line|#ifdef&t;CONFIG_COMX_DEBUG_RAW
DECL|member|raw
r_char
op_star
id|raw
suffix:semicolon
DECL|member|raw_len
r_int
id|raw_len
suffix:semicolon
macro_line|#endif
singleline_comment|// LINE specific&t;
DECL|member|protocol
r_struct
id|comx_protocol
op_star
id|protocol
suffix:semicolon
DECL|member|LINE_rx
r_void
(paren
op_star
id|LINE_rx
)paren
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
DECL|member|LINE_tx
r_int
(paren
op_star
id|LINE_tx
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|LINE_status
r_void
(paren
op_star
id|LINE_status
)paren
(paren
r_struct
id|net_device
op_star
id|dev
comma
id|u_short
id|status
)paren
suffix:semicolon
DECL|member|LINE_open
r_int
(paren
op_star
id|LINE_open
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|LINE_close
r_int
(paren
op_star
id|LINE_close
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|LINE_xmit
r_int
(paren
op_star
id|LINE_xmit
)paren
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|LINE_header
r_int
(paren
op_star
id|LINE_header
)paren
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|net_device
op_star
id|dev
comma
id|u_short
id|type
comma
r_void
op_star
id|daddr
comma
r_void
op_star
id|saddr
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|LINE_rebuild_header
r_int
(paren
op_star
id|LINE_rebuild_header
)paren
(paren
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
DECL|member|LINE_statistics
r_int
(paren
op_star
id|LINE_statistics
)paren
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_char
op_star
id|page
)paren
suffix:semicolon
DECL|member|LINE_parameter_check
r_int
(paren
op_star
id|LINE_parameter_check
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|LINE_ioctl
r_int
(paren
op_star
id|LINE_ioctl
)paren
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|ifreq
op_star
id|ifr
comma
r_int
id|cmd
)paren
suffix:semicolon
DECL|member|LINE_mod_use
r_void
(paren
op_star
id|LINE_mod_use
)paren
(paren
r_int
)paren
suffix:semicolon
DECL|member|LINE_privdata
r_void
op_star
id|LINE_privdata
suffix:semicolon
singleline_comment|// HW specific
DECL|member|hardware
r_struct
id|comx_hardware
op_star
id|hardware
suffix:semicolon
DECL|member|HW_board_on
r_void
(paren
op_star
id|HW_board_on
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|HW_board_off
r_void
(paren
op_star
id|HW_board_off
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|HW_access_board
r_struct
id|net_device
op_star
(paren
op_star
id|HW_access_board
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|HW_release_board
r_void
(paren
op_star
id|HW_release_board
)paren
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|net_device
op_star
id|savep
)paren
suffix:semicolon
DECL|member|HW_txe
r_int
(paren
op_star
id|HW_txe
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|HW_open
r_int
(paren
op_star
id|HW_open
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|HW_close
r_int
(paren
op_star
id|HW_close
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|HW_send_packet
r_int
(paren
op_star
id|HW_send_packet
)paren
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
DECL|member|HW_statistics
r_int
(paren
op_star
id|HW_statistics
)paren
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_char
op_star
id|page
)paren
suffix:semicolon
macro_line|#if 0
r_int
(paren
op_star
id|HW_reset
)paren
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_char
op_star
id|page
)paren
suffix:semicolon
macro_line|#endif
DECL|member|HW_load_board
r_int
(paren
op_star
id|HW_load_board
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|HW_set_clock
r_void
(paren
op_star
id|HW_set_clock
)paren
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|member|HW_privdata
r_void
op_star
id|HW_privdata
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|comx_debugflags_struct
r_struct
id|comx_debugflags_struct
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|value
r_int
id|value
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|COMX_ROOT_DIR_NAME
mdefine_line|#define&t;COMX_ROOT_DIR_NAME&t;&quot;comx&quot;
DECL|macro|FILENAME_HARDWARE
mdefine_line|#define&t;FILENAME_HARDWARE&t;&quot;boardtype&quot;
DECL|macro|FILENAME_HARDWARELIST
mdefine_line|#define FILENAME_HARDWARELIST&t;&quot;boardtypes&quot;
DECL|macro|FILENAME_PROTOCOL
mdefine_line|#define FILENAME_PROTOCOL&t;&quot;protocol&quot;
DECL|macro|FILENAME_PROTOCOLLIST
mdefine_line|#define FILENAME_PROTOCOLLIST&t;&quot;protocols&quot;
DECL|macro|FILENAME_DEBUG
mdefine_line|#define FILENAME_DEBUG&t;&t;&quot;debug&quot;
DECL|macro|FILENAME_CLOCK
mdefine_line|#define FILENAME_CLOCK&t;&t;&quot;clock&quot;
DECL|macro|FILENAME_STATUS
mdefine_line|#define&t;FILENAME_STATUS&t;&t;&quot;status&quot;
DECL|macro|FILENAME_IO
mdefine_line|#define&t;FILENAME_IO&t;&t;&quot;io&quot;
DECL|macro|FILENAME_IRQ
mdefine_line|#define FILENAME_IRQ&t;&t;&quot;irq&quot;
DECL|macro|FILENAME_KEEPALIVE
mdefine_line|#define&t;FILENAME_KEEPALIVE&t;&quot;keepalive&quot;
DECL|macro|FILENAME_LINEUPDELAY
mdefine_line|#define FILENAME_LINEUPDELAY&t;&quot;lineup_delay&quot;
DECL|macro|FILENAME_CHANNEL
mdefine_line|#define FILENAME_CHANNEL&t;&quot;channel&quot;
DECL|macro|FILENAME_FIRMWARE
mdefine_line|#define FILENAME_FIRMWARE&t;&quot;firmware&quot;
DECL|macro|FILENAME_MEMADDR
mdefine_line|#define FILENAME_MEMADDR&t;&quot;memaddr&quot;
DECL|macro|FILENAME_TWIN
mdefine_line|#define&t;FILENAME_TWIN&t;&t;&quot;twin&quot;
DECL|macro|FILENAME_T1
mdefine_line|#define FILENAME_T1&t;&t;&quot;t1&quot;
DECL|macro|FILENAME_T2
mdefine_line|#define FILENAME_T2&t;&t;&quot;t2&quot;
DECL|macro|FILENAME_N2
mdefine_line|#define FILENAME_N2&t;&t;&quot;n2&quot;
DECL|macro|FILENAME_WINDOW
mdefine_line|#define FILENAME_WINDOW&t;&t;&quot;window&quot;
DECL|macro|FILENAME_MODE
mdefine_line|#define FILENAME_MODE&t;&t;&quot;mode&quot;
DECL|macro|FILENAME_DLCI
mdefine_line|#define&t;FILENAME_DLCI&t;&t;&quot;dlci&quot;
DECL|macro|FILENAME_MASTER
mdefine_line|#define&t;FILENAME_MASTER&t;&t;&quot;master&quot;
macro_line|#ifdef&t;CONFIG_COMX_DEBUG_RAW
DECL|macro|FILENAME_RAW
mdefine_line|#define&t;FILENAME_RAW&t;&t;&quot;raw&quot;
macro_line|#endif
DECL|macro|PROTONAME_NONE
mdefine_line|#define PROTONAME_NONE&t;&t;&quot;none&quot;
DECL|macro|HWNAME_NONE
mdefine_line|#define HWNAME_NONE&t;&t;&quot;none&quot;
DECL|macro|KEEPALIVE_OFF
mdefine_line|#define KEEPALIVE_OFF&t;&t;&quot;off&quot;
DECL|macro|FRAME_ACCEPTED
mdefine_line|#define FRAME_ACCEPTED&t;&t;0&t;&t;/* sending and xmitter busy */
DECL|macro|FRAME_DROPPED
mdefine_line|#define FRAME_DROPPED&t;&t;1
DECL|macro|FRAME_ERROR
mdefine_line|#define FRAME_ERROR&t;&t;2&t;&t;/* xmitter error */
DECL|macro|FRAME_QUEUED
mdefine_line|#define&t;FRAME_QUEUED&t;&t;3&t;&t;/* sending but more can come */
DECL|macro|LINE_UP
mdefine_line|#define&t;LINE_UP&t;&t;&t;1&t;&t;/* Modem UP */
DECL|macro|PROTO_UP
mdefine_line|#define PROTO_UP&t;&t;2
DECL|macro|PROTO_LOOP
mdefine_line|#define PROTO_LOOP&t;&t;4
DECL|macro|HW_OPEN
mdefine_line|#define&t;HW_OPEN&t;&t;&t;1
DECL|macro|LINE_OPEN
mdefine_line|#define&t;LINE_OPEN&t;&t;2
DECL|macro|FW_LOADED
mdefine_line|#define FW_LOADED&t;&t;4
DECL|macro|IRQ_ALLOCATED
mdefine_line|#define IRQ_ALLOCATED&t;&t;8
DECL|macro|DEBUG_COMX_RX
mdefine_line|#define DEBUG_COMX_RX&t;&t;2
DECL|macro|DEBUG_COMX_TX
mdefine_line|#define&t;DEBUG_COMX_TX&t;&t;4
DECL|macro|DEBUG_HW_TX
mdefine_line|#define&t;DEBUG_HW_TX&t;&t;16
DECL|macro|DEBUG_HW_RX
mdefine_line|#define&t;DEBUG_HW_RX&t;&t;32
DECL|macro|DEBUG_HDLC_KEEPALIVE
mdefine_line|#define&t;DEBUG_HDLC_KEEPALIVE&t;64
DECL|macro|DEBUG_COMX_PPP
mdefine_line|#define&t;DEBUG_COMX_PPP&t;&t;128
DECL|macro|DEBUG_COMX_LAPB
mdefine_line|#define DEBUG_COMX_LAPB&t;&t;256
DECL|macro|DEBUG_COMX_DLCI
mdefine_line|#define&t;DEBUG_COMX_DLCI&t;&t;512
DECL|macro|DEBUG_PAGESIZE
mdefine_line|#define&t;DEBUG_PAGESIZE&t;&t;3072
DECL|macro|DEFAULT_DEBUG_SIZE
mdefine_line|#define DEFAULT_DEBUG_SIZE&t;4096
DECL|macro|DEFAULT_LINEUP_DELAY
mdefine_line|#define&t;DEFAULT_LINEUP_DELAY&t;1
DECL|macro|FILE_PAGESIZE
mdefine_line|#define&t;FILE_PAGESIZE&t;&t;3072
macro_line|#ifndef&t;COMX_PPP_MAJOR
DECL|macro|COMX_PPP_MAJOR
mdefine_line|#define&t;COMX_PPP_MAJOR&t;&t;88
macro_line|#endif
macro_line|#ifndef min
DECL|macro|min
mdefine_line|#define min(a,b)&t;&t;((a) &gt; (b) ? (b) : (a))
macro_line|#endif
macro_line|#ifndef max
DECL|macro|max
mdefine_line|#define max(a,b)&t;&t;((a) &gt; (b) ? (a) : (b))
macro_line|#endif
DECL|macro|COMX_CHANNEL
mdefine_line|#define COMX_CHANNEL(dev) ((struct comx_channel*)dev-&gt;priv)
DECL|macro|TWIN
mdefine_line|#define TWIN(dev) (COMX_CHANNEL(dev)-&gt;twin)
macro_line|#ifndef byte
DECL|typedef|byte
r_typedef
id|u8
id|byte
suffix:semicolon
macro_line|#endif
macro_line|#ifndef word
DECL|typedef|word
r_typedef
id|u16
id|word
suffix:semicolon
macro_line|#endif
macro_line|#ifndef&t;SEEK_SET
DECL|macro|SEEK_SET
mdefine_line|#define&t;SEEK_SET&t;0
macro_line|#endif
macro_line|#ifndef&t;SEEK_CUR
DECL|macro|SEEK_CUR
mdefine_line|#define&t;SEEK_CUR&t;1
macro_line|#endif
macro_line|#ifndef&t;SEEK_END
DECL|macro|SEEK_END
mdefine_line|#define&t;SEEK_END&t;2
macro_line|#endif
r_extern
r_struct
id|proc_dir_entry
op_star
id|comx_root_dir
suffix:semicolon
r_extern
r_int
id|comx_register_hardware
c_func
(paren
r_struct
id|comx_hardware
op_star
id|comx_hw
)paren
suffix:semicolon
r_extern
r_int
id|comx_unregister_hardware
c_func
(paren
r_char
op_star
id|name
)paren
suffix:semicolon
r_extern
r_int
id|comx_register_protocol
c_func
(paren
r_struct
id|comx_protocol
op_star
id|comx_line
)paren
suffix:semicolon
r_extern
r_int
id|comx_unregister_protocol
c_func
(paren
r_char
op_star
id|name
)paren
suffix:semicolon
r_extern
r_int
id|comx_rx
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_void
id|comx_status
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_int
id|status
)paren
suffix:semicolon
r_extern
r_void
id|comx_lineup_func
c_func
(paren
r_int
r_int
id|d
)paren
suffix:semicolon
r_extern
r_int
id|comx_debug
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_char
op_star
id|fmt
comma
dot
dot
dot
)paren
suffix:semicolon
r_extern
r_int
id|comx_debug_skb
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|sk_buff
op_star
id|skb
comma
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
r_int
id|comx_debug_bytes
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_int
r_char
op_star
id|bytes
comma
r_int
id|len
comma
r_char
op_star
id|msg
)paren
suffix:semicolon
r_extern
r_int
id|comx_strcasecmp
c_func
(paren
r_const
r_char
op_star
id|cs
comma
r_const
r_char
op_star
id|ct
)paren
suffix:semicolon
r_extern
r_struct
id|inode_operations
id|comx_normal_inode_ops
suffix:semicolon
eof
