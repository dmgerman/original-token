multiline_comment|/* sis900.h Definitions for SiS ethernet controllers including 7014/7016 and 900 &n; * Copyright 1999 Silicon Integrated System Corporation&n; * References:&n; *   SiS 7016 Fast Ethernet PCI Bus 10/100 Mbps LAN Controller with OnNow Support,&n; *&t;preliminary Rev. 1.0 Jan. 14, 1998&n; *   SiS 900 Fast Ethernet PCI Bus 10/100 Mbps LAN Single Chip with OnNow Support,&n; *&t;preliminary Rev. 1.0 Nov. 10, 1998&n; *   SiS 7014 Single Chip 100BASE-TX/10BASE-T Physical Layer Solution,&n; *&t;preliminary Rev. 1.0 Jan. 18, 1998&n; *   http://www.sis.com.tw/support/databook.htm&n; */
multiline_comment|/*&n; * SiS 7016 and SiS 900 ethernet controller registers&n; */
multiline_comment|/* The I/O extent, SiS 900 needs 256 bytes of io address */
DECL|macro|SIS900_TOTAL_SIZE
mdefine_line|#define SIS900_TOTAL_SIZE 0x100
multiline_comment|/* Symbolic offsets to registers. */
DECL|enum|sis900_registers
r_enum
id|sis900_registers
(brace
DECL|enumerator|cr
id|cr
op_assign
l_int|0x0
comma
singleline_comment|//Command Register
DECL|enumerator|cfg
id|cfg
op_assign
l_int|0x4
comma
singleline_comment|//Configuration Register
DECL|enumerator|mear
id|mear
op_assign
l_int|0x8
comma
singleline_comment|//EEPROM Access Register
DECL|enumerator|ptscr
id|ptscr
op_assign
l_int|0xc
comma
singleline_comment|//PCI Test Control Register
DECL|enumerator|isr
id|isr
op_assign
l_int|0x10
comma
singleline_comment|//Interrupt Status Register
DECL|enumerator|imr
id|imr
op_assign
l_int|0x14
comma
singleline_comment|//Interrupt Mask Register
DECL|enumerator|ier
id|ier
op_assign
l_int|0x18
comma
singleline_comment|//Interrupt Enable Register
DECL|enumerator|epar
id|epar
op_assign
l_int|0x18
comma
singleline_comment|//Enhanced PHY Access Register
DECL|enumerator|txdp
id|txdp
op_assign
l_int|0x20
comma
singleline_comment|//Transmit Descriptor Pointer Register
DECL|enumerator|txcfg
id|txcfg
op_assign
l_int|0x24
comma
singleline_comment|//Transmit Configuration Register
DECL|enumerator|rxdp
id|rxdp
op_assign
l_int|0x30
comma
singleline_comment|//Receive Descriptor Pointer Register
DECL|enumerator|rxcfg
id|rxcfg
op_assign
l_int|0x34
comma
singleline_comment|//Receive Configuration Register
DECL|enumerator|flctrl
id|flctrl
op_assign
l_int|0x38
comma
singleline_comment|//Flow Control Register
DECL|enumerator|rxlen
id|rxlen
op_assign
l_int|0x3c
comma
singleline_comment|//Receive Packet Length Register
DECL|enumerator|rfcr
id|rfcr
op_assign
l_int|0x48
comma
singleline_comment|//Receive Filter Control Register
DECL|enumerator|rfdr
id|rfdr
op_assign
l_int|0x4C
comma
singleline_comment|//Receive Filter Data Register
DECL|enumerator|pmctrl
id|pmctrl
op_assign
l_int|0xB0
comma
singleline_comment|//Power Management Control Register
DECL|enumerator|pmer
id|pmer
op_assign
l_int|0xB4
singleline_comment|//Power Management Wake-up Event Register
)brace
suffix:semicolon
multiline_comment|/* Symbolic names for bits in various registers */
DECL|enum|sis900_command_register_bits
r_enum
id|sis900_command_register_bits
(brace
DECL|enumerator|RELOAD
id|RELOAD
op_assign
l_int|0x00000400
comma
DECL|enumerator|RESET
DECL|enumerator|SWI
DECL|enumerator|RxRESET
id|RESET
op_assign
l_int|0x00000100
comma
id|SWI
op_assign
l_int|0x00000080
comma
id|RxRESET
op_assign
l_int|0x00000020
comma
DECL|enumerator|TxRESET
DECL|enumerator|RxDIS
DECL|enumerator|RxENA
id|TxRESET
op_assign
l_int|0x00000010
comma
id|RxDIS
op_assign
l_int|0x00000008
comma
id|RxENA
op_assign
l_int|0x00000004
comma
DECL|enumerator|TxDIS
DECL|enumerator|TxENA
id|TxDIS
op_assign
l_int|0x00000002
comma
id|TxENA
op_assign
l_int|0x00000001
)brace
suffix:semicolon
DECL|enum|sis900_configuration_register_bits
r_enum
id|sis900_configuration_register_bits
(brace
DECL|enumerator|DESCRFMT
DECL|enumerator|REQALG
id|DESCRFMT
op_assign
l_int|0x00000100
multiline_comment|/* 7016 specific */
comma
id|REQALG
op_assign
l_int|0x00000080
comma
DECL|enumerator|SB
DECL|enumerator|POW
DECL|enumerator|EXD
id|SB
op_assign
l_int|0x00000040
comma
id|POW
op_assign
l_int|0x00000020
comma
id|EXD
op_assign
l_int|0x00000010
comma
DECL|enumerator|PESEL
DECL|enumerator|LPM
DECL|enumerator|BEM
id|PESEL
op_assign
l_int|0x00000008
comma
id|LPM
op_assign
l_int|0x00000004
comma
id|BEM
op_assign
l_int|0x00000001
)brace
suffix:semicolon
DECL|enum|sis900_eeprom_access_reigster_bits
r_enum
id|sis900_eeprom_access_reigster_bits
(brace
DECL|enumerator|MDC
DECL|enumerator|MDDIR
DECL|enumerator|MDIO
id|MDC
op_assign
l_int|0x00000040
comma
id|MDDIR
op_assign
l_int|0x00000020
comma
id|MDIO
op_assign
l_int|0x00000010
comma
multiline_comment|/* 7016 specific */
DECL|enumerator|EECS
DECL|enumerator|EECLK
DECL|enumerator|EEDO
id|EECS
op_assign
l_int|0x00000008
comma
id|EECLK
op_assign
l_int|0x00000004
comma
id|EEDO
op_assign
l_int|0x00000002
comma
DECL|enumerator|EEDI
id|EEDI
op_assign
l_int|0x00000001
)brace
suffix:semicolon
DECL|enum|sis900_interrupt_register_bits
r_enum
id|sis900_interrupt_register_bits
(brace
DECL|enumerator|WKEVT
DECL|enumerator|TxPAUSEEND
DECL|enumerator|TxPAUSE
id|WKEVT
op_assign
l_int|0x10000000
comma
id|TxPAUSEEND
op_assign
l_int|0x08000000
comma
id|TxPAUSE
op_assign
l_int|0x04000000
comma
DECL|enumerator|TxRCMP
DECL|enumerator|RxRCMP
DECL|enumerator|DPERR
id|TxRCMP
op_assign
l_int|0x02000000
comma
id|RxRCMP
op_assign
l_int|0x01000000
comma
id|DPERR
op_assign
l_int|0x00800000
comma
DECL|enumerator|SSERR
DECL|enumerator|RMABT
DECL|enumerator|RTABT
id|SSERR
op_assign
l_int|0x00400000
comma
id|RMABT
op_assign
l_int|0x00200000
comma
id|RTABT
op_assign
l_int|0x00100000
comma
DECL|enumerator|RxSOVR
DECL|enumerator|HIBERR
DECL|enumerator|SWINT
id|RxSOVR
op_assign
l_int|0x00010000
comma
id|HIBERR
op_assign
l_int|0x00008000
comma
id|SWINT
op_assign
l_int|0x00001000
comma
DECL|enumerator|MIBINT
DECL|enumerator|TxURN
DECL|enumerator|TxIDLE
id|MIBINT
op_assign
l_int|0x00000800
comma
id|TxURN
op_assign
l_int|0x00000400
comma
id|TxIDLE
op_assign
l_int|0x00000200
comma
DECL|enumerator|TxERR
DECL|enumerator|TxDESC
DECL|enumerator|TxOK
id|TxERR
op_assign
l_int|0x00000100
comma
id|TxDESC
op_assign
l_int|0x00000080
comma
id|TxOK
op_assign
l_int|0x00000040
comma
DECL|enumerator|RxORN
DECL|enumerator|RxIDLE
DECL|enumerator|RxEARLY
id|RxORN
op_assign
l_int|0x00000020
comma
id|RxIDLE
op_assign
l_int|0x00000010
comma
id|RxEARLY
op_assign
l_int|0x00000008
comma
DECL|enumerator|RxERR
DECL|enumerator|RxDESC
DECL|enumerator|RxOK
id|RxERR
op_assign
l_int|0x00000004
comma
id|RxDESC
op_assign
l_int|0x00000002
comma
id|RxOK
op_assign
l_int|0x00000001
)brace
suffix:semicolon
DECL|enum|sis900_interrupt_enable_reigster_bits
r_enum
id|sis900_interrupt_enable_reigster_bits
(brace
DECL|enumerator|IE
id|IE
op_assign
l_int|0x00000001
)brace
suffix:semicolon
multiline_comment|/* maximum dma burst fro transmission and receive*/
DECL|macro|MAX_DMA_RANGE
mdefine_line|#define MAX_DMA_RANGE&t;7&t;/* actually 0 means MAXIMUM !! */
DECL|macro|TxMXDMA_shift
mdefine_line|#define TxMXDMA_shift   &t;20
DECL|macro|RxMXDMA_shift
mdefine_line|#define RxMXDMA_shift    20
DECL|macro|TX_DMA_BURST
mdefine_line|#define TX_DMA_BURST    &t;0
DECL|macro|RX_DMA_BURST
mdefine_line|#define RX_DMA_BURST    &t;0
multiline_comment|/* transmit FIFO threshholds */
DECL|macro|TX_FILL_THRESH
mdefine_line|#define TX_FILL_THRESH   16&t;/* 1/4 FIFO size */
DECL|macro|TxFILLT_shift
mdefine_line|#define TxFILLT_shift   &t;8
DECL|macro|TxDRNT_shift
mdefine_line|#define TxDRNT_shift    &t;0
DECL|macro|TxDRNT_100
mdefine_line|#define TxDRNT_100      &t;48&t;/* 3/4 FIFO size */
DECL|macro|TxDRNT_10
mdefine_line|#define TxDRNT_10&t;&t;16 &t;/* 1/2 FIFO size */
DECL|enum|sis900_transmit_config_register_bits
r_enum
id|sis900_transmit_config_register_bits
(brace
DECL|enumerator|TxCSI
DECL|enumerator|TxHBI
DECL|enumerator|TxMLB
id|TxCSI
op_assign
l_int|0x80000000
comma
id|TxHBI
op_assign
l_int|0x40000000
comma
id|TxMLB
op_assign
l_int|0x20000000
comma
DECL|enumerator|TxATP
DECL|enumerator|TxIFG
DECL|enumerator|TxFILLT
id|TxATP
op_assign
l_int|0x10000000
comma
id|TxIFG
op_assign
l_int|0x0C000000
comma
id|TxFILLT
op_assign
l_int|0x00003F00
comma
DECL|enumerator|TxDRNT
id|TxDRNT
op_assign
l_int|0x0000003F
)brace
suffix:semicolon
multiline_comment|/* recevie FIFO thresholds */
DECL|macro|RxDRNT_shift
mdefine_line|#define RxDRNT_shift     1
DECL|macro|RxDRNT_100
mdefine_line|#define RxDRNT_100&t;16&t;/* 1/2 FIFO size */
DECL|macro|RxDRNT_10
mdefine_line|#define RxDRNT_10&t;&t;24 &t;/* 3/4 FIFO size */
DECL|enum|sis900_reveive_config_register_bits
r_enum
id|sis900_reveive_config_register_bits
(brace
DECL|enumerator|RxAEP
DECL|enumerator|RxARP
DECL|enumerator|RxATX
id|RxAEP
op_assign
l_int|0x80000000
comma
id|RxARP
op_assign
l_int|0x40000000
comma
id|RxATX
op_assign
l_int|0x10000000
comma
DECL|enumerator|RxAJAB
DECL|enumerator|RxDRNT
id|RxAJAB
op_assign
l_int|0x08000000
comma
id|RxDRNT
op_assign
l_int|0x0000007F
)brace
suffix:semicolon
DECL|macro|RFAA_shift
mdefine_line|#define RFAA_shift      28
DECL|macro|RFADDR_shift
mdefine_line|#define RFADDR_shift    16
DECL|enum|sis900_receive_filter_control_register_bits
r_enum
id|sis900_receive_filter_control_register_bits
(brace
DECL|enumerator|RFEN
DECL|enumerator|RFAAB
DECL|enumerator|RFAAM
id|RFEN
op_assign
l_int|0x80000000
comma
id|RFAAB
op_assign
l_int|0x40000000
comma
id|RFAAM
op_assign
l_int|0x20000000
comma
DECL|enumerator|RFAAP
DECL|enumerator|RFPromiscuous
id|RFAAP
op_assign
l_int|0x10000000
comma
id|RFPromiscuous
op_assign
(paren
id|RFAAB
op_or
id|RFAAM
op_or
id|RFAAP
)paren
)brace
suffix:semicolon
DECL|enum|sis900_reveive_filter_data_mask
r_enum
id|sis900_reveive_filter_data_mask
(brace
DECL|enumerator|RFDAT
id|RFDAT
op_assign
l_int|0x0000FFFF
)brace
suffix:semicolon
multiline_comment|/* EEPROM Addresses */
DECL|enum|sis900_eeprom_address
r_enum
id|sis900_eeprom_address
(brace
DECL|enumerator|EEPROMSignature
DECL|enumerator|EEPROMVendorID
DECL|enumerator|EEPROMDeviceID
id|EEPROMSignature
op_assign
l_int|0x00
comma
id|EEPROMVendorID
op_assign
l_int|0x02
comma
id|EEPROMDeviceID
op_assign
l_int|0x03
comma
DECL|enumerator|EEPROMMACAddr
DECL|enumerator|EEPROMChecksum
id|EEPROMMACAddr
op_assign
l_int|0x08
comma
id|EEPROMChecksum
op_assign
l_int|0x0b
)brace
suffix:semicolon
multiline_comment|/* The EEPROM commands include the alway-set leading bit. Refer to NM93Cxx datasheet */
DECL|enum|sis900_eeprom_command
r_enum
id|sis900_eeprom_command
(brace
DECL|enumerator|EEread
DECL|enumerator|EEwrite
DECL|enumerator|EEerase
id|EEread
op_assign
l_int|0x0180
comma
id|EEwrite
op_assign
l_int|0x0140
comma
id|EEerase
op_assign
l_int|0x01C0
comma
DECL|enumerator|EEwriteEnable
DECL|enumerator|EEwriteDisable
id|EEwriteEnable
op_assign
l_int|0x0130
comma
id|EEwriteDisable
op_assign
l_int|0x0100
comma
DECL|enumerator|EEeraseAll
DECL|enumerator|EEwriteAll
id|EEeraseAll
op_assign
l_int|0x0120
comma
id|EEwriteAll
op_assign
l_int|0x0110
comma
DECL|enumerator|EEaddrMask
DECL|enumerator|EEcmdShift
id|EEaddrMask
op_assign
l_int|0x013F
comma
id|EEcmdShift
op_assign
l_int|16
)brace
suffix:semicolon
multiline_comment|/* Manamgement Data I/O (mdio) frame */
DECL|macro|MIIread
mdefine_line|#define MIIread         0x6000
DECL|macro|MIIwrite
mdefine_line|#define MIIwrite        0x5002
DECL|macro|MIIpmdShift
mdefine_line|#define MIIpmdShift     7
DECL|macro|MIIregShift
mdefine_line|#define MIIregShift     2
DECL|macro|MIIcmdLen
mdefine_line|#define MIIcmdLen       16
DECL|macro|MIIcmdShift
mdefine_line|#define MIIcmdShift     16
multiline_comment|/* Buffer Descriptor Status*/
DECL|enum|sis900_buffer_status
r_enum
id|sis900_buffer_status
(brace
DECL|enumerator|OWN
DECL|enumerator|MORE
DECL|enumerator|INTR
id|OWN
op_assign
l_int|0x80000000
comma
id|MORE
op_assign
l_int|0x40000000
comma
id|INTR
op_assign
l_int|0x20000000
comma
DECL|enumerator|SUPCRC
DECL|enumerator|INCCRC
id|SUPCRC
op_assign
l_int|0x10000000
comma
id|INCCRC
op_assign
l_int|0x10000000
comma
DECL|enumerator|OK
DECL|enumerator|DSIZE
id|OK
op_assign
l_int|0x08000000
comma
id|DSIZE
op_assign
l_int|0x00000FFF
)brace
suffix:semicolon
multiline_comment|/* Status for TX Buffers */
DECL|enum|sis900_tx_buffer_status
r_enum
id|sis900_tx_buffer_status
(brace
DECL|enumerator|ABORT
DECL|enumerator|UNDERRUN
DECL|enumerator|NOCARRIER
id|ABORT
op_assign
l_int|0x04000000
comma
id|UNDERRUN
op_assign
l_int|0x02000000
comma
id|NOCARRIER
op_assign
l_int|0x01000000
comma
DECL|enumerator|DEFERD
DECL|enumerator|EXCDEFER
DECL|enumerator|OWCOLL
id|DEFERD
op_assign
l_int|0x00800000
comma
id|EXCDEFER
op_assign
l_int|0x00400000
comma
id|OWCOLL
op_assign
l_int|0x00200000
comma
DECL|enumerator|EXCCOLL
DECL|enumerator|COLCNT
id|EXCCOLL
op_assign
l_int|0x00100000
comma
id|COLCNT
op_assign
l_int|0x000F0000
)brace
suffix:semicolon
DECL|enum|sis900_rx_bufer_status
r_enum
id|sis900_rx_bufer_status
(brace
DECL|enumerator|OVERRUN
DECL|enumerator|DEST
DECL|enumerator|BCAST
id|OVERRUN
op_assign
l_int|0x02000000
comma
id|DEST
op_assign
l_int|0x00800000
comma
id|BCAST
op_assign
l_int|0x01800000
comma
DECL|enumerator|MCAST
DECL|enumerator|UNIMATCH
DECL|enumerator|TOOLONG
id|MCAST
op_assign
l_int|0x01000000
comma
id|UNIMATCH
op_assign
l_int|0x00800000
comma
id|TOOLONG
op_assign
l_int|0x00400000
comma
DECL|enumerator|RUNT
DECL|enumerator|RXISERR
DECL|enumerator|CRCERR
id|RUNT
op_assign
l_int|0x00200000
comma
id|RXISERR
op_assign
l_int|0x00100000
comma
id|CRCERR
op_assign
l_int|0x00080000
comma
DECL|enumerator|FAERR
DECL|enumerator|LOOPBK
DECL|enumerator|RXCOL
id|FAERR
op_assign
l_int|0x00040000
comma
id|LOOPBK
op_assign
l_int|0x00020000
comma
id|RXCOL
op_assign
l_int|0x00010000
)brace
suffix:semicolon
multiline_comment|/* MII register offsets */
DECL|enum|mii_registers
r_enum
id|mii_registers
(brace
DECL|enumerator|MII_CONTROL
DECL|enumerator|MII_STATUS
DECL|enumerator|MII_PHY_ID0
id|MII_CONTROL
op_assign
l_int|0x0000
comma
id|MII_STATUS
op_assign
l_int|0x0001
comma
id|MII_PHY_ID0
op_assign
l_int|0x0002
comma
DECL|enumerator|MII_PHY_ID1
DECL|enumerator|MII_ANADV
DECL|enumerator|MII_ANLPAR
id|MII_PHY_ID1
op_assign
l_int|0x0003
comma
id|MII_ANADV
op_assign
l_int|0x0004
comma
id|MII_ANLPAR
op_assign
l_int|0x0005
comma
DECL|enumerator|MII_ANEXT
id|MII_ANEXT
op_assign
l_int|0x0006
)brace
suffix:semicolon
multiline_comment|/* mii registers specific to SiS 900 */
DECL|enum|sis_mii_registers
r_enum
id|sis_mii_registers
(brace
DECL|enumerator|MII_CONFIG1
DECL|enumerator|MII_CONFIG2
DECL|enumerator|MII_STSOUT
id|MII_CONFIG1
op_assign
l_int|0x0010
comma
id|MII_CONFIG2
op_assign
l_int|0x0011
comma
id|MII_STSOUT
op_assign
l_int|0x0012
comma
DECL|enumerator|MII_MASK
DECL|enumerator|MII_RESV
id|MII_MASK
op_assign
l_int|0x0013
comma
id|MII_RESV
op_assign
l_int|0x0014
)brace
suffix:semicolon
multiline_comment|/* mii registers specific to ICS 1893 */
DECL|enum|ics_mii_registers
r_enum
id|ics_mii_registers
(brace
DECL|enumerator|MII_EXTCTRL
DECL|enumerator|MII_QPDSTS
DECL|enumerator|MII_10BTOP
id|MII_EXTCTRL
op_assign
l_int|0x0010
comma
id|MII_QPDSTS
op_assign
l_int|0x0011
comma
id|MII_10BTOP
op_assign
l_int|0x0012
comma
DECL|enumerator|MII_EXTCTRL2
id|MII_EXTCTRL2
op_assign
l_int|0x0013
)brace
suffix:semicolon
multiline_comment|/* mii registers specific to AMD 79C901 */
DECL|enum|amd_mii_registers
r_enum
id|amd_mii_registers
(brace
DECL|enumerator|MII_STATUS_SUMMARY
id|MII_STATUS_SUMMARY
op_assign
l_int|0x0018
)brace
suffix:semicolon
multiline_comment|/* MII Control register bit definitions. */
DECL|enum|mii_control_register_bits
r_enum
id|mii_control_register_bits
(brace
DECL|enumerator|MII_CNTL_FDX
DECL|enumerator|MII_CNTL_RST_AUTO
id|MII_CNTL_FDX
op_assign
l_int|0x0100
comma
id|MII_CNTL_RST_AUTO
op_assign
l_int|0x0200
comma
DECL|enumerator|MII_CNTL_ISOLATE
DECL|enumerator|MII_CNTL_PWRDWN
id|MII_CNTL_ISOLATE
op_assign
l_int|0x0400
comma
id|MII_CNTL_PWRDWN
op_assign
l_int|0x0800
comma
DECL|enumerator|MII_CNTL_AUTO
DECL|enumerator|MII_CNTL_SPEED
id|MII_CNTL_AUTO
op_assign
l_int|0x1000
comma
id|MII_CNTL_SPEED
op_assign
l_int|0x2000
comma
DECL|enumerator|MII_CNTL_LPBK
DECL|enumerator|MII_CNTL_RESET
id|MII_CNTL_LPBK
op_assign
l_int|0x4000
comma
id|MII_CNTL_RESET
op_assign
l_int|0x8000
)brace
suffix:semicolon
multiline_comment|/* MII Status register bit  */
DECL|enum|mii_status_register_bits
r_enum
id|mii_status_register_bits
(brace
DECL|enumerator|MII_STAT_EXT
DECL|enumerator|MII_STAT_JAB
id|MII_STAT_EXT
op_assign
l_int|0x0001
comma
id|MII_STAT_JAB
op_assign
l_int|0x0002
comma
DECL|enumerator|MII_STAT_LINK
DECL|enumerator|MII_STAT_CAN_AUTO
id|MII_STAT_LINK
op_assign
l_int|0x0004
comma
id|MII_STAT_CAN_AUTO
op_assign
l_int|0x0008
comma
DECL|enumerator|MII_STAT_FAULT
DECL|enumerator|MII_STAT_AUTO_DONE
id|MII_STAT_FAULT
op_assign
l_int|0x0010
comma
id|MII_STAT_AUTO_DONE
op_assign
l_int|0x0020
comma
DECL|enumerator|MII_STAT_CAN_T
DECL|enumerator|MII_STAT_CAN_T_FDX
id|MII_STAT_CAN_T
op_assign
l_int|0x0800
comma
id|MII_STAT_CAN_T_FDX
op_assign
l_int|0x1000
comma
DECL|enumerator|MII_STAT_CAN_TX
DECL|enumerator|MII_STAT_CAN_TX_FDX
id|MII_STAT_CAN_TX
op_assign
l_int|0x2000
comma
id|MII_STAT_CAN_TX_FDX
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_STAT_CAN_T4
id|MII_STAT_CAN_T4
op_assign
l_int|0x8000
)brace
suffix:semicolon
DECL|macro|MII_ID1_OUI_LO
mdefine_line|#define&t;&t;MII_ID1_OUI_LO&t;&t;0xFC00&t;/* low bits of OUI mask */
DECL|macro|MII_ID1_MODEL
mdefine_line|#define&t;&t;MII_ID1_MODEL&t;&t;0x03F0&t;/* model number */
DECL|macro|MII_ID1_REV
mdefine_line|#define&t;&t;MII_ID1_REV&t;&t;0x000F&t;/* model number */
multiline_comment|/* MII NWAY Register Bits ...&n;   valid for the ANAR (Auto-Negotiation Advertisement) and&n;   ANLPAR (Auto-Negotiation Link Partner) registers */
DECL|enum|mii_nway_register_bits
r_enum
id|mii_nway_register_bits
(brace
DECL|enumerator|MII_NWAY_NODE_SEL
DECL|enumerator|MII_NWAY_CSMA_CD
id|MII_NWAY_NODE_SEL
op_assign
l_int|0x001f
comma
id|MII_NWAY_CSMA_CD
op_assign
l_int|0x0001
comma
DECL|enumerator|MII_NWAY_T
DECL|enumerator|MII_NWAY_T_FDX
id|MII_NWAY_T
op_assign
l_int|0x0020
comma
id|MII_NWAY_T_FDX
op_assign
l_int|0x0040
comma
DECL|enumerator|MII_NWAY_TX
DECL|enumerator|MII_NWAY_TX_FDX
id|MII_NWAY_TX
op_assign
l_int|0x0080
comma
id|MII_NWAY_TX_FDX
op_assign
l_int|0x0100
comma
DECL|enumerator|MII_NWAY_T4
DECL|enumerator|MII_NWAY_PAUSE
id|MII_NWAY_T4
op_assign
l_int|0x0200
comma
id|MII_NWAY_PAUSE
op_assign
l_int|0x0400
comma
DECL|enumerator|MII_NWAY_RF
DECL|enumerator|MII_NWAY_ACK
id|MII_NWAY_RF
op_assign
l_int|0x2000
comma
id|MII_NWAY_ACK
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_NWAY_NP
id|MII_NWAY_NP
op_assign
l_int|0x8000
)brace
suffix:semicolon
DECL|enum|mii_stsout_register_bits
r_enum
id|mii_stsout_register_bits
(brace
DECL|enumerator|MII_STSOUT_LINK_FAIL
id|MII_STSOUT_LINK_FAIL
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_STSOUT_SPD
DECL|enumerator|MII_STSOUT_DPLX
id|MII_STSOUT_SPD
op_assign
l_int|0x0080
comma
id|MII_STSOUT_DPLX
op_assign
l_int|0x0040
)brace
suffix:semicolon
DECL|enum|mii_stsics_register_bits
r_enum
id|mii_stsics_register_bits
(brace
DECL|enumerator|MII_STSICS_SPD
DECL|enumerator|MII_STSICS_DPLX
id|MII_STSICS_SPD
op_assign
l_int|0x8000
comma
id|MII_STSICS_DPLX
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_STSICS_LINKSTS
id|MII_STSICS_LINKSTS
op_assign
l_int|0x0001
)brace
suffix:semicolon
DECL|enum|mii_stssum_register_bits
r_enum
id|mii_stssum_register_bits
(brace
DECL|enumerator|MII_STSSUM_LINK
DECL|enumerator|MII_STSSUM_DPLX
id|MII_STSSUM_LINK
op_assign
l_int|0x0008
comma
id|MII_STSSUM_DPLX
op_assign
l_int|0x0004
comma
DECL|enumerator|MII_STSSUM_AUTO
DECL|enumerator|MII_STSSUM_SPD
id|MII_STSSUM_AUTO
op_assign
l_int|0x0002
comma
id|MII_STSSUM_SPD
op_assign
l_int|0x0001
)brace
suffix:semicolon
DECL|enum|sis900_revision_id
r_enum
id|sis900_revision_id
(brace
DECL|enumerator|SIS630A_900_REV
DECL|enumerator|SIS630E_900_REV
id|SIS630A_900_REV
op_assign
l_int|0x80
comma
id|SIS630E_900_REV
op_assign
l_int|0x81
comma
DECL|enumerator|SIS630S_900_REV
DECL|enumerator|SIS630EA1_900_REV
id|SIS630S_900_REV
op_assign
l_int|0x82
comma
id|SIS630EA1_900_REV
op_assign
l_int|0x83
)brace
suffix:semicolon
DECL|enum|sis630_revision_id
r_enum
id|sis630_revision_id
(brace
DECL|enumerator|SIS630A0
DECL|enumerator|SIS630A1
id|SIS630A0
op_assign
l_int|0x00
comma
id|SIS630A1
op_assign
l_int|0x01
comma
DECL|enumerator|SIS630B0
DECL|enumerator|SIS630B1
id|SIS630B0
op_assign
l_int|0x10
comma
id|SIS630B1
op_assign
l_int|0x11
)brace
suffix:semicolon
DECL|macro|FDX_CAPABLE_DUPLEX_UNKNOWN
mdefine_line|#define FDX_CAPABLE_DUPLEX_UNKNOWN      0
DECL|macro|FDX_CAPABLE_HALF_SELECTED
mdefine_line|#define FDX_CAPABLE_HALF_SELECTED       1
DECL|macro|FDX_CAPABLE_FULL_SELECTED
mdefine_line|#define FDX_CAPABLE_FULL_SELECTED       2
DECL|macro|HW_SPEED_UNCONFIG
mdefine_line|#define HW_SPEED_UNCONFIG&t;&t;0
DECL|macro|HW_SPEED_HOME
mdefine_line|#define HW_SPEED_HOME&t;&t;1
DECL|macro|HW_SPEED_10_MBPS
mdefine_line|#define HW_SPEED_10_MBPS        &t;10
DECL|macro|HW_SPEED_100_MBPS
mdefine_line|#define HW_SPEED_100_MBPS       &t;100
DECL|macro|HW_SPEED_DEFAULT
mdefine_line|#define HW_SPEED_DEFAULT        &t;(HW_SPEED_100_MBPS)
DECL|macro|CRC_SIZE
mdefine_line|#define CRC_SIZE                4
DECL|macro|MAC_HEADER_SIZE
mdefine_line|#define MAC_HEADER_SIZE         14
DECL|macro|TX_BUF_SIZE
mdefine_line|#define TX_BUF_SIZE     1536
DECL|macro|RX_BUF_SIZE
mdefine_line|#define RX_BUF_SIZE     1536
DECL|macro|NUM_TX_DESC
mdefine_line|#define NUM_TX_DESC     16      &t;/* Number of Tx descriptor registers. */
DECL|macro|NUM_RX_DESC
mdefine_line|#define NUM_RX_DESC     16       &t;/* Number of Rx descriptor registers. */
multiline_comment|/* PCI stuff, should be move to pic.h */
DECL|macro|PCI_DEVICE_ID_SI_900
mdefine_line|#define PCI_DEVICE_ID_SI_900&t;0x900   
DECL|macro|PCI_DEVICE_ID_SI_7016
mdefine_line|#define PCI_DEVICE_ID_SI_7016&t;0x7016
DECL|macro|SIS630_VENDOR_ID
mdefine_line|#define SIS630_VENDOR_ID        0x0630
DECL|macro|SIS630_DEVICE_ID
mdefine_line|#define SIS630_DEVICE_ID        0x1039
multiline_comment|/* ioctl for accessing MII transceiver */
DECL|macro|SIOCGMIIPHY
mdefine_line|#define SIOCGMIIPHY (SIOCDEVPRIVATE)&t;&t;/* Get the PHY in use. */
DECL|macro|SIOCGMIIREG
mdefine_line|#define SIOCGMIIREG (SIOCDEVPRIVATE+1)&t;&t;/* Read a PHY register. */
DECL|macro|SIOCSMIIREG
mdefine_line|#define SIOCSMIIREG (SIOCDEVPRIVATE+2)&t;&t;/* Write a PHY register */
eof
