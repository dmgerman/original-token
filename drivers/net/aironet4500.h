multiline_comment|/*&n; *&t; Aironet 4500 Pcmcia driver&n; *&n; *&t;&t;Elmer Joandi, Januar 1999&n; *&t;Copyright:&t;GPL&n; *&t;&n; *&n; *&t;Revision 0.1 ,started  30.12.1998&n; *&n; *&n; */
macro_line|#ifndef AIRONET4500_H
DECL|macro|AIRONET4500_H
mdefine_line|#define&t;AIRONET4500_H
singleline_comment|// redefined to avoid PCMCIA includes
macro_line|#include &lt;linux/version.h&gt;
multiline_comment|/*#include &lt;linux/module.h&gt;&n; #include &lt;linux/kernel.h&gt;&n;*/
multiline_comment|/*&n;#include &lt;linux/types.h&gt;&n;#include &lt;linux/netdevice.h&gt;&n;#include &lt;linux/etherdevice.h&gt;&n;#include &lt;linux/delay.h&gt;&n;#include &lt;linux/time.h&gt;&n;*/
macro_line|#include &lt;linux/802_11.h&gt;
singleline_comment|//damn idiot PCMCIA stuff
macro_line|#ifndef DEV_NAME_LEN
DECL|macro|DEV_NAME_LEN
mdefine_line|#define DEV_NAME_LEN 32
macro_line|#endif
DECL|struct|pcmcia_junkdev_node_t
r_struct
id|pcmcia_junkdev_node_t
(brace
DECL|member|dev_name
r_char
id|dev_name
(braket
id|DEV_NAME_LEN
)braket
suffix:semicolon
DECL|member|major
DECL|member|minor
id|u_short
id|major
comma
id|minor
suffix:semicolon
DECL|member|next
r_struct
id|dev_node_t
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
macro_line|#ifndef CS_RELEASE
DECL|typedef|dev_node_t
r_typedef
r_struct
id|pcmcia_junkdev_node_t
id|dev_node_t
suffix:semicolon
macro_line|#endif
macro_line|#include &lt;linux/spinlock.h&gt;
DECL|typedef|my_spinlock_t
r_typedef
id|spinlock_t
id|my_spinlock_t
suffix:semicolon
DECL|macro|my_spin_lock_init
mdefine_line|#define my_spin_lock_init(a)&t;&t;spin_lock_init(a)
DECL|macro|my_spin_lock_irqsave
mdefine_line|#define my_spin_lock_irqsave(a,b) &t;spin_lock_irqsave(a,b)
DECL|macro|my_spin_unlock_irqrestore
mdefine_line|#define my_spin_unlock_irqrestore(a,b) &t;spin_unlock_irqrestore(a,b)
DECL|macro|AWC_ERROR
mdefine_line|#define AWC_ERROR&t;-1
DECL|macro|AWC_SUCCESS
mdefine_line|#define AWC_SUCCESS&t;0
DECL|struct|awc_cis
r_struct
id|awc_cis
(brace
DECL|member|cis
r_int
r_char
id|cis
(braket
l_int|0x301
)braket
suffix:semicolon
DECL|member|unknown302
r_int
r_char
id|unknown302
(braket
l_int|0xdf
)braket
suffix:semicolon
DECL|member|configuration_register
r_int
r_int
id|configuration_register
suffix:semicolon
DECL|member|pin_replacement_register
r_int
r_int
id|pin_replacement_register
suffix:semicolon
DECL|member|socket_and_copy_register
r_int
r_int
id|socket_and_copy_register
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* timeout for transmit watchdog timer, AP default is 8 sec */
DECL|macro|AWC_TX_TIMEOUT
mdefine_line|#define AWC_TX_TIMEOUT&t;&t;&t;(HZ * 8) 
multiline_comment|/***************************  REGISTER OFFSETS *********************/
DECL|macro|awc_Command_register
mdefine_line|#define awc_Command_register &t;&t;0x00
DECL|macro|awc_Param0_register
mdefine_line|#define awc_Param0_register &t;&t;0x02
DECL|macro|awc_Param1_register
mdefine_line|#define awc_Param1_register &t;&t;0x04
DECL|macro|awc_Param2_register
mdefine_line|#define awc_Param2_register &t;&t;0x06
DECL|macro|awc_Status_register
mdefine_line|#define awc_Status_register &t;&t;0x08
DECL|macro|awc_Resp0_register
mdefine_line|#define awc_Resp0_register &t;&t;0x0A
DECL|macro|awc_Resp1_register
mdefine_line|#define awc_Resp1_register &t;&t;0x0C
DECL|macro|awc_Resp2_register
mdefine_line|#define awc_Resp2_register &t;&t;0x0E
DECL|macro|awc_EvStat_register
mdefine_line|#define awc_EvStat_register &t;&t;0x30
DECL|macro|awc_EvIntEn_register
mdefine_line|#define awc_EvIntEn_register &t;&t;0x32
DECL|macro|awc_EvAck_register
mdefine_line|#define awc_EvAck_register &t;&t;0x34
DECL|macro|awc_SWSupport0_register
mdefine_line|#define awc_SWSupport0_register &t;0x28
DECL|macro|awc_SWSupport1_register
mdefine_line|#define awc_SWSupport1_register &t;0x2A
DECL|macro|awc_SWSupport2_register
mdefine_line|#define awc_SWSupport2_register &t;0x2C
DECL|macro|awc_SWSupport3_register
mdefine_line|#define awc_SWSupport3_register &t;0x2E
DECL|macro|awc_LinkStatus_register
mdefine_line|#define awc_LinkStatus_register &t;0x10
singleline_comment|// Memory access  RID FID
DECL|macro|awc_Select0_register
mdefine_line|#define awc_Select0_register &t;&t;0x18
DECL|macro|awc_Offset0_register
mdefine_line|#define awc_Offset0_register &t;&t;0x1C
DECL|macro|awc_Data0_register
mdefine_line|#define awc_Data0_register &t;&t;0x36
DECL|macro|awc_Select1_register
mdefine_line|#define awc_Select1_register &t;&t;0x1A
DECL|macro|awc_Offset1_register
mdefine_line|#define awc_Offset1_register &t;&t;0x1E
DECL|macro|awc_Data1_register
mdefine_line|#define awc_Data1_register &t;&t;0x38
singleline_comment|//
DECL|macro|awc_RxFID_register
mdefine_line|#define awc_RxFID_register &t;&t;0x20
DECL|macro|awc_TxAllocFID_register
mdefine_line|#define awc_TxAllocFID_register &t;0x22
DECL|macro|awc_TxComplFID_register
mdefine_line|#define awc_TxComplFID_register &t;0x24
DECL|macro|awc_AuxPage_register
mdefine_line|#define awc_AuxPage_register &t;&t;0x3A
DECL|macro|awc_AuxOffset_register
mdefine_line|#define awc_AuxOffset_register &t;&t;0x3C
DECL|macro|awc_AuxData_register
mdefine_line|#define awc_AuxData_register &t;&t;0x3E
DECL|struct|awc_bap
r_struct
id|awc_bap
(brace
DECL|member|select
id|u16
id|select
suffix:semicolon
DECL|member|offset
id|u16
id|offset
suffix:semicolon
DECL|member|data
id|u16
id|data
suffix:semicolon
DECL|member|lock
r_volatile
r_int
id|lock
suffix:semicolon
DECL|member|status
r_volatile
r_int
id|status
suffix:semicolon
DECL|member|sem
r_struct
id|semaphore
id|sem
suffix:semicolon
DECL|member|spinlock
id|my_spinlock_t
id|spinlock
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|AWC_COMMAND_STATE_WAIT_CMD_BUSY
mdefine_line|#define AWC_COMMAND_STATE_WAIT_CMD_BUSY&t;&t;1
DECL|macro|AWC_COMMAND_STATE_WAIT_CMD_ACK
mdefine_line|#define AWC_COMMAND_STATE_WAIT_CMD_ACK&t;&t;2
DECL|macro|AWC_COMMAND_STATE_WAIT_BAP_BUSY
mdefine_line|#define AWC_COMMAND_STATE_WAIT_BAP_BUSY&t;&t;3
DECL|macro|AWC_COMMAND_STATE_BAP_NOT_SET
mdefine_line|#define AWC_COMMAND_STATE_BAP_NOT_SET&t;&t;4
DECL|macro|AWC_COMMAND_STATE_BAP_SET
mdefine_line|#define AWC_COMMAND_STATE_BAP_SET&t;&t;5
DECL|struct|awc_command
r_struct
id|awc_command
(brace
DECL|member|state
r_volatile
r_int
id|state
suffix:semicolon
DECL|member|lock_state
r_volatile
r_int
id|lock_state
suffix:semicolon
DECL|member|dev
r_struct
id|net_device
op_star
id|dev
suffix:semicolon
DECL|member|priv
r_struct
id|awc_private
op_star
id|priv
suffix:semicolon
DECL|member|port
id|u16
id|port
suffix:semicolon
DECL|member|bap
r_struct
id|awc_bap
op_star
id|bap
suffix:semicolon
DECL|member|command
id|u16
id|command
suffix:semicolon
DECL|member|par0
id|u16
id|par0
suffix:semicolon
DECL|member|par1
id|u16
id|par1
suffix:semicolon
DECL|member|par2
id|u16
id|par2
suffix:semicolon
DECL|member|status
id|u16
id|status
suffix:semicolon
DECL|member|resp0
id|u16
id|resp0
suffix:semicolon
DECL|member|resp1
id|u16
id|resp1
suffix:semicolon
DECL|member|resp2
id|u16
id|resp2
suffix:semicolon
DECL|member|rid
id|u16
id|rid
suffix:semicolon
DECL|member|offset
id|u16
id|offset
suffix:semicolon
DECL|member|len
id|u16
id|len
suffix:semicolon
DECL|member|buff
r_void
op_star
id|buff
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|DOWN
mdefine_line|#define DOWN(a) down_interruptible( a ) ; 
singleline_comment|//&t;if (in_interrupt()) { down_interruptible( a ) ; } else printk(&quot;semaphore DOWN in interrupt tried &bslash;n&quot;);
DECL|macro|UP
mdefine_line|#define UP(a)   up( a ) ;
singleline_comment|//&t;if (in_interrupt()) {up( a ) ; } else printk(&quot;semaphore UP in interrupt tried &bslash;n&quot;);
multiline_comment|/*&t;if (!in_interrupt())&bslash;&n;&t;printk(&quot;bap lock under cli but not in int&bslash;n&quot;);&bslash;&n;*/
DECL|macro|AWC_LOCK_COMMAND_ISSUING
mdefine_line|#define AWC_LOCK_COMMAND_ISSUING(a) my_spin_lock_irqsave(&amp;a-&gt;command_issuing_spinlock,a-&gt;command_issuing_spinlock_flags);
DECL|macro|AWC_UNLOCK_COMMAND_ISSUING
mdefine_line|#define AWC_UNLOCK_COMMAND_ISSUING(a) my_spin_unlock_irqrestore(&amp;a-&gt;command_issuing_spinlock,a-&gt;command_issuing_spinlock_flags);
DECL|macro|AWC_BAP_LOCK_UNDER_CLI_REAL
mdefine_line|#define AWC_BAP_LOCK_UNDER_CLI_REAL(cmd) &bslash;&n; &t;if (!cmd.priv) {&bslash;&n;&t;&t;printk(KERN_CRIT &quot;awc4500: no priv present in command !&quot;);&bslash;&n;&t;}&bslash;&n;&t;cmd.bap = &amp;(cmd.priv-&gt;bap1);&bslash;&n;&t;if (both_bap_lock)&bslash;&n;&t;my_spin_lock_irqsave(&amp;cmd.priv-&gt;both_bap_spinlock,cmd.priv-&gt;both_bap_spinlock_flags);&bslash;&n;&t;if (cmd.bap){&bslash;&n;&t;&t;my_spin_lock_irqsave(&amp;(cmd.bap-&gt;spinlock),cmd.bap-&gt;flags);&bslash;&n;&t;&t;cmd.bap-&gt;lock++;&bslash;&n;&t;&t;if (cmd.bap-&gt;lock &gt; 1)&bslash;&n;&t;&t;&t;printk(&quot;Bap 1 lock high&bslash;n&quot;);&bslash;&n;&t;&t;cmd.lock_state |= AWC_BAP_LOCKED;&bslash;&n;&t;}
DECL|macro|AWC_BAP_LOCK_NOT_CLI_REAL
mdefine_line|#define AWC_BAP_LOCK_NOT_CLI_REAL(cmd) {&bslash;&n;&t;if (in_interrupt())&bslash;&n;&t;printk(&quot;bap lock not cli in int&bslash;n&quot;);&bslash;&n; &t;if (!cmd.priv) {&bslash;&n;&t;&t;printk(KERN_CRIT &quot;awc4500: no priv present in command,lockup follows !&quot;);&bslash;&n;&t;}&bslash;&n;&t;cmd.bap = &amp;(cmd.priv-&gt;bap0);&bslash;&n;&t;if (both_bap_lock)&bslash;&n;&t;&t;my_spin_lock_irqsave(&amp;cmd.priv-&gt;both_bap_spinlock,cmd.priv-&gt;both_bap_spinlock_flags);&bslash;&n;&t;my_spin_lock_irqsave(&amp;(cmd.bap-&gt;spinlock),cmd.bap-&gt;flags);&bslash;&n;&t;DOWN(&amp;(cmd.priv-&gt;bap0.sem));&bslash;&n;&t;cmd.bap-&gt;lock++;&bslash;&n;&t;if (cmd.bap-&gt;lock &gt; 1)&bslash;&n;&t;&t;printk(&quot;Bap 0 lock high&bslash;n&quot;);&bslash;&n;&t;cmd.lock_state |= AWC_BAP_SEMALOCKED;&bslash;&n;}
DECL|macro|AWC_BAP_LOCK_NOT_CLI_CLI_REAL
mdefine_line|#define AWC_BAP_LOCK_NOT_CLI_CLI_REAL(cmd) {&bslash;&n;&t;cmd.bap = &amp;(cmd.priv-&gt;bap0);&bslash;&n;&t;if (both_bap_lock)&bslash;&n;&t;&t;my_spin_lock_irqsave(&amp;cmd.priv-&gt;both_bap_spinlock,cmd.priv-&gt;both_bap_spinlock_flags);&bslash;&n;&t;my_spin_lock_irqsave(&amp;(cmd.bap-&gt;spinlock),cmd.bap-&gt;flags);&bslash;&n;&t;cmd.bap-&gt;lock++;&bslash;&n;&t;if (cmd.bap-&gt;lock &gt; 1)&bslash;&n;&t;&t;printk(&quot;Bap 0 lock high&bslash;n&quot;);&bslash;&n;&t;cmd.lock_state |= AWC_BAP_LOCKED;&bslash;&n;}
DECL|macro|BAP_LOCK_ANY
mdefine_line|#define BAP_LOCK_ANY(cmd)&bslash;&n;&t;if (in_interrupt())&t;AWC_BAP_LOCK_NOT_CLI_CLI_REAL(cmd)&bslash;&n;&t;else AWC_BAP_LOCK_NOT_CLI_REAL(cmd)
DECL|macro|AWC_BAP_LOCK_NOT_CLI
mdefine_line|#define AWC_BAP_LOCK_NOT_CLI(cmd)&t;BAP_LOCK_ANY(cmd)
DECL|macro|AWC_BAP_LOCK_UNDER_CLI
mdefine_line|#define AWC_BAP_LOCK_UNDER_CLI(cmd)&t;AWC_BAP_LOCK_UNDER_CLI_REAL(cmd)
multiline_comment|/*&n;&t;if (!cmd.priv-&gt;bap1.lock ) {BAP_LOCK_ANY(cmd);}&bslash;&n;&t;else AWC_BAP_LOCK_NOT_CLI_CLI_REAL(cmd);&n;*/
DECL|macro|AWC_BAP_LOCKED
mdefine_line|#define AWC_BAP_LOCKED &t;&t;0x01
DECL|macro|AWC_BAP_SEMALOCKED
mdefine_line|#define AWC_BAP_SEMALOCKED &t;0x02
DECL|macro|AWC_BAP_BUSY
mdefine_line|#define AWC_BAP_BUSY&t;0x8000
DECL|macro|AWC_BAP_ERR
mdefine_line|#define AWC_BAP_ERR&t;0x4000
DECL|macro|AWC_BAP_DONE
mdefine_line|#define AWC_BAP_DONE&t;0x2000
DECL|macro|AWC_CLI
mdefine_line|#define AWC_CLI&t;&t;1
DECL|macro|AWC_NOT_CLI
mdefine_line|#define AWC_NOT_CLI &t;2
multiline_comment|/*#define WAIT61x3&t;inb(0x61);&bslash;&n;         &t;&t;inb(0x61);&bslash;&n;                    &t;inb(0x61);&n;*/
DECL|macro|WAIT61x3
mdefine_line|#define WAIT61x3 &t;udelay(bap_sleep)                  &t;
DECL|macro|AWC_INIT_COMMAND
mdefine_line|#define AWC_INIT_COMMAND(context, a_com, a_dev,a_cmmand,a_pr0, a_rid, a_offset, a_len, a_buff) {&bslash;&n;&t;memset(&amp;a_com,0,sizeof(a_com) );&bslash;&n;&t;a_com.dev = a_dev;&bslash;&n;&t;a_com.priv = a_dev-&gt;priv;&bslash;&n;&t;a_com.port = a_dev-&gt;base_addr;&bslash;&n;&t;a_com.bap = NULL;&bslash;&n;&t;a_com.command = a_cmmand;&bslash;&n;&t;a_com.par0 = a_pr0;&bslash;&n;&t;a_com.rid = a_rid;&bslash;&n;&t;a_com.offset = a_offset;&bslash;&n;&t;a_com.len = a_len;&bslash;&n;&t;a_com.buff = a_buff;&bslash;&n;&t;a_com.lock_state = 0;&bslash;&n;};
multiline_comment|/* v&#xfffd;ga veider asi j&#xfffd;rgnevast &n; makrost v&#xfffd;lja j&#xfffd;etud&t;if (cmd.bap) AWC_IN((cmd.bap)-&gt;data);&bslash;&n;*/
DECL|macro|AWC_BAP_UNLOCK
mdefine_line|#define AWC_BAP_UNLOCK(com) { &bslash;&n;&t;if (com.bap){ &bslash;&n;&t;&t;if ( (com.lock_state &amp; AWC_BAP_SEMALOCKED) &amp;&amp;&bslash;&n;&t;&t;     (com.lock_state &amp; AWC_BAP_LOCKED) ){&bslash;&n;&t;&t;     &t;printk(&quot;Both Sema and simple lock &bslash;n&quot;);&bslash;&n;&t;&t;}&bslash;&n;&t;&t;if ( com.lock_state &amp; AWC_BAP_SEMALOCKED ){&bslash;&n;&t;&t;&t; com.bap-&gt;lock--; &bslash;&n;&t;&t;&t; com.lock_state &amp;= ~AWC_BAP_SEMALOCKED;&bslash;&n;&t;&t;&t; UP(&amp;(com.bap-&gt;sem)); &bslash;&n;&t;&t;&t; my_spin_unlock_irqrestore(&amp;(cmd.bap-&gt;spinlock),cmd.bap-&gt;flags);&bslash;&n;&t;&t;} else if (com.lock_state &amp; AWC_BAP_LOCKED){&bslash;&n;&t;&t;&t; com.bap-&gt;lock--; &bslash;&n;&t;&t;&t; com.lock_state &amp;= ~AWC_BAP_LOCKED;&bslash;&n;&t;&t;&t; my_spin_unlock_irqrestore(&amp;(cmd.bap-&gt;spinlock),cmd.bap-&gt;flags);&bslash;&n;&t;&t;}&bslash;&n;&t;}&bslash;&n;&t;if (both_bap_lock)&bslash;&n;&t;&t;my_spin_unlock_irqrestore(&amp;cmd.priv-&gt;both_bap_spinlock,cmd.priv-&gt;both_bap_spinlock_flags);&bslash;&n;}
DECL|macro|AWC_RELEASE_COMMAND
mdefine_line|#define AWC_RELEASE_COMMAND(com) {&bslash;&n;&t;&t;AWC_BAP_UNLOCK(cmd);&bslash;&n;&t;}
DECL|macro|awc_manufacturer_code
mdefine_line|#define awc_manufacturer_code &t;0x015F
DECL|macro|awc_product_code
mdefine_line|#define awc_product_code&t;0x0005
DECL|macro|awc_write
mdefine_line|#define awc_write(base,register,u16value) outw(u16value, (base)+(register))
DECL|macro|awc_read
mdefine_line|#define awc_read(base,register)           inw((base)+(register))
DECL|macro|AWC_OUT
mdefine_line|#define AWC_OUT(base,val)&t;&t;outw(val, base)
DECL|macro|AWC_IN
mdefine_line|#define AWC_IN(base)&t;&t;&t;inw(base)
DECL|macro|awc_read_response
mdefine_line|#define awc_read_response(cmd)&t;{&t;&bslash;&n;&t;cmd-&gt;status=awc_read(cmd-&gt;port,awc_Status_register);&bslash;&n;&t;cmd-&gt;resp0=awc_read(cmd-&gt;port,awc_Resp0_register);&bslash;&n;&t;cmd-&gt;resp1=awc_read(cmd-&gt;port,awc_Resp1_register);&bslash;&n;&t;cmd-&gt;resp2=awc_read(cmd-&gt;port,awc_Resp2_register);&bslash;&n;};
DECL|macro|awc_command_busy
mdefine_line|#define awc_command_busy(base)&t;&t;(awc_read(base,awc_Command_register) &amp; 0x8000)
DECL|macro|awc_command_read
mdefine_line|#define awc_command_read(base)&t;&t;awc_read(base,awc_Command_register)
DECL|macro|awc_command_write
mdefine_line|#define awc_command_write(base,cmd)&t;awc_write(base,awc_Command_register,cmd) 
DECL|macro|awc_event_status_Awake
mdefine_line|#define awc_event_status_Awake(base)&t;(awc_read(base,awc_EvStat_register) &amp; 0x0100)
DECL|macro|awc_event_status_Link
mdefine_line|#define awc_event_status_Link(base)&t;(awc_read(base,awc_EvStat_register) &amp; 0x0080)
DECL|macro|awc_event_status_Cmd
mdefine_line|#define awc_event_status_Cmd(base)&t;(awc_read(base,awc_EvStat_register) &amp; 0x0010)
DECL|macro|awc_event_status_Alloc
mdefine_line|#define awc_event_status_Alloc(base)&t;(awc_read(base,awc_EvStat_register) &amp; 0x0008)
DECL|macro|awc_event_status_TxExc
mdefine_line|#define awc_event_status_TxExc(base)&t;(awc_read(base,awc_EvStat_register) &amp; 0x0004)
DECL|macro|awc_event_status_Tx
mdefine_line|#define awc_event_status_Tx(base)&t;(awc_read(base,awc_EvStat_register) &amp; 0x0002)
DECL|macro|awc_event_status_TxResp
mdefine_line|#define awc_event_status_TxResp(base)&t;(awc_read(base,awc_EvStat_register) &amp; 0x0006)
DECL|macro|awc_event_status_Rx
mdefine_line|#define awc_event_status_Rx(base)&t;(awc_read(base,awc_EvStat_register) &amp; 0x0001)
DECL|macro|awc_event_status
mdefine_line|#define awc_event_status(base)&t;&t;(awc_read(base,awc_EvStat_register))
DECL|macro|awc_Link_Status
mdefine_line|#define awc_Link_Status(base)&t;&t;awc_read(base,awc_LinkStatus_register)
DECL|macro|awc_Rx_Fid
mdefine_line|#define awc_Rx_Fid(base)&t;&t;awc_read(base,awc_RxFID_register)
DECL|macro|awc_Tx_Allocated_Fid
mdefine_line|#define awc_Tx_Allocated_Fid(base)&t;awc_read(base,awc_TxAllocFID_register)
DECL|macro|awc_Tx_Compl_Fid
mdefine_line|#define awc_Tx_Compl_Fid(base)&t;&t;awc_read(base,awc_TxComplFID_register)
DECL|macro|awc_event_ack_ClrStckCmdBsy
mdefine_line|#define awc_event_ack_ClrStckCmdBsy(base) awc_write(base,awc_EvAck_register, 0x4000)
DECL|macro|awc_event_ack_WakeUp
mdefine_line|#define awc_event_ack_WakeUp(base)&t;awc_write(base,awc_EvAck_register, 0x2000)
DECL|macro|awc_event_ack_Awaken
mdefine_line|#define awc_event_ack_Awaken(base)&t;awc_write(base,awc_EvAck_register, 0x0100)
DECL|macro|awc_event_ack_Link
mdefine_line|#define awc_event_ack_Link(base)&t;awc_write(base,awc_EvAck_register, 0x0080)
DECL|macro|awc_event_ack_Cmd
mdefine_line|#define awc_event_ack_Cmd(base)&t;&t;awc_write(base,awc_EvAck_register, 0x0010)
DECL|macro|awc_event_ack_Alloc
mdefine_line|#define awc_event_ack_Alloc(base)&t;awc_write(base,awc_EvAck_register, 0x0008)
DECL|macro|awc_event_ack_TxExc
mdefine_line|#define awc_event_ack_TxExc(base)&t;awc_write(base,awc_EvAck_register, 0x0004)
DECL|macro|awc_event_ack_Tx
mdefine_line|#define awc_event_ack_Tx(base)&t;&t;awc_write(base,awc_EvAck_register, 0x0002)
DECL|macro|awc_event_ack_Rx
mdefine_line|#define awc_event_ack_Rx(base)&t;&t;awc_write(base,awc_EvAck_register, 0x0001)
DECL|macro|awc_event_ack
mdefine_line|#define awc_event_ack(base,ints)&t;awc_write(base,awc_EvAck_register,ints)
DECL|macro|awc_ints_enabled
mdefine_line|#define awc_ints_enabled(base)&t;&t;(awc_read(base,awc_EvIntEn_register))
DECL|macro|awc_ints_enable
mdefine_line|#define awc_ints_enable(base,ints)&t;awc_write(base,awc_EvIntEn_register,ints)
multiline_comment|/************************  &t;RX TX &t;BUFF&t;************************/
DECL|struct|aironet4500_radio_rx_header
r_struct
id|aironet4500_radio_rx_header
(brace
DECL|member|RxTime
id|u32
id|RxTime
suffix:semicolon
DECL|member|Status
id|u16
id|Status
suffix:semicolon
DECL|member|PayloadLength
id|u16
id|PayloadLength
suffix:semicolon
DECL|member|Reserved0
id|u8
id|Reserved0
suffix:semicolon
DECL|member|RSSI
id|u8
id|RSSI
suffix:semicolon
DECL|member|Rate
id|u8
id|Rate
suffix:semicolon
DECL|member|Frequency
id|u8
id|Frequency
suffix:semicolon
DECL|member|Rx_association_count
id|u8
id|Rx_association_count
suffix:semicolon
DECL|member|Reserved1
id|u8
id|Reserved1
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|PLCP_header
id|u8
id|PLCP_header
(braket
l_int|4
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|aironet4500_radio_tx_header
r_struct
id|aironet4500_radio_tx_header
(brace
DECL|member|SWSupport
id|u32
id|SWSupport
suffix:semicolon
DECL|member|Status
id|u16
id|Status
suffix:semicolon
DECL|macro|aironet4500_tx_status_max_retries
mdefine_line|#define aironet4500_tx_status_max_retries&t;0x0002
DECL|macro|aironet4500_tx_status_lifetime_exceeded
mdefine_line|#define aironet4500_tx_status_lifetime_exceeded&t;0x0004
DECL|macro|aironet4500_tx_status_AID_failure
mdefine_line|#define aironet4500_tx_status_AID_failure&t;0x0008
DECL|macro|aironet4500_tx_status_MAC_disabled
mdefine_line|#define aironet4500_tx_status_MAC_disabled&t;0x0010
DECL|macro|aironet4500_tx_status_association_lost
mdefine_line|#define aironet4500_tx_status_association_lost&t;0x0020
DECL|member|PayloadLength
id|u16
id|PayloadLength
suffix:semicolon
DECL|member|TX_Control
id|u16
id|TX_Control
suffix:semicolon
DECL|macro|aironet4500_tx_control_tx_ok_event_enable
mdefine_line|#define aironet4500_tx_control_tx_ok_event_enable &t;0x0002
DECL|macro|aironet4500_tx_control_tx_fail_event_enable
mdefine_line|#define aironet4500_tx_control_tx_fail_event_enable &t;0x0004
DECL|macro|aironet4500_tx_control_header_type_802_11
mdefine_line|#define aironet4500_tx_control_header_type_802_11 &t;0x0008
DECL|macro|aironet4500_tx_control_payload_type_llc
mdefine_line|#define aironet4500_tx_control_payload_type_llc &t;0x0010
DECL|macro|aironet4500_tx_control_no_release
mdefine_line|#define aironet4500_tx_control_no_release &t;&t;0x0020
DECL|macro|aironet4500_tx_control_reuse_fid
mdefine_line|#define aironet4500_tx_control_reuse_fid &bslash;&n;&t;&t;(aironet4500_tx_control_tx_ok_event_enable |&bslash;&n;&t;&t; aironet4500_tx_control_tx_fail_event_enable |&bslash;&n;&t;&t;  aironet4500_tx_control_no_release)
DECL|macro|aironet4500_tx_control_no_retries
mdefine_line|#define aironet4500_tx_control_no_retries &t;&t;0x0040
DECL|macro|aironet4500_tx_control_clear_AID
mdefine_line|#define aironet4500_tx_control_clear_AID &t;&t;0x0080
DECL|macro|aironet4500_tx_control_strict_order
mdefine_line|#define aironet4500_tx_control_strict_order &t;&t;0x0100
DECL|macro|aironet4500_tx_control_use_rts
mdefine_line|#define aironet4500_tx_control_use_rts &t;&t;&t;0x0200
DECL|member|AID
id|u16
id|AID
suffix:semicolon
DECL|member|Tx_Long_Retry
id|u8
id|Tx_Long_Retry
suffix:semicolon
DECL|member|Tx_Short_Retry
id|u8
id|Tx_Short_Retry
suffix:semicolon
DECL|member|tx_association_count
id|u8
id|tx_association_count
suffix:semicolon
DECL|member|tx_bit_rate
id|u8
id|tx_bit_rate
suffix:semicolon
DECL|macro|aironet4500_tx_bit_rate_automatic
mdefine_line|#define&t;aironet4500_tx_bit_rate_automatic 0
DECL|macro|aironet4500_tx_bit_rate_500kbps
mdefine_line|#define aironet4500_tx_bit_rate_500kbps&t;1
DECL|macro|aironet4500_tx_bit_rate_1Mbps
mdefine_line|#define aironet4500_tx_bit_rate_1Mbps&t;2
DECL|macro|aironet4500_tx_bit_rate_2Mbps
mdefine_line|#define aironet4500_tx_bit_rate_2Mbps&t;4
DECL|member|Max_Long_Retry
id|u8
id|Max_Long_Retry
suffix:semicolon
DECL|member|Max_Short_Retry
id|u8
id|Max_Short_Retry
suffix:semicolon
DECL|member|Reserved0
id|u8
id|Reserved0
(braket
l_int|2
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|aironet4500_rx_fid
r_struct
id|aironet4500_rx_fid
(brace
DECL|member|rid
id|u16
id|rid
suffix:semicolon
DECL|member|radio_rx
r_struct
id|aironet4500_radio_rx_header
id|radio_rx
suffix:semicolon
DECL|member|ieee_802_11
r_struct
id|ieee_802_11_header
id|ieee_802_11
suffix:semicolon
DECL|member|gap_length
id|u16
id|gap_length
suffix:semicolon
DECL|member|ieee_802_3
r_struct
id|ieee_802_3_header
id|ieee_802_3
suffix:semicolon
DECL|member|payload
id|u8
op_star
id|payload
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|aironet4500_tx_fid
r_struct
id|aironet4500_tx_fid
(brace
DECL|member|fid
id|u16
id|fid
suffix:semicolon
DECL|member|fid_size
id|u16
id|fid_size
suffix:semicolon
DECL|member|radio_tx
r_struct
id|aironet4500_radio_tx_header
id|radio_tx
suffix:semicolon
DECL|member|ieee_802_11
r_struct
id|ieee_802_11_header
id|ieee_802_11
suffix:semicolon
DECL|member|gap_length
id|u16
id|gap_length
suffix:semicolon
DECL|macro|aironet4500_gap_len_without_802_3
mdefine_line|#define aironet4500_gap_len_without_802_3&t;6
DECL|macro|aironet4500_gap_len_with_802_3
mdefine_line|#define aironet4500_gap_len_with_802_3&t;&t;0
DECL|member|ieee_802_3
r_struct
id|ieee_802_3_header
id|ieee_802_3
suffix:semicolon
DECL|member|payload
id|u8
op_star
id|payload
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_fid
r_struct
id|awc_fid
(brace
DECL|member|type
id|u32
id|type
suffix:semicolon
DECL|macro|p80211_llc_snap
mdefine_line|#define p80211_llc_snap&t;&t;0x0100
DECL|macro|p80211_8021H
mdefine_line|#define p80211_8021H&t;&t;0x0200
DECL|macro|p80211_8022
mdefine_line|#define p80211_8022&t;&t;0x0400
DECL|macro|p80211_8023
mdefine_line|#define p80211_8023&t;&t;0x0800
DECL|macro|p80211_snap_8021H
mdefine_line|#define p80211_snap_8021H&t;0x1000
DECL|macro|p80211copy_path_skb
mdefine_line|#define p80211copy_path_skb&t;0x2000
DECL|member|priority
id|u8
id|priority
suffix:semicolon
DECL|member|busy
id|u8
id|busy
suffix:semicolon
DECL|macro|awc_tx_fid_complete_read
mdefine_line|#define awc_tx_fid_complete_read 0x01
DECL|member|state
id|u16
id|state
suffix:semicolon
r_union
(brace
DECL|member|tx
r_struct
id|aironet4500_tx_fid
id|tx
suffix:semicolon
DECL|member|rx
r_struct
id|aironet4500_rx_fid
id|rx
suffix:semicolon
DECL|member|u
)brace
id|u
suffix:semicolon
DECL|member|snap
r_struct
id|ieee_802_11_snap_header
id|snap
suffix:semicolon
DECL|member|bridge
r_struct
id|ieee_802_11_802_1H_header
id|bridge
suffix:semicolon
DECL|member|bridge_size
id|u16
id|bridge_size
suffix:semicolon
DECL|member|p8022
r_struct
id|ieee_802_11_802_2_header
id|p8022
suffix:semicolon
DECL|member|pkt_len
id|u16
id|pkt_len
suffix:semicolon
DECL|member|mac
id|u8
op_star
id|mac
suffix:semicolon
DECL|member|skb
r_struct
id|sk_buff
op_star
id|skb
suffix:semicolon
DECL|member|transmit_start_time
r_int
r_int
id|transmit_start_time
suffix:semicolon
DECL|member|next
r_struct
id|awc_fid
op_star
id|next
suffix:semicolon
DECL|member|prev
r_struct
id|awc_fid
op_star
id|prev
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_fid_queue
r_struct
id|awc_fid_queue
(brace
DECL|member|head
r_struct
id|awc_fid
op_star
id|head
suffix:semicolon
DECL|member|tail
r_struct
id|awc_fid
op_star
id|tail
suffix:semicolon
DECL|member|size
r_int
id|size
suffix:semicolon
DECL|member|spinlock
id|my_spinlock_t
id|spinlock
suffix:semicolon
)brace
suffix:semicolon
r_extern
id|__inline__
r_void
DECL|function|awc_fid_queue_init
(def_block
id|awc_fid_queue_init
c_func
(paren
r_struct
id|awc_fid_queue
op_star
id|queue
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|memset
c_func
(paren
id|queue
comma
l_int|0
comma
r_sizeof
(paren
r_struct
id|awc_fid_queue
)paren
)paren
suffix:semicolon
id|my_spin_lock_init
c_func
(paren
op_amp
id|queue-&gt;spinlock
)paren
suffix:semicolon
id|my_spin_lock_irqsave
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
id|queue-&gt;head
op_assign
l_int|NULL
suffix:semicolon
id|queue-&gt;tail
op_assign
l_int|NULL
suffix:semicolon
id|queue-&gt;size
op_assign
l_int|0
suffix:semicolon
id|my_spin_unlock_irqrestore
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
)brace
)def_block
suffix:semicolon
r_extern
r_inline
r_void
DECL|function|awc_fid_queue_push_tail
(def_block
id|awc_fid_queue_push_tail
c_func
(paren
r_struct
id|awc_fid_queue
op_star
id|queue
comma
r_struct
id|awc_fid
op_star
id|fid
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|my_spin_lock_irqsave
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
id|fid-&gt;prev
op_assign
id|queue-&gt;tail
suffix:semicolon
id|fid-&gt;next
op_assign
l_int|NULL
suffix:semicolon
r_if
c_cond
(paren
id|queue-&gt;tail
)paren
(brace
id|queue-&gt;tail-&gt;next
op_assign
id|fid
suffix:semicolon
)brace
id|queue-&gt;tail
op_assign
id|fid
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|queue-&gt;head
)paren
id|queue-&gt;head
op_assign
id|fid
suffix:semicolon
id|queue-&gt;size
op_increment
suffix:semicolon
id|my_spin_unlock_irqrestore
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
)brace
)def_block
suffix:semicolon
r_extern
r_inline
r_void
DECL|function|awc_fid_queue_push_head
(def_block
id|awc_fid_queue_push_head
c_func
(paren
r_struct
id|awc_fid_queue
op_star
id|queue
comma
r_struct
id|awc_fid
op_star
id|fid
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|my_spin_lock_irqsave
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
id|fid-&gt;prev
op_assign
l_int|NULL
suffix:semicolon
id|fid-&gt;next
op_assign
id|queue-&gt;head
suffix:semicolon
r_if
c_cond
(paren
id|queue-&gt;head
)paren
(brace
id|queue-&gt;head-&gt;prev
op_assign
id|fid
suffix:semicolon
)brace
id|queue-&gt;head
op_assign
id|fid
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|queue-&gt;tail
)paren
id|queue-&gt;tail
op_assign
id|fid
suffix:semicolon
id|queue-&gt;size
op_increment
suffix:semicolon
id|my_spin_unlock_irqrestore
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
)brace
)def_block
suffix:semicolon
r_extern
r_inline
r_void
DECL|function|awc_fid_queue_rm
(def_block
id|awc_fid_queue_rm
c_func
(paren
r_struct
id|awc_fid_queue
op_star
id|queue
comma
r_struct
id|awc_fid
op_star
id|fid
)paren
(brace
r_if
c_cond
(paren
id|fid-&gt;prev
)paren
(brace
id|fid-&gt;prev-&gt;next
op_assign
id|fid-&gt;next
suffix:semicolon
)brace
suffix:semicolon
r_if
c_cond
(paren
id|fid-&gt;next
)paren
(brace
id|fid-&gt;next-&gt;prev
op_assign
id|fid-&gt;prev
suffix:semicolon
)brace
suffix:semicolon
r_if
c_cond
(paren
id|fid
op_eq
id|queue-&gt;tail
)paren
(brace
id|queue-&gt;tail
op_assign
id|fid-&gt;prev
suffix:semicolon
)brace
suffix:semicolon
r_if
c_cond
(paren
id|fid
op_eq
id|queue-&gt;head
)paren
(brace
id|queue-&gt;head
op_assign
id|fid-&gt;next
suffix:semicolon
)brace
suffix:semicolon
id|fid-&gt;next
op_assign
l_int|NULL
suffix:semicolon
id|fid-&gt;prev
op_assign
l_int|NULL
suffix:semicolon
id|queue-&gt;size
op_decrement
suffix:semicolon
r_if
c_cond
(paren
id|queue-&gt;size
op_eq
l_int|0
)paren
(brace
id|queue-&gt;tail
op_assign
l_int|NULL
suffix:semicolon
id|queue-&gt;head
op_assign
l_int|NULL
suffix:semicolon
)brace
)brace
)def_block
suffix:semicolon
r_extern
r_inline
r_void
DECL|function|awc_fid_queue_remove
(def_block
id|awc_fid_queue_remove
c_func
(paren
r_struct
id|awc_fid_queue
op_star
id|queue
comma
r_struct
id|awc_fid
op_star
id|fid
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|my_spin_lock_irqsave
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
id|awc_fid_queue_rm
c_func
(paren
id|queue
comma
id|fid
)paren
suffix:semicolon
id|my_spin_unlock_irqrestore
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
)brace
)def_block
suffix:semicolon
r_extern
r_inline
r_struct
id|awc_fid
op_star
DECL|function|awc_fid_queue_pop_head
(def_block
id|awc_fid_queue_pop_head
c_func
(paren
r_struct
id|awc_fid_queue
op_star
id|queue
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
r_struct
id|awc_fid
op_star
id|fid
suffix:semicolon
id|my_spin_lock_irqsave
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
id|fid
op_assign
id|queue-&gt;head
suffix:semicolon
r_if
c_cond
(paren
id|fid
)paren
id|awc_fid_queue_rm
c_func
(paren
id|queue
comma
id|fid
)paren
suffix:semicolon
id|my_spin_unlock_irqrestore
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
r_return
id|fid
suffix:semicolon
)brace
)def_block
suffix:semicolon
r_extern
r_inline
r_struct
id|awc_fid
op_star
DECL|function|awc_fid_queue_pop_tail
(def_block
id|awc_fid_queue_pop_tail
c_func
(paren
r_struct
id|awc_fid_queue
op_star
id|queue
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
r_struct
id|awc_fid
op_star
id|fid
suffix:semicolon
id|my_spin_lock_irqsave
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
id|fid
op_assign
id|queue-&gt;tail
suffix:semicolon
r_if
c_cond
(paren
id|fid
)paren
id|awc_fid_queue_rm
c_func
(paren
id|queue
comma
id|fid
)paren
suffix:semicolon
id|my_spin_unlock_irqrestore
c_func
(paren
op_amp
id|queue-&gt;spinlock
comma
id|flags
)paren
suffix:semicolon
r_return
id|fid
suffix:semicolon
)brace
)def_block
suffix:semicolon
DECL|macro|AWC_TX_HEAD_SIZE
mdefine_line|#define AWC_TX_HEAD_SIZE&t;&t;0x44
DECL|macro|AWC_TX_ALLOC_SMALL_SIZE
mdefine_line|#define AWC_TX_ALLOC_SMALL_SIZE &t;200
DECL|macro|AWC_RX_BUFFS
mdefine_line|#define AWC_RX_BUFFS&t;&t;&t;50
multiline_comment|/*****************************     &t;RID &amp; CONFIG &t;***********************/
DECL|struct|awc_config
r_struct
id|awc_config
(brace
DECL|member|Len
r_int
r_int
id|Len
suffix:semicolon
multiline_comment|/* sizeof(PC4500_CONFIG) */
DECL|member|OperatingMode
r_int
r_int
id|OperatingMode
suffix:semicolon
multiline_comment|/* operating mode        */
DECL|macro|MODE_STA_IBSS
mdefine_line|#define           MODE_STA_IBSS                0
DECL|macro|MODE_STA_ESS
mdefine_line|#define           MODE_STA_ESS                 1
DECL|macro|MODE_AP
mdefine_line|#define           MODE_AP                      2
DECL|macro|MODE_AP_RPTR
mdefine_line|#define           MODE_AP_RPTR                 3
DECL|macro|MODE_ETHERNET_HOST
mdefine_line|#define           MODE_ETHERNET_HOST           (0&lt;&lt;8)    /* rx payloads converted */
DECL|macro|MODE_LLC_HOST
mdefine_line|#define           MODE_LLC_HOST                (1&lt;&lt;8)    /* rx payloads left as is */
DECL|macro|MODE_AIRONET_EXTEND
mdefine_line|#define           MODE_AIRONET_EXTEND          (1&lt;&lt;9)    /* enable Aironet extenstions */
DECL|macro|MODE_AP_INTERFACE
mdefine_line|#define           MODE_AP_INTERFACE            (1&lt;&lt;10) /* enable ap interface extensions */
DECL|member|ReceiveMode
r_int
r_int
id|ReceiveMode
suffix:semicolon
multiline_comment|/* receive mode */
DECL|macro|RXMODE_BC_MC_ADDR
mdefine_line|#define           RXMODE_BC_MC_ADDR            0
DECL|macro|RXMODE_BC_ADDR
mdefine_line|#define           RXMODE_BC_ADDR               1         /* ignore multicasts */
DECL|macro|RXMODE_ADDR
mdefine_line|#define           RXMODE_ADDR                  2         /* ignore multicast and broadcast */
DECL|macro|RXMODE_RFMON
mdefine_line|#define           RXMODE_RFMON                 3         /* wireless monitor mode */
DECL|macro|RXMODE_RFMON_ANYBSS
mdefine_line|#define           RXMODE_RFMON_ANYBSS 4
DECL|macro|RXMODE_LANMON
mdefine_line|#define           RXMODE_LANMON                5         /* lan style monitor -- data packets only */
DECL|macro|RXMODE_DISABLE_802_3_HEADER
mdefine_line|#define           RXMODE_DISABLE_802_3_HEADER  0x100    /* disables 802.3 header on rx */
DECL|member|FragmentThreshold
r_int
r_int
id|FragmentThreshold
suffix:semicolon
DECL|member|RtsThreshold
r_int
r_int
id|RtsThreshold
suffix:semicolon
DECL|member|StationMacAddress
r_int
r_char
id|StationMacAddress
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|Rates
r_int
r_char
id|Rates
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|ShortRetryLimit
r_int
r_int
id|ShortRetryLimit
suffix:semicolon
DECL|member|LongRetryLimit
r_int
r_int
id|LongRetryLimit
suffix:semicolon
DECL|member|TxLifetime
r_int
r_int
id|TxLifetime
suffix:semicolon
multiline_comment|/* in kusec */
DECL|member|RxLifetime
r_int
r_int
id|RxLifetime
suffix:semicolon
multiline_comment|/* in kusec */
DECL|member|Stationary
r_int
r_int
id|Stationary
suffix:semicolon
DECL|member|Ordering
r_int
r_int
id|Ordering
suffix:semicolon
DECL|member|DeviceType
r_int
r_int
id|DeviceType
suffix:semicolon
multiline_comment|/* for overriding device type */
DECL|member|_reserved1
r_int
r_int
id|_reserved1
(braket
l_int|5
)braket
suffix:semicolon
multiline_comment|/*---------- Scanning/Associating ----------*/
DECL|member|ScanMode
r_int
r_int
id|ScanMode
suffix:semicolon
DECL|macro|SCANMODE_ACTIVE
mdefine_line|#define           SCANMODE_ACTIVE              0
DECL|macro|SCANMODE_PASSIVE
mdefine_line|#define           SCANMODE_PASSIVE             1
DECL|macro|SCANMODE_AIROSCAN
mdefine_line|#define           SCANMODE_AIROSCAN            2
DECL|member|ProbeDelay
r_int
r_int
id|ProbeDelay
suffix:semicolon
multiline_comment|/* in kusec */
DECL|member|ProbeEnergyTimeout
r_int
r_int
id|ProbeEnergyTimeout
suffix:semicolon
multiline_comment|/* in kusec */
DECL|member|ProbeResponseTimeout
r_int
r_int
id|ProbeResponseTimeout
suffix:semicolon
DECL|member|BeaconListenTimeout
r_int
r_int
id|BeaconListenTimeout
suffix:semicolon
DECL|member|JoinNetTimeout
r_int
r_int
id|JoinNetTimeout
suffix:semicolon
DECL|member|AuthenticationTimeout
r_int
r_int
id|AuthenticationTimeout
suffix:semicolon
DECL|member|AuthenticationType
r_int
r_int
id|AuthenticationType
suffix:semicolon
DECL|macro|AUTH_OPEN
mdefine_line|#define           AUTH_OPEN                    1
DECL|macro|AUTH_SHAREDKEY
mdefine_line|#define           AUTH_SHAREDKEY               2
DECL|macro|AUTH_EXCLUDENONWEP
mdefine_line|#define           AUTH_EXCLUDENONWEP           4
DECL|member|AssociationTimeout
r_int
r_int
id|AssociationTimeout
suffix:semicolon
DECL|member|SpecifiedApTimeout
r_int
r_int
id|SpecifiedApTimeout
suffix:semicolon
DECL|member|OfflineScanInterval
r_int
r_int
id|OfflineScanInterval
suffix:semicolon
DECL|member|OfflineScanDuration
r_int
r_int
id|OfflineScanDuration
suffix:semicolon
DECL|member|LinkLossDelay
r_int
r_int
id|LinkLossDelay
suffix:semicolon
DECL|member|MaxBeaconLostTime
r_int
r_int
id|MaxBeaconLostTime
suffix:semicolon
DECL|member|RefreshInterval
r_int
r_int
id|RefreshInterval
suffix:semicolon
DECL|macro|DISABLE_REFRESH
mdefine_line|#define           DISABLE_REFRESH           0xFFFF
DECL|member|_reserved1a
r_int
r_int
id|_reserved1a
(braket
l_int|1
)braket
suffix:semicolon
multiline_comment|/*---------- Power save operation ----------*/
DECL|member|PowerSaveMode
r_int
r_int
id|PowerSaveMode
suffix:semicolon
DECL|macro|POWERSAVE_CAM
mdefine_line|#define           POWERSAVE_CAM             0
DECL|macro|POWERSAVE_PSP
mdefine_line|#define           POWERSAVE_PSP             1
DECL|macro|POWERSAVE_PSP_CAM
mdefine_line|#define           POWERSAVE_PSP_CAM         2
DECL|member|SleepForDtims
r_int
r_int
id|SleepForDtims
suffix:semicolon
DECL|member|ListenInterval
r_int
r_int
id|ListenInterval
suffix:semicolon
DECL|member|FastListenInterval
r_int
r_int
id|FastListenInterval
suffix:semicolon
DECL|member|ListenDecay
r_int
r_int
id|ListenDecay
suffix:semicolon
DECL|member|FastListenDelay
r_int
r_int
id|FastListenDelay
suffix:semicolon
DECL|member|_reserved2
r_int
r_int
id|_reserved2
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/*---------- Ap/Ibss config items ----------*/
DECL|member|BeaconPeriod
r_int
r_int
id|BeaconPeriod
suffix:semicolon
DECL|member|AtimDuration
r_int
r_int
id|AtimDuration
suffix:semicolon
DECL|member|HopPeriod
r_int
r_int
id|HopPeriod
suffix:semicolon
DECL|member|ChannelSet
r_int
r_int
id|ChannelSet
suffix:semicolon
DECL|member|Channel
r_int
r_int
id|Channel
suffix:semicolon
DECL|member|DtimPeriod
r_int
r_int
id|DtimPeriod
suffix:semicolon
DECL|member|_reserved3
r_int
r_int
id|_reserved3
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/*---------- Radio configuration ----------*/
DECL|member|RadioType
r_int
r_int
id|RadioType
suffix:semicolon
DECL|macro|RADIOTYPE_DEFAULT
mdefine_line|#define           RADIOTYPE_DEFAULT         0
DECL|macro|RADIOTYPE_802_11
mdefine_line|#define           RADIOTYPE_802_11          1
DECL|macro|RADIOTYPE_LEGACY
mdefine_line|#define           RADIOTYPE_LEGACY          2
DECL|member|u8RxDiversity
r_int
r_char
id|u8RxDiversity
suffix:semicolon
DECL|member|u8TxDiversity
r_int
r_char
id|u8TxDiversity
suffix:semicolon
DECL|member|TxPower
r_int
r_int
id|TxPower
suffix:semicolon
DECL|macro|TXPOWER_DEFAULT
mdefine_line|#define           TXPOWER_DEFAULT           0
DECL|member|RssiThreshold
r_int
r_int
id|RssiThreshold
suffix:semicolon
DECL|macro|RSSI_DEFAULT
mdefine_line|#define           RSSI_DEFAULT              0
DECL|member|RadioSpecific
r_int
r_int
id|RadioSpecific
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/*---------- Aironet Extensions ----------*/
DECL|member|NodeName
r_int
r_char
id|NodeName
(braket
l_int|16
)braket
suffix:semicolon
DECL|member|ArlThreshold
r_int
r_int
id|ArlThreshold
suffix:semicolon
DECL|member|ArlDecay
r_int
r_int
id|ArlDecay
suffix:semicolon
DECL|member|ArlDelay
r_int
r_int
id|ArlDelay
suffix:semicolon
DECL|member|_reserved4
r_int
r_int
id|_reserved4
(braket
l_int|1
)braket
suffix:semicolon
multiline_comment|/*---------- Aironet Extensions ----------*/
DECL|member|MagicAction
r_int
r_int
id|MagicAction
suffix:semicolon
DECL|macro|MAGIC_ACTION_STSCHG
mdefine_line|#define           MAGIC_ACTION_STSCHG       1
DECL|macro|MACIC_ACTION_RESUME
mdefine_line|#define           MACIC_ACTION_RESUME       2
DECL|macro|MAGIC_IGNORE_MCAST
mdefine_line|#define           MAGIC_IGNORE_MCAST        (1&lt;&lt;8)
DECL|macro|MAGIC_IGNORE_BCAST
mdefine_line|#define           MAGIC_IGNORE_BCAST        (1&lt;&lt;9)
DECL|macro|MAGIC_SWITCH_TO_PSP
mdefine_line|#define           MAGIC_SWITCH_TO_PSP       (0&lt;&lt;10)
DECL|macro|MAGIC_STAY_IN_CAM
mdefine_line|#define           MAGIC_STAY_IN_CAM         (1&lt;&lt;10)
)brace
suffix:semicolon
DECL|struct|awc_SSID
r_struct
id|awc_SSID
(brace
DECL|member|lenght
id|u16
id|lenght
suffix:semicolon
DECL|member|SSID
id|u8
id|SSID
(braket
l_int|32
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_SSIDs
r_struct
id|awc_SSIDs
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|SSID
r_struct
id|awc_SSID
id|SSID
(braket
l_int|3
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_fixed_APs
r_struct
id|awc_fixed_APs
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|AP
id|u8
id|AP
(braket
l_int|4
)braket
(braket
l_int|6
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_driver_name
r_struct
id|awc_driver_name
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|name
id|u8
id|name
(braket
l_int|16
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_encapsulation
r_struct
id|awc_encapsulation
(brace
DECL|member|etherType
id|u16
id|etherType
suffix:semicolon
DECL|member|Action
id|u16
id|Action
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_enc_trans
r_struct
id|awc_enc_trans
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|rules
r_struct
id|awc_encapsulation
id|rules
(braket
l_int|8
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_wep_key
r_struct
id|awc_wep_key
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|KeyIndex
id|u16
id|KeyIndex
suffix:semicolon
DECL|member|Address
id|u8
id|Address
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|KeyLen
id|u16
id|KeyLen
suffix:semicolon
DECL|member|Key
id|u8
id|Key
(braket
l_int|16
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_modulation
r_struct
id|awc_modulation
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|Modulation
id|u16
id|Modulation
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_cap
r_struct
id|awc_cap
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|OUI
id|u8
id|OUI
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|ProductNum
id|u8
id|ProductNum
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|ManufacturerName
id|u8
id|ManufacturerName
(braket
l_int|32
)braket
suffix:semicolon
DECL|member|ProductName
id|u8
id|ProductName
(braket
l_int|16
)braket
suffix:semicolon
DECL|member|ProductVersion
id|u8
id|ProductVersion
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|FactoryAddress
id|u8
id|FactoryAddress
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|AironetAddress
id|u8
id|AironetAddress
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|RadioType
id|u16
id|RadioType
suffix:semicolon
DECL|member|RegDomain
id|u16
id|RegDomain
suffix:semicolon
DECL|member|Callid
id|u8
id|Callid
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|SupportedRates
id|u8
id|SupportedRates
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|RxDiversity
id|u8
id|RxDiversity
suffix:semicolon
DECL|member|TxDiversity
id|u8
id|TxDiversity
suffix:semicolon
DECL|member|TxPowerLevels
id|u16
id|TxPowerLevels
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|HardwareVersion
id|u16
id|HardwareVersion
suffix:semicolon
DECL|member|HardwareCapabilities
id|u16
id|HardwareCapabilities
suffix:semicolon
DECL|member|TemperatureRange
id|u16
id|TemperatureRange
suffix:semicolon
DECL|member|SoftwareVersion
id|u16
id|SoftwareVersion
suffix:semicolon
DECL|member|SoftwareSubVersion
id|u16
id|SoftwareSubVersion
suffix:semicolon
DECL|member|InterfaceVersion
id|u16
id|InterfaceVersion
suffix:semicolon
DECL|member|SoftwareCapabilities
id|u16
id|SoftwareCapabilities
suffix:semicolon
DECL|member|BootBlockVersionMajor
id|u8
id|BootBlockVersionMajor
suffix:semicolon
DECL|member|BootBlockVersionMinor
id|u8
id|BootBlockVersionMinor
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_status
r_struct
id|awc_status
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|MacAddress
id|u8
id|MacAddress
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|OperationalMode
id|u16
id|OperationalMode
suffix:semicolon
DECL|member|ErrorCode
id|u16
id|ErrorCode
suffix:semicolon
DECL|member|CurrentSignalQuality
id|u16
id|CurrentSignalQuality
suffix:semicolon
DECL|member|SSIDlength
id|u16
id|SSIDlength
suffix:semicolon
DECL|member|SSID
id|u8
id|SSID
(braket
l_int|32
)braket
suffix:semicolon
DECL|member|ApName
id|u8
id|ApName
(braket
l_int|16
)braket
suffix:semicolon
DECL|member|CurrentBssid
id|u8
id|CurrentBssid
(braket
l_int|32
)braket
suffix:semicolon
DECL|member|PreviousBSSIDs
id|u8
id|PreviousBSSIDs
(braket
l_int|3
)braket
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|BeaconPeriod
id|u16
id|BeaconPeriod
suffix:semicolon
DECL|member|DtimPeriod
id|u16
id|DtimPeriod
suffix:semicolon
DECL|member|AtimDuration
id|u16
id|AtimDuration
suffix:semicolon
DECL|member|HopPeriod
id|u16
id|HopPeriod
suffix:semicolon
DECL|member|ChannelSet
id|u16
id|ChannelSet
suffix:semicolon
DECL|member|Channel
id|u16
id|Channel
suffix:semicolon
DECL|member|HopsToBackbone
id|u16
id|HopsToBackbone
suffix:semicolon
DECL|member|ApTotalLoad
id|u16
id|ApTotalLoad
suffix:semicolon
DECL|member|OurGeneratedLoad
id|u16
id|OurGeneratedLoad
suffix:semicolon
DECL|member|AccumulatedArl
id|u16
id|AccumulatedArl
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_AP
r_struct
id|awc_AP
(brace
DECL|member|ridLen
id|u16
id|ridLen
suffix:semicolon
DECL|member|TIM_Addr
id|u16
id|TIM_Addr
suffix:semicolon
DECL|member|Airo_Addr
id|u16
id|Airo_Addr
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_Statistics_32
r_struct
id|awc_Statistics_32
(brace
DECL|member|RidLen
id|u32
id|RidLen
suffix:semicolon
DECL|member|RxOverrunErr
id|u32
id|RxOverrunErr
suffix:semicolon
DECL|member|RxPlcpCrcErr
id|u32
id|RxPlcpCrcErr
suffix:semicolon
DECL|member|RxPlcpFormat
id|u32
id|RxPlcpFormat
suffix:semicolon
DECL|member|RxPlcpLength
id|u32
id|RxPlcpLength
suffix:semicolon
DECL|member|RxMacCrcErr
id|u32
id|RxMacCrcErr
suffix:semicolon
DECL|member|RxMacCrcOk
id|u32
id|RxMacCrcOk
suffix:semicolon
DECL|member|RxWepErr
id|u32
id|RxWepErr
suffix:semicolon
DECL|member|RxWepOk
id|u32
id|RxWepOk
suffix:semicolon
DECL|member|RetryLong
id|u32
id|RetryLong
suffix:semicolon
DECL|member|RetryShort
id|u32
id|RetryShort
suffix:semicolon
DECL|member|MaxRetries
id|u32
id|MaxRetries
suffix:semicolon
DECL|member|NoAck
id|u32
id|NoAck
suffix:semicolon
DECL|member|NoCts
id|u32
id|NoCts
suffix:semicolon
DECL|member|RxAck
id|u32
id|RxAck
suffix:semicolon
DECL|member|RxCts
id|u32
id|RxCts
suffix:semicolon
DECL|member|TxAck
id|u32
id|TxAck
suffix:semicolon
DECL|member|TxRts
id|u32
id|TxRts
suffix:semicolon
DECL|member|TxCts
id|u32
id|TxCts
suffix:semicolon
DECL|member|TxMc
id|u32
id|TxMc
suffix:semicolon
DECL|member|TxBc
id|u32
id|TxBc
suffix:semicolon
DECL|member|TxUcFrags
id|u32
id|TxUcFrags
suffix:semicolon
DECL|member|TxUcPackets
id|u32
id|TxUcPackets
suffix:semicolon
DECL|member|TxBeacon
id|u32
id|TxBeacon
suffix:semicolon
DECL|member|RxBeacon
id|u32
id|RxBeacon
suffix:semicolon
DECL|member|TxSinColl
id|u32
id|TxSinColl
suffix:semicolon
DECL|member|TxMulColl
id|u32
id|TxMulColl
suffix:semicolon
DECL|member|DefersNo
id|u32
id|DefersNo
suffix:semicolon
DECL|member|DefersProt
id|u32
id|DefersProt
suffix:semicolon
DECL|member|DefersEngy
id|u32
id|DefersEngy
suffix:semicolon
DECL|member|DupFram
id|u32
id|DupFram
suffix:semicolon
DECL|member|RxFragDisc
id|u32
id|RxFragDisc
suffix:semicolon
DECL|member|TxAged
id|u32
id|TxAged
suffix:semicolon
DECL|member|RxAged
id|u32
id|RxAged
suffix:semicolon
DECL|member|LostSync_Max
id|u32
id|LostSync_Max
suffix:semicolon
DECL|member|LostSync_Mis
id|u32
id|LostSync_Mis
suffix:semicolon
DECL|member|LostSync_Arl
id|u32
id|LostSync_Arl
suffix:semicolon
DECL|member|LostSync_Dea
id|u32
id|LostSync_Dea
suffix:semicolon
DECL|member|LostSync_Disa
id|u32
id|LostSync_Disa
suffix:semicolon
DECL|member|LostSync_Tsf
id|u32
id|LostSync_Tsf
suffix:semicolon
DECL|member|HostTxMc
id|u32
id|HostTxMc
suffix:semicolon
DECL|member|HostTxBc
id|u32
id|HostTxBc
suffix:semicolon
DECL|member|HostTxUc
id|u32
id|HostTxUc
suffix:semicolon
DECL|member|HostTxFail
id|u32
id|HostTxFail
suffix:semicolon
DECL|member|HostRxMc
id|u32
id|HostRxMc
suffix:semicolon
DECL|member|HostRxBc
id|u32
id|HostRxBc
suffix:semicolon
DECL|member|HostRxUc
id|u32
id|HostRxUc
suffix:semicolon
DECL|member|HostRxDiscar
id|u32
id|HostRxDiscar
suffix:semicolon
DECL|member|HmacTxMc
id|u32
id|HmacTxMc
suffix:semicolon
DECL|member|HmacTxBc
id|u32
id|HmacTxBc
suffix:semicolon
DECL|member|HmacTxUc
id|u32
id|HmacTxUc
suffix:semicolon
DECL|member|HmacTxFail
id|u32
id|HmacTxFail
suffix:semicolon
DECL|member|HmacRxMc
id|u32
id|HmacRxMc
suffix:semicolon
DECL|member|HmacRxBc
id|u32
id|HmacRxBc
suffix:semicolon
DECL|member|HmacRxUc
id|u32
id|HmacRxUc
suffix:semicolon
DECL|member|HmacRxDisca
id|u32
id|HmacRxDisca
suffix:semicolon
DECL|member|HmacRxAcce
id|u32
id|HmacRxAcce
suffix:semicolon
DECL|member|SsidMismatch
id|u32
id|SsidMismatch
suffix:semicolon
DECL|member|ApMismatch
id|u32
id|ApMismatch
suffix:semicolon
DECL|member|RatesMismatc
id|u32
id|RatesMismatc
suffix:semicolon
DECL|member|AuthReject
id|u32
id|AuthReject
suffix:semicolon
DECL|member|AuthTimeout
id|u32
id|AuthTimeout
suffix:semicolon
DECL|member|AssocReject
id|u32
id|AssocReject
suffix:semicolon
DECL|member|AssocTimeout
id|u32
id|AssocTimeout
suffix:semicolon
DECL|member|NewReason
id|u32
id|NewReason
suffix:semicolon
DECL|member|AuthFail_1
id|u32
id|AuthFail_1
suffix:semicolon
DECL|member|AuthFail_2
id|u32
id|AuthFail_2
suffix:semicolon
DECL|member|AuthFail_3
id|u32
id|AuthFail_3
suffix:semicolon
DECL|member|AuthFail_4
id|u32
id|AuthFail_4
suffix:semicolon
DECL|member|AuthFail_5
id|u32
id|AuthFail_5
suffix:semicolon
DECL|member|AuthFail_6
id|u32
id|AuthFail_6
suffix:semicolon
DECL|member|AuthFail_7
id|u32
id|AuthFail_7
suffix:semicolon
DECL|member|AuthFail_8
id|u32
id|AuthFail_8
suffix:semicolon
DECL|member|AuthFail_9
id|u32
id|AuthFail_9
suffix:semicolon
DECL|member|AuthFail_10
id|u32
id|AuthFail_10
suffix:semicolon
DECL|member|AuthFail_11
id|u32
id|AuthFail_11
suffix:semicolon
DECL|member|AuthFail_12
id|u32
id|AuthFail_12
suffix:semicolon
DECL|member|AuthFail_13
id|u32
id|AuthFail_13
suffix:semicolon
DECL|member|AuthFail_14
id|u32
id|AuthFail_14
suffix:semicolon
DECL|member|AuthFail_15
id|u32
id|AuthFail_15
suffix:semicolon
DECL|member|AuthFail_16
id|u32
id|AuthFail_16
suffix:semicolon
DECL|member|AuthFail_17
id|u32
id|AuthFail_17
suffix:semicolon
DECL|member|AuthFail_18
id|u32
id|AuthFail_18
suffix:semicolon
DECL|member|AuthFail_19
id|u32
id|AuthFail_19
suffix:semicolon
DECL|member|RxMan
id|u32
id|RxMan
suffix:semicolon
DECL|member|TxMan
id|u32
id|TxMan
suffix:semicolon
DECL|member|RxRefresh
id|u32
id|RxRefresh
suffix:semicolon
DECL|member|TxRefresh
id|u32
id|TxRefresh
suffix:semicolon
DECL|member|RxPoll
id|u32
id|RxPoll
suffix:semicolon
DECL|member|TxPoll
id|u32
id|TxPoll
suffix:semicolon
DECL|member|HostRetries
id|u32
id|HostRetries
suffix:semicolon
DECL|member|LostSync_HostReq
id|u32
id|LostSync_HostReq
suffix:semicolon
DECL|member|HostTxBytes
id|u32
id|HostTxBytes
suffix:semicolon
DECL|member|HostRxBytes
id|u32
id|HostRxBytes
suffix:semicolon
DECL|member|ElapsedUsec
id|u32
id|ElapsedUsec
suffix:semicolon
DECL|member|ElapsedSec
id|u32
id|ElapsedSec
suffix:semicolon
DECL|member|LostSyncBett
id|u32
id|LostSyncBett
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_Statistics_16
r_struct
id|awc_Statistics_16
(brace
DECL|member|RidLen
id|u16
id|RidLen
suffix:semicolon
DECL|member|RxOverrunErr
id|u16
id|RxOverrunErr
suffix:semicolon
DECL|member|RxPlcpCrcErr
id|u16
id|RxPlcpCrcErr
suffix:semicolon
DECL|member|RxPlcpFormat
id|u16
id|RxPlcpFormat
suffix:semicolon
DECL|member|RxPlcpLength
id|u16
id|RxPlcpLength
suffix:semicolon
DECL|member|RxMacCrcErr
id|u16
id|RxMacCrcErr
suffix:semicolon
DECL|member|RxMacCrcOk
id|u16
id|RxMacCrcOk
suffix:semicolon
DECL|member|RxWepErr
id|u16
id|RxWepErr
suffix:semicolon
DECL|member|RxWepOk
id|u16
id|RxWepOk
suffix:semicolon
DECL|member|RetryLong
id|u16
id|RetryLong
suffix:semicolon
DECL|member|RetryShort
id|u16
id|RetryShort
suffix:semicolon
DECL|member|MaxRetries
id|u16
id|MaxRetries
suffix:semicolon
DECL|member|NoAck
id|u16
id|NoAck
suffix:semicolon
DECL|member|NoCts
id|u16
id|NoCts
suffix:semicolon
DECL|member|RxAck
id|u16
id|RxAck
suffix:semicolon
DECL|member|RxCts
id|u16
id|RxCts
suffix:semicolon
DECL|member|TxAck
id|u16
id|TxAck
suffix:semicolon
DECL|member|TxRts
id|u16
id|TxRts
suffix:semicolon
DECL|member|TxCts
id|u16
id|TxCts
suffix:semicolon
DECL|member|TxMc
id|u16
id|TxMc
suffix:semicolon
DECL|member|TxBc
id|u16
id|TxBc
suffix:semicolon
DECL|member|TxUcFrags
id|u16
id|TxUcFrags
suffix:semicolon
DECL|member|TxUcPackets
id|u16
id|TxUcPackets
suffix:semicolon
DECL|member|TxBeacon
id|u16
id|TxBeacon
suffix:semicolon
DECL|member|RxBeacon
id|u16
id|RxBeacon
suffix:semicolon
DECL|member|TxSinColl
id|u16
id|TxSinColl
suffix:semicolon
DECL|member|TxMulColl
id|u16
id|TxMulColl
suffix:semicolon
DECL|member|DefersNo
id|u16
id|DefersNo
suffix:semicolon
DECL|member|DefersProt
id|u16
id|DefersProt
suffix:semicolon
DECL|member|DefersEngy
id|u16
id|DefersEngy
suffix:semicolon
DECL|member|DupFram
id|u16
id|DupFram
suffix:semicolon
DECL|member|RxFragDisc
id|u16
id|RxFragDisc
suffix:semicolon
DECL|member|TxAged
id|u16
id|TxAged
suffix:semicolon
DECL|member|RxAged
id|u16
id|RxAged
suffix:semicolon
DECL|member|LostSync_Max
id|u16
id|LostSync_Max
suffix:semicolon
DECL|member|LostSync_Mis
id|u16
id|LostSync_Mis
suffix:semicolon
DECL|member|LostSync_Arl
id|u16
id|LostSync_Arl
suffix:semicolon
DECL|member|LostSync_Dea
id|u16
id|LostSync_Dea
suffix:semicolon
DECL|member|LostSync_Disa
id|u16
id|LostSync_Disa
suffix:semicolon
DECL|member|LostSync_Tsf
id|u16
id|LostSync_Tsf
suffix:semicolon
DECL|member|HostTxMc
id|u16
id|HostTxMc
suffix:semicolon
DECL|member|HostTxBc
id|u16
id|HostTxBc
suffix:semicolon
DECL|member|HostTxUc
id|u16
id|HostTxUc
suffix:semicolon
DECL|member|HostTxFail
id|u16
id|HostTxFail
suffix:semicolon
DECL|member|HostRxMc
id|u16
id|HostRxMc
suffix:semicolon
DECL|member|HostRxBc
id|u16
id|HostRxBc
suffix:semicolon
DECL|member|HostRxUc
id|u16
id|HostRxUc
suffix:semicolon
DECL|member|HostRxDiscar
id|u16
id|HostRxDiscar
suffix:semicolon
DECL|member|HmacTxMc
id|u16
id|HmacTxMc
suffix:semicolon
DECL|member|HmacTxBc
id|u16
id|HmacTxBc
suffix:semicolon
DECL|member|HmacTxUc
id|u16
id|HmacTxUc
suffix:semicolon
DECL|member|HmacTxFail
id|u16
id|HmacTxFail
suffix:semicolon
DECL|member|HmacRxMc
id|u16
id|HmacRxMc
suffix:semicolon
DECL|member|HmacRxBc
id|u16
id|HmacRxBc
suffix:semicolon
DECL|member|HmacRxUc
id|u16
id|HmacRxUc
suffix:semicolon
DECL|member|HmacRxDisca
id|u16
id|HmacRxDisca
suffix:semicolon
DECL|member|HmacRxAcce
id|u16
id|HmacRxAcce
suffix:semicolon
DECL|member|SsidMismatch
id|u16
id|SsidMismatch
suffix:semicolon
DECL|member|ApMismatch
id|u16
id|ApMismatch
suffix:semicolon
DECL|member|RatesMismatc
id|u16
id|RatesMismatc
suffix:semicolon
DECL|member|AuthReject
id|u16
id|AuthReject
suffix:semicolon
DECL|member|AuthTimeout
id|u16
id|AuthTimeout
suffix:semicolon
DECL|member|AssocReject
id|u16
id|AssocReject
suffix:semicolon
DECL|member|AssocTimeout
id|u16
id|AssocTimeout
suffix:semicolon
DECL|member|NewReason
id|u16
id|NewReason
suffix:semicolon
DECL|member|AuthFail_1
id|u16
id|AuthFail_1
suffix:semicolon
DECL|member|AuthFail_2
id|u16
id|AuthFail_2
suffix:semicolon
DECL|member|AuthFail_3
id|u16
id|AuthFail_3
suffix:semicolon
DECL|member|AuthFail_4
id|u16
id|AuthFail_4
suffix:semicolon
DECL|member|AuthFail_5
id|u16
id|AuthFail_5
suffix:semicolon
DECL|member|AuthFail_6
id|u16
id|AuthFail_6
suffix:semicolon
DECL|member|AuthFail_7
id|u16
id|AuthFail_7
suffix:semicolon
DECL|member|AuthFail_8
id|u16
id|AuthFail_8
suffix:semicolon
DECL|member|AuthFail_9
id|u16
id|AuthFail_9
suffix:semicolon
DECL|member|AuthFail_10
id|u16
id|AuthFail_10
suffix:semicolon
DECL|member|AuthFail_11
id|u16
id|AuthFail_11
suffix:semicolon
DECL|member|AuthFail_12
id|u16
id|AuthFail_12
suffix:semicolon
DECL|member|AuthFail_13
id|u16
id|AuthFail_13
suffix:semicolon
DECL|member|AuthFail_14
id|u16
id|AuthFail_14
suffix:semicolon
DECL|member|AuthFail_15
id|u16
id|AuthFail_15
suffix:semicolon
DECL|member|AuthFail_16
id|u16
id|AuthFail_16
suffix:semicolon
DECL|member|AuthFail_17
id|u16
id|AuthFail_17
suffix:semicolon
DECL|member|AuthFail_18
id|u16
id|AuthFail_18
suffix:semicolon
DECL|member|AuthFail_19
id|u16
id|AuthFail_19
suffix:semicolon
DECL|member|RxMan
id|u16
id|RxMan
suffix:semicolon
DECL|member|TxMan
id|u16
id|TxMan
suffix:semicolon
DECL|member|RxRefresh
id|u16
id|RxRefresh
suffix:semicolon
DECL|member|TxRefresh
id|u16
id|TxRefresh
suffix:semicolon
DECL|member|RxPoll
id|u16
id|RxPoll
suffix:semicolon
DECL|member|TxPoll
id|u16
id|TxPoll
suffix:semicolon
DECL|member|HostRetries
id|u16
id|HostRetries
suffix:semicolon
DECL|member|LostSync_HostReq
id|u16
id|LostSync_HostReq
suffix:semicolon
DECL|member|HostTxBytes
id|u16
id|HostTxBytes
suffix:semicolon
DECL|member|HostRxBytes
id|u16
id|HostRxBytes
suffix:semicolon
DECL|member|ElapsedUsec
id|u16
id|ElapsedUsec
suffix:semicolon
DECL|member|ElapsedSec
id|u16
id|ElapsedSec
suffix:semicolon
DECL|member|LostSyncBett
id|u16
id|LostSyncBett
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|AWC_TXCTL_TXOK
mdefine_line|#define AWC_TXCTL_TXOK &t;&t;(1&lt;&lt;1)&t;/* report if tx is ok */
DECL|macro|AWC_TXCTL_TXEX
mdefine_line|#define AWC_TXCTL_TXEX &t;&t;(1&lt;&lt;2)&t;/* report if tx fails */
DECL|macro|AWC_TXCTL_802_3
mdefine_line|#define AWC_TXCTL_802_3&t;&t;(0&lt;&lt;3)&t;/* 802.3 packet */
DECL|macro|AWC_TXCTL_802_11
mdefine_line|#define AWC_TXCTL_802_11    &t;(1&lt;&lt;3)&t;/* 802.11 mac packet */
DECL|macro|AWC_TXCTL_ETHERNET
mdefine_line|#define AWC_TXCTL_ETHERNET  &t;(0&lt;&lt;4)&t;/* payload has ethertype */
DECL|macro|AWC_TXCTL_LLC
mdefine_line|#define AWC_TXCTL_LLC  &t;&t;(1&lt;&lt;4)&t;/* payload is llc */
DECL|macro|AWC_TXCTL_RELEASE
mdefine_line|#define AWC_TXCTL_RELEASE   &t;(0&lt;&lt;5)&t;/* release after completion */
DECL|macro|AWC_TXCTL_NORELEASE
mdefine_line|#define AWC_TXCTL_NORELEASE &t;(1&lt;&lt;5)&t;/* on completion returns to host */
multiline_comment|/************************* LINK STATUS STUFF *******************/
DECL|macro|awc_link_status_loss_of_sync_missed_beacons
mdefine_line|#define&t;awc_link_status_loss_of_sync_missed_beacons&t;0x8000
DECL|macro|awc_link_status_loss_of_sync_max_retries
mdefine_line|#define&t;awc_link_status_loss_of_sync_max_retries &t;0x8001
DECL|macro|awc_link_status_loss_of_sync_ARL_exceed
mdefine_line|#define&t;awc_link_status_loss_of_sync_ARL_exceed  &t;0x8002
DECL|macro|awc_link_status_loss_of_sync_host_request
mdefine_line|#define&t;awc_link_status_loss_of_sync_host_request &t;0x8003
DECL|macro|awc_link_status_loss_of_sync_TSF_sync
mdefine_line|#define&t;awc_link_status_loss_of_sync_TSF_sync&t;&t;0x8004
DECL|macro|awc_link_status_deauthentication
mdefine_line|#define&t;awc_link_status_deauthentication&t;&t;0x8100
DECL|macro|awc_link_status_disassociation
mdefine_line|#define&t;awc_link_status_disassociation&t;&t;&t;0x8200
DECL|macro|awc_link_status_association_failed
mdefine_line|#define&t;awc_link_status_association_failed&t;&t;0x8400
DECL|macro|awc_link_status_authentication_failed
mdefine_line|#define&t;awc_link_status_authentication_failed&t;&t;0x0300
DECL|macro|awc_link_status_associated
mdefine_line|#define&t;awc_link_status_associated&t;&t;&t;0x0400
DECL|struct|awc_strings
r_struct
id|awc_strings
(brace
DECL|member|par
r_int
id|par
suffix:semicolon
DECL|member|mask
r_int
r_int
id|mask
suffix:semicolon
DECL|member|string
r_const
r_char
op_star
id|string
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|awc_link_status_strings
mdefine_line|#define awc_link_status_strings {&bslash;&n;{awc_link_status_loss_of_sync_missed_beacons,&t;0xFFFF,&quot;Loss of sync -- missed beacons&quot;},&bslash;&n;{awc_link_status_loss_of_sync_max_retries,&t;0xFFFF,&quot;Loss of sync -- max retries&quot;},&bslash;&n;{awc_link_status_loss_of_sync_ARL_exceed,&t;0xFFFF,&quot;Loss of sync -- average retry level (ARL) exceeded&quot;},&bslash;&n;{awc_link_status_loss_of_sync_host_request,&t;0xFFFF,&quot;Loss of sync -- host request&quot;},&bslash;&n;{awc_link_status_loss_of_sync_TSF_sync,&t;&t;0xFFFF,&quot;Loss of sync -- TSF synchronization&quot;},&bslash;&n;{awc_link_status_deauthentication,&t;&t;0xFF00,&quot;Deauthentication &quot;},&bslash;&n;{awc_link_status_disassociation,&t;&t;0xFF00,&quot;Disassocation &quot;},&bslash;&n;{awc_link_status_association_failed ,&t;&t;0xFF00,&quot;Association failed &quot;},&bslash;&n;{awc_link_status_authentication_failed,&t;&t;0xFF00,&quot;Authentication failure&quot;},&bslash;&n;{awc_link_status_associated,&t;&t;&t;0xFFFF,&quot;Associated &quot;},&bslash;&n;{0,0,NULL}&bslash;&n;} 
multiline_comment|/****************************** COMMANDS and DEFAULTS and STATUSES ***********/
multiline_comment|/****************************** COMMANDS */
singleline_comment|// Command definitions
DECL|macro|awc4500wout
mdefine_line|#define awc4500wout(base, com, p0,p1,p2) {&bslash;&n;&t;awc_write(base,awc_Param0_register, p0);&bslash;&n;&t;awc_write(base,awc_Param1_register, p1);&bslash;&n;&t;awc_write(base,awc_Param2_register, p2);&bslash;&n;&t;WAIT61x3;&bslash;&n;&t;awc_write(base,awc_Command_register, com);&bslash;&n;&t;WAIT61x3;&bslash;&n;}
DECL|macro|awc_wout
mdefine_line|#define awc_wout(cmd, com, p0,p1,p2) {&bslash;&n;&t;awc_write(base,awc_Param0_register, p0);&bslash;&n;&t;awc_write(base,awc_Param1_register, p1);&bslash;&n;&t;awc_write(base,awc_Param2_register, p2);&bslash;&n;&t;WAIT61x3;&bslash;&n;&t;awc_write(base,awc_Command_register, com);&bslash;&n;&t;WAIT61x3;&bslash;&n;}
DECL|macro|awc_command_NOP
mdefine_line|#define awc_command_NOP(cmd)&t;&t;&t;awc_wout( cmd,0x0000,0,0,0) 
singleline_comment|// &t;NOP
DECL|macro|awc_command_Enable_All
mdefine_line|#define awc_command_Enable_All(cmd)&t;&t;awc_wout( cmd,0x0001,0,0,0) 
singleline_comment|// &t;Enable
DECL|macro|awc_command_Enable_MAC
mdefine_line|#define awc_command_Enable_MAC(cmd)&t;&t;awc_wout( cmd,0x0101,0,0,0) 
singleline_comment|// &t;Enable Mac
DECL|macro|awc_command_Enable_Rx
mdefine_line|#define awc_command_Enable_Rx(cmd)&t;&t;awc_wout( cmd,0x0201,0,0,0) 
singleline_comment|// &t;Enable Rx
DECL|macro|awc_command_Disable_MAC
mdefine_line|#define awc_command_Disable_MAC(cmd)&t;&t;awc_wout( cmd,0x0002,0,0,0) 
singleline_comment|// &t;Disable
DECL|macro|awc_command_Sync_Loss
mdefine_line|#define awc_command_Sync_Loss(cmd)&t;&t;awc_wout( cmd,0x0003,0,0,0) 
singleline_comment|// &t;Force a Loss of Sync
DECL|macro|awc_command_Soft_Reset
mdefine_line|#define awc_command_Soft_Reset(cmd)&t;&t;awc_wout( cmd,0x0004,0,0,0) 
singleline_comment|// &t;Firmware Restart (soft reset)
DECL|macro|awc_command_Host_Sleep
mdefine_line|#define awc_command_Host_Sleep(cmd)&t;&t;awc_wout( cmd,0x0005,0,0,0) 
singleline_comment|// &t;Host Sleep (must be issued as 0x0085)
DECL|macro|awc_command_Magic_Packet
mdefine_line|#define awc_command_Magic_Packet(cmd)&t;&t;awc_wout( cmd,0x0006,0,0,0) 
singleline_comment|// &t;Magic Packet
DECL|macro|awc_command_Read_Configuration
mdefine_line|#define awc_command_Read_Configuration(cmd)&t;awc_wout( cmd,0x0008,0,0,0) 
singleline_comment|// &t;Read the Configuration from nonvolatile  storage
DECL|macro|awc_command_Allocate_TX_Buff
mdefine_line|#define awc_command_Allocate_TX_Buff(cmd,size)&t;awc_wout( cmd,0x000A,size,0,0) 
singleline_comment|// &t;Allocate Transmit Buffer
DECL|macro|awc_command_TX
mdefine_line|#define awc_command_TX(cmd,FID)&t;&t;&t;awc_wout( cmd,0x000B,FID ,0,0) 
singleline_comment|// &t;Transmit
DECL|macro|awc_command_Deallocate
mdefine_line|#define awc_command_Deallocate(cmd,FID)&t;&t;awc_wout( cmd,0x000C,FID ,0,0) 
singleline_comment|// &t;Deallocate
DECL|macro|awc_command_NOP2
mdefine_line|#define awc_command_NOP2(cmd)&t;&t;&t;awc_wout( cmd,0x0010,0,0,0) 
singleline_comment|// &t;NOP (same as 0x0000)
DECL|macro|awc_command_Read_RID
mdefine_line|#define awc_command_Read_RID(cmd,RID)&t;&t;awc_wout( cmd,0x0021,RID ,0,0) 
singleline_comment|// &t;Read RID
DECL|macro|awc_command_Write_RID
mdefine_line|#define awc_command_Write_RID(cmd,RID)&t;&t;awc_wout( cmd,0x0121,RID ,0,0) 
singleline_comment|// &t;Write RID
DECL|macro|awc_command_Allocate_Buff
mdefine_line|#define awc_command_Allocate_Buff(cmd,size)&t;awc_wout( cmd,0x0028,size,0,0) 
singleline_comment|// &t;Allocate Buffer
DECL|macro|awc_command_PSP_Nodes
mdefine_line|#define awc_command_PSP_Nodes(cmd)&t;&t;awc_wout( cmd,0x0030,0,0,0) 
singleline_comment|// &t;PSP nodes (AP only)
DECL|macro|awc_command_Set_Phy_register
mdefine_line|#define awc_command_Set_Phy_register(cmd,phy_register,clear_bits, set_bits)&bslash;&n;&t;&t;&t;&t;&t;&t;&t;awc_wout( cmd,0x003E,phy_register,clear_bits, set_bits) 
singleline_comment|// &t;Set PHY register
DECL|macro|awc_command_TX_Test
mdefine_line|#define awc_command_TX_Test(cmd,command, frequency, pattern)&t;&t;awc_wout( cmd,0x003F,command, frequency, pattern) 
singleline_comment|// &t;Transmitter Test
DECL|macro|awc_command_RX_Test
mdefine_line|#define awc_command_RX_Test(cmd)&t;&t;awc_wout( cmd,0x013F,0,0,0) 
singleline_comment|// &t;RX Test
DECL|macro|awc_command_Sleep
mdefine_line|#define awc_command_Sleep(cmd)&t;&t;&t;awc_wout( cmd,0x0085,0,0,0) 
singleline_comment|// &t;Go to Sleep (No Ack bit is mandatory)
DECL|macro|awc_command_Save_Configuration
mdefine_line|#define awc_command_Save_Configuration(cmd)&t;awc_wout( cmd,0x0108,0,0,0) 
singleline_comment|// &t;Save the configuration to nonvolatile
DECL|macro|AWC_COMMAND_NOOP_BULL
mdefine_line|#define AWC_COMMAND_NOOP_BULL &t;&t;0x000
DECL|macro|AWC_COMMAND_ENABLE
mdefine_line|#define AWC_COMMAND_ENABLE&t;&t;0x001
DECL|macro|AWC_COMMAND_ENABLE_MAC
mdefine_line|#define AWC_COMMAND_ENABLE_MAC&t;&t;0x101
DECL|macro|AWC_COMMAND_ENABLE_RX
mdefine_line|#define AWC_COMMAND_ENABLE_RX&t;&t;0x201
DECL|macro|AWC_COMMAND_DISABLE
mdefine_line|#define AWC_COMMAND_DISABLE&t;&t;0x002
DECL|macro|AWC_COMMAND_LOSE_SYNC
mdefine_line|#define AWC_COMMAND_LOSE_SYNC&t;&t;0x003
DECL|macro|AWC_COMMAND_SOFT_RESET
mdefine_line|#define AWC_COMMAND_SOFT_RESET&t;&t;0x004
DECL|macro|AWC_COMMAND_HOST_SLEEP
mdefine_line|#define AWC_COMMAND_HOST_SLEEP&t;&t;0x085
DECL|macro|AWC_COMMAND_MAGIC_PACKET
mdefine_line|#define AWC_COMMAND_MAGIC_PACKET&t;0x006
DECL|macro|AWC_COMMAND_READ_CONF
mdefine_line|#define AWC_COMMAND_READ_CONF&t;&t;0x008
DECL|macro|AWC_COMMAND_SAVE_CONF
mdefine_line|#define AWC_COMMAND_SAVE_CONF&t;&t;0x108
DECL|macro|AWC_COMMAND_TX_ALLOC
mdefine_line|#define AWC_COMMAND_TX_ALLOC&t;&t;0x00A
DECL|macro|AWC_COMMAND_TX
mdefine_line|#define AWC_COMMAND_TX&t;&t;&t;0x00B
DECL|macro|AWC_COMMAND_DEALLOC
mdefine_line|#define AWC_COMMAND_DEALLOC&t;&t;0x00C
DECL|macro|AWC_COMMAND_NOOP
mdefine_line|#define AWC_COMMAND_NOOP&t;&t;0x010
DECL|macro|AWC_COMMAND_READ_RID
mdefine_line|#define AWC_COMMAND_READ_RID&t;&t;0x021
DECL|macro|AWC_COMMAND_WRITE_RID
mdefine_line|#define AWC_COMMAND_WRITE_RID&t;&t;0x121
DECL|macro|AWC_COMMAND_ALLOC
mdefine_line|#define AWC_COMMAND_ALLOC&t;&t;0x028
DECL|macro|AWC_COMMAND_PSP_NODES
mdefine_line|#define AWC_COMMAND_PSP_NODES&t;&t;0x030
DECL|macro|AWC_COMMAND_SET_PHY
mdefine_line|#define AWC_COMMAND_SET_PHY&t;&t;0x03E
DECL|macro|AWC_COMMAND_TX_TEST
mdefine_line|#define AWC_COMMAND_TX_TEST&t;&t;0x03F
DECL|macro|AWC_COMMAND_SLEEP
mdefine_line|#define AWC_COMMAND_SLEEP&t;&t;0x085
DECL|macro|awc_command_name_strings
mdefine_line|#define awc_command_name_strings {&bslash;&n;&t;{0x0000, 0x00FF,&quot;awc_command_NOP &quot; },&bslash;&n;&t;{0x0001, 0x00FF,&quot;awc_command_Enable_All &quot; },&bslash;&n;&t;{0x0101, 0x01FF,&quot;awc_command_Enable_MAC &quot; },&bslash;&n;&t;{0x0201, 0x01FF,&quot;awc_command_Enable_Rx &quot; },&bslash;&n;&t;{0x0002, 0x00FF,&quot;awc_command_Disable_MAC &quot; },&bslash;&n;&t;{0x0003, 0x00FF,&quot;awc_command_Sync_Loss &quot; },&bslash;&n;&t;{0x0004, 0x00FF,&quot;awc_command_Soft_Reset &quot; },&bslash;&n;&t;{0x0005, 0x00FF,&quot;awc_command_Host_Sleep &quot; },&bslash;&n;&t;{0x0006, 0x00FF,&quot;awc_command_Magic_Packet &quot; },&bslash;&n;&t;{0x0008, 0x00FF,&quot;awc_command_Read_Configuration &quot; },&bslash;&n;&t;{0x000A, 0x00FF,&quot;awc_command_Allocate_TX_Buff &quot; },&bslash;&n;&t;{0x000B, 0x00FF,&quot;awc_command_TX &quot; },&bslash;&n;&t;{0x000C, 0x00FF,&quot;awc_command_Deallocate &quot; },&bslash;&n;&t;{0x0010, 0x00FF,&quot;awc_command_NOP2 &quot; },&bslash;&n;&t;{0x0021, 0x00FF,&quot;awc_command_Read_RID &quot; },&bslash;&n;&t;{0x0121, 0x01FF,&quot;awc_command_Write_RID &quot; },&bslash;&n;&t;{0x0028, 0x00FF,&quot;awc_command_Allocate_Buff &quot; },&bslash;&n;&t;{0x0030, 0x00FF,&quot;awc_command_PSP_Nodes &quot; },&bslash;&n;&t;{0x003E, 0x00FF,&quot;awc_command_Set_Phy_register &quot; },&bslash;&n;&t;{0x003F, 0x00FF,&quot;awc_command_TX_Test &quot; },&bslash;&n;&t;{0x013F, 0x01FF,&quot;awc_command_RX_Test &quot; },&bslash;&n;&t;{0x0085, 0x00FF,&quot;awc_command_Sleep &quot; },&bslash;&n;&t;{0x0108, 0x01FF,&quot;awc_command_Save_Configuration &quot; },&bslash;&n;&t;{0x0000, 0x00FF, NULL}&bslash;&n;};
multiline_comment|/***************************** STATUSES */
DECL|macro|awc_reply_success
mdefine_line|#define awc_reply_success 0x0000
DECL|macro|awc_reply_error_strings
mdefine_line|#define awc_reply_error_strings {&bslash;&n;   { 0x0000, 0x00FF,&quot;    Success&quot;},&bslash;&n;   { 0x0001, 0x00FF,&quot;    Illegal command.&quot;},&bslash;&n;   { 0x0002, 0x00FF,&quot;    Illegal format.&quot;},&bslash;&n;   { 0x0003, 0x00FF,&quot;    Invalid FID.&quot;},&bslash;&n;   { 0x0004, 0x00FF,&quot;    Invalid RID.&quot;},&bslash;&n;   { 0x0005, 0x00FF,&quot;    Too Large&quot;},&bslash;&n;   { 0x0006, 0x00FF,&quot;    MAC is not disabled.&quot;},&bslash;&n;   { 0x0007, 0x00FF,&quot;    Alloc is still busy processing previous alloc&quot;},&bslash;&n;   { 0x0008, 0x00FF,&quot;    Invalid Mode Field&quot;},&bslash;&n;   { 0x0009, 0x00FF,&quot;    Tx is not allowed in monitor mode&quot;},&bslash;&n;   { 0x000A, 0x00FF,&quot;    Loop test or memory test error&quot;},&bslash;&n;   { 0x000B, 0x00FF,&quot;    Cannot read this RID.&quot;},&bslash;&n;   { 0x000C, 0x00FF,&quot;    Cannot write to this RID.&quot;},&bslash;&n;   { 0x000D, 0x00FF,&quot;    Tag not found.&quot;},&bslash;&n;   { 0x0080, 0x00FF,&quot;    Config mode is invalid.&quot;},&bslash;&n;   { 0x0081, 0x00FF,&quot;    Config hop interval is invalid.&quot;},&bslash;&n;   { 0x0082, 0x00FF,&quot;    Config beacon interval is invalid.&quot;},&bslash;&n;   { 0x0083, 0x00FF,&quot;    Config receive mode is invalid.&quot;},&bslash;&n;   { 0x0084, 0x00FF,&quot;    Config MAC address is invalid.&quot;},&bslash;&n;   { 0x0085, 0x00FF,&quot;    Config rates are invalid.&quot;},&bslash;&n;   { 0x0086, 0x00FF,&quot;    Config ordering field is invalid.&quot;},&bslash;&n;   { 0x0087, 0x00FF,&quot;    Config scan mode is invalid.&quot;},&bslash;&n;   { 0x0088, 0x00FF,&quot;    Config authentication type is invalid.&quot;},&bslash;&n;   { 0x0089, 0x00FF,&quot;    Config power save mode is invalid.&quot;},&bslash;&n;   { 0x008A, 0x00FF,&quot;    Config radio type is invalid.&quot;},&bslash;&n;   { 0x008B, 0x00FF,&quot;    Config diversity is invalid.&quot;},&bslash;&n;   { 0x008C, 0x00FF,&quot;    Config SSID list is invalid.&quot;},&bslash;&n;   { 0x008D, 0x00FF,&quot;    Config specified AP list is invalid.&quot;},&bslash;&n;   { 0x0000, 0x00FF, NULL}&bslash;&n;};
DECL|macro|awc_reply_command_failed
mdefine_line|#define awc_reply_command_failed( status) ((status &amp; 0x7F00) == 0x7F)
multiline_comment|/*************************   PHY and TEST commands   ****************/
singleline_comment|// this might be wrong and reading is not implemented(was not in spec properly)
DECL|macro|awc_Set_PLCP_Word
mdefine_line|#define awc_Set_PLCP_Word(PLCP_Word)&bslash;&n;&t;awc_command_Set_Phy_register(base,0x8000,0 ,PLCP_Word)
DECL|macro|awc_Set_TX_Test_Freq
mdefine_line|#define awc_Set_TX_Test_Freq(Tx_Test_Freq)&bslash;&n;&t;awc_command_Set_Phy_register(base,0x8002,0 ,Tx_Test_Freq)
DECL|macro|awc_Set_Tx_Power
mdefine_line|#define awc_Set_Tx_Power(Tx_Power)&bslash;&n;&t;awc_command_Set_Phy_register(base,0x8004,0 ,Tx_Power)
DECL|macro|awc_Set_RSSI_Treshold
mdefine_line|#define awc_Set_RSSI_Treshold(RSSI_Treshold)&bslash;&n;&t;awc_command_Set_Phy_register(base,0x8006,0 ,RSSI_Treshold)
DECL|macro|awc_Get_PLCP_Word
mdefine_line|#define awc_Get_PLCP_Word(PLCP_Word)&bslash;&n;&t;awc_command_Set_Phy_register(base,0x8000,0 ,0)
DECL|macro|awc_Get_TX_Test_Freq
mdefine_line|#define awc_Get_TX_Test_Freq(Tx_Test_Freq)&bslash;&n;&t;awc_command_Set_Phy_register(base,0x8002,0 ,0)
DECL|macro|awc_Get_Tx_Power
mdefine_line|#define awc_Get_Tx_Power(Tx_Power)&bslash;&n;&t;awc_command_Set_Phy_register(base,0x8004,0 ,0)
DECL|macro|awc_Get_RSSI_Treshold
mdefine_line|#define awc_Get_RSSI_Treshold(RSSI_Treshold)&bslash;&n;&t;awc_command_Set_Phy_register(base,0x8006,0 ,0)
DECL|macro|awc_tx_test_code_end
mdefine_line|#define awc_tx_test_code_end &t;0x0000   
singleline_comment|//  Ends the transmitter test
DECL|macro|awc_tx_test_code_loop
mdefine_line|#define awc_tx_test_code_loop&t;0x0001   
singleline_comment|//  Loop back to the beginning of the commands
DECL|macro|awc_tx_test_code_start
mdefine_line|#define awc_tx_test_code_start&t;0x0002   
singleline_comment|//  Start transmitting
DECL|macro|awc_tx_test_code_stop
mdefine_line|#define awc_tx_test_code_stop&t;0x0003   
singleline_comment|//  Stop transmitting
DECL|macro|awc_tx_test_code_delayu
mdefine_line|#define awc_tx_test_code_delayu 0x0004   
singleline_comment|//  Delay for N usec where N is the next word
DECL|macro|awc_tx_test_code_delayk
mdefine_line|#define awc_tx_test_code_delayk 0x0005   
singleline_comment|//  Delay for N Kusec where N is the next word
DECL|macro|awc_tx_test_code_next
mdefine_line|#define awc_tx_test_code_next&t;0x0006   
singleline_comment|//  Go to the next frequency in the frequency RID
DECL|macro|awc_tx_test_code_rx
mdefine_line|#define awc_tx_test_code_rx&t;0x0007   
singleline_comment|//  Start receive mode
DECL|macro|awc_tx_test_code_strings
mdefine_line|#define awc_tx_test_code_strings {&bslash;&n;{  awc_tx_test_code_end , &t;0x000f ,&quot;    Ends the transmitter test&quot;},&bslash;&n;{  awc_tx_test_code_loop , &t;0x000f ,&quot;     Loop back to the beginning of the commands&quot;},&bslash;&n;{  awc_tx_test_code_start , &t;0x000f ,&quot;    Start transmitting&quot;},&bslash;&n;{  awc_tx_test_code_stop ,&t;0x000f ,&quot;    Stop transmitting&quot;},&bslash;&n;{  awc_tx_test_code_delayu , &t;0x000f ,&quot;    Delay for N usec where N is the next word&quot;},&bslash;&n;{  awc_tx_test_code_delayk , &t;0x000f ,&quot;    Delay for N Kusec where N is the next word&quot;},&bslash;&n;{  awc_tx_test_code_next , &t;0x000f ,&quot;    Go to the next frequency in the frequency RID&quot;},&bslash;&n;{  awc_tx_test_code_rx &t;,&t;0x000f ,&quot;    Start receive mode&quot;},&bslash;&n;{ &t;&t;&t;0   , 0x000f ,NULL}&bslash;&n;};
DECL|macro|AWC_COMMSTAT_HARD_RESET
mdefine_line|#define AWC_COMMSTAT_HARD_RESET&t;&t;0x0000001
DECL|macro|AWC_COMMSTAT_WAKE
mdefine_line|#define AWC_COMMSTAT_WAKE&t;&t;0x0000002
DECL|macro|AWC_COMMSTAT_SOFT_RESET
mdefine_line|#define AWC_COMMSTAT_SOFT_RESET&t;&t;0x0000004
DECL|macro|AWC_COMMSTAT_CONFIGURE
mdefine_line|#define AWC_COMMSTAT_CONFIGURE&t;&t;0x0000008
DECL|macro|AWC_COMMSTAT_READ_CONF
mdefine_line|#define AWC_COMMSTAT_READ_CONF&t;&t;0x0000010
DECL|macro|AWC_COMMSTAT_SAVE_CONF
mdefine_line|#define AWC_COMMSTAT_SAVE_CONF&t;&t;0x0000020
DECL|macro|AWC_COMMSTAT_DEALLOC
mdefine_line|#define AWC_COMMSTAT_DEALLOC&t;&t;0x0000040
DECL|macro|AWC_COMMSTAT_ALLOC_TX
mdefine_line|#define AWC_COMMSTAT_ALLOC_TX&t;&t;0x0000080
DECL|macro|AWC_COMMSTAT_ALLOC_TEST
mdefine_line|#define AWC_COMMSTAT_ALLOC_TEST&t;&t;0x0000100
DECL|macro|AWC_COMMSTAT_ENABLE_MAC
mdefine_line|#define AWC_COMMSTAT_ENABLE_MAC&t;&t;0x0000200
DECL|macro|AWC_COMMSTAT_ENABLE_RX
mdefine_line|#define AWC_COMMSTAT_ENABLE_RX&t;&t;0x0000400
DECL|macro|AWC_COMMSTAT_DISABLE_MAC
mdefine_line|#define AWC_COMMSTAT_DISABLE_MAC&t;0x0000800
DECL|macro|AWC_COMMSTAT_RX_ACK
mdefine_line|#define AWC_COMMSTAT_RX_ACK&t;&t;0x0001000
DECL|macro|AWC_COMMSTAT_TX_ACK
mdefine_line|#define AWC_COMMSTAT_TX_ACK&t;&t;0x0002000
DECL|macro|AWC_COMMSTAT_AWAKEN_ACK
mdefine_line|#define AWC_COMMSTAT_AWAKEN_ACK&t;&t;0x0004000
DECL|macro|AWC_COMMSTAT_TX_FAIL_ACK
mdefine_line|#define AWC_COMMSTAT_TX_FAIL_ACK&t;0x0008000
DECL|macro|AWC_COMMSTAT_LINK_ACK
mdefine_line|#define AWC_COMMSTAT_LINK_ACK&t;&t;0x0010000
DECL|macro|AWC_COMMSTAT_CLR_CMD
mdefine_line|#define AWC_COMMSTAT_CLR_CMD&t;&t;0x0020000
DECL|macro|AWC_COMMSTAT_ALLOC_ACK
mdefine_line|#define AWC_COMMSTAT_ALLOC_ACK&t;&t;0x0040000
DECL|macro|AWC_COMMSTAT_HOST_SLEEP
mdefine_line|#define AWC_COMMSTAT_HOST_SLEEP&t;&t;0x0080000
DECL|macro|AWC_COMMSTAT_RX
mdefine_line|#define AWC_COMMSTAT_RX&t;&t;&t;0x0100000
DECL|macro|AWC_COMMSTAT_TX
mdefine_line|#define AWC_COMMSTAT_TX&t;&t;&t;0x0200000
DECL|macro|AWC_COMMSTAT_SLEEP
mdefine_line|#define AWC_COMMSTAT_SLEEP&t;&t;0x0400000
DECL|macro|AWC_COMMSTAT_PSP_NODES
mdefine_line|#define AWC_COMMSTAT_PSP_NODES&t;&t;0x0800000
DECL|macro|AWC_COMMSTAT_SET_TX_POWER
mdefine_line|#define AWC_COMMSTAT_SET_TX_POWER &t;0x1000000
multiline_comment|/*****************************     R  I  D&t;***************/
DECL|macro|AWC_NOF_RIDS
mdefine_line|#define AWC_NOF_RIDS&t;18
r_extern
r_int
id|awc_rid_setup
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
DECL|struct|aironet4500_rid_selector
r_struct
id|aironet4500_rid_selector
(brace
DECL|member|selector
r_const
id|u16
id|selector
suffix:semicolon
DECL|member|MAC_Disable_at_write
r_const
r_int
id|MAC_Disable_at_write
suffix:colon
l_int|1
suffix:semicolon
DECL|member|read_only
r_const
r_int
id|read_only
suffix:colon
l_int|1
suffix:semicolon
DECL|member|may_change
r_const
r_int
id|may_change
suffix:colon
l_int|1
suffix:semicolon
DECL|member|name
r_const
r_char
op_star
id|name
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_General_Config
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_SSID_list
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_AP_list
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_Driver_name
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_Encapsulation
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_Active_Config
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_Capabilities
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_AP_Info
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_Radio_Info
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_Status
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_Modulation
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_WEP_volatile
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_WEP_nonvolatile
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_16_stats
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_16_stats_delta
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_16_stats_clear
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_32_stats
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_32_stats_delta
suffix:semicolon
r_extern
r_const
r_struct
id|aironet4500_rid_selector
id|aironet4500_RID_Select_32_stats_clear
suffix:semicolon
DECL|macro|awc_def_gen_RID
mdefine_line|#define awc_def_gen_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_General_Config,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_SSID_RID
mdefine_line|#define awc_def_SSID_RID(offset,name, bits,mask,value,value_name)&bslash;&n;  {&amp;aironet4500_RID_Select_SSID_list,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_AP_List_RID
mdefine_line|#define awc_def_AP_List_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_AP_list,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_Dname_RID
mdefine_line|#define awc_def_Dname_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_Driver_name,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_act_RID
mdefine_line|#define awc_def_act_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_Active_Config,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_Cap_RID
mdefine_line|#define awc_def_Cap_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_Capabilities,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_AP_RID
mdefine_line|#define awc_def_AP_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_AP_Info,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_Radio_RID
mdefine_line|#define awc_def_Radio_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_Radio_Info,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_Stat_RID
mdefine_line|#define awc_def_Stat_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_Status,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_Enc_RID
mdefine_line|#define awc_def_Enc_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_Encapsulation,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_WEPv_RID
mdefine_line|#define awc_def_WEPv_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_WEP_volatile,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_WEPnv_RID
mdefine_line|#define awc_def_WEPnv_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_WEP_nonvolatile,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_Modulation_RID
mdefine_line|#define awc_def_Modulation_RID(offset,name, bits,mask,value,value_name)&bslash;&n; {&amp;aironet4500_RID_Select_Modulation,offset, bits,1,1,0,0, mask, value, name, value_name}
DECL|macro|awc_def_Stats_RID
mdefine_line|#define awc_def_Stats_RID(o16,offset,name, value_name)&bslash;&n; {&amp;aironet4500_RID_Select_32_stats,offset, 32,1,1,0,0, 0xffffffff, 0, name, value_name}
DECL|macro|awc_def_Stats_delta_RID
mdefine_line|#define awc_def_Stats_delta_RID(o16,offset,name, value_name)&bslash;&n; {&amp;aironet4500_RID_Select_32_stats_delta,offset, 32,1,1,0,0, 0xffffffff, 0, name, value_name}
DECL|macro|awc_def_Stats_clear_RID
mdefine_line|#define awc_def_Stats_clear_RID(o16,offset,name, value_name)&bslash;&n; {&amp;aironet4500_RID_Select_32_stats_delta,offset,32,1,1,0,0, 0xffffffff,  0, name,value_name}
DECL|macro|awc_def_Stats16_RID
mdefine_line|#define awc_def_Stats16_RID(offset,o32,name, value_name)&bslash;&n; {&amp;aironet4500_RID_Select_16_stats,offset, 16,1,1,0,0, 0xffffffff, 0, name, value_name}
DECL|macro|awc_def_Stats16_delta_RID
mdefine_line|#define awc_def_Stats16_delta_RID(offset,o32,name, value_name)&bslash;&n; {&amp;aironet4500_RID_Select_16_stats_delta,offset, 16,1,1,0,0, 0xffffffff,  0, name,value_name}
DECL|macro|awc_def_Stats16_clear_RID
mdefine_line|#define awc_def_Stats16_clear_RID(offset,o32,name, value_name)&bslash;&n; {&amp;aironet4500_RID_Select_16_stats_delta,offset, 16,1,1,0,0, 0xffffffff,  0, name,value_name}
DECL|macro|aironet4500_RID_Select_strings
mdefine_line|#define aironet4500_RID_Select_strings {&bslash;&n;{ 0xFF10, 0xffff, &quot;General Configuration&quot;},&bslash;&n;{ 0xFF11, 0xffff, &quot;Valid SSID list&quot; },&bslash;&n;{ 0xFF12, 0xffff, &quot;Valid AP list&quot;},&bslash;&n;{ 0xFF13, 0xffff, &quot;Driver name&quot;},&bslash;&n;{ 0xFF14, 0xffff, &quot;Ethernet Protocol&quot;},&bslash;&n;{ 0xFF15, 0xffff, &quot;WEP volatile&quot;},&bslash;&n;{ 0xFF16, 0xffff, &quot;WEP nonvolatile&quot;},&bslash;&n;{ 0xFF17, 0xffff, &quot;Modulation&quot;},&bslash;&n;{ 0xFF20, 0xffff, &quot;Actual Configuration&quot;},&bslash;&n;{ 0xFF00, 0xffff, &quot;Capabilities&quot;},&bslash;&n;{ 0xFF01, 0xffff, &quot;AP Info&quot;},&bslash;&n;{ 0xFF02, 0xffff, &quot;Radio Info&quot;},&bslash;&n;{ 0xFF50, 0xffff, &quot;Status&quot;},&bslash;&n;{ 0xFF60, 0xffff, &quot;Cumulative 16-bit Statistics&quot;},&bslash;&n;{ 0xFF61, 0xffff, &quot;Delta 16-bit Statistics&quot;},&bslash;&n;{ 0xFF62, 0xffff, &quot;Delta 16-bit Statistics and Clear&quot;},&bslash;&n;{ 0xFF68, 0xffff, &quot;Cumulative 32-bit Statistics&quot;},&bslash;&n;{ 0xFF69, 0xffff, &quot;Delta 32-bit Statistics &quot;},&bslash;&n;{ 0xFF6A, 0xffff, &quot;Delta 32-bit Statistics and Clear&quot;},&bslash;&n;{ 0x0000, 0xffff, NULL}&bslash;&n;}
DECL|struct|aironet4500_RID
r_struct
id|aironet4500_RID
(brace
DECL|member|selector
r_const
r_struct
id|aironet4500_rid_selector
op_star
id|selector
suffix:semicolon
DECL|member|offset
r_const
id|u32
id|offset
suffix:semicolon
DECL|member|bits
r_const
id|u8
id|bits
suffix:semicolon
DECL|member|array
r_const
id|u8
id|array
suffix:semicolon
DECL|member|units
r_const
id|u32
id|units
suffix:semicolon
DECL|member|read_only
r_const
r_int
id|read_only
suffix:colon
l_int|1
suffix:semicolon
DECL|member|null_terminated
r_const
r_int
id|null_terminated
suffix:colon
l_int|1
suffix:semicolon
DECL|member|mask
r_const
id|u32
id|mask
suffix:semicolon
DECL|member|value
r_const
id|u32
id|value
suffix:semicolon
DECL|member|name
r_const
r_char
op_star
id|name
suffix:semicolon
DECL|member|value_name
r_const
r_char
op_star
id|value_name
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|aironet4500_RID_names
r_struct
id|aironet4500_RID_names
(brace
DECL|member|rid
r_struct
id|aironet4500_RID
id|rid
suffix:semicolon
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|aironet4500_RID_names_values
r_struct
id|aironet4500_RID_names_values
(brace
DECL|member|rid
r_struct
id|aironet4500_RID
id|rid
suffix:semicolon
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|mask
id|u32
id|mask
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|awc_rid_dir
r_struct
id|awc_rid_dir
(brace
DECL|member|selector
r_const
r_struct
id|aironet4500_rid_selector
op_star
id|selector
suffix:semicolon
DECL|member|size
r_const
r_int
id|size
suffix:semicolon
DECL|member|rids
r_const
r_struct
id|aironet4500_RID
op_star
id|rids
suffix:semicolon
DECL|member|dev
r_struct
id|net_device
op_star
id|dev
suffix:semicolon
DECL|member|buff
r_void
op_star
id|buff
suffix:semicolon
DECL|member|bufflen
r_int
id|bufflen
suffix:semicolon
singleline_comment|// just checking
)brace
suffix:semicolon
r_extern
r_int
id|awc_nof_rids
suffix:semicolon
r_extern
r_struct
id|awc_rid_dir
id|awc_rids
(braket
)braket
suffix:semicolon
DECL|struct|awc_private
r_struct
id|awc_private
(brace
DECL|member|node
id|dev_node_t
id|node
suffix:semicolon
singleline_comment|// somewhere back in times PCMCIA needed that
DECL|member|dummy_test
r_int
id|dummy_test
suffix:semicolon
singleline_comment|// left for cleanup
singleline_comment|// card rid inmemory copy
DECL|member|config
r_struct
id|awc_config
id|config
suffix:semicolon
singleline_comment|// card RID mirrors
DECL|member|general_config
r_struct
id|awc_config
id|general_config
suffix:semicolon
singleline_comment|// 
DECL|member|SSIDs
r_struct
id|awc_SSIDs
id|SSIDs
suffix:semicolon
DECL|member|fixed_APs
r_struct
id|awc_fixed_APs
id|fixed_APs
suffix:semicolon
DECL|member|driver_name
r_struct
id|awc_driver_name
id|driver_name
suffix:semicolon
DECL|member|enc_trans
r_struct
id|awc_enc_trans
id|enc_trans
suffix:semicolon
DECL|member|capabilities
r_struct
id|awc_cap
id|capabilities
suffix:semicolon
DECL|member|status
r_struct
id|awc_status
id|status
suffix:semicolon
DECL|member|AP
r_struct
id|awc_AP
id|AP
suffix:semicolon
DECL|member|statistics
r_struct
id|awc_Statistics_32
id|statistics
suffix:semicolon
DECL|member|statistics_delta
r_struct
id|awc_Statistics_32
id|statistics_delta
suffix:semicolon
DECL|member|statistics_delta_clear
r_struct
id|awc_Statistics_32
id|statistics_delta_clear
suffix:semicolon
DECL|member|statistics16
r_struct
id|awc_Statistics_16
id|statistics16
suffix:semicolon
DECL|member|statistics16_delta
r_struct
id|awc_Statistics_16
id|statistics16_delta
suffix:semicolon
DECL|member|statistics16_delta_clear
r_struct
id|awc_Statistics_16
id|statistics16_delta_clear
suffix:semicolon
DECL|member|wep_volatile
r_struct
id|awc_wep_key
id|wep_volatile
suffix:semicolon
DECL|member|wep_nonvolatile
r_struct
id|awc_wep_key
id|wep_nonvolatile
suffix:semicolon
DECL|member|modulation
r_struct
id|awc_modulation
id|modulation
suffix:semicolon
singleline_comment|// here are just references to rids
DECL|member|rid_dir
r_struct
id|awc_rid_dir
id|rid_dir
(braket
id|AWC_NOF_RIDS
)braket
suffix:semicolon
DECL|member|rids_read
r_int
id|rids_read
suffix:semicolon
DECL|member|bap0
r_struct
id|awc_bap
id|bap0
suffix:semicolon
DECL|member|bap1
r_struct
id|awc_bap
id|bap1
suffix:semicolon
DECL|member|sleeping_bap
r_int
id|sleeping_bap
suffix:semicolon
DECL|member|tx_small_ready
r_struct
id|awc_fid_queue
id|tx_small_ready
suffix:semicolon
DECL|member|tx_large_ready
r_struct
id|awc_fid_queue
id|tx_large_ready
suffix:semicolon
DECL|member|tx_post_process
r_struct
id|awc_fid_queue
id|tx_post_process
suffix:semicolon
DECL|member|tx_in_transmit
r_struct
id|awc_fid_queue
id|tx_in_transmit
suffix:semicolon
DECL|member|queues_lock
id|my_spinlock_t
id|queues_lock
suffix:semicolon
DECL|member|rx_ready
r_struct
id|awc_fid_queue
id|rx_ready
suffix:semicolon
DECL|member|rx_post_process
r_struct
id|awc_fid_queue
id|rx_post_process
suffix:semicolon
DECL|member|tx_buff_semaphore
r_struct
id|semaphore
id|tx_buff_semaphore
suffix:semicolon
DECL|member|tx_buffs_in_use
r_volatile
r_int
id|tx_buffs_in_use
suffix:semicolon
DECL|member|tx_small_buffs_in_use
r_volatile
r_int
id|tx_small_buffs_in_use
suffix:semicolon
DECL|member|tx_buffs_total
r_volatile
r_int
id|tx_buffs_total
suffix:semicolon
DECL|member|tx_small_buffs_total
r_volatile
r_int
id|tx_small_buffs_total
suffix:semicolon
DECL|member|large_buff_mem
r_int
id|large_buff_mem
suffix:semicolon
DECL|member|small_buff_no
r_int
id|small_buff_no
suffix:semicolon
DECL|member|mac_enabled
r_volatile
r_int
id|mac_enabled
suffix:semicolon
DECL|member|link_status
id|u16
id|link_status
suffix:semicolon
DECL|member|link_status_changed
id|u8
id|link_status_changed
suffix:semicolon
DECL|member|ejected
r_volatile
r_int
id|ejected
suffix:semicolon
DECL|member|bh_running
r_volatile
r_int
id|bh_running
suffix:semicolon
DECL|member|bh_active
r_volatile
r_int
id|bh_active
suffix:semicolon
DECL|member|tx_chain_active
r_volatile
r_int
id|tx_chain_active
suffix:semicolon
DECL|member|enabled_interrupts
r_volatile
id|u16
id|enabled_interrupts
suffix:semicolon
DECL|member|waiting_interrupts
r_volatile
id|u16
id|waiting_interrupts
suffix:semicolon
DECL|member|interrupt_count
r_volatile
r_int
id|interrupt_count
suffix:semicolon
singleline_comment|// Command serialize stuff
singleline_comment|//changed to spinlock        struct semaphore &t;command_semaphore;
DECL|member|both_bap_spinlock
id|my_spinlock_t
id|both_bap_spinlock
suffix:semicolon
singleline_comment|// on SMP, card should theorethically live without that
DECL|member|both_bap_spinlock_flags
r_int
r_int
id|both_bap_spinlock_flags
suffix:semicolon
DECL|member|bap_setup_spinlock
id|my_spinlock_t
id|bap_setup_spinlock
suffix:semicolon
singleline_comment|// on SMP, card should theoretically live without that
DECL|member|bap_setup_spinlock_flags
r_int
r_int
id|bap_setup_spinlock_flags
suffix:semicolon
DECL|member|command_issuing_spinlock
id|my_spinlock_t
id|command_issuing_spinlock
suffix:semicolon
DECL|member|command_issuing_spinlock_flags
r_int
r_int
id|command_issuing_spinlock_flags
suffix:semicolon
DECL|member|interrupt_spinlock
id|my_spinlock_t
id|interrupt_spinlock
suffix:semicolon
DECL|member|unlock_command_postponed
r_volatile
r_int
id|unlock_command_postponed
suffix:semicolon
DECL|member|cmd
r_struct
id|awc_command
id|cmd
suffix:semicolon
DECL|member|async_command_start
r_int
r_int
id|async_command_start
suffix:semicolon
DECL|member|command_semaphore_on
r_volatile
r_int
id|command_semaphore_on
suffix:semicolon
DECL|member|immediate_bh
r_struct
id|tq_struct
id|immediate_bh
suffix:semicolon
DECL|member|process_tx_results
r_volatile
r_int
id|process_tx_results
suffix:semicolon
DECL|member|p2p
id|u8
id|p2p
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|bssid
id|u8
id|bssid
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|p2p_uc
r_int
id|p2p_uc
suffix:semicolon
DECL|member|p2p_found
r_int
id|p2p_found
suffix:semicolon
DECL|member|p802_11_send
r_int
id|p802_11_send
suffix:semicolon
DECL|member|simple_bridge
r_int
id|simple_bridge
suffix:semicolon
DECL|member|force_rts_on_shorter
r_int
id|force_rts_on_shorter
suffix:semicolon
DECL|member|force_tx_rate
r_int
id|force_tx_rate
suffix:semicolon
DECL|member|ip_tos_reliability_rts
r_int
id|ip_tos_reliability_rts
suffix:semicolon
DECL|member|ip_tos_troughput_no_retries
r_int
id|ip_tos_troughput_no_retries
suffix:semicolon
DECL|member|full_stats
r_int
id|full_stats
suffix:semicolon
DECL|member|debug
r_int
id|debug
suffix:semicolon
DECL|member|stats
r_struct
id|net_device_stats
id|stats
suffix:semicolon
DECL|member|proc_table
r_struct
id|ctl_table
op_star
id|proc_table
suffix:semicolon
DECL|member|bus
r_void
op_star
id|bus
suffix:semicolon
DECL|member|card_type
r_int
id|card_type
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|awc_init
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|awc_reset
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_config
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_open
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|awc_tx_timeout
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_start_xmit
c_func
(paren
r_struct
id|sk_buff
op_star
comma
r_struct
id|net_device
op_star
)paren
suffix:semicolon
r_extern
r_void
id|awc_interrupt
c_func
(paren
r_int
id|irq
comma
r_void
op_star
id|dev_id
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_struct
id|net_device_stats
op_star
id|awc_get_stats
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_rx
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|rx_fid
)paren
suffix:semicolon
r_extern
r_void
id|awc_set_multicast_list
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_change_mtu
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_int
id|new_mtu
)paren
suffix:semicolon
r_extern
r_int
id|awc_close
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_private_init
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_register_proc
c_func
(paren
r_int
(paren
op_star
id|awc_proc_set_device
)paren
(paren
r_int
)paren
comma
r_int
(paren
op_star
id|awc_proc_unset_device
)paren
(paren
r_int
)paren
)paren
suffix:semicolon
r_extern
r_int
id|awc_unregister_proc
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
(paren
op_star
id|awc_proc_set_fun
)paren
(paren
r_int
)paren
suffix:semicolon
r_extern
r_int
(paren
op_star
id|awc_proc_unset_fun
)paren
(paren
r_int
)paren
suffix:semicolon
r_extern
r_int
id|awc_interrupt_process
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_readrid
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|aironet4500_RID
op_star
id|rid
comma
r_void
op_star
id|pBuf
)paren
suffix:semicolon
r_extern
r_int
id|awc_writerid
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|aironet4500_RID
op_star
id|rid
comma
r_void
op_star
id|pBuf
)paren
suffix:semicolon
r_extern
r_int
id|awc_readrid_dir
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_rid_dir
op_star
id|rid
)paren
suffix:semicolon
r_extern
r_int
id|awc_writerid_dir
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_rid_dir
op_star
id|rid
)paren
suffix:semicolon
r_extern
r_int
id|awc_tx_alloc
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_tx_dealloc
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_struct
id|awc_fid
op_star
id|awc_tx_fid_lookup
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
id|u16
id|fid
)paren
suffix:semicolon
r_extern
r_int
id|awc_issue_soft_reset
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_issue_noop
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_dump_registers
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
r_int
id|awc_issue_command_and_block
c_func
(paren
r_struct
id|awc_command
op_star
id|cmd
)paren
suffix:semicolon
r_extern
r_int
id|awc_enable_MAC
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_disable_MAC
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_read_all_rids
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_write_all_rids
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_receive_packet
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_transmit_packet
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|tx_buff
)paren
suffix:semicolon
r_extern
r_int
id|awc_tx_complete_check
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_interrupt_process
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|awc_bh
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_802_11_find_copy_path
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|rx_buff
)paren
suffix:semicolon
r_extern
r_void
id|awc_802_11_router_rx
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|rx_buff
)paren
suffix:semicolon
r_extern
r_int
id|awc_802_11_tx_find_path_and_post
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_void
id|awc_802_11_after_tx_packet_to_card_write
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|tx_buff
)paren
suffix:semicolon
r_extern
r_void
id|awc_802_11_after_failed_tx_packet_to_card_write
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|tx_buff
)paren
suffix:semicolon
r_extern
r_void
id|awc_802_11_after_tx_complete
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|tx_buff
)paren
suffix:semicolon
r_extern
r_void
id|awc_802_11_failed_rx_copy
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|rx_buff
)paren
suffix:semicolon
r_extern
r_int
id|awc_tx_alloc
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_tx_dealloc_fid
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
r_struct
id|awc_fid
op_star
id|fid
)paren
suffix:semicolon
r_extern
r_int
id|awc_tx_dealloc
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_struct
id|awc_fid
op_star
id|awc_tx_fid_lookup_and_remove
c_func
(paren
r_struct
id|net_device
op_star
id|dev
comma
id|u16
id|fid_handle
)paren
suffix:semicolon
r_extern
r_int
id|awc_queues_init
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_queues_destroy
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_rids_setup
c_func
(paren
r_struct
id|net_device
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|awc_debug
suffix:semicolon
r_extern
r_int
id|bap_sleep
suffix:semicolon
r_extern
r_int
id|bap_sleep_after_setup
suffix:semicolon
r_extern
r_int
id|sleep_before_command
suffix:semicolon
r_extern
r_int
id|bap_sleep_before_write
suffix:semicolon
r_extern
r_int
id|sleep_in_command
suffix:semicolon
r_extern
r_int
id|both_bap_lock
suffix:semicolon
r_extern
r_int
id|bap_setup_spinlock
suffix:semicolon
r_extern
r_int
id|tx_queue_len
suffix:semicolon
r_extern
r_int
id|tx_rate
suffix:semicolon
r_extern
r_int
id|awc_full_stats
suffix:semicolon
DECL|macro|MAX_AWCS
mdefine_line|#define MAX_AWCS&t;4
r_extern
r_struct
id|net_device
op_star
id|aironet4500_devices
(braket
id|MAX_AWCS
)braket
suffix:semicolon
DECL|macro|AWC_DEBUG
mdefine_line|#define AWC_DEBUG 1
macro_line|#ifdef AWC_DEBUG
DECL|macro|DEBUG
mdefine_line|#define DEBUG(a,args...) if (awc_debug &amp; a) printk( args)
DECL|macro|AWC_ENTRY_EXIT_DEBUG
mdefine_line|#define AWC_ENTRY_EXIT_DEBUG(a)  if (awc_debug &amp; 8) printk( a)
macro_line|#else
DECL|macro|DEBUG
mdefine_line|#define DEBUG(a, args...)
DECL|macro|AWC_ENTRY_EXIT_DEBUG
mdefine_line|#define AWC_ENTRY_EXIT_DEBUG(a)
macro_line|#endif
macro_line|#endif /* AIRONET4500_H */
eof
