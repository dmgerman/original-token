multiline_comment|/*****************************************************************&n; *&n; *  defines for 3Com Etherlink Plus adapter&n; *&n; *****************************************************************/
DECL|macro|ELP_DMA
mdefine_line|#define ELP_DMA       6
DECL|macro|ELP_RX_PCBS
mdefine_line|#define ELP_RX_PCBS   4
DECL|macro|ELP_MAX_CARDS
mdefine_line|#define ELP_MAX_CARDS 4
multiline_comment|/*&n; * I/O register offsets&n; */
DECL|macro|PORT_COMMAND
mdefine_line|#define&t;PORT_COMMAND&t;0x00&t;/* read/write, 8-bit */
DECL|macro|PORT_STATUS
mdefine_line|#define&t;PORT_STATUS&t;0x02&t;/* read only, 8-bit */
DECL|macro|PORT_AUXDMA
mdefine_line|#define&t;PORT_AUXDMA&t;0x02&t;/* write only, 8-bit */
DECL|macro|PORT_DATA
mdefine_line|#define&t;PORT_DATA&t;0x04&t;/* read/write, 16-bit */
DECL|macro|PORT_CONTROL
mdefine_line|#define&t;PORT_CONTROL&t;0x06&t;/* read/write, 8-bit */
DECL|macro|ELP_IO_EXTENT
mdefine_line|#define ELP_IO_EXTENT&t;0x10&t;/* size of used IO registers */
multiline_comment|/*&n; * host control registers bits&n; */
DECL|macro|ATTN
mdefine_line|#define&t;ATTN&t;0x80&t;/* attention */
DECL|macro|FLSH
mdefine_line|#define&t;FLSH&t;0x40&t;/* flush data register */
DECL|macro|DMAE
mdefine_line|#define DMAE&t;0x20&t;/* DMA enable */
DECL|macro|DIR
mdefine_line|#define DIR&t;0x10&t;/* direction */
DECL|macro|TCEN
mdefine_line|#define&t;TCEN&t;0x08&t;/* terminal count interrupt enable */
DECL|macro|CMDE
mdefine_line|#define&t;CMDE&t;0x04&t;/* command register interrupt enable */
DECL|macro|HSF2
mdefine_line|#define&t;HSF2&t;0x02&t;/* host status flag 2 */
DECL|macro|HSF1
mdefine_line|#define&t;HSF1&t;0x01&t;/* host status flag 1 */
multiline_comment|/*&n; * combinations of HSF flags used for PCB transmission&n; */
DECL|macro|HSF_PCB_ACK
mdefine_line|#define&t;HSF_PCB_ACK&t;HSF1
DECL|macro|HSF_PCB_NAK
mdefine_line|#define&t;HSF_PCB_NAK&t;HSF2
DECL|macro|HSF_PCB_END
mdefine_line|#define&t;HSF_PCB_END&t;(HSF2|HSF1)
DECL|macro|HSF_PCB_MASK
mdefine_line|#define&t;HSF_PCB_MASK&t;(HSF2|HSF1)
multiline_comment|/*&n; * host status register bits&n; */
DECL|macro|HRDY
mdefine_line|#define&t;HRDY&t;0x80&t;/* data register ready */
DECL|macro|HCRE
mdefine_line|#define&t;HCRE&t;0x40&t;/* command register empty */
DECL|macro|ACRF
mdefine_line|#define&t;ACRF&t;0x20&t;/* adapter command register full */
multiline_comment|/* #define DIR &t;0x10&t;direction - same as in control register */
DECL|macro|DONE
mdefine_line|#define&t;DONE&t;0x08&t;/* DMA done */
DECL|macro|ASF3
mdefine_line|#define&t;ASF3&t;0x04&t;/* adapter status flag 3 */
DECL|macro|ASF2
mdefine_line|#define&t;ASF2&t;0x02&t;/* adapter status flag 2 */
DECL|macro|ASF1
mdefine_line|#define&t;ASF1&t;0x01&t;/* adapter status flag 1 */
multiline_comment|/*&n; * combinations of ASF flags used for PCB reception&n; */
DECL|macro|ASF_PCB_ACK
mdefine_line|#define&t;ASF_PCB_ACK&t;ASF1
DECL|macro|ASF_PCB_NAK
mdefine_line|#define&t;ASF_PCB_NAK&t;ASF2
DECL|macro|ASF_PCB_END
mdefine_line|#define&t;ASF_PCB_END&t;(ASF2|ASF1)
DECL|macro|ASF_PCB_MASK
mdefine_line|#define&t;ASF_PCB_MASK&t;(ASF2|ASF1)
multiline_comment|/*&n; * host aux DMA register bits&n; */
DECL|macro|DMA_BRST
mdefine_line|#define&t;DMA_BRST&t;0x01&t;/* DMA burst */
multiline_comment|/*&n; * maximum amount of data allowed in a PCB&n; */
DECL|macro|MAX_PCB_DATA
mdefine_line|#define&t;MAX_PCB_DATA&t;62
multiline_comment|/*****************************************************************&n; *&n; *  timeout value&n; *&t;this is a rough value used for loops to stop them from &n; *&t;locking up the whole machine in the case of failure or&n; *&t;error conditions&n; *&n; *****************************************************************/
DECL|macro|TIMEOUT
mdefine_line|#define&t;TIMEOUT&t;300
multiline_comment|/*****************************************************************&n; *&n; * PCB commands&n; *&n; *****************************************************************/
r_enum
(brace
multiline_comment|/*&n;   * host PCB commands&n;   */
DECL|enumerator|CMD_CONFIGURE_ADAPTER_MEMORY
id|CMD_CONFIGURE_ADAPTER_MEMORY
op_assign
l_int|0x01
comma
DECL|enumerator|CMD_CONFIGURE_82586
id|CMD_CONFIGURE_82586
op_assign
l_int|0x02
comma
DECL|enumerator|CMD_STATION_ADDRESS
id|CMD_STATION_ADDRESS
op_assign
l_int|0x03
comma
DECL|enumerator|CMD_DMA_DOWNLOAD
id|CMD_DMA_DOWNLOAD
op_assign
l_int|0x04
comma
DECL|enumerator|CMD_DMA_UPLOAD
id|CMD_DMA_UPLOAD
op_assign
l_int|0x05
comma
DECL|enumerator|CMD_PIO_DOWNLOAD
id|CMD_PIO_DOWNLOAD
op_assign
l_int|0x06
comma
DECL|enumerator|CMD_PIO_UPLOAD
id|CMD_PIO_UPLOAD
op_assign
l_int|0x07
comma
DECL|enumerator|CMD_RECEIVE_PACKET
id|CMD_RECEIVE_PACKET
op_assign
l_int|0x08
comma
DECL|enumerator|CMD_TRANSMIT_PACKET
id|CMD_TRANSMIT_PACKET
op_assign
l_int|0x09
comma
DECL|enumerator|CMD_NETWORK_STATISTICS
id|CMD_NETWORK_STATISTICS
op_assign
l_int|0x0a
comma
DECL|enumerator|CMD_LOAD_MULTICAST_LIST
id|CMD_LOAD_MULTICAST_LIST
op_assign
l_int|0x0b
comma
DECL|enumerator|CMD_CLEAR_PROGRAM
id|CMD_CLEAR_PROGRAM
op_assign
l_int|0x0c
comma
DECL|enumerator|CMD_DOWNLOAD_PROGRAM
id|CMD_DOWNLOAD_PROGRAM
op_assign
l_int|0x0d
comma
DECL|enumerator|CMD_EXECUTE_PROGRAM
id|CMD_EXECUTE_PROGRAM
op_assign
l_int|0x0e
comma
DECL|enumerator|CMD_SELF_TEST
id|CMD_SELF_TEST
op_assign
l_int|0x0f
comma
DECL|enumerator|CMD_SET_STATION_ADDRESS
id|CMD_SET_STATION_ADDRESS
op_assign
l_int|0x10
comma
DECL|enumerator|CMD_ADAPTER_INFO
id|CMD_ADAPTER_INFO
op_assign
l_int|0x11
comma
DECL|enumerator|NUM_TRANSMIT_CMDS
id|NUM_TRANSMIT_CMDS
comma
multiline_comment|/*&n;   * adapter PCB commands&n;   */
DECL|enumerator|CMD_CONFIGURE_ADAPTER_RESPONSE
id|CMD_CONFIGURE_ADAPTER_RESPONSE
op_assign
l_int|0x31
comma
DECL|enumerator|CMD_CONFIGURE_82586_RESPONSE
id|CMD_CONFIGURE_82586_RESPONSE
op_assign
l_int|0x32
comma
DECL|enumerator|CMD_ADDRESS_RESPONSE
id|CMD_ADDRESS_RESPONSE
op_assign
l_int|0x33
comma
DECL|enumerator|CMD_DOWNLOAD_DATA_REQUEST
id|CMD_DOWNLOAD_DATA_REQUEST
op_assign
l_int|0x34
comma
DECL|enumerator|CMD_UPLOAD_DATA_REQUEST
id|CMD_UPLOAD_DATA_REQUEST
op_assign
l_int|0x35
comma
DECL|enumerator|CMD_RECEIVE_PACKET_COMPLETE
id|CMD_RECEIVE_PACKET_COMPLETE
op_assign
l_int|0x38
comma
DECL|enumerator|CMD_TRANSMIT_PACKET_COMPLETE
id|CMD_TRANSMIT_PACKET_COMPLETE
op_assign
l_int|0x39
comma
DECL|enumerator|CMD_NETWORK_STATISTICS_RESPONSE
id|CMD_NETWORK_STATISTICS_RESPONSE
op_assign
l_int|0x3a
comma
DECL|enumerator|CMD_LOAD_MULTICAST_RESPONSE
id|CMD_LOAD_MULTICAST_RESPONSE
op_assign
l_int|0x3b
comma
DECL|enumerator|CMD_CLEAR_PROGRAM_RESPONSE
id|CMD_CLEAR_PROGRAM_RESPONSE
op_assign
l_int|0x3c
comma
DECL|enumerator|CMD_DOWNLOAD_PROGRAM_RESPONSE
id|CMD_DOWNLOAD_PROGRAM_RESPONSE
op_assign
l_int|0x3d
comma
DECL|enumerator|CMD_EXECUTE_RESPONSE
id|CMD_EXECUTE_RESPONSE
op_assign
l_int|0x3e
comma
DECL|enumerator|CMD_SELF_TEST_RESPONSE
id|CMD_SELF_TEST_RESPONSE
op_assign
l_int|0x3f
comma
DECL|enumerator|CMD_SET_ADDRESS_RESPONSE
id|CMD_SET_ADDRESS_RESPONSE
op_assign
l_int|0x40
comma
DECL|enumerator|CMD_ADAPTER_INFO_RESPONSE
id|CMD_ADAPTER_INFO_RESPONSE
op_assign
l_int|0x41
)brace
suffix:semicolon
multiline_comment|/* Definitions for the PCB data structure */
multiline_comment|/* Data units */
DECL|typedef|byte
r_typedef
r_int
r_char
id|byte
suffix:semicolon
DECL|typedef|word
r_typedef
r_int
r_int
r_int
id|word
suffix:semicolon
DECL|typedef|dword
r_typedef
r_int
r_int
r_int
id|dword
suffix:semicolon
multiline_comment|/* Data structures */
DECL|struct|Memconf
r_struct
id|Memconf
(brace
DECL|member|cmd_q
id|word
id|cmd_q
comma
DECL|member|rcv_q
id|rcv_q
comma
DECL|member|mcast
id|mcast
comma
DECL|member|frame
id|frame
comma
DECL|member|rcv_b
id|rcv_b
comma
DECL|member|progs
id|progs
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|Rcv_pkt
r_struct
id|Rcv_pkt
(brace
DECL|member|buf_ofs
id|word
id|buf_ofs
comma
DECL|member|buf_seg
id|buf_seg
comma
DECL|member|buf_len
id|buf_len
comma
DECL|member|timeout
id|timeout
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|Xmit_pkt
r_struct
id|Xmit_pkt
(brace
DECL|member|buf_ofs
id|word
id|buf_ofs
comma
DECL|member|buf_seg
id|buf_seg
comma
DECL|member|pkt_len
id|pkt_len
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|Rcv_resp
r_struct
id|Rcv_resp
(brace
DECL|member|buf_ofs
id|word
id|buf_ofs
comma
DECL|member|buf_seg
id|buf_seg
comma
DECL|member|buf_len
id|buf_len
comma
DECL|member|pkt_len
id|pkt_len
comma
DECL|member|timeout
id|timeout
comma
DECL|member|status
id|status
suffix:semicolon
DECL|member|timetag
id|dword
id|timetag
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|Xmit_resp
r_struct
id|Xmit_resp
(brace
DECL|member|buf_ofs
id|word
id|buf_ofs
comma
DECL|member|buf_seg
id|buf_seg
comma
DECL|member|c_stat
id|c_stat
comma
DECL|member|status
id|status
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|Netstat
r_struct
id|Netstat
(brace
DECL|member|tot_recv
id|dword
id|tot_recv
comma
DECL|member|tot_xmit
id|tot_xmit
suffix:semicolon
DECL|member|err_CRC
id|word
id|err_CRC
comma
DECL|member|err_align
id|err_align
comma
DECL|member|err_res
id|err_res
comma
DECL|member|err_ovrrun
id|err_ovrrun
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|Selftest
r_struct
id|Selftest
(brace
DECL|member|error
id|word
id|error
suffix:semicolon
r_union
(brace
DECL|member|ROM_cksum
id|word
id|ROM_cksum
suffix:semicolon
r_struct
(brace
DECL|member|ofs
DECL|member|seg
id|word
id|ofs
comma
id|seg
suffix:semicolon
DECL|member|RAM
)brace
id|RAM
suffix:semicolon
DECL|member|i82586
id|word
id|i82586
suffix:semicolon
DECL|member|failure
)brace
id|failure
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|Info
r_struct
id|Info
(brace
DECL|member|minor_vers
id|byte
id|minor_vers
comma
DECL|member|major_vers
id|major_vers
suffix:semicolon
DECL|member|ROM_cksum
id|word
id|ROM_cksum
comma
DECL|member|RAM_sz
id|RAM_sz
comma
DECL|member|free_ofs
id|free_ofs
comma
DECL|member|free_seg
id|free_seg
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|Memdump
r_struct
id|Memdump
(brace
DECL|member|size
id|word
id|size
comma
DECL|member|off
id|off
comma
DECL|member|seg
id|seg
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n;Primary Command Block. The most important data structure. All communication&n;between the host and the adapter is done with these. (Except for the actual&n;Ethernet data, which has different packaging.)&n;*/
r_typedef
r_struct
(brace
DECL|member|command
id|byte
id|command
suffix:semicolon
DECL|member|length
id|byte
id|length
suffix:semicolon
r_union
(brace
DECL|member|memconf
r_struct
id|Memconf
id|memconf
suffix:semicolon
DECL|member|configure
id|word
id|configure
suffix:semicolon
DECL|member|rcv_pkt
r_struct
id|Rcv_pkt
id|rcv_pkt
suffix:semicolon
DECL|member|xmit_pkt
r_struct
id|Xmit_pkt
id|xmit_pkt
suffix:semicolon
DECL|member|multicast
id|byte
id|multicast
(braket
l_int|10
)braket
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|eth_addr
id|byte
id|eth_addr
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|failed
id|byte
id|failed
suffix:semicolon
DECL|member|rcv_resp
r_struct
id|Rcv_resp
id|rcv_resp
suffix:semicolon
DECL|member|xmit_resp
r_struct
id|Xmit_resp
id|xmit_resp
suffix:semicolon
DECL|member|netstat
r_struct
id|Netstat
id|netstat
suffix:semicolon
DECL|member|selftest
r_struct
id|Selftest
id|selftest
suffix:semicolon
DECL|member|info
r_struct
id|Info
id|info
suffix:semicolon
DECL|member|memdump
r_struct
id|Memdump
id|memdump
suffix:semicolon
DECL|member|raw
id|byte
id|raw
(braket
l_int|62
)braket
suffix:semicolon
DECL|member|data
)brace
id|data
suffix:semicolon
DECL|typedef|pcb_struct
)brace
id|pcb_struct
suffix:semicolon
multiline_comment|/* These defines for &squot;configure&squot; */
DECL|macro|RECV_STATION
mdefine_line|#define RECV_STATION&t;0x00
DECL|macro|RECV_BROAD
mdefine_line|#define RECV_BROAD&t;0x01
DECL|macro|RECV_MULTI
mdefine_line|#define RECV_MULTI&t;0x02
DECL|macro|RECV_PROMISC
mdefine_line|#define RECV_PROMISC&t;0x04
DECL|macro|NO_LOOPBACK
mdefine_line|#define NO_LOOPBACK&t;0x00
DECL|macro|INT_LOOPBACK
mdefine_line|#define INT_LOOPBACK&t;0x08
DECL|macro|EXT_LOOPBACK
mdefine_line|#define EXT_LOOPBACK&t;0x10
multiline_comment|/*****************************************************************&n; *&n; *  structure to hold context information for adapter&n; *&n; *****************************************************************/
DECL|macro|DMA_BUFFER_SIZE
mdefine_line|#define DMA_BUFFER_SIZE  1600
DECL|macro|BACKLOG_SIZE
mdefine_line|#define BACKLOG_SIZE      4
r_typedef
r_struct
(brace
DECL|member|got
r_volatile
r_int
id|got
(braket
id|NUM_TRANSMIT_CMDS
)braket
suffix:semicolon
multiline_comment|/* flags for&n;&t;&t;&t;&t;&t;&t;   command completion */
DECL|member|tx_pcb
id|pcb_struct
id|tx_pcb
suffix:semicolon
multiline_comment|/* PCB for foreground sending */
DECL|member|rx_pcb
id|pcb_struct
id|rx_pcb
suffix:semicolon
multiline_comment|/* PCB for foreground receiving */
DECL|member|itx_pcb
id|pcb_struct
id|itx_pcb
suffix:semicolon
multiline_comment|/* PCB for background sending */
DECL|member|irx_pcb
id|pcb_struct
id|irx_pcb
suffix:semicolon
multiline_comment|/* PCB for background receiving */
DECL|member|stats
r_struct
id|net_device_stats
id|stats
suffix:semicolon
DECL|member|dma_buffer
r_void
op_star
id|dma_buffer
suffix:semicolon
r_struct
(brace
DECL|member|length
r_int
r_int
id|length
(braket
id|BACKLOG_SIZE
)braket
suffix:semicolon
DECL|member|in
r_int
r_int
id|in
suffix:semicolon
DECL|member|out
r_int
r_int
id|out
suffix:semicolon
DECL|member|rx_backlog
)brace
id|rx_backlog
suffix:semicolon
r_struct
(brace
DECL|member|direction
r_int
r_int
id|direction
suffix:semicolon
DECL|member|length
r_int
r_int
id|length
suffix:semicolon
DECL|member|skb
r_struct
id|sk_buff
op_star
id|skb
suffix:semicolon
DECL|member|target
r_void
op_star
id|target
suffix:semicolon
DECL|member|start_time
r_int
r_int
id|start_time
suffix:semicolon
DECL|member|current_dma
)brace
id|current_dma
suffix:semicolon
multiline_comment|/* flags */
DECL|member|send_pcb_semaphore
r_int
r_int
id|send_pcb_semaphore
suffix:semicolon
DECL|member|dmaing
r_int
r_int
id|dmaing
suffix:semicolon
DECL|member|busy
r_int
r_int
id|busy
suffix:semicolon
DECL|member|rx_active
r_int
r_int
id|rx_active
suffix:semicolon
multiline_comment|/* number of receive PCBs */
DECL|member|hcr_val
r_volatile
r_int
r_char
id|hcr_val
suffix:semicolon
multiline_comment|/* what we think the HCR contains */
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
multiline_comment|/* Interrupt v tx lock */
DECL|typedef|elp_device
)brace
id|elp_device
suffix:semicolon
eof
