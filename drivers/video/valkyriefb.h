multiline_comment|/*&n; * valkyriefb.h: Constants of all sorts for valkyriefb&n; *&n; *  Created 8 August 1998 by &n; *  Martin Costabel &lt;costabel@wanadoo.fr&gt; and Kevin Schoedel&n; *&n; * Vmode-switching changes and vmode 15/17 modifications created 29 August&n; * 1998 by Barry K. Nathan &lt;barryn@pobox.com&gt;.&n; * &n; * vmode 10 changed by Steven Borley &lt;sjb@salix.demon.co.uk&gt;, 14 mai 2000&n; *&n; * This program is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU General Public License&n; * as published by the Free Software Foundation; either version&n; * 2 of the License, or (at your option) any later version.&n; *&n; * Based directly on:&n; *&n; *  controlfb.h: Constants of all sorts for controlfb&n; *  Copyright (C) 1998 Daniel Jacobowitz &lt;dan@debian.org&gt;&n; *&n; *  pmc-valkyrie.h: Console support for PowerMac &quot;control&quot; display adaptor.&n; *  Copyright (C) 1997 Paul Mackerras.&n; *&n; *  pmc-valkyrie.c: Console support for PowerMac &quot;control&quot; display adaptor.&n; *  Copyright (C) 1997 Paul Mackerras.&n; *&n; * and indirectly from:&n; *&n; *  pmc-control.h: Console support for PowerMac &quot;control&quot; display adaptor.&n; *  Copyright (C) 1997 Paul Mackerras.&n; *&n; *  pmc-control.c: Console support for PowerMac &quot;control&quot; display adaptor.&n; *  Copyright (C) 1996 Paul Mackerras.&n; *&n; *  platinumfb.c: Console support for PowerMac &quot;platinum&quot; display adaptor.&n; *  Copyright (C) 1998 Jon Howell&n; */
multiline_comment|/*&n; * Structure of the registers for the Valkyrie colormap registers.&n; */
DECL|struct|cmap_regs
r_struct
id|cmap_regs
(brace
DECL|member|addr
r_int
r_char
id|addr
suffix:semicolon
DECL|member|pad1
r_char
id|pad1
(braket
l_int|7
)braket
suffix:semicolon
DECL|member|lut
r_int
r_char
id|lut
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * Structure of the registers for the &quot;valkyrie&quot; display adaptor.&n; */
DECL|struct|vpreg
r_struct
id|vpreg
(brace
multiline_comment|/* padded register */
DECL|member|r
r_int
r_char
id|r
suffix:semicolon
DECL|member|pad
r_char
id|pad
(braket
l_int|7
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|valkyrie_regs
r_struct
id|valkyrie_regs
(brace
DECL|member|mode
r_struct
id|vpreg
id|mode
suffix:semicolon
DECL|member|depth
r_struct
id|vpreg
id|depth
suffix:semicolon
DECL|member|status
r_struct
id|vpreg
id|status
suffix:semicolon
DECL|member|reg3
r_struct
id|vpreg
id|reg3
suffix:semicolon
DECL|member|intr
r_struct
id|vpreg
id|intr
suffix:semicolon
DECL|member|reg5
r_struct
id|vpreg
id|reg5
suffix:semicolon
DECL|member|intr_enb
r_struct
id|vpreg
id|intr_enb
suffix:semicolon
DECL|member|msense
r_struct
id|vpreg
id|msense
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * Register initialization tables for the valkyrie display.&n; *&n; * Dot clock rate is&n; * 3.9064MHz * 2**clock_params[2] * clock_params[1] / clock_params[0].&n; */
DECL|struct|valkyrie_regvals
r_struct
id|valkyrie_regvals
(brace
DECL|member|mode
r_int
r_char
id|mode
suffix:semicolon
DECL|member|clock_params
r_int
r_char
id|clock_params
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|pitch
r_int
id|pitch
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* bytes/line, indexed by color_mode */
DECL|member|hres
r_int
id|hres
suffix:semicolon
DECL|member|vres
r_int
id|vres
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Register values for 1024x768, 75Hz mode (17) */
multiline_comment|/* I&squot;m not sure which mode this is (16 or 17), so I&squot;m defining it as 17,&n; * since the equivalent mode in controlfb (which I adapted this from) is&n; * also 17. Just because MacOS can&squot;t do this on Valkyrie doesn&squot;t mean we&n; * can&squot;t! :)&n; *&n; * I was going to use 12, 31, 3, which I found by myself, but instead I&squot;m&n; * using 11, 28, 3 like controlfb, for consistency&squot;s sake.&n; */
DECL|variable|valkyrie_reg_init_17
r_static
r_struct
id|valkyrie_regvals
id|valkyrie_reg_init_17
op_assign
(brace
l_int|15
comma
(brace
l_int|11
comma
l_int|28
comma
l_int|3
)brace
comma
multiline_comment|/* pixel clock = 79.55MHz for V=74.50Hz */
(brace
l_int|1024
comma
l_int|0
)brace
comma
l_int|1024
comma
l_int|768
)brace
suffix:semicolon
multiline_comment|/* Register values for 1024x768, 72Hz mode (15) */
multiline_comment|/* This used to be 12, 30, 3 for pixel clock = 78.12MHz for V=72.12Hz, but&n; * that didn&squot;t match MacOS in the same video mode on this chip, and it also&n; * caused the 15&quot; Apple Studio Display to not work in this mode. While this&n; * mode still doesn&squot;t match MacOS exactly (as far as I can tell), it&squot;s a lot&n; * closer now, and it works with the Apple Studio Display.&n; *&n; * Yes, even though MacOS calls it &quot;72Hz&quot;, in reality it&squot;s about 70Hz.&n; */
DECL|variable|valkyrie_reg_init_15
r_static
r_struct
id|valkyrie_regvals
id|valkyrie_reg_init_15
op_assign
(brace
l_int|15
comma
(brace
l_int|12
comma
l_int|29
comma
l_int|3
)brace
comma
multiline_comment|/* pixel clock = 75.52MHz for V=69.71Hz? */
multiline_comment|/* I interpolated the V=69.71 from the vmode 14 and old 15&n;&t;&t;     * numbers. Is this result correct?&n;&t;&t;     */
(brace
l_int|1024
comma
l_int|0
)brace
comma
l_int|1024
comma
l_int|768
)brace
suffix:semicolon
multiline_comment|/* Register values for 1024x768, 60Hz mode (14) */
DECL|variable|valkyrie_reg_init_14
r_static
r_struct
id|valkyrie_regvals
id|valkyrie_reg_init_14
op_assign
(brace
l_int|14
comma
(brace
l_int|15
comma
l_int|31
comma
l_int|3
)brace
comma
multiline_comment|/* pixel clock = 64.58MHz for V=59.62Hz */
(brace
l_int|1024
comma
l_int|0
)brace
comma
l_int|1024
comma
l_int|768
)brace
suffix:semicolon
multiline_comment|/* Register values for 832x624, 75Hz mode (13) */
DECL|variable|valkyrie_reg_init_13
r_static
r_struct
id|valkyrie_regvals
id|valkyrie_reg_init_13
op_assign
(brace
l_int|9
comma
(brace
l_int|23
comma
l_int|42
comma
l_int|3
)brace
comma
multiline_comment|/* pixel clock = 57.07MHz for V=74.27Hz */
(brace
l_int|832
comma
l_int|0
)brace
comma
l_int|832
comma
l_int|624
)brace
suffix:semicolon
multiline_comment|/* Register values for 800x600, 72Hz mode (11) */
DECL|variable|valkyrie_reg_init_11
r_static
r_struct
id|valkyrie_regvals
id|valkyrie_reg_init_11
op_assign
(brace
l_int|13
comma
(brace
l_int|17
comma
l_int|27
comma
l_int|3
)brace
comma
multiline_comment|/* pixel clock = 49.63MHz for V=71.66Hz */
(brace
l_int|800
comma
l_int|0
)brace
comma
l_int|800
comma
l_int|600
)brace
suffix:semicolon
multiline_comment|/* Register values for 800x600, 60Hz mode (10) */
DECL|variable|valkyrie_reg_init_10
r_static
r_struct
id|valkyrie_regvals
id|valkyrie_reg_init_10
op_assign
(brace
l_int|12
comma
(brace
l_int|25
comma
l_int|32
comma
l_int|3
)brace
comma
multiline_comment|/* pixel clock = 40.0015MHz,&n;                     used to be 20,53,2, pixel clock 41.41MHz for V=59.78Hz */
(brace
l_int|800
comma
l_int|1600
)brace
comma
l_int|800
comma
l_int|600
)brace
suffix:semicolon
multiline_comment|/* Register values for 640x480, 67Hz mode (6) */
DECL|variable|valkyrie_reg_init_6
r_static
r_struct
id|valkyrie_regvals
id|valkyrie_reg_init_6
op_assign
(brace
l_int|6
comma
(brace
l_int|14
comma
l_int|27
comma
l_int|2
)brace
comma
multiline_comment|/* pixel clock = 30.13MHz for V=66.43Hz */
(brace
l_int|640
comma
l_int|1280
)brace
comma
l_int|640
comma
l_int|480
)brace
suffix:semicolon
multiline_comment|/* Register values for 640x480, 60Hz mode (5) */
DECL|variable|valkyrie_reg_init_5
r_static
r_struct
id|valkyrie_regvals
id|valkyrie_reg_init_5
op_assign
(brace
l_int|11
comma
(brace
l_int|23
comma
l_int|37
comma
l_int|2
)brace
comma
multiline_comment|/* pixel clock = 25.14MHz for V=59.85Hz */
(brace
l_int|640
comma
l_int|1280
)brace
comma
l_int|640
comma
l_int|480
)brace
suffix:semicolon
DECL|variable|valkyrie_reg_init
r_static
r_struct
id|valkyrie_regvals
op_star
id|valkyrie_reg_init
(braket
id|VMODE_MAX
)braket
op_assign
(brace
l_int|NULL
comma
l_int|NULL
comma
l_int|NULL
comma
l_int|NULL
comma
op_amp
id|valkyrie_reg_init_5
comma
op_amp
id|valkyrie_reg_init_6
comma
l_int|NULL
comma
l_int|NULL
comma
l_int|NULL
comma
op_amp
id|valkyrie_reg_init_10
comma
op_amp
id|valkyrie_reg_init_11
comma
l_int|NULL
comma
op_amp
id|valkyrie_reg_init_13
comma
op_amp
id|valkyrie_reg_init_14
comma
op_amp
id|valkyrie_reg_init_15
comma
l_int|NULL
comma
op_amp
id|valkyrie_reg_init_17
comma
l_int|NULL
comma
l_int|NULL
comma
l_int|NULL
)brace
suffix:semicolon
eof
