multiline_comment|/*&n; * linux/drivers/video/cyber2000fb.h&n; *&n; * Integraphics Cyber2000 frame buffer device&n; */
DECL|macro|arraysize
mdefine_line|#define arraysize(x)    (sizeof(x)/sizeof(*(x)))
DECL|macro|cyber2000_outb
mdefine_line|#define cyber2000_outb(dat,reg)&t;(CyberRegs[reg] = dat)
DECL|macro|cyber2000_outw
mdefine_line|#define cyber2000_outw(dat,reg)&t;(*(unsigned short *)&amp;CyberRegs[reg] = dat)
DECL|macro|cyber2000_outl
mdefine_line|#define cyber2000_outl(dat,reg)&t;(*(unsigned long *)&amp;CyberRegs[reg] = dat)
DECL|macro|cyber2000_inb
mdefine_line|#define cyber2000_inb(reg)&t;(CyberRegs[reg])
DECL|macro|cyber2000_inw
mdefine_line|#define cyber2000_inw(reg)&t;(*(unsigned short *)&amp;CyberRegs[reg])
DECL|macro|cyber2000_inl
mdefine_line|#define cyber2000_inl(reg)&t;(*(unsigned long *)&amp;CyberRegs[reg])
DECL|function|cyber2000_crtcw
r_static
r_inline
r_void
id|cyber2000_crtcw
c_func
(paren
r_int
id|val
comma
r_int
id|reg
)paren
(brace
id|cyber2000_outb
c_func
(paren
id|reg
comma
l_int|0x3d4
)paren
suffix:semicolon
id|cyber2000_outb
c_func
(paren
id|val
comma
l_int|0x3d5
)paren
suffix:semicolon
)brace
DECL|function|cyber2000_grphw
r_static
r_inline
r_void
id|cyber2000_grphw
c_func
(paren
r_int
id|val
comma
r_int
id|reg
)paren
(brace
id|cyber2000_outb
c_func
(paren
id|reg
comma
l_int|0x3ce
)paren
suffix:semicolon
id|cyber2000_outb
c_func
(paren
id|val
comma
l_int|0x3cf
)paren
suffix:semicolon
)brace
DECL|function|cyber2000_attrw
r_static
r_inline
r_void
id|cyber2000_attrw
c_func
(paren
r_int
id|val
comma
r_int
id|reg
)paren
(brace
id|cyber2000_inb
c_func
(paren
l_int|0x3da
)paren
suffix:semicolon
id|cyber2000_outb
c_func
(paren
id|reg
comma
l_int|0x3c0
)paren
suffix:semicolon
id|cyber2000_inb
c_func
(paren
l_int|0x3c1
)paren
suffix:semicolon
id|cyber2000_outb
c_func
(paren
id|val
comma
l_int|0x3c0
)paren
suffix:semicolon
)brace
DECL|function|cyber2000_seqw
r_static
r_inline
r_void
id|cyber2000_seqw
c_func
(paren
r_int
id|val
comma
r_int
id|reg
)paren
(brace
id|cyber2000_outb
c_func
(paren
id|reg
comma
l_int|0x3c4
)paren
suffix:semicolon
id|cyber2000_outb
c_func
(paren
id|val
comma
l_int|0x3c5
)paren
suffix:semicolon
)brace
DECL|struct|cyber2000fb_par
r_struct
id|cyber2000fb_par
(brace
DECL|member|screen_base
r_int
r_int
id|screen_base
suffix:semicolon
DECL|member|screen_base_p
r_int
r_int
id|screen_base_p
suffix:semicolon
DECL|member|regs_base
r_int
r_int
id|regs_base
suffix:semicolon
DECL|member|regs_base_p
r_int
r_int
id|regs_base_p
suffix:semicolon
DECL|member|screen_end
r_int
r_int
id|screen_end
suffix:semicolon
DECL|member|screen_size
r_int
r_int
id|screen_size
suffix:semicolon
DECL|member|palette_size
r_int
r_int
id|palette_size
suffix:semicolon
DECL|member|currcon
r_int
r_int
id|currcon
suffix:semicolon
multiline_comment|/*&n;&t; * palette&n;&t; */
r_struct
(brace
DECL|member|red
id|u8
id|red
suffix:semicolon
DECL|member|green
id|u8
id|green
suffix:semicolon
DECL|member|blue
id|u8
id|blue
suffix:semicolon
DECL|member|palette
)brace
id|palette
(braket
l_int|256
)braket
suffix:semicolon
multiline_comment|/*&n;&t; * colour mapping table&n;&t; */
r_union
(brace
macro_line|#ifdef FBCON_HAS_CFB16
DECL|member|cfb16
id|u16
id|cfb16
(braket
l_int|16
)braket
suffix:semicolon
macro_line|#endif
macro_line|#ifdef FBCON_HAS_CFB24
DECL|member|cfb24
id|u32
id|cfb24
(braket
l_int|16
)braket
suffix:semicolon
macro_line|#endif
DECL|member|c_table
)brace
id|c_table
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|res
r_struct
id|res
(brace
DECL|member|xres
r_int
id|xres
suffix:semicolon
DECL|member|yres
r_int
id|yres
suffix:semicolon
DECL|member|crtc_regs
r_int
r_char
id|crtc_regs
(braket
l_int|18
)braket
suffix:semicolon
DECL|member|crtc_ofl
r_int
r_char
id|crtc_ofl
suffix:semicolon
DECL|member|clk_regs
r_int
r_char
id|clk_regs
(braket
l_int|4
)braket
suffix:semicolon
)brace
suffix:semicolon
eof
