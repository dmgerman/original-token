multiline_comment|/******************************************************************************&n; *&n; * Name: achware.h -- hardware specific interfaces&n; *       $Revision: 48 $&n; *&n; *****************************************************************************/
multiline_comment|/*&n; *  Copyright (C) 2000 R. Byron Moore&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n; */
macro_line|#ifndef __ACHWARE_H__
DECL|macro|__ACHWARE_H__
mdefine_line|#define __ACHWARE_H__
multiline_comment|/* Prototypes */
id|ACPI_STATUS
id|acpi_hw_initialize
(paren
r_void
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_shutdown
(paren
r_void
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_initialize_system_info
(paren
r_void
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_set_mode
(paren
id|u32
id|mode
)paren
suffix:semicolon
id|u32
id|acpi_hw_get_mode
(paren
r_void
)paren
suffix:semicolon
id|u32
id|acpi_hw_get_mode_capabilities
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* Register I/O Prototypes */
id|u32
id|acpi_hw_register_bit_access
(paren
id|NATIVE_UINT
id|read_write
comma
id|u8
id|use_lock
comma
id|u32
id|register_id
comma
dot
dot
dot
multiline_comment|/* DWORD Write Value */
)paren
suffix:semicolon
id|u32
id|acpi_hw_register_read
(paren
id|u8
id|use_lock
comma
id|u32
id|register_id
)paren
suffix:semicolon
r_void
id|acpi_hw_register_write
(paren
id|u8
id|use_lock
comma
id|u32
id|register_id
comma
id|u32
id|value
)paren
suffix:semicolon
id|u32
id|acpi_hw_low_level_read
(paren
id|u32
id|width
comma
id|ACPI_GAS
op_star
id|reg
comma
id|u32
id|offset
)paren
suffix:semicolon
r_void
id|acpi_hw_low_level_write
(paren
id|u32
id|width
comma
id|u32
id|value
comma
id|ACPI_GAS
op_star
id|reg
comma
id|u32
id|offset
)paren
suffix:semicolon
r_void
id|acpi_hw_clear_acpi_status
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* GPE support */
r_void
id|acpi_hw_enable_gpe
(paren
id|u32
id|gpe_index
)paren
suffix:semicolon
r_void
id|acpi_hw_disable_gpe
(paren
id|u32
id|gpe_index
)paren
suffix:semicolon
r_void
id|acpi_hw_clear_gpe
(paren
id|u32
id|gpe_index
)paren
suffix:semicolon
r_void
id|acpi_hw_get_gpe_status
(paren
id|u32
id|gpe_number
comma
id|ACPI_EVENT_STATUS
op_star
id|event_status
)paren
suffix:semicolon
multiline_comment|/* Sleep Prototypes */
id|ACPI_STATUS
id|acpi_hw_obtain_sleep_type_register_data
(paren
id|u8
id|sleep_state
comma
id|u8
op_star
id|slp_typ_a
comma
id|u8
op_star
id|slp_typ_b
)paren
suffix:semicolon
multiline_comment|/* Cx State Prototypes */
id|ACPI_STATUS
id|acpi_hw_enter_c1
c_func
(paren
id|ACPI_IO_ADDRESS
id|pblk_address
comma
id|u32
op_star
id|pm_timer_ticks
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_enter_c2
c_func
(paren
id|ACPI_IO_ADDRESS
id|pblk_address
comma
id|u32
op_star
id|pm_timer_ticks
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_enter_c3
c_func
(paren
id|ACPI_IO_ADDRESS
id|pblk_address
comma
id|u32
op_star
id|pm_timer_ticks
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_enter_cx
(paren
id|ACPI_IO_ADDRESS
id|pblk_address
comma
id|u32
op_star
id|pm_timer_ticks
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_set_cx
(paren
id|u32
id|cx_state
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_get_cx_info
(paren
id|u32
id|cx_states
(braket
)braket
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_get_cx_handler
(paren
id|u32
id|cx_state
comma
id|ACPI_C_STATE_HANDLER
op_star
id|handler
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_hw_set_cx_handler
(paren
id|u32
id|cx_state
comma
id|ACPI_C_STATE_HANDLER
id|handler
)paren
suffix:semicolon
multiline_comment|/* Throttling Prototypes */
r_void
id|acpi_hw_enable_throttling
(paren
id|ACPI_IO_ADDRESS
id|pblk_address
)paren
suffix:semicolon
r_void
id|acpi_hw_disable_throttling
(paren
id|ACPI_IO_ADDRESS
id|pblk_address
)paren
suffix:semicolon
id|u32
id|acpi_hw_get_duty_cycle
(paren
id|u8
id|duty_offset
comma
id|ACPI_IO_ADDRESS
id|pblk_address
comma
id|u32
id|num_throttle_states
)paren
suffix:semicolon
r_void
id|acpi_hw_program_duty_cycle
(paren
id|u8
id|duty_offset
comma
id|u32
id|duty_cycle
comma
id|ACPI_IO_ADDRESS
id|pblk_address
comma
id|u32
id|num_throttle_states
)paren
suffix:semicolon
id|NATIVE_UINT
id|acpi_hw_local_pow
(paren
id|NATIVE_UINT
id|x
comma
id|NATIVE_UINT
id|y
)paren
suffix:semicolon
multiline_comment|/* ACPI Timer prototypes */
id|u32
id|acpi_hw_pmt_ticks
(paren
r_void
)paren
suffix:semicolon
id|u32
id|acpi_hw_pmt_resolution
(paren
r_void
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_get_timer
(paren
id|u32
op_star
id|out_ticks
)paren
suffix:semicolon
macro_line|#endif /* __ACHWARE_H__ */
eof
