multiline_comment|/*&n; *    Disk Array driver for Compaq SMART2 Controllers&n; *    Copyright 1998 Compaq Computer Corporation&n; *&n; *    This program is free software; you can redistribute it and/or modify&n; *    it under the terms of the GNU General Public License as published by&n; *    the Free Software Foundation; either version 2 of the License, or&n; *    (at your option) any later version.&n; *&n; *    This program is distributed in the hope that it will be useful,&n; *    but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *    MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or&n; *    NON INFRINGEMENT.  See the GNU General Public License for more details.&n; *&n; *    You should have received a copy of the GNU General Public License&n; *    along with this program; if not, write to the Free Software&n; *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; *&n; *    Questions/Comments/Bugfixes to arrays@compaq.com&n; *&n; *    If you want to make changes, improve or add functionality to this&n; *    driver, you&squot;ll probably need the Compaq Array Controller Interface&n; *    Specificiation (Document number ECG086/1198)&n; */
macro_line|#ifndef CPQARRAY_H
DECL|macro|CPQARRAY_H
mdefine_line|#define CPQARRAY_H
macro_line|#ifdef __KERNEL__
macro_line|#include &lt;linux/blkdev.h&gt;
macro_line|#include &lt;linux/locks.h&gt;
macro_line|#include &lt;linux/malloc.h&gt;
macro_line|#include &lt;linux/proc_fs.h&gt;
macro_line|#include &lt;linux/timer.h&gt;
macro_line|#endif
macro_line|#include &quot;ida_cmd.h&quot;
DECL|macro|IO_OK
mdefine_line|#define IO_OK&t;&t;0
DECL|macro|IO_ERROR
mdefine_line|#define IO_ERROR&t;1
DECL|macro|NWD
mdefine_line|#define NWD&t;&t;16
DECL|macro|NWD_SHIFT
mdefine_line|#define NWD_SHIFT&t;4
DECL|macro|IDA_TIMER
mdefine_line|#define IDA_TIMER&t;(5*HZ)
DECL|macro|IDA_TIMEOUT
mdefine_line|#define IDA_TIMEOUT&t;(10*HZ)
DECL|macro|MISC_NONFATAL_WARN
mdefine_line|#define MISC_NONFATAL_WARN&t;0x01
r_typedef
r_struct
(brace
DECL|member|blk_size
r_int
id|blk_size
suffix:semicolon
DECL|member|nr_blks
r_int
id|nr_blks
suffix:semicolon
DECL|member|cylinders
r_int
id|cylinders
suffix:semicolon
DECL|member|heads
r_int
id|heads
suffix:semicolon
DECL|member|sectors
r_int
id|sectors
suffix:semicolon
DECL|member|usage_count
r_int
id|usage_count
suffix:semicolon
DECL|typedef|drv_info_t
)brace
id|drv_info_t
suffix:semicolon
macro_line|#ifdef __KERNEL__
r_struct
id|ctlr_info
suffix:semicolon
DECL|typedef|ctlr_info_t
r_typedef
r_struct
id|ctlr_info
id|ctlr_info_t
suffix:semicolon
DECL|struct|access_method
r_struct
id|access_method
(brace
DECL|member|submit_command
r_void
(paren
op_star
id|submit_command
)paren
(paren
id|ctlr_info_t
op_star
id|h
comma
id|cmdlist_t
op_star
id|c
)paren
suffix:semicolon
DECL|member|set_intr_mask
r_void
(paren
op_star
id|set_intr_mask
)paren
(paren
id|ctlr_info_t
op_star
id|h
comma
r_int
r_int
id|val
)paren
suffix:semicolon
DECL|member|fifo_full
r_int
r_int
(paren
op_star
id|fifo_full
)paren
(paren
id|ctlr_info_t
op_star
id|h
)paren
suffix:semicolon
DECL|member|intr_pending
r_int
r_int
(paren
op_star
id|intr_pending
)paren
(paren
id|ctlr_info_t
op_star
id|h
)paren
suffix:semicolon
DECL|member|command_completed
r_int
r_int
(paren
op_star
id|command_completed
)paren
(paren
id|ctlr_info_t
op_star
id|h
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|board_type
r_struct
id|board_type
(brace
DECL|member|board_id
id|__u32
id|board_id
suffix:semicolon
DECL|member|product_name
r_char
op_star
id|product_name
suffix:semicolon
DECL|member|access
r_struct
id|access_method
op_star
id|access
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ctlr_info
r_struct
id|ctlr_info
(brace
DECL|member|ctlr
r_int
id|ctlr
suffix:semicolon
DECL|member|devname
r_char
id|devname
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|log_drv_map
id|__u32
id|log_drv_map
suffix:semicolon
DECL|member|drv_assign_map
id|__u32
id|drv_assign_map
suffix:semicolon
DECL|member|drv_spare_map
id|__u32
id|drv_spare_map
suffix:semicolon
DECL|member|mp_failed_drv_map
id|__u32
id|mp_failed_drv_map
suffix:semicolon
DECL|member|firm_rev
r_char
id|firm_rev
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|ctlr_sig
r_int
id|ctlr_sig
suffix:semicolon
DECL|member|log_drives
r_int
id|log_drives
suffix:semicolon
DECL|member|phys_drives
r_int
id|phys_drives
suffix:semicolon
DECL|member|pci_dev
r_struct
id|pci_dev
op_star
id|pci_dev
suffix:semicolon
multiline_comment|/* NULL if EISA */
DECL|member|board_id
id|__u32
id|board_id
suffix:semicolon
DECL|member|product_name
r_char
op_star
id|product_name
suffix:semicolon
DECL|member|vaddr
r_void
op_star
id|vaddr
suffix:semicolon
DECL|member|paddr
r_int
r_int
id|paddr
suffix:semicolon
DECL|member|ioaddr
r_int
r_int
id|ioaddr
suffix:semicolon
DECL|member|intr
r_int
id|intr
suffix:semicolon
DECL|member|usage_count
r_int
id|usage_count
suffix:semicolon
DECL|member|drv
id|drv_info_t
id|drv
(braket
id|NWD
)braket
suffix:semicolon
DECL|member|proc
r_struct
id|proc_dir_entry
op_star
id|proc
suffix:semicolon
DECL|member|access
r_struct
id|access_method
id|access
suffix:semicolon
DECL|member|reqQ
id|cmdlist_t
op_star
id|reqQ
suffix:semicolon
DECL|member|cmpQ
id|cmdlist_t
op_star
id|cmpQ
suffix:semicolon
DECL|member|cmd_pool
id|cmdlist_t
op_star
id|cmd_pool
suffix:semicolon
DECL|member|cmd_pool_bits
id|__u32
op_star
id|cmd_pool_bits
suffix:semicolon
DECL|member|Qdepth
r_int
r_int
id|Qdepth
suffix:semicolon
DECL|member|maxQsinceinit
r_int
r_int
id|maxQsinceinit
suffix:semicolon
DECL|member|nr_requests
r_int
r_int
id|nr_requests
suffix:semicolon
DECL|member|nr_allocs
r_int
r_int
id|nr_allocs
suffix:semicolon
DECL|member|nr_frees
r_int
r_int
id|nr_frees
suffix:semicolon
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
DECL|member|misc_tflags
r_int
r_int
id|misc_tflags
suffix:semicolon
)brace
suffix:semicolon
macro_line|#endif
macro_line|#endif /* CPQARRAY_H */
eof
