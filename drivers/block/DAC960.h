multiline_comment|/*&n;&n;  Linux Driver for Mylex DAC960 and DAC1100 PCI RAID Controllers&n;&n;  Copyright 1998-1999 by Leonard N. Zubkoff &lt;lnz@dandelion.com&gt;&n;&n;  This program is free software; you may redistribute and/or modify it under&n;  the terms of the GNU General Public License Version 2 as published by the&n;  Free Software Foundation.&n;&n;  This program is distributed in the hope that it will be useful, but&n;  WITHOUT ANY WARRANTY, without even the implied warranty of MERCHANTABILITY&n;  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License&n;  for complete details.&n;&n;  The author respectfully requests that any modifications to this software be&n;  sent directly to him for evaluation and testing.&n;&n;*/
multiline_comment|/*&n;  Define the maximum number of DAC960 Controllers supported by this driver.&n;*/
DECL|macro|DAC960_MaxControllers
mdefine_line|#define DAC960_MaxControllers&t;&t;&t;8
multiline_comment|/*&n;  Define the maximum number of Controller Channels supported by this driver.&n;*/
DECL|macro|DAC960_MaxChannels
mdefine_line|#define DAC960_MaxChannels&t;&t;&t;3
multiline_comment|/*&n;  Define the maximum number of Targets per Channel supported by this driver.&n;*/
DECL|macro|DAC960_MaxTargets
mdefine_line|#define DAC960_MaxTargets&t;&t;&t;16
multiline_comment|/*&n;  Define the maximum number of Logical Drives supported by any DAC960 model.&n;*/
DECL|macro|DAC960_MaxLogicalDrives
mdefine_line|#define DAC960_MaxLogicalDrives&t;&t;&t;32
multiline_comment|/*&n;  Define a Boolean data type.&n;*/
DECL|enumerator|false
DECL|enumerator|true
DECL|typedef|boolean
r_typedef
r_enum
(brace
l_bool|false
comma
l_bool|true
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|boolean
suffix:semicolon
multiline_comment|/*&n;  Define a 32 bit I/O Address data type.&n;*/
DECL|typedef|DAC960_IO_Address_T
r_typedef
r_int
r_int
id|DAC960_IO_Address_T
suffix:semicolon
multiline_comment|/*&n;  Define a 32 bit PCI Bus Address data type.&n;*/
DECL|typedef|DAC960_PCI_Address_T
r_typedef
r_int
r_int
id|DAC960_PCI_Address_T
suffix:semicolon
multiline_comment|/*&n;  Define a 32 bit Bus Address data type.&n;*/
DECL|typedef|DAC960_BusAddress_T
r_typedef
r_int
r_int
id|DAC960_BusAddress_T
suffix:semicolon
multiline_comment|/*&n;  Define a 32 bit Byte Count data type.&n;*/
DECL|typedef|DAC960_ByteCount_T
r_typedef
r_int
r_int
id|DAC960_ByteCount_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Command Opcodes.&n;*/
r_typedef
r_enum
(brace
multiline_comment|/* I/O Commands */
DECL|enumerator|DAC960_ReadExtended
id|DAC960_ReadExtended
op_assign
l_int|0x33
comma
DECL|enumerator|DAC960_WriteExtended
id|DAC960_WriteExtended
op_assign
l_int|0x34
comma
DECL|enumerator|DAC960_ReadAheadExtended
id|DAC960_ReadAheadExtended
op_assign
l_int|0x35
comma
DECL|enumerator|DAC960_ReadExtendedWithScatterGather
id|DAC960_ReadExtendedWithScatterGather
op_assign
l_int|0xB3
comma
DECL|enumerator|DAC960_WriteExtendedWithScatterGather
id|DAC960_WriteExtendedWithScatterGather
op_assign
l_int|0xB4
comma
DECL|enumerator|DAC960_Read
id|DAC960_Read
op_assign
l_int|0x36
comma
DECL|enumerator|DAC960_ReadWithOldScatterGather
id|DAC960_ReadWithOldScatterGather
op_assign
l_int|0xB6
comma
DECL|enumerator|DAC960_Write
id|DAC960_Write
op_assign
l_int|0x37
comma
DECL|enumerator|DAC960_WriteWithOldScatterGather
id|DAC960_WriteWithOldScatterGather
op_assign
l_int|0xB7
comma
DECL|enumerator|DAC960_DCDB
id|DAC960_DCDB
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_DCDBWithScatterGather
id|DAC960_DCDBWithScatterGather
op_assign
l_int|0x84
comma
DECL|enumerator|DAC960_Flush
id|DAC960_Flush
op_assign
l_int|0x0A
comma
multiline_comment|/* Controller Status Related Commands */
DECL|enumerator|DAC960_Enquiry
id|DAC960_Enquiry
op_assign
l_int|0x53
comma
DECL|enumerator|DAC960_Enquiry2
id|DAC960_Enquiry2
op_assign
l_int|0x1C
comma
DECL|enumerator|DAC960_GetLogicalDriveElement
id|DAC960_GetLogicalDriveElement
op_assign
l_int|0x55
comma
DECL|enumerator|DAC960_GetLogicalDriveInformation
id|DAC960_GetLogicalDriveInformation
op_assign
l_int|0x19
comma
DECL|enumerator|DAC960_IOPortRead
id|DAC960_IOPortRead
op_assign
l_int|0x39
comma
DECL|enumerator|DAC960_IOPortWrite
id|DAC960_IOPortWrite
op_assign
l_int|0x3A
comma
DECL|enumerator|DAC960_GetSDStats
id|DAC960_GetSDStats
op_assign
l_int|0x3E
comma
DECL|enumerator|DAC960_GetPDStats
id|DAC960_GetPDStats
op_assign
l_int|0x3F
comma
DECL|enumerator|DAC960_PerformEventLogOperation
id|DAC960_PerformEventLogOperation
op_assign
l_int|0x72
comma
multiline_comment|/* Device Related Commands */
DECL|enumerator|DAC960_StartDevice
id|DAC960_StartDevice
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_GetDeviceState
id|DAC960_GetDeviceState
op_assign
l_int|0x50
comma
DECL|enumerator|DAC960_StopChannel
id|DAC960_StopChannel
op_assign
l_int|0x13
comma
DECL|enumerator|DAC960_StartChannel
id|DAC960_StartChannel
op_assign
l_int|0x12
comma
DECL|enumerator|DAC960_ResetChannel
id|DAC960_ResetChannel
op_assign
l_int|0x1A
comma
multiline_comment|/* Commands Associated with Data Consistency and Errors */
DECL|enumerator|DAC960_Rebuild
id|DAC960_Rebuild
op_assign
l_int|0x09
comma
DECL|enumerator|DAC960_RebuildAsync
id|DAC960_RebuildAsync
op_assign
l_int|0x16
comma
DECL|enumerator|DAC960_CheckConsistency
id|DAC960_CheckConsistency
op_assign
l_int|0x0F
comma
DECL|enumerator|DAC960_CheckConsistencyAsync
id|DAC960_CheckConsistencyAsync
op_assign
l_int|0x1E
comma
DECL|enumerator|DAC960_RebuildStat
id|DAC960_RebuildStat
op_assign
l_int|0x0C
comma
DECL|enumerator|DAC960_GetRebuildProgress
id|DAC960_GetRebuildProgress
op_assign
l_int|0x27
comma
DECL|enumerator|DAC960_RebuildControl
id|DAC960_RebuildControl
op_assign
l_int|0x1F
comma
DECL|enumerator|DAC960_ReadBadBlockTable
id|DAC960_ReadBadBlockTable
op_assign
l_int|0x0B
comma
DECL|enumerator|DAC960_ReadBadDataTable
id|DAC960_ReadBadDataTable
op_assign
l_int|0x25
comma
DECL|enumerator|DAC960_ClearBadDataTable
id|DAC960_ClearBadDataTable
op_assign
l_int|0x26
comma
DECL|enumerator|DAC960_GetErrorTable
id|DAC960_GetErrorTable
op_assign
l_int|0x17
comma
DECL|enumerator|DAC960_AddCapacityAsync
id|DAC960_AddCapacityAsync
op_assign
l_int|0x2A
comma
multiline_comment|/* Configuration Related Commands */
DECL|enumerator|DAC960_ReadConfig2
id|DAC960_ReadConfig2
op_assign
l_int|0x3D
comma
DECL|enumerator|DAC960_WriteConfig2
id|DAC960_WriteConfig2
op_assign
l_int|0x3C
comma
DECL|enumerator|DAC960_ReadConfigurationOnDisk
id|DAC960_ReadConfigurationOnDisk
op_assign
l_int|0x4A
comma
DECL|enumerator|DAC960_WriteConfigurationOnDisk
id|DAC960_WriteConfigurationOnDisk
op_assign
l_int|0x4B
comma
DECL|enumerator|DAC960_ReadConfiguration
id|DAC960_ReadConfiguration
op_assign
l_int|0x4E
comma
DECL|enumerator|DAC960_ReadBackupConfiguration
id|DAC960_ReadBackupConfiguration
op_assign
l_int|0x4D
comma
DECL|enumerator|DAC960_WriteConfiguration
id|DAC960_WriteConfiguration
op_assign
l_int|0x4F
comma
DECL|enumerator|DAC960_AddConfiguration
id|DAC960_AddConfiguration
op_assign
l_int|0x4C
comma
DECL|enumerator|DAC960_ReadConfigurationLabel
id|DAC960_ReadConfigurationLabel
op_assign
l_int|0x48
comma
DECL|enumerator|DAC960_WriteConfigurationLabel
id|DAC960_WriteConfigurationLabel
op_assign
l_int|0x49
comma
multiline_comment|/* Firmware Upgrade Related Commands */
DECL|enumerator|DAC960_LoadImage
id|DAC960_LoadImage
op_assign
l_int|0x20
comma
DECL|enumerator|DAC960_StoreImage
id|DAC960_StoreImage
op_assign
l_int|0x21
comma
DECL|enumerator|DAC960_ProgramImage
id|DAC960_ProgramImage
op_assign
l_int|0x22
comma
multiline_comment|/* Diagnostic Commands */
DECL|enumerator|DAC960_SetDiagnosticMode
id|DAC960_SetDiagnosticMode
op_assign
l_int|0x31
comma
DECL|enumerator|DAC960_RunDiagnostic
id|DAC960_RunDiagnostic
op_assign
l_int|0x32
comma
multiline_comment|/* Subsystem Service Commands */
DECL|enumerator|DAC960_GetSubsystemData
id|DAC960_GetSubsystemData
op_assign
l_int|0x70
comma
DECL|enumerator|DAC960_SetSubsystemParameters
id|DAC960_SetSubsystemParameters
op_assign
l_int|0x71
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_CommandOpcode_T
id|DAC960_CommandOpcode_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Command Identifier type.&n;*/
DECL|typedef|DAC960_CommandIdentifier_T
r_typedef
r_int
r_char
id|DAC960_CommandIdentifier_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Command Status Codes.&n;*/
DECL|macro|DAC960_NormalCompletion
mdefine_line|#define DAC960_NormalCompletion&t;&t;&t;0x0000&t;/* Common */
DECL|macro|DAC960_CheckConditionReceived
mdefine_line|#define DAC960_CheckConditionReceived&t;&t;0x0002&t;/* Common */
DECL|macro|DAC960_NoDeviceAtAddress
mdefine_line|#define DAC960_NoDeviceAtAddress&t;&t;0x0102&t;/* Common */
DECL|macro|DAC960_InvalidDeviceAddress
mdefine_line|#define DAC960_InvalidDeviceAddress&t;&t;0x0105&t;/* Common */
DECL|macro|DAC960_InvalidParameter
mdefine_line|#define DAC960_InvalidParameter&t;&t;&t;0x0105&t;/* Common */
DECL|macro|DAC960_IrrecoverableDataError
mdefine_line|#define DAC960_IrrecoverableDataError&t;&t;0x0001&t;/* I/O */
DECL|macro|DAC960_LogicalDriveNonexistentOrOffline
mdefine_line|#define DAC960_LogicalDriveNonexistentOrOffline&t;0x0002&t;/* I/O */
DECL|macro|DAC960_AccessBeyondEndOfLogicalDrive
mdefine_line|#define DAC960_AccessBeyondEndOfLogicalDrive&t;0x0105&t;/* I/O */
DECL|macro|DAC960_BadDataEncountered
mdefine_line|#define DAC960_BadDataEncountered&t;&t;0x010C&t;/* I/O */
DECL|macro|DAC960_DeviceBusy
mdefine_line|#define DAC960_DeviceBusy&t;&t;&t;0x0008&t;/* DCDB */
DECL|macro|DAC960_DeviceNonresponsive
mdefine_line|#define DAC960_DeviceNonresponsive&t;&t;0x000E&t;/* DCDB */
DECL|macro|DAC960_CommandTerminatedAbnormally
mdefine_line|#define DAC960_CommandTerminatedAbnormally&t;0x000F&t;/* DCDB */
DECL|macro|DAC960_UnableToStartDevice
mdefine_line|#define DAC960_UnableToStartDevice&t;&t;0x0002&t;/* Device */
DECL|macro|DAC960_InvalidChannelOrTargetOrModifier
mdefine_line|#define DAC960_InvalidChannelOrTargetOrModifier&t;0x0105&t;/* Device */
DECL|macro|DAC960_ChannelBusy
mdefine_line|#define DAC960_ChannelBusy&t;&t;&t;0x0106&t;/* Device */
DECL|macro|DAC960_ChannelNotStopped
mdefine_line|#define DAC960_ChannelNotStopped&t;&t;0x0002&t;/* Device */
DECL|macro|DAC960_AttemptToRebuildOnlineDrive
mdefine_line|#define DAC960_AttemptToRebuildOnlineDrive&t;0x0002&t;/* Consistency */
DECL|macro|DAC960_RebuildBadBlocksEncountered
mdefine_line|#define DAC960_RebuildBadBlocksEncountered&t;0x0003&t;/* Consistency */
DECL|macro|DAC960_NewDiskFailedDuringRebuild
mdefine_line|#define DAC960_NewDiskFailedDuringRebuild&t;0x0004&t;/* Consistency */
DECL|macro|DAC960_RebuildOrCheckAlreadyInProgress
mdefine_line|#define DAC960_RebuildOrCheckAlreadyInProgress&t;0x0106&t;/* Consistency */
DECL|macro|DAC960_DependentDiskIsDead
mdefine_line|#define DAC960_DependentDiskIsDead&t;&t;0x0002&t;/* Consistency */
DECL|macro|DAC960_InconsistentBlocksFound
mdefine_line|#define DAC960_InconsistentBlocksFound&t;&t;0x0003&t;/* Consistency */
DECL|macro|DAC960_InvalidOrNonredundantLogicalDrive
mdefine_line|#define DAC960_InvalidOrNonredundantLogicalDrive 0x0105&t;/* Consistency */
DECL|macro|DAC960_NoRebuildOrCheckInProgress
mdefine_line|#define DAC960_NoRebuildOrCheckInProgress&t;0x0105&t;/* Consistency */
DECL|macro|DAC960_RebuildInProgress_DataValid
mdefine_line|#define DAC960_RebuildInProgress_DataValid&t;0x0000&t;/* Consistency */
DECL|macro|DAC960_RebuildFailed_LogicalDriveFailure
mdefine_line|#define DAC960_RebuildFailed_LogicalDriveFailure 0x0002&t;/* Consistency */
DECL|macro|DAC960_RebuildFailed_BadBlocksOnOther
mdefine_line|#define DAC960_RebuildFailed_BadBlocksOnOther&t;0x0003&t;/* Consistency */
DECL|macro|DAC960_RebuildFailed_NewDriveFailed
mdefine_line|#define DAC960_RebuildFailed_NewDriveFailed&t;0x0004&t;/* Consistency */
DECL|macro|DAC960_RebuildSuccessful
mdefine_line|#define DAC960_RebuildSuccessful&t;&t;0x0100&t;/* Consistency */
DECL|macro|DAC960_AddCapacityInProgress
mdefine_line|#define DAC960_AddCapacityInProgress&t;&t;0x0004&t;/* Consistency */
DECL|macro|DAC960_AddCapacityFailedOrSuspended
mdefine_line|#define DAC960_AddCapacityFailedOrSuspended&t;0x00F4&t;/* Consistency */
DECL|macro|DAC960_Config2ChecksumError
mdefine_line|#define DAC960_Config2ChecksumError&t;&t;0x0002&t;/* Configuration */
DECL|macro|DAC960_ConfigurationSuspended
mdefine_line|#define DAC960_ConfigurationSuspended&t;&t;0x0106&t;/* Configuration */
DECL|macro|DAC960_FailedToConfigureNVRAM
mdefine_line|#define DAC960_FailedToConfigureNVRAM&t;&t;0x0105&t;/* Configuration */
DECL|macro|DAC960_ConfigurationNotSavedStateChange
mdefine_line|#define DAC960_ConfigurationNotSavedStateChange&t;0x0106&t;/* Configuration */
DECL|macro|DAC960_SubsystemNotInstalled
mdefine_line|#define DAC960_SubsystemNotInstalled&t;&t;0x0001&t;/* Subsystem */
DECL|macro|DAC960_SubsystemFailed
mdefine_line|#define DAC960_SubsystemFailed&t;&t;&t;0x0002&t;/* Subsystem */
DECL|macro|DAC960_SubsystemBusy
mdefine_line|#define DAC960_SubsystemBusy&t;&t;&t;0x0106&t;/* Subsystem */
DECL|typedef|DAC960_CommandStatus_T
r_typedef
r_int
r_int
id|DAC960_CommandStatus_T
suffix:semicolon
multiline_comment|/*&n;  Define the Enquiry reply structure.&n;*/
DECL|struct|DAC960_Enquiry
r_typedef
r_struct
id|DAC960_Enquiry
(brace
DECL|member|NumberOfLogicalDrives
r_int
r_char
id|NumberOfLogicalDrives
suffix:semicolon
multiline_comment|/* Byte 0 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 1-3 */
DECL|member|LogicalDriveSizes
r_int
r_int
id|LogicalDriveSizes
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* Bytes 4-131 */
DECL|member|FlashAge
r_int
r_int
id|FlashAge
suffix:semicolon
multiline_comment|/* Bytes 132-133 */
r_struct
(brace
DECL|member|DeferredWriteError
id|boolean
id|DeferredWriteError
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 134 Bit 0 */
DECL|member|BatteryLow
id|boolean
id|BatteryLow
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 134 Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 134 Bits 2-7 */
DECL|member|StatusFlags
)brace
id|StatusFlags
suffix:semicolon
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 135 */
DECL|member|MinorFirmwareVersion
r_int
r_char
id|MinorFirmwareVersion
suffix:semicolon
multiline_comment|/* Byte 136 */
DECL|member|MajorFirmwareVersion
r_int
r_char
id|MajorFirmwareVersion
suffix:semicolon
multiline_comment|/* Byte 137 */
r_enum
(brace
DECL|enumerator|DAC960_NoStandbyRebuildOrCheckInProgress
id|DAC960_NoStandbyRebuildOrCheckInProgress
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_StandbyRebuildInProgress
id|DAC960_StandbyRebuildInProgress
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_BackgroundRebuildInProgress
id|DAC960_BackgroundRebuildInProgress
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_BackgroundCheckInProgress
id|DAC960_BackgroundCheckInProgress
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_StandbyRebuildCompletedWithError
id|DAC960_StandbyRebuildCompletedWithError
op_assign
l_int|0xFF
comma
DECL|enumerator|DAC960_BackgroundRebuildOrCheckFailed_DriveFailed
id|DAC960_BackgroundRebuildOrCheckFailed_DriveFailed
op_assign
l_int|0xF0
comma
DECL|enumerator|DAC960_BackgroundRebuildOrCheckFailed_LogicalDriveFailed
id|DAC960_BackgroundRebuildOrCheckFailed_LogicalDriveFailed
op_assign
l_int|0xF1
comma
DECL|enumerator|DAC960_BackgroundRebuildOrCheckFailed_OtherCauses
id|DAC960_BackgroundRebuildOrCheckFailed_OtherCauses
op_assign
l_int|0xF2
comma
DECL|enumerator|DAC960_BackgroundRebuildOrCheckSuccessfullyTerminated
id|DAC960_BackgroundRebuildOrCheckSuccessfullyTerminated
op_assign
l_int|0xF3
DECL|member|RebuildFlag
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|RebuildFlag
suffix:semicolon
multiline_comment|/* Byte 138 */
DECL|member|MaxCommands
r_int
r_char
id|MaxCommands
suffix:semicolon
multiline_comment|/* Byte 139 */
DECL|member|OfflineLogicalDriveCount
r_int
r_char
id|OfflineLogicalDriveCount
suffix:semicolon
multiline_comment|/* Byte 140 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 141 */
DECL|member|EventLogSequenceNumber
r_int
r_int
id|EventLogSequenceNumber
suffix:semicolon
multiline_comment|/* Bytes 142-143 */
DECL|member|CriticalLogicalDriveCount
r_int
r_char
id|CriticalLogicalDriveCount
suffix:semicolon
multiline_comment|/* Byte 144 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 145-147 */
DECL|member|DeadDriveCount
r_int
r_char
id|DeadDriveCount
suffix:semicolon
multiline_comment|/* Byte 148 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 149 */
DECL|member|RebuildCount
r_int
r_char
id|RebuildCount
suffix:semicolon
multiline_comment|/* Byte 150 */
r_struct
(brace
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 151 Bits 0-2 */
DECL|member|BatteryBackupUnitPresent
id|boolean
id|BatteryBackupUnitPresent
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 151 Bit 3 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 151 Bits 4-6 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 151 Bit 7 */
DECL|member|MiscFlags
)brace
id|MiscFlags
suffix:semicolon
r_struct
(brace
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:semicolon
DECL|member|Channel
r_int
r_char
id|Channel
suffix:semicolon
DECL|member|DeadDrives
)brace
id|DeadDrives
(braket
l_int|21
)braket
suffix:semicolon
multiline_comment|/* Bytes 152-194 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|62
)braket
suffix:semicolon
multiline_comment|/* Bytes 195-255 */
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_Enquiry_T
id|DAC960_Enquiry_T
suffix:semicolon
multiline_comment|/*&n;  Define the Enquiry2 reply structure.&n;*/
DECL|struct|DAC960_Enquiry2
r_typedef
r_struct
id|DAC960_Enquiry2
(brace
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_P_PD_PU
id|DAC960_P_PD_PU
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_PL
id|DAC960_PL
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_PG
id|DAC960_PG
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_PJ
id|DAC960_PJ
op_assign
l_int|0x11
comma
DECL|enumerator|DAC960_PR
id|DAC960_PR
op_assign
l_int|0x12
comma
DECL|enumerator|DAC960_PT
id|DAC960_PT
op_assign
l_int|0x13
comma
DECL|enumerator|DAC960_PTL0
id|DAC960_PTL0
op_assign
l_int|0x14
comma
DECL|enumerator|DAC960_PRL
id|DAC960_PRL
op_assign
l_int|0x15
comma
DECL|enumerator|DAC960_PTL1
id|DAC960_PTL1
op_assign
l_int|0x16
comma
DECL|enumerator|DAC1164_P
id|DAC1164_P
op_assign
l_int|0x20
DECL|member|SubModel
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|SubModel
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|ActualChannels
r_int
r_char
id|ActualChannels
suffix:semicolon
multiline_comment|/* Byte 1 */
r_enum
(brace
DECL|enumerator|DAC960_FiveChannelBoard
id|DAC960_FiveChannelBoard
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_ThreeChannelBoard
id|DAC960_ThreeChannelBoard
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_TwoChannelBoard
id|DAC960_TwoChannelBoard
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_ThreeChannelASIC_DAC
id|DAC960_ThreeChannelASIC_DAC
op_assign
l_int|0x04
DECL|member|Model
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Model
suffix:semicolon
multiline_comment|/* Byte 2 */
r_enum
(brace
DECL|enumerator|DAC960_EISA_Controller
id|DAC960_EISA_Controller
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_MicroChannel_Controller
id|DAC960_MicroChannel_Controller
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_PCI_Controller
id|DAC960_PCI_Controller
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_SCSItoSCSI_Controller
id|DAC960_SCSItoSCSI_Controller
op_assign
l_int|0x08
DECL|member|ProductFamily
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ProductFamily
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|HardwareID
)brace
id|HardwareID
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
multiline_comment|/* MajorVersion.MinorVersion-FirmwareType-TurnID */
r_struct
(brace
DECL|member|MajorVersion
r_int
r_char
id|MajorVersion
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|MinorVersion
r_int
r_char
id|MinorVersion
suffix:semicolon
multiline_comment|/* Byte 5 */
DECL|member|TurnID
r_int
r_char
id|TurnID
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|FirmwareType
r_char
id|FirmwareType
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|FirmwareID
)brace
id|FirmwareID
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 8 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 9-11 */
DECL|member|ConfiguredChannels
r_int
r_char
id|ConfiguredChannels
suffix:semicolon
multiline_comment|/* Byte 12 */
DECL|member|ActualChannels
r_int
r_char
id|ActualChannels
suffix:semicolon
multiline_comment|/* Byte 13 */
DECL|member|MaxTargets
r_int
r_char
id|MaxTargets
suffix:semicolon
multiline_comment|/* Byte 14 */
DECL|member|MaxTags
r_int
r_char
id|MaxTags
suffix:semicolon
multiline_comment|/* Byte 15 */
DECL|member|MaxLogicalDrives
r_int
r_char
id|MaxLogicalDrives
suffix:semicolon
multiline_comment|/* Byte 16 */
DECL|member|MaxArms
r_int
r_char
id|MaxArms
suffix:semicolon
multiline_comment|/* Byte 17 */
DECL|member|MaxSpans
r_int
r_char
id|MaxSpans
suffix:semicolon
multiline_comment|/* Byte 18 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 19 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 20-23 */
DECL|member|MemorySize
r_int
r_int
id|MemorySize
suffix:semicolon
multiline_comment|/* Bytes 24-27 */
DECL|member|CacheSize
r_int
r_int
id|CacheSize
suffix:semicolon
multiline_comment|/* Bytes 28-31 */
DECL|member|FlashMemorySize
r_int
r_int
id|FlashMemorySize
suffix:semicolon
multiline_comment|/* Bytes 32-35 */
DECL|member|NonVolatileMemorySize
r_int
r_int
id|NonVolatileMemorySize
suffix:semicolon
multiline_comment|/* Bytes 36-39 */
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_DRAM
id|DAC960_DRAM
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_EDO
id|DAC960_EDO
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_SDRAM
id|DAC960_SDRAM
op_assign
l_int|0x02
DECL|member|RamType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|RamType
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 40 Bits 0-2 */
r_enum
(brace
DECL|enumerator|DAC960_None
id|DAC960_None
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_Parity
id|DAC960_Parity
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_ECC
id|DAC960_ECC
op_assign
l_int|0x02
DECL|member|ErrorCorrection
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ErrorCorrection
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 40 Bits 3-5 */
DECL|member|FastPageMode
id|boolean
id|FastPageMode
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 40 Bit 6 */
DECL|member|LowPowerMemory
id|boolean
id|LowPowerMemory
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 40 Bit 7 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Bytes 41 */
DECL|member|MemoryType
)brace
id|MemoryType
suffix:semicolon
DECL|member|ClockSpeed
r_int
r_int
id|ClockSpeed
suffix:semicolon
multiline_comment|/* Bytes 42-43 */
DECL|member|MemorySpeed
r_int
r_int
id|MemorySpeed
suffix:semicolon
multiline_comment|/* Bytes 44-45 */
DECL|member|HardwareSpeed
r_int
r_int
id|HardwareSpeed
suffix:semicolon
multiline_comment|/* Bytes 46-47 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 48-51 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 52-55 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 56 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 57 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 58-59 */
DECL|member|MaxCommands
r_int
r_int
id|MaxCommands
suffix:semicolon
multiline_comment|/* Bytes 60-61 */
DECL|member|MaxScatterGatherEntries
r_int
r_int
id|MaxScatterGatherEntries
suffix:semicolon
multiline_comment|/* Bytes 62-63 */
DECL|member|MaxDriveCommands
r_int
r_int
id|MaxDriveCommands
suffix:semicolon
multiline_comment|/* Bytes 64-65 */
DECL|member|MaxIODescriptors
r_int
r_int
id|MaxIODescriptors
suffix:semicolon
multiline_comment|/* Bytes 66-67 */
DECL|member|MaxCombinedSectors
r_int
r_int
id|MaxCombinedSectors
suffix:semicolon
multiline_comment|/* Bytes 68-69 */
DECL|member|Latency
r_int
r_char
id|Latency
suffix:semicolon
multiline_comment|/* Byte 70 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 71 */
DECL|member|SCSITimeout
r_int
r_char
id|SCSITimeout
suffix:semicolon
multiline_comment|/* Byte 72 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 73 */
DECL|member|MinFreeLines
r_int
r_int
id|MinFreeLines
suffix:semicolon
multiline_comment|/* Bytes 74-75 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 76-79 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 80-83 */
DECL|member|RebuildRateConstant
r_int
r_char
id|RebuildRateConstant
suffix:semicolon
multiline_comment|/* Byte 84 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 85 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 86 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 87 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 88-91 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 92-95 */
DECL|member|PhysicalDriveBlockSize
r_int
r_int
id|PhysicalDriveBlockSize
suffix:semicolon
multiline_comment|/* Bytes 96-97 */
DECL|member|LogicalDriveBlockSize
r_int
r_int
id|LogicalDriveBlockSize
suffix:semicolon
multiline_comment|/* Bytes 98-99 */
DECL|member|MaxBlocksPerCommand
r_int
r_int
id|MaxBlocksPerCommand
suffix:semicolon
multiline_comment|/* Bytes 100-101 */
DECL|member|BlockFactor
r_int
r_int
id|BlockFactor
suffix:semicolon
multiline_comment|/* Bytes 102-103 */
DECL|member|CacheLineSize
r_int
r_int
id|CacheLineSize
suffix:semicolon
multiline_comment|/* Bytes 104-105 */
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_Narrow_8bit
id|DAC960_Narrow_8bit
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_Wide_16bit
id|DAC960_Wide_16bit
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_Wide_32bit
id|DAC960_Wide_32bit
op_assign
l_int|0x02
DECL|member|BusWidth
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|BusWidth
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 106 Bits 0-1 */
r_enum
(brace
DECL|enumerator|DAC960_Fast
id|DAC960_Fast
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_Ultra
id|DAC960_Ultra
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_Ultra2
id|DAC960_Ultra2
op_assign
l_int|0x02
DECL|member|BusSpeed
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|BusSpeed
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 106 Bits 2-3 */
DECL|member|Differential
id|boolean
id|Differential
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 106 Bit 4 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 106 Bits 5-7 */
DECL|member|SCSICapability
)brace
id|SCSICapability
suffix:semicolon
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 107 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 108-111 */
DECL|member|FirmwareBuildNumber
r_int
r_int
id|FirmwareBuildNumber
suffix:semicolon
multiline_comment|/* Bytes 112-113 */
r_enum
(brace
DECL|enumerator|DAC960_AEMI
id|DAC960_AEMI
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_OEM1
id|DAC960_OEM1
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_OEM2
id|DAC960_OEM2
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_OEM3
id|DAC960_OEM3
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_Conner
id|DAC960_Conner
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_SAFTE
id|DAC960_SAFTE
op_assign
l_int|0x20
DECL|member|FaultManagementType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|FaultManagementType
suffix:semicolon
multiline_comment|/* Byte 114 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 115 */
r_struct
(brace
DECL|member|Clustering
id|boolean
id|Clustering
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 116 Bit 0 */
DECL|member|MylexOnlineRAIDExpansion
id|boolean
id|MylexOnlineRAIDExpansion
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 116 Bit 1 */
r_int
r_int
suffix:colon
l_int|30
suffix:semicolon
multiline_comment|/* Bytes 116-119 */
DECL|member|FirmwareFeatures
)brace
id|FirmwareFeatures
suffix:semicolon
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 120-123 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 124-127 */
)brace
DECL|typedef|DAC960_Enquiry2_T
id|DAC960_Enquiry2_T
suffix:semicolon
multiline_comment|/*&n;  Define the Logical Drive State type.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_LogicalDrive_Online
id|DAC960_LogicalDrive_Online
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_LogicalDrive_Critical
id|DAC960_LogicalDrive_Critical
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_LogicalDrive_Offline
id|DAC960_LogicalDrive_Offline
op_assign
l_int|0xFF
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_LogicalDriveState_T
id|DAC960_LogicalDriveState_T
suffix:semicolon
multiline_comment|/*&n;  Define the Get Logical Drive Information reply structure.&n;*/
DECL|struct|DAC960_LogicalDriveInformation
r_typedef
r_struct
id|DAC960_LogicalDriveInformation
(brace
DECL|member|LogicalDriveSize
r_int
r_int
id|LogicalDriveSize
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
DECL|member|LogicalDriveState
id|DAC960_LogicalDriveState_T
id|LogicalDriveState
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|RAIDLevel
r_int
r_char
id|RAIDLevel
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 5 Bits 0-6 */
DECL|member|WriteBack
id|boolean
id|WriteBack
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 5 Bit 7 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 6-7 */
)brace
DECL|typedef|DAC960_LogicalDriveInformation_T
id|DAC960_LogicalDriveInformation_T
suffix:semicolon
multiline_comment|/*&n;  Define the Perform Event Log Operation Types.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_GetEventLogEntry
id|DAC960_GetEventLogEntry
op_assign
l_int|0x00
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_PerformEventLogOpType_T
id|DAC960_PerformEventLogOpType_T
suffix:semicolon
multiline_comment|/*&n;  Define the Get Event Log Entry reply structure.&n;*/
DECL|struct|DAC960_EventLogEntry
r_typedef
r_struct
id|DAC960_EventLogEntry
(brace
DECL|member|MessageType
r_int
r_char
id|MessageType
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|MessageLength
r_int
r_char
id|MessageLength
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 2 Bits 0-4 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 2 Bits 5-7 */
DECL|member|LogicalUnit
r_int
r_char
id|LogicalUnit
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 3 Bits 0-5 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 3 Bits 6-7 */
DECL|member|SequenceNumber
r_int
r_int
id|SequenceNumber
suffix:semicolon
multiline_comment|/* Bytes 4-5 */
DECL|member|ErrorCode
r_int
r_char
id|ErrorCode
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 6 Bits 0-6 */
DECL|member|Valid
id|boolean
id|Valid
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 6 Bit 7 */
DECL|member|SegmentNumber
r_int
r_char
id|SegmentNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|SenseKey
r_int
r_char
id|SenseKey
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 8 Bits 0-3 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 4 */
DECL|member|ILI
id|boolean
id|ILI
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 5 */
DECL|member|EOM
id|boolean
id|EOM
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 6 */
DECL|member|Filemark
id|boolean
id|Filemark
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 7 */
DECL|member|Information
r_int
r_char
id|Information
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 9-12 */
DECL|member|AdditionalSenseLength
r_int
r_char
id|AdditionalSenseLength
suffix:semicolon
multiline_comment|/* Byte 13 */
DECL|member|CommandSpecificInformation
r_int
r_char
id|CommandSpecificInformation
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 14-17 */
DECL|member|AdditionalSenseCode
r_int
r_char
id|AdditionalSenseCode
suffix:semicolon
multiline_comment|/* Byte 18 */
DECL|member|AdditionalSenseCodeQualifier
r_int
r_char
id|AdditionalSenseCodeQualifier
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 20-31 */
)brace
DECL|typedef|DAC960_EventLogEntry_T
id|DAC960_EventLogEntry_T
suffix:semicolon
multiline_comment|/*&n;  Define the Physical Device State type.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_Device_Dead
id|DAC960_Device_Dead
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_Device_WriteOnly
id|DAC960_Device_WriteOnly
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_Device_Online
id|DAC960_Device_Online
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_Device_Standby
id|DAC960_Device_Standby
op_assign
l_int|0x10
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_PhysicalDeviceState_T
id|DAC960_PhysicalDeviceState_T
suffix:semicolon
multiline_comment|/*&n;  Define the Get Device State reply structure.&n;*/
DECL|struct|DAC960_DeviceState
r_typedef
r_struct
id|DAC960_DeviceState
(brace
DECL|member|Present
id|boolean
id|Present
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 0 Bits 1-7 */
r_enum
(brace
DECL|enumerator|DAC960_OtherType
id|DAC960_OtherType
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_DiskType
id|DAC960_DiskType
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_SequentialType
id|DAC960_SequentialType
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_CDROM_or_WORM_Type
id|DAC960_CDROM_or_WORM_Type
op_assign
l_int|0x03
DECL|member|DeviceType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|DeviceType
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 1 Bits 0-1 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 2 */
DECL|member|Fast20
id|boolean
id|Fast20
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 3 */
DECL|member|Sync
id|boolean
id|Sync
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 4 */
DECL|member|Fast
id|boolean
id|Fast
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 5 */
DECL|member|Wide
id|boolean
id|Wide
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 6 */
DECL|member|TaggedQueuingSupported
id|boolean
id|TaggedQueuingSupported
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
DECL|member|DeviceState
id|DAC960_PhysicalDeviceState_T
id|DeviceState
suffix:semicolon
multiline_comment|/* Byte 2 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|SynchronousMultiplier
r_int
r_char
id|SynchronousMultiplier
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|SynchronousOffset
r_int
r_char
id|SynchronousOffset
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 5 Bits 0-4 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 5 Bits 5-7 */
DECL|member|DiskSize
r_int
r_int
id|DiskSize
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* Bytes 6-9 */
)brace
DECL|typedef|DAC960_DeviceState_T
id|DAC960_DeviceState_T
suffix:semicolon
multiline_comment|/*&n;  Define the Get Rebuild Progress reply structure.&n;*/
DECL|struct|DAC960_RebuildProgress
r_typedef
r_struct
id|DAC960_RebuildProgress
(brace
DECL|member|LogicalDriveNumber
r_int
r_int
id|LogicalDriveNumber
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
DECL|member|LogicalDriveSize
r_int
r_int
id|LogicalDriveSize
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|RemainingBlocks
r_int
r_int
id|RemainingBlocks
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
)brace
DECL|typedef|DAC960_RebuildProgress_T
id|DAC960_RebuildProgress_T
suffix:semicolon
multiline_comment|/*&n;  Define the Error Table Entry and Get Error Table reply structure.&n;*/
DECL|struct|DAC960_ErrorTableEntry
r_typedef
r_struct
id|DAC960_ErrorTableEntry
(brace
DECL|member|ParityErrorCount
r_int
r_char
id|ParityErrorCount
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|SoftErrorCount
r_int
r_char
id|SoftErrorCount
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|HardErrorCount
r_int
r_char
id|HardErrorCount
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|MiscErrorCount
r_int
r_char
id|MiscErrorCount
suffix:semicolon
multiline_comment|/* Byte 3 */
)brace
DECL|typedef|DAC960_ErrorTableEntry_T
id|DAC960_ErrorTableEntry_T
suffix:semicolon
multiline_comment|/*&n;  Define the Get Error Table reply structure.&n;*/
DECL|struct|DAC960_ErrorTable
r_typedef
r_struct
id|DAC960_ErrorTable
(brace
id|DAC960_ErrorTableEntry_T
DECL|member|ErrorTableEntries
id|ErrorTableEntries
(braket
id|DAC960_MaxChannels
)braket
(braket
id|DAC960_MaxTargets
)braket
suffix:semicolon
)brace
DECL|typedef|DAC960_ErrorTable_T
id|DAC960_ErrorTable_T
suffix:semicolon
multiline_comment|/*&n;  Define the Config2 reply structure.&n;*/
DECL|struct|DAC960_Config2
r_typedef
r_struct
id|DAC960_Config2
(brace
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 0 */
DECL|member|ActiveNegationEnabled
id|boolean
id|ActiveNegationEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 1 */
r_int
r_char
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 0 Bits 2-6 */
DECL|member|NoRescanIfResetReceivedDuringScan
id|boolean
id|NoRescanIfResetReceivedDuringScan
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 7 */
DECL|member|StorageWorksSupportEnabled
id|boolean
id|StorageWorksSupportEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 0 */
DECL|member|HewlettPackardSupportEnabled
id|boolean
id|HewlettPackardSupportEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 1 */
DECL|member|NoDisconnectOnFirstCommand
id|boolean
id|NoDisconnectOnFirstCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 2 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 1 Bits 3-4 */
DECL|member|AEMI_ARM
id|boolean
id|AEMI_ARM
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 5 */
DECL|member|AEMI_OFM
id|boolean
id|AEMI_OFM
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 6 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
r_enum
(brace
DECL|enumerator|DAC960_OEMID_Mylex
id|DAC960_OEMID_Mylex
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_OEMID_IBM
id|DAC960_OEMID_IBM
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_OEMID_HP
id|DAC960_OEMID_HP
op_assign
l_int|0x0A
comma
DECL|enumerator|DAC960_OEMID_DEC
id|DAC960_OEMID_DEC
op_assign
l_int|0x0C
comma
DECL|enumerator|DAC960_OEMID_Siemens
id|DAC960_OEMID_Siemens
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_OEMID_Intel
id|DAC960_OEMID_Intel
op_assign
l_int|0x12
DECL|member|OEMID
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|OEMID
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|OEMModelNumber
r_int
r_char
id|OEMModelNumber
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|PhysicalSector
r_int
r_char
id|PhysicalSector
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|LogicalSector
r_int
r_char
id|LogicalSector
suffix:semicolon
multiline_comment|/* Byte 5 */
DECL|member|BlockFactor
r_int
r_char
id|BlockFactor
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|ReadAheadEnabled
id|boolean
id|ReadAheadEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 0 */
DECL|member|LowBIOSDelay
id|boolean
id|LowBIOSDelay
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 1 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 7 Bits 2-3 */
DECL|member|ReassignRestrictedToOneSector
id|boolean
id|ReassignRestrictedToOneSector
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 4 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 5 */
DECL|member|ForceUnitAccessDuringWriteRecovery
id|boolean
id|ForceUnitAccessDuringWriteRecovery
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 6 */
DECL|member|EnableLeftSymmetricRAID5Algorithm
id|boolean
id|EnableLeftSymmetricRAID5Algorithm
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 7 */
DECL|member|DefaultRebuildRate
r_int
r_char
id|DefaultRebuildRate
suffix:semicolon
multiline_comment|/* Byte 8 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 9 */
DECL|member|BlocksPerCacheLine
r_int
r_char
id|BlocksPerCacheLine
suffix:semicolon
multiline_comment|/* Byte 10 */
DECL|member|BlocksPerStripe
r_int
r_char
id|BlocksPerStripe
suffix:semicolon
multiline_comment|/* Byte 11 */
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_Async
id|DAC960_Async
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_Sync_8MHz
id|DAC960_Sync_8MHz
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_Sync_5MHz
id|DAC960_Sync_5MHz
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_Sync_10or20MHz
id|DAC960_Sync_10or20MHz
op_assign
l_int|0x03
multiline_comment|/* Bits 0-1 */
DECL|member|Speed
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Speed
suffix:colon
l_int|2
suffix:semicolon
DECL|member|Force8Bit
id|boolean
id|Force8Bit
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|DisableFast20
id|boolean
id|DisableFast20
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Bits 4-6 */
DECL|member|EnableTaggedQueuing
id|boolean
id|EnableTaggedQueuing
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 7 */
DECL|member|ChannelParameters
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ChannelParameters
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-17 */
DECL|member|SCSIInitiatorID
r_int
r_char
id|SCSIInitiatorID
suffix:semicolon
multiline_comment|/* Byte 18 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 19 */
r_enum
(brace
DECL|enumerator|DAC960_StartupMode_ControllerSpinUp
id|DAC960_StartupMode_ControllerSpinUp
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_StartupMode_PowerOnSpinUp
id|DAC960_StartupMode_PowerOnSpinUp
op_assign
l_int|0x01
DECL|member|StartupMode
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|StartupMode
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|SimultaneousDeviceSpinUpCount
r_int
r_char
id|SimultaneousDeviceSpinUpCount
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|SecondsDelayBetweenSpinUps
r_int
r_char
id|SecondsDelayBetweenSpinUps
suffix:semicolon
multiline_comment|/* Byte 22 */
DECL|member|Reserved1
r_int
r_char
id|Reserved1
(braket
l_int|29
)braket
suffix:semicolon
multiline_comment|/* Bytes 23-51 */
DECL|member|BIOSDisabled
id|boolean
id|BIOSDisabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 52 Bit 0 */
DECL|member|CDROMBootEnabled
id|boolean
id|CDROMBootEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 52 Bit 1 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 52 Bits 2-4 */
r_enum
(brace
DECL|enumerator|DAC960_Geometry_128_32
id|DAC960_Geometry_128_32
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_Geometry_255_63
id|DAC960_Geometry_255_63
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_Geometry_Reserved1
id|DAC960_Geometry_Reserved1
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_Geometry_Reserved2
id|DAC960_Geometry_Reserved2
op_assign
l_int|0x03
DECL|member|DriveGeometry
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|DriveGeometry
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 52 Bits 5-6 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 52 Bit 7 */
DECL|member|Reserved2
r_int
r_char
id|Reserved2
(braket
l_int|9
)braket
suffix:semicolon
multiline_comment|/* Bytes 53-61 */
DECL|member|Checksum
r_int
r_int
id|Checksum
suffix:semicolon
multiline_comment|/* Bytes 62-63 */
)brace
DECL|typedef|DAC960_Config2_T
id|DAC960_Config2_T
suffix:semicolon
multiline_comment|/*&n;  Define the DCDB request structure.&n;*/
DECL|struct|DAC960_DCDB
r_typedef
r_struct
id|DAC960_DCDB
(brace
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-3 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 0 Bits 4-7 */
r_enum
(brace
DECL|enumerator|DAC960_DCDB_NoDataTransfer
id|DAC960_DCDB_NoDataTransfer
op_assign
l_int|0
comma
DECL|enumerator|DAC960_DCDB_DataTransferDeviceToSystem
id|DAC960_DCDB_DataTransferDeviceToSystem
op_assign
l_int|1
comma
DECL|enumerator|DAC960_DCDB_DataTransferSystemToDevice
id|DAC960_DCDB_DataTransferSystemToDevice
op_assign
l_int|2
comma
DECL|enumerator|DAC960_DCDB_IllegalDataTransfer
id|DAC960_DCDB_IllegalDataTransfer
op_assign
l_int|3
DECL|member|Direction
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Direction
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 1 Bits 0-1 */
DECL|member|EarlyStatus
id|boolean
id|EarlyStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 2 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 3 */
r_enum
(brace
DECL|enumerator|DAC960_DCDB_Timeout_24_hours
id|DAC960_DCDB_Timeout_24_hours
op_assign
l_int|0
comma
DECL|enumerator|DAC960_DCDB_Timeout_10_seconds
id|DAC960_DCDB_Timeout_10_seconds
op_assign
l_int|1
comma
DECL|enumerator|DAC960_DCDB_Timeout_60_seconds
id|DAC960_DCDB_Timeout_60_seconds
op_assign
l_int|2
comma
DECL|enumerator|DAC960_DCDB_Timeout_10_minutes
id|DAC960_DCDB_Timeout_10_minutes
op_assign
l_int|3
DECL|member|Timeout
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Timeout
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 1 Bits 4-5 */
DECL|member|NoAutomaticRequestSense
id|boolean
id|NoAutomaticRequestSense
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 6 */
DECL|member|DisconnectPermitted
id|boolean
id|DisconnectPermitted
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
DECL|member|TransferLength
r_int
r_int
id|TransferLength
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|BusAddress
id|DAC960_BusAddress_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|CDBLength
r_int
r_char
id|CDBLength
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 8 Bits 0-3 */
DECL|member|TransferLengthHigh4
r_int
r_char
id|TransferLengthHigh4
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 8 Bits 4-7 */
DECL|member|SenseLength
r_int
r_char
id|SenseLength
suffix:semicolon
multiline_comment|/* Byte 9 */
DECL|member|CDB
r_int
r_char
id|CDB
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 10-21 */
DECL|member|SenseData
r_int
r_char
id|SenseData
(braket
l_int|64
)braket
suffix:semicolon
multiline_comment|/* Bytes 22-85 */
DECL|member|Status
r_int
r_char
id|Status
suffix:semicolon
multiline_comment|/* Byte 86 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 87 */
)brace
DECL|typedef|DAC960_DCDB_T
id|DAC960_DCDB_T
suffix:semicolon
multiline_comment|/*&n;  Define the SCSI INQUIRY Standard Data reply structure.&n;*/
DECL|struct|DAC960_SCSI_Inquiry
r_typedef
r_struct
id|DAC960_SCSI_Inquiry
(brace
DECL|member|PeripheralDeviceType
r_int
r_char
id|PeripheralDeviceType
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-4 */
DECL|member|PeripheralQualifier
r_int
r_char
id|PeripheralQualifier
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 0 Bits 5-7 */
DECL|member|DeviceTypeModifier
r_int
r_char
id|DeviceTypeModifier
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 1 Bits 0-6 */
DECL|member|RMB
id|boolean
id|RMB
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
DECL|member|ANSI_ApprovedVersion
r_int
r_char
id|ANSI_ApprovedVersion
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 2 Bits 0-2 */
DECL|member|ECMA_Version
r_int
r_char
id|ECMA_Version
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 2 Bits 3-5 */
DECL|member|ISO_Version
r_int
r_char
id|ISO_Version
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 2 Bits 6-7 */
DECL|member|ResponseDataFormat
r_int
r_char
id|ResponseDataFormat
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 3 Bits 0-3 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 3 Bits 4-5 */
DECL|member|TrmIOP
id|boolean
id|TrmIOP
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 3 Bit 6 */
DECL|member|AENC
id|boolean
id|AENC
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 3 Bit 7 */
DECL|member|AdditionalLength
r_int
r_char
id|AdditionalLength
suffix:semicolon
multiline_comment|/* Byte 4 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 5 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|SftRe
id|boolean
id|SftRe
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 0 */
DECL|member|CmdQue
id|boolean
id|CmdQue
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 1 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 2 */
DECL|member|Linked
id|boolean
id|Linked
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 3 */
DECL|member|Sync
id|boolean
id|Sync
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 4 */
DECL|member|WBus16
id|boolean
id|WBus16
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 5 */
DECL|member|WBus32
id|boolean
id|WBus32
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 6 */
DECL|member|RelAdr
id|boolean
id|RelAdr
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 7 */
DECL|member|VendorIdentification
r_int
r_char
id|VendorIdentification
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|ProductIdentification
r_int
r_char
id|ProductIdentification
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 16-31 */
DECL|member|ProductRevisionLevel
r_int
r_char
id|ProductRevisionLevel
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 32-35 */
)brace
DECL|typedef|DAC960_SCSI_Inquiry_T
id|DAC960_SCSI_Inquiry_T
suffix:semicolon
multiline_comment|/*&n;  Define the SCSI INQUIRY Unit Serial Number reply structure.&n;*/
DECL|struct|DAC960_SCSI_Inquiry_UnitSerialNumber
r_typedef
r_struct
id|DAC960_SCSI_Inquiry_UnitSerialNumber
(brace
DECL|member|PeripheralDeviceType
r_int
r_char
id|PeripheralDeviceType
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-4 */
DECL|member|PeripheralQualifier
r_int
r_char
id|PeripheralQualifier
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 0 Bits 5-7 */
DECL|member|PageCode
r_int
r_char
id|PageCode
suffix:semicolon
multiline_comment|/* Byte 1 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|PageLength
r_int
r_char
id|PageLength
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|ProductSerialNumber
r_int
r_char
id|ProductSerialNumber
(braket
l_int|28
)braket
suffix:semicolon
multiline_comment|/* Bytes 4 - 31 */
)brace
DECL|typedef|DAC960_SCSI_Inquiry_UnitSerialNumber_T
id|DAC960_SCSI_Inquiry_UnitSerialNumber_T
suffix:semicolon
multiline_comment|/*&n;  Define the Scatter/Gather List Type 1 32 Bit Address 32 Bit Byte Count&n;  structure.&n;*/
DECL|struct|DAC960_ScatterGatherSegment
r_typedef
r_struct
id|DAC960_ScatterGatherSegment
(brace
DECL|member|SegmentDataPointer
id|DAC960_BusAddress_T
id|SegmentDataPointer
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
DECL|member|SegmentByteCount
id|DAC960_ByteCount_T
id|SegmentByteCount
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
)brace
DECL|typedef|DAC960_ScatterGatherSegment_T
id|DAC960_ScatterGatherSegment_T
suffix:semicolon
multiline_comment|/*&n;  Define the 13 Byte DAC960 Command Mailbox structure.  Bytes 13-15 are&n;  not used.  The Command Mailbox structure is padded to 16 bytes for&n;  efficient access.&n;*/
DECL|union|DAC960_CommandMailbox
r_typedef
r_union
id|DAC960_CommandMailbox
(brace
DECL|member|Words
r_int
r_int
id|Words
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Words 0-3 */
DECL|member|Bytes
r_int
r_char
id|Bytes
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 0-15 */
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|14
)braket
suffix:semicolon
multiline_comment|/* Bytes 2-15 */
DECL|member|Common
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Common
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/* Bytes 2-7 */
DECL|member|BusAddress
id|DAC960_BusAddress_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|Type3
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|5
)braket
suffix:semicolon
multiline_comment|/* Bytes 2-6 */
DECL|member|LogicalDriveNumber
r_int
r_char
id|LogicalDriveNumber
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 7 Bits 0-6 */
DECL|member|AutoRestore
id|boolean
id|AutoRestore
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 7 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|Type3C
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3C
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DeviceState
id|DAC960_PhysicalDeviceState_T
id|DeviceState
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 4 Bits 0-4 */
DECL|member|Modifier
r_int
r_char
id|Modifier
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 4 Bits 5-7 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Bytes 5-7 */
DECL|member|BusAddress
id|DAC960_BusAddress_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|Type3D
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3D
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|OperationType
id|DAC960_PerformEventLogOpType_T
id|OperationType
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|OperationQualifier
r_int
r_char
id|OperationQualifier
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|SequenceNumber
r_int
r_int
id|SequenceNumber
suffix:semicolon
multiline_comment|/* Bytes 4-5 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Bytes 6-7 */
DECL|member|BusAddress
id|DAC960_BusAddress_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|Type3E
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3E
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|RebuildRateConstant
r_int
r_char
id|RebuildRateConstant
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Bytes 5-7 */
DECL|member|BusAddress
id|DAC960_BusAddress_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy3
r_int
r_char
id|Dummy3
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|Type3R
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3R
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|TransferLength
r_int
r_int
id|TransferLength
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|LogicalBlockAddress
r_int
r_int
id|LogicalBlockAddress
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|BusAddress
id|DAC960_BusAddress_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|LogicalDriveNumber
r_int
r_char
id|LogicalDriveNumber
suffix:semicolon
multiline_comment|/* Byte 12 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Bytes 13-15 */
DECL|member|Type4
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type4
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
r_struct
(brace
DECL|member|TransferLength
r_int
r_int
id|TransferLength
suffix:colon
l_int|11
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|LogicalDriveNumber
r_int
r_char
id|LogicalDriveNumber
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 3 Bits 3-7 */
DECL|member|LD
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|LD
suffix:semicolon
DECL|member|LogicalBlockAddress
r_int
r_int
id|LogicalBlockAddress
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|BusAddress
id|DAC960_BusAddress_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|ScatterGatherCount
r_int
r_char
id|ScatterGatherCount
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 12 Bits 0-5 */
r_enum
(brace
DECL|enumerator|DAC960_ScatterGather_32BitAddress_32BitByteCount
id|DAC960_ScatterGather_32BitAddress_32BitByteCount
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_ScatterGather_32BitAddress_16BitByteCount
id|DAC960_ScatterGather_32BitAddress_16BitByteCount
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_ScatterGather_32BitByteCount_32BitAddress
id|DAC960_ScatterGather_32BitByteCount_32BitAddress
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_ScatterGather_16BitByteCount_32BitAddress
id|DAC960_ScatterGather_16BitByteCount_32BitAddress
op_assign
l_int|0x3
DECL|member|ScatterGatherType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ScatterGatherType
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 12 Bits 6-7 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Bytes 13-15 */
DECL|member|Type5
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type5
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|CommandOpcode2
r_int
r_char
id|CommandOpcode2
suffix:semicolon
multiline_comment|/* Byte 2 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|CommandMailboxesBusAddress
id|DAC960_BusAddress_T
id|CommandMailboxesBusAddress
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|StatusMailboxesBusAddress
id|DAC960_BusAddress_T
id|StatusMailboxesBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|TypeX
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|TypeX
suffix:semicolon
)brace
DECL|typedef|DAC960_CommandMailbox_T
id|DAC960_CommandMailbox_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Driver IOCTL requests.&n;*/
DECL|macro|DAC960_IOCTL_GET_CONTROLLER_COUNT
mdefine_line|#define DAC960_IOCTL_GET_CONTROLLER_COUNT&t;0xDAC001
DECL|macro|DAC960_IOCTL_GET_CONTROLLER_INFO
mdefine_line|#define DAC960_IOCTL_GET_CONTROLLER_INFO&t;0xDAC002
DECL|macro|DAC960_IOCTL_EXECUTE_COMMAND
mdefine_line|#define DAC960_IOCTL_EXECUTE_COMMAND&t;&t;0xDAC003
multiline_comment|/*&n;  Define the DAC960_IOCTL_GET_CONTROLLER_INFO reply structure.&n;*/
DECL|struct|DAC960_ControllerInfo
r_typedef
r_struct
id|DAC960_ControllerInfo
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|PCI_Bus
r_int
r_char
id|PCI_Bus
suffix:semicolon
DECL|member|PCI_Device
r_int
r_char
id|PCI_Device
suffix:semicolon
DECL|member|PCI_Function
r_int
r_char
id|PCI_Function
suffix:semicolon
DECL|member|IRQ_Channel
r_int
r_char
id|IRQ_Channel
suffix:semicolon
DECL|member|Channels
r_int
r_char
id|Channels
suffix:semicolon
DECL|member|PCI_Address
id|DAC960_PCI_Address_T
id|PCI_Address
suffix:semicolon
DECL|member|ModelName
r_int
r_char
id|ModelName
(braket
l_int|16
)braket
suffix:semicolon
DECL|member|FirmwareVersion
r_int
r_char
id|FirmwareVersion
(braket
l_int|16
)braket
suffix:semicolon
)brace
DECL|typedef|DAC960_ControllerInfo_T
id|DAC960_ControllerInfo_T
suffix:semicolon
multiline_comment|/*&n;  Define the User Mode DAC960_IOCTL_EXECUTE_COMMAND request structure.&n;*/
DECL|struct|DAC960_UserCommand
r_typedef
r_struct
id|DAC960_UserCommand
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|CommandMailbox
id|DAC960_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|DataTransferLength
r_int
id|DataTransferLength
suffix:semicolon
DECL|member|DataTransferBuffer
r_void
op_star
id|DataTransferBuffer
suffix:semicolon
DECL|member|DCDB
id|DAC960_DCDB_T
op_star
id|DCDB
suffix:semicolon
)brace
DECL|typedef|DAC960_UserCommand_T
id|DAC960_UserCommand_T
suffix:semicolon
multiline_comment|/*&n;  Define the Kernel Mode DAC960_IOCTL_EXECUTE_COMMAND request structure.&n;*/
DECL|struct|DAC960_KernelCommand
r_typedef
r_struct
id|DAC960_KernelCommand
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|CommandMailbox
id|DAC960_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|DataTransferLength
r_int
id|DataTransferLength
suffix:semicolon
DECL|member|DataTransferBuffer
r_void
op_star
id|DataTransferBuffer
suffix:semicolon
DECL|member|DCDB
id|DAC960_DCDB_T
op_star
id|DCDB
suffix:semicolon
DECL|member|CommandStatus
id|DAC960_CommandStatus_T
id|CommandStatus
suffix:semicolon
DECL|member|CompletionFunction
r_void
(paren
op_star
id|CompletionFunction
)paren
(paren
r_struct
id|DAC960_KernelCommand
op_star
)paren
suffix:semicolon
DECL|member|CompletionData
r_void
op_star
id|CompletionData
suffix:semicolon
)brace
DECL|typedef|DAC960_KernelCommand_T
id|DAC960_KernelCommand_T
suffix:semicolon
multiline_comment|/*&n;  Import the Kernel Mode IOCTL interface.&n;*/
r_extern
r_int
id|DAC960_KernelIOCTL
c_func
(paren
r_int
r_int
id|Request
comma
r_void
op_star
id|Argument
)paren
suffix:semicolon
multiline_comment|/*&n;  Virtual_to_Bus maps from Kernel Virtual Addresses to PCI Bus Addresses.&n;*/
DECL|function|Virtual_to_Bus
r_static
r_inline
id|DAC960_BusAddress_T
id|Virtual_to_Bus
c_func
(paren
r_void
op_star
id|VirtualAddress
)paren
(brace
r_return
(paren
id|DAC960_BusAddress_T
)paren
id|virt_to_bus
c_func
(paren
id|VirtualAddress
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  Bus_to_Virtual maps from PCI Bus Addresses to Kernel Virtual Addresses.&n;*/
DECL|function|Bus_to_Virtual
r_static
r_inline
r_void
op_star
id|Bus_to_Virtual
c_func
(paren
id|DAC960_BusAddress_T
id|BusAddress
)paren
(brace
r_return
(paren
r_void
op_star
)paren
id|bus_to_virt
c_func
(paren
id|BusAddress
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  DAC960_DriverVersion protects the private portion of this file.&n;*/
macro_line|#ifdef DAC960_DriverVersion
multiline_comment|/*&n;  Define the maximum Driver Queue Depth and Controller Queue Depth supported&n;  by any DAC960 model.&n;*/
DECL|macro|DAC960_MaxDriverQueueDepth
mdefine_line|#define DAC960_MaxDriverQueueDepth&t;&t;127
DECL|macro|DAC960_MaxControllerQueueDepth
mdefine_line|#define DAC960_MaxControllerQueueDepth&t;&t;128
multiline_comment|/*&n;  Define the maximum number of Scatter/Gather Segments supported by any&n;  DAC960 model.&n;*/
DECL|macro|DAC960_MaxScatterGatherSegments
mdefine_line|#define DAC960_MaxScatterGatherSegments&t;&t;33
multiline_comment|/*&n;  Define the number of Command Mailboxes and Status Mailboxes used by the&n;  Memory Mailbox Interface.&n;*/
DECL|macro|DAC960_CommandMailboxCount
mdefine_line|#define DAC960_CommandMailboxCount&t;&t;256
DECL|macro|DAC960_StatusMailboxCount
mdefine_line|#define DAC960_StatusMailboxCount&t;&t;1024
multiline_comment|/*&n;  Define the DAC960 Controller Monitoring Timer Interval.&n;*/
DECL|macro|DAC960_MonitoringTimerInterval
mdefine_line|#define DAC960_MonitoringTimerInterval&t;&t;(10 * HZ)
multiline_comment|/*&n;  Define the DAC960 Controller Secondary Monitoring Interval.&n;*/
DECL|macro|DAC960_SecondaryMonitoringInterval
mdefine_line|#define DAC960_SecondaryMonitoringInterval&t;(60 * HZ)
multiline_comment|/*&n;  Define the DAC960 Controller Progress Reporting Interval.&n;*/
DECL|macro|DAC960_ProgressReportingInterval
mdefine_line|#define DAC960_ProgressReportingInterval&t;(60 * HZ)
multiline_comment|/*&n;  Define the maximum number of Partitions allowed for each Logical Drive.&n;*/
DECL|macro|DAC960_MaxPartitions
mdefine_line|#define DAC960_MaxPartitions&t;&t;&t;8
DECL|macro|DAC960_MaxPartitionsBits
mdefine_line|#define DAC960_MaxPartitionsBits&t;&t;3
multiline_comment|/*&n;  Define macros to extract the Controller Number, Logical Drive Number, and&n;  Partition Number from a Kernel Device, and to construct a Major Number, Minor&n;  Number, and Kernel Device from the Controller Number, Logical Drive Number,&n;  and Partition Number.  There is one Major Number assigned to each Controller.&n;  The associated Minor Number is divided into the Logical Drive Number and&n;  Partition Number.&n;*/
DECL|macro|DAC960_ControllerNumber
mdefine_line|#define DAC960_ControllerNumber(Device) &bslash;&n;  (MAJOR(Device) - DAC960_MAJOR)
DECL|macro|DAC960_LogicalDriveNumber
mdefine_line|#define DAC960_LogicalDriveNumber(Device) &bslash;&n;  (MINOR(Device) &gt;&gt; DAC960_MaxPartitionsBits)
DECL|macro|DAC960_PartitionNumber
mdefine_line|#define DAC960_PartitionNumber(Device) &bslash;&n;  (MINOR(Device) &amp; (DAC960_MaxPartitions - 1))
DECL|macro|DAC960_MajorNumber
mdefine_line|#define DAC960_MajorNumber(ControllerNumber) &bslash;&n;  (DAC960_MAJOR + (ControllerNumber))
DECL|macro|DAC960_MinorNumber
mdefine_line|#define DAC960_MinorNumber(LogicalDriveNumber, PartitionNumber) &bslash;&n;   (((LogicalDriveNumber) &lt;&lt; DAC960_MaxPartitionsBits) | (PartitionNumber))
DECL|macro|DAC960_MinorCount
mdefine_line|#define DAC960_MinorCount&t;&t;&t;(DAC960_MaxLogicalDrives &bslash;&n;&t;&t;&t;&t;&t;&t; * DAC960_MaxPartitions)
DECL|macro|DAC960_KernelDevice
mdefine_line|#define DAC960_KernelDevice(ControllerNumber,&t;&t;&t;&t;       &bslash;&n;&t;&t;&t;    LogicalDriveNumber,&t;&t;&t;&t;       &bslash;&n;&t;&t;&t;    PartitionNumber)&t;&t;&t;&t;       &bslash;&n;   MKDEV(DAC960_MajorNumber(ControllerNumber),&t;&t;&t;&t;       &bslash;&n;&t; DAC960_MinorNumber(LogicalDriveNumber, PartitionNumber))
multiline_comment|/*&n;  Define the DAC960 Controller fixed Block Size and Block Size Bits.&n;*/
DECL|macro|DAC960_BlockSize
mdefine_line|#define DAC960_BlockSize&t;&t;&t;512
DECL|macro|DAC960_BlockSizeBits
mdefine_line|#define DAC960_BlockSizeBits&t;&t;&t;9
multiline_comment|/*&n;  Define the Controller Line Buffer, Status Buffer, Rebuild Progress,&n;  and User Message Sizes.&n;*/
DECL|macro|DAC960_LineBufferSize
mdefine_line|#define DAC960_LineBufferSize&t;&t;&t;100
DECL|macro|DAC960_StatusBufferSize
mdefine_line|#define DAC960_StatusBufferSize&t;&t;&t;16384
DECL|macro|DAC960_RebuildProgressSize
mdefine_line|#define DAC960_RebuildProgressSize&t;&t;200
DECL|macro|DAC960_UserMessageSize
mdefine_line|#define DAC960_UserMessageSize&t;&t;&t;200
multiline_comment|/*&n;  Define the types of DAC960 Controllers that are supported.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V5_Controller
id|DAC960_V5_Controller
op_assign
l_int|1
comma
multiline_comment|/* DAC1164P */
DECL|enumerator|DAC960_V4_Controller
id|DAC960_V4_Controller
op_assign
l_int|2
comma
multiline_comment|/* DAC960PTL/PJ/PG */
DECL|enumerator|DAC960_V3_Controller
id|DAC960_V3_Controller
op_assign
l_int|3
multiline_comment|/* DAC960PU/PD/PL */
)brace
DECL|typedef|DAC960_ControllerType_T
id|DAC960_ControllerType_T
suffix:semicolon
multiline_comment|/*&n;  Define the Driver Message Levels.&n;*/
DECL|enum|DAC960_MessageLevel
r_typedef
r_enum
id|DAC960_MessageLevel
(brace
DECL|enumerator|DAC960_AnnounceLevel
id|DAC960_AnnounceLevel
op_assign
l_int|0
comma
DECL|enumerator|DAC960_InfoLevel
id|DAC960_InfoLevel
op_assign
l_int|1
comma
DECL|enumerator|DAC960_NoticeLevel
id|DAC960_NoticeLevel
op_assign
l_int|2
comma
DECL|enumerator|DAC960_WarningLevel
id|DAC960_WarningLevel
op_assign
l_int|3
comma
DECL|enumerator|DAC960_ErrorLevel
id|DAC960_ErrorLevel
op_assign
l_int|4
comma
DECL|enumerator|DAC960_ProgressLevel
id|DAC960_ProgressLevel
op_assign
l_int|5
comma
DECL|enumerator|DAC960_CriticalLevel
id|DAC960_CriticalLevel
op_assign
l_int|6
comma
DECL|enumerator|DAC960_UserCriticalLevel
id|DAC960_UserCriticalLevel
op_assign
l_int|7
)brace
DECL|typedef|DAC960_MessageLevel_T
id|DAC960_MessageLevel_T
suffix:semicolon
r_static
r_char
DECL|variable|DAC960_MessageLevelMap
op_star
id|DAC960_MessageLevelMap
(braket
)braket
op_assign
(brace
id|KERN_NOTICE
comma
id|KERN_NOTICE
comma
id|KERN_NOTICE
comma
id|KERN_WARNING
comma
id|KERN_ERR
comma
id|KERN_CRIT
comma
id|KERN_CRIT
comma
id|KERN_CRIT
)brace
suffix:semicolon
multiline_comment|/*&n;  Define Driver Message macros.&n;*/
DECL|macro|DAC960_Announce
mdefine_line|#define DAC960_Announce(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_AnnounceLevel, Format, ##Arguments)
DECL|macro|DAC960_Info
mdefine_line|#define DAC960_Info(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_InfoLevel, Format, ##Arguments)
DECL|macro|DAC960_Notice
mdefine_line|#define DAC960_Notice(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_NoticeLevel, Format, ##Arguments)
DECL|macro|DAC960_Warning
mdefine_line|#define DAC960_Warning(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_WarningLevel, Format, ##Arguments)
DECL|macro|DAC960_Error
mdefine_line|#define DAC960_Error(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_ErrorLevel, Format, ##Arguments)
DECL|macro|DAC960_Progress
mdefine_line|#define DAC960_Progress(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_ProgressLevel, Format, ##Arguments)
DECL|macro|DAC960_Critical
mdefine_line|#define DAC960_Critical(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_CriticalLevel, Format, ##Arguments)
DECL|macro|DAC960_UserCritical
mdefine_line|#define DAC960_UserCritical(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_UserCriticalLevel, Format, ##Arguments)
multiline_comment|/*&n;  Define types for some of the structures that interface with the rest&n;  of the Linux Kernel and I/O Subsystem.&n;*/
DECL|typedef|BufferHeader_T
r_typedef
r_struct
id|buffer_head
id|BufferHeader_T
suffix:semicolon
DECL|typedef|File_T
r_typedef
r_struct
id|file
id|File_T
suffix:semicolon
DECL|typedef|FileOperations_T
r_typedef
r_struct
id|file_operations
id|FileOperations_T
suffix:semicolon
DECL|typedef|GenericDiskInfo_T
r_typedef
r_struct
id|gendisk
id|GenericDiskInfo_T
suffix:semicolon
DECL|typedef|DiskGeometry_T
r_typedef
r_struct
id|hd_geometry
id|DiskGeometry_T
suffix:semicolon
DECL|typedef|DiskPartition_T
r_typedef
r_struct
id|hd_struct
id|DiskPartition_T
suffix:semicolon
DECL|typedef|Inode_T
r_typedef
r_struct
id|inode
id|Inode_T
suffix:semicolon
DECL|typedef|InodeOperations_T
r_typedef
r_struct
id|inode_operations
id|InodeOperations_T
suffix:semicolon
DECL|typedef|KernelDevice_T
r_typedef
id|kdev_t
id|KernelDevice_T
suffix:semicolon
DECL|typedef|NotifierBlock_T
r_typedef
r_struct
id|notifier_block
id|NotifierBlock_T
suffix:semicolon
DECL|typedef|PCI_Device_T
r_typedef
r_struct
id|pci_dev
id|PCI_Device_T
suffix:semicolon
DECL|typedef|PROC_DirectoryEntry_T
r_typedef
r_struct
id|proc_dir_entry
id|PROC_DirectoryEntry_T
suffix:semicolon
DECL|typedef|ProcessorFlags_T
r_typedef
r_int
r_int
id|ProcessorFlags_T
suffix:semicolon
DECL|typedef|Registers_T
r_typedef
r_struct
id|pt_regs
id|Registers_T
suffix:semicolon
DECL|typedef|IO_Request_T
r_typedef
r_struct
id|request
id|IO_Request_T
suffix:semicolon
DECL|typedef|Semaphore_T
r_typedef
r_struct
id|semaphore
id|Semaphore_T
suffix:semicolon
DECL|typedef|SuperBlock_T
r_typedef
r_struct
id|super_block
id|SuperBlock_T
suffix:semicolon
DECL|typedef|Timer_T
r_typedef
r_struct
id|timer_list
id|Timer_T
suffix:semicolon
DECL|typedef|WaitQueue_T
r_typedef
id|wait_queue_head_t
id|WaitQueue_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Controller Status Mailbox structure.&n;*/
DECL|union|DAC960_StatusMailbox
r_typedef
r_union
id|DAC960_StatusMailbox
(brace
DECL|member|Word
r_int
r_int
id|Word
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 1 Bits 0-6 */
DECL|member|Valid
id|boolean
id|Valid
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
DECL|member|CommandStatus
id|DAC960_CommandStatus_T
id|CommandStatus
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|Fields
)brace
id|Fields
suffix:semicolon
)brace
DECL|typedef|DAC960_StatusMailbox_T
id|DAC960_StatusMailbox_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Driver Command Types.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_ReadCommand
id|DAC960_ReadCommand
op_assign
l_int|1
comma
DECL|enumerator|DAC960_WriteCommand
id|DAC960_WriteCommand
op_assign
l_int|2
comma
DECL|enumerator|DAC960_ReadRetryCommand
id|DAC960_ReadRetryCommand
op_assign
l_int|3
comma
DECL|enumerator|DAC960_WriteRetryCommand
id|DAC960_WriteRetryCommand
op_assign
l_int|4
comma
DECL|enumerator|DAC960_MonitoringCommand
id|DAC960_MonitoringCommand
op_assign
l_int|5
comma
DECL|enumerator|DAC960_ImmediateCommand
id|DAC960_ImmediateCommand
op_assign
l_int|6
comma
DECL|enumerator|DAC960_QueuedCommand
id|DAC960_QueuedCommand
op_assign
l_int|7
)brace
DECL|typedef|DAC960_CommandType_T
id|DAC960_CommandType_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Driver Command structure.&n;*/
DECL|struct|DAC960_Command
r_typedef
r_struct
id|DAC960_Command
(brace
DECL|member|CommandType
id|DAC960_CommandType_T
id|CommandType
suffix:semicolon
DECL|member|CommandMailbox
id|DAC960_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|CommandStatus
id|DAC960_CommandStatus_T
id|CommandStatus
suffix:semicolon
DECL|member|Controller
r_struct
id|DAC960_Controller
op_star
id|Controller
suffix:semicolon
DECL|member|Next
r_struct
id|DAC960_Command
op_star
id|Next
suffix:semicolon
DECL|member|Semaphore
id|Semaphore_T
op_star
id|Semaphore
suffix:semicolon
DECL|member|LogicalDriveNumber
r_int
r_int
id|LogicalDriveNumber
suffix:semicolon
DECL|member|BlockNumber
r_int
r_int
id|BlockNumber
suffix:semicolon
DECL|member|BlockCount
r_int
r_int
id|BlockCount
suffix:semicolon
DECL|member|SegmentCount
r_int
r_int
id|SegmentCount
suffix:semicolon
DECL|member|BufferHeader
id|BufferHeader_T
op_star
id|BufferHeader
suffix:semicolon
DECL|member|KernelCommand
id|DAC960_KernelCommand_T
op_star
id|KernelCommand
suffix:semicolon
id|DAC960_ScatterGatherSegment_T
DECL|member|ScatterGatherList
id|ScatterGatherList
(braket
id|DAC960_MaxScatterGatherSegments
)braket
suffix:semicolon
)brace
DECL|typedef|DAC960_Command_T
id|DAC960_Command_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Driver Controller structure.&n;*/
DECL|struct|DAC960_Controller
r_typedef
r_struct
id|DAC960_Controller
(brace
DECL|member|BaseAddress
r_void
op_star
id|BaseAddress
suffix:semicolon
DECL|member|MemoryMappedAddress
r_void
op_star
id|MemoryMappedAddress
suffix:semicolon
DECL|member|ControllerType
id|DAC960_ControllerType_T
id|ControllerType
suffix:semicolon
DECL|member|IO_Address
id|DAC960_IO_Address_T
id|IO_Address
suffix:semicolon
DECL|member|PCI_Address
id|DAC960_PCI_Address_T
id|PCI_Address
suffix:semicolon
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|ControllerName
r_int
r_char
id|ControllerName
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|ModelName
r_int
r_char
id|ModelName
(braket
l_int|12
)braket
suffix:semicolon
DECL|member|FullModelName
r_int
r_char
id|FullModelName
(braket
l_int|18
)braket
suffix:semicolon
DECL|member|FirmwareVersion
r_int
r_char
id|FirmwareVersion
(braket
l_int|14
)braket
suffix:semicolon
DECL|member|Bus
r_int
r_char
id|Bus
suffix:semicolon
DECL|member|Device
r_int
r_char
id|Device
suffix:semicolon
DECL|member|Function
r_int
r_char
id|Function
suffix:semicolon
DECL|member|IRQ_Channel
r_int
r_char
id|IRQ_Channel
suffix:semicolon
DECL|member|Channels
r_int
r_char
id|Channels
suffix:semicolon
DECL|member|MemorySize
r_int
r_char
id|MemorySize
suffix:semicolon
DECL|member|LogicalDriveCount
r_int
r_char
id|LogicalDriveCount
suffix:semicolon
DECL|member|GeometryTranslationHeads
r_int
r_char
id|GeometryTranslationHeads
suffix:semicolon
DECL|member|GeometryTranslationSectors
r_int
r_char
id|GeometryTranslationSectors
suffix:semicolon
DECL|member|ControllerQueueDepth
r_int
r_int
id|ControllerQueueDepth
suffix:semicolon
DECL|member|DriverQueueDepth
r_int
r_int
id|DriverQueueDepth
suffix:semicolon
DECL|member|MaxBlocksPerCommand
r_int
r_int
id|MaxBlocksPerCommand
suffix:semicolon
DECL|member|MaxScatterGatherSegments
r_int
r_int
id|MaxScatterGatherSegments
suffix:semicolon
DECL|member|StripeSize
r_int
r_int
id|StripeSize
suffix:semicolon
DECL|member|SegmentSize
r_int
r_int
id|SegmentSize
suffix:semicolon
DECL|member|NewEventLogSequenceNumber
r_int
r_int
id|NewEventLogSequenceNumber
suffix:semicolon
DECL|member|OldEventLogSequenceNumber
r_int
r_int
id|OldEventLogSequenceNumber
suffix:semicolon
DECL|member|InitialStatusLength
r_int
r_int
id|InitialStatusLength
suffix:semicolon
DECL|member|CurrentStatusLength
r_int
r_int
id|CurrentStatusLength
suffix:semicolon
DECL|member|UserStatusLength
r_int
r_int
id|UserStatusLength
suffix:semicolon
DECL|member|RebuildProgressLength
r_int
r_int
id|RebuildProgressLength
suffix:semicolon
DECL|member|ControllerUsageCount
r_int
r_int
id|ControllerUsageCount
suffix:semicolon
DECL|member|EnquiryIndex
r_int
r_int
id|EnquiryIndex
suffix:semicolon
DECL|member|LogicalDriveInformationIndex
r_int
r_int
id|LogicalDriveInformationIndex
suffix:semicolon
DECL|member|ErrorTableIndex
r_int
r_int
id|ErrorTableIndex
suffix:semicolon
DECL|member|DeviceStateIndex
r_int
r_int
id|DeviceStateIndex
suffix:semicolon
DECL|member|DeviceStateChannel
r_int
r_int
id|DeviceStateChannel
suffix:semicolon
DECL|member|DeviceStateTargetID
r_int
r_int
id|DeviceStateTargetID
suffix:semicolon
DECL|member|MonitoringTimerCount
r_int
r_int
id|MonitoringTimerCount
suffix:semicolon
DECL|member|SecondaryMonitoringTime
r_int
r_int
id|SecondaryMonitoringTime
suffix:semicolon
DECL|member|LastProgressReportTime
r_int
r_int
id|LastProgressReportTime
suffix:semicolon
DECL|member|LastCurrentStatusTime
r_int
r_int
id|LastCurrentStatusTime
suffix:semicolon
DECL|member|DualModeMemoryMailboxInterface
id|boolean
id|DualModeMemoryMailboxInterface
suffix:semicolon
DECL|member|SAFTE_EnclosureManagementEnabled
id|boolean
id|SAFTE_EnclosureManagementEnabled
suffix:semicolon
DECL|member|ControllerInitialized
id|boolean
id|ControllerInitialized
suffix:semicolon
DECL|member|MonitoringCommandDeferred
id|boolean
id|MonitoringCommandDeferred
suffix:semicolon
DECL|member|NeedLogicalDriveInformation
id|boolean
id|NeedLogicalDriveInformation
suffix:semicolon
DECL|member|NeedErrorTableInformation
id|boolean
id|NeedErrorTableInformation
suffix:semicolon
DECL|member|NeedDeviceStateInformation
id|boolean
id|NeedDeviceStateInformation
suffix:semicolon
DECL|member|NeedDeviceInquiryInformation
id|boolean
id|NeedDeviceInquiryInformation
suffix:semicolon
DECL|member|NeedDeviceSerialNumberInformation
id|boolean
id|NeedDeviceSerialNumberInformation
suffix:semicolon
DECL|member|NeedRebuildProgress
id|boolean
id|NeedRebuildProgress
suffix:semicolon
DECL|member|NeedConsistencyCheckProgress
id|boolean
id|NeedConsistencyCheckProgress
suffix:semicolon
DECL|member|EphemeralProgressMessage
id|boolean
id|EphemeralProgressMessage
suffix:semicolon
DECL|member|MonitoringTimer
id|Timer_T
id|MonitoringTimer
suffix:semicolon
DECL|member|GenericDiskInfo
id|GenericDiskInfo_T
id|GenericDiskInfo
suffix:semicolon
DECL|member|FreeCommands
id|DAC960_Command_T
op_star
id|FreeCommands
suffix:semicolon
DECL|member|FirstCommandMailbox
id|DAC960_CommandMailbox_T
op_star
id|FirstCommandMailbox
suffix:semicolon
DECL|member|LastCommandMailbox
id|DAC960_CommandMailbox_T
op_star
id|LastCommandMailbox
suffix:semicolon
DECL|member|NextCommandMailbox
id|DAC960_CommandMailbox_T
op_star
id|NextCommandMailbox
suffix:semicolon
DECL|member|PreviousCommandMailbox1
id|DAC960_CommandMailbox_T
op_star
id|PreviousCommandMailbox1
suffix:semicolon
DECL|member|PreviousCommandMailbox2
id|DAC960_CommandMailbox_T
op_star
id|PreviousCommandMailbox2
suffix:semicolon
DECL|member|FirstStatusMailbox
id|DAC960_StatusMailbox_T
op_star
id|FirstStatusMailbox
suffix:semicolon
DECL|member|LastStatusMailbox
id|DAC960_StatusMailbox_T
op_star
id|LastStatusMailbox
suffix:semicolon
DECL|member|NextStatusMailbox
id|DAC960_StatusMailbox_T
op_star
id|NextStatusMailbox
suffix:semicolon
DECL|member|ControllerProcEntry
id|PROC_DirectoryEntry_T
id|ControllerProcEntry
suffix:semicolon
DECL|member|InitialStatusProcEntry
id|PROC_DirectoryEntry_T
id|InitialStatusProcEntry
suffix:semicolon
DECL|member|CurrentStatusProcEntry
id|PROC_DirectoryEntry_T
id|CurrentStatusProcEntry
suffix:semicolon
DECL|member|UserCommandProcEntry
id|PROC_DirectoryEntry_T
id|UserCommandProcEntry
suffix:semicolon
DECL|member|CommandWaitQueue
id|WaitQueue_T
id|CommandWaitQueue
suffix:semicolon
DECL|member|MonitoringDCDB
id|DAC960_DCDB_T
id|MonitoringDCDB
suffix:semicolon
DECL|member|Enquiry
id|DAC960_Enquiry_T
id|Enquiry
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|ErrorTable
id|DAC960_ErrorTable_T
id|ErrorTable
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|EventLogEntry
id|DAC960_EventLogEntry_T
id|EventLogEntry
suffix:semicolon
DECL|member|RebuildProgress
id|DAC960_RebuildProgress_T
id|RebuildProgress
suffix:semicolon
DECL|member|LastRebuildStatus
id|DAC960_CommandStatus_T
id|LastRebuildStatus
suffix:semicolon
id|DAC960_LogicalDriveInformation_T
DECL|member|LogicalDriveInformation
id|LogicalDriveInformation
(braket
l_int|2
)braket
(braket
id|DAC960_MaxLogicalDrives
)braket
suffix:semicolon
DECL|member|LogicalDriveInitialState
id|DAC960_LogicalDriveState_T
id|LogicalDriveInitialState
(braket
id|DAC960_MaxLogicalDrives
)braket
suffix:semicolon
DECL|member|DeviceState
id|DAC960_DeviceState_T
id|DeviceState
(braket
l_int|2
)braket
(braket
id|DAC960_MaxChannels
)braket
(braket
id|DAC960_MaxTargets
)braket
suffix:semicolon
DECL|member|Commands
id|DAC960_Command_T
id|Commands
(braket
id|DAC960_MaxDriverQueueDepth
)braket
suffix:semicolon
id|DAC960_SCSI_Inquiry_T
DECL|member|InquiryStandardData
id|InquiryStandardData
(braket
id|DAC960_MaxChannels
)braket
(braket
id|DAC960_MaxTargets
)braket
suffix:semicolon
id|DAC960_SCSI_Inquiry_UnitSerialNumber_T
DECL|member|InquiryUnitSerialNumber
id|InquiryUnitSerialNumber
(braket
id|DAC960_MaxChannels
)braket
(braket
id|DAC960_MaxTargets
)braket
suffix:semicolon
DECL|member|DiskPartitions
id|DiskPartition_T
id|DiskPartitions
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|LogicalDriveUsageCount
r_int
id|LogicalDriveUsageCount
(braket
id|DAC960_MaxLogicalDrives
)braket
suffix:semicolon
DECL|member|PartitionSizes
r_int
id|PartitionSizes
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|BlockSizes
r_int
id|BlockSizes
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|MaxSectorsPerRequest
r_int
id|MaxSectorsPerRequest
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|MaxSegmentsPerRequest
r_int
id|MaxSegmentsPerRequest
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|DeviceResetCount
r_int
id|DeviceResetCount
(braket
id|DAC960_MaxChannels
)braket
(braket
id|DAC960_MaxTargets
)braket
suffix:semicolon
DECL|member|DirectCommandActive
id|boolean
id|DirectCommandActive
(braket
id|DAC960_MaxChannels
)braket
(braket
id|DAC960_MaxTargets
)braket
suffix:semicolon
DECL|member|InitialStatusBuffer
r_char
id|InitialStatusBuffer
(braket
id|DAC960_StatusBufferSize
)braket
suffix:semicolon
DECL|member|CurrentStatusBuffer
r_char
id|CurrentStatusBuffer
(braket
id|DAC960_StatusBufferSize
)braket
suffix:semicolon
DECL|member|UserStatusBuffer
r_char
id|UserStatusBuffer
(braket
id|DAC960_UserMessageSize
)braket
suffix:semicolon
DECL|member|RebuildProgressBuffer
r_char
id|RebuildProgressBuffer
(braket
id|DAC960_RebuildProgressSize
)braket
suffix:semicolon
)brace
DECL|typedef|DAC960_Controller_T
id|DAC960_Controller_T
suffix:semicolon
multiline_comment|/*&n;  DAC960_AcquireControllerLock acquires exclusive access to Controller.&n;*/
r_static
r_inline
DECL|function|DAC960_AcquireControllerLock
r_void
id|DAC960_AcquireControllerLock
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
id|spin_lock_irqsave
c_func
(paren
op_amp
id|io_request_lock
comma
op_star
id|ProcessorFlags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  DAC960_ReleaseControllerLock releases exclusive access to Controller.&n;*/
r_static
r_inline
DECL|function|DAC960_ReleaseControllerLock
r_void
id|DAC960_ReleaseControllerLock
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|io_request_lock
comma
op_star
id|ProcessorFlags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  DAC960_AcquireControllerLockRF acquires exclusive access to Controller,&n;  but is only called from the request function with the io_request_lock held.&n;*/
r_static
r_inline
DECL|function|DAC960_AcquireControllerLockRF
r_void
id|DAC960_AcquireControllerLockRF
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
)brace
multiline_comment|/*&n;  DAC960_ReleaseControllerLockRF releases exclusive access to Controller,&n;  but is only called from the request function with the io_request_lock held.&n;*/
r_static
r_inline
DECL|function|DAC960_ReleaseControllerLockRF
r_void
id|DAC960_ReleaseControllerLockRF
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
)brace
multiline_comment|/*&n;  DAC960_AcquireControllerLockIH acquires exclusive access to Controller,&n;  but is only called from the interrupt handler.&n;*/
r_static
r_inline
DECL|function|DAC960_AcquireControllerLockIH
r_void
id|DAC960_AcquireControllerLockIH
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
id|spin_lock_irqsave
c_func
(paren
op_amp
id|io_request_lock
comma
op_star
id|ProcessorFlags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  DAC960_ReleaseControllerLockIH releases exclusive access to Controller,&n;  but is only called from the interrupt handler.&n;*/
r_static
r_inline
DECL|function|DAC960_ReleaseControllerLockIH
r_void
id|DAC960_ReleaseControllerLockIH
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|io_request_lock
comma
op_star
id|ProcessorFlags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  Define the DAC960 V5 Controller Interface Register Offsets.&n;*/
DECL|macro|DAC960_V5_RegisterWindowSize
mdefine_line|#define DAC960_V5_RegisterWindowSize&t;&t;0x80
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V5_InboundDoorBellRegisterOffset
id|DAC960_V5_InboundDoorBellRegisterOffset
op_assign
l_int|0x60
comma
DECL|enumerator|DAC960_V5_OutboundDoorBellRegisterOffset
id|DAC960_V5_OutboundDoorBellRegisterOffset
op_assign
l_int|0x61
comma
DECL|enumerator|DAC960_V5_InterruptMaskRegisterOffset
id|DAC960_V5_InterruptMaskRegisterOffset
op_assign
l_int|0x34
comma
DECL|enumerator|DAC960_V5_CommandOpcodeRegisterOffset
id|DAC960_V5_CommandOpcodeRegisterOffset
op_assign
l_int|0x50
comma
DECL|enumerator|DAC960_V5_CommandIdentifierRegisterOffset
id|DAC960_V5_CommandIdentifierRegisterOffset
op_assign
l_int|0x51
comma
DECL|enumerator|DAC960_V5_MailboxRegister2Offset
id|DAC960_V5_MailboxRegister2Offset
op_assign
l_int|0x52
comma
DECL|enumerator|DAC960_V5_MailboxRegister3Offset
id|DAC960_V5_MailboxRegister3Offset
op_assign
l_int|0x53
comma
DECL|enumerator|DAC960_V5_MailboxRegister4Offset
id|DAC960_V5_MailboxRegister4Offset
op_assign
l_int|0x54
comma
DECL|enumerator|DAC960_V5_MailboxRegister5Offset
id|DAC960_V5_MailboxRegister5Offset
op_assign
l_int|0x55
comma
DECL|enumerator|DAC960_V5_MailboxRegister6Offset
id|DAC960_V5_MailboxRegister6Offset
op_assign
l_int|0x56
comma
DECL|enumerator|DAC960_V5_MailboxRegister7Offset
id|DAC960_V5_MailboxRegister7Offset
op_assign
l_int|0x57
comma
DECL|enumerator|DAC960_V5_MailboxRegister8Offset
id|DAC960_V5_MailboxRegister8Offset
op_assign
l_int|0x58
comma
DECL|enumerator|DAC960_V5_MailboxRegister9Offset
id|DAC960_V5_MailboxRegister9Offset
op_assign
l_int|0x59
comma
DECL|enumerator|DAC960_V5_MailboxRegister10Offset
id|DAC960_V5_MailboxRegister10Offset
op_assign
l_int|0x5A
comma
DECL|enumerator|DAC960_V5_MailboxRegister11Offset
id|DAC960_V5_MailboxRegister11Offset
op_assign
l_int|0x5B
comma
DECL|enumerator|DAC960_V5_MailboxRegister12Offset
id|DAC960_V5_MailboxRegister12Offset
op_assign
l_int|0x5C
comma
DECL|enumerator|DAC960_V5_StatusCommandIdentifierRegOffset
id|DAC960_V5_StatusCommandIdentifierRegOffset
op_assign
l_int|0x5D
comma
DECL|enumerator|DAC960_V5_StatusRegisterOffset
id|DAC960_V5_StatusRegisterOffset
op_assign
l_int|0x5E
)brace
DECL|typedef|DAC960_V5_RegisterOffsets_T
id|DAC960_V5_RegisterOffsets_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V5 Inbound Door Bell Register.&n;*/
DECL|union|DAC960_V5_InboundDoorBellRegister
r_typedef
r_union
id|DAC960_V5_InboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxNewCommand
id|boolean
id|HardwareMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeHardwareMailboxStatus
id|boolean
id|AcknowledgeHardwareMailboxStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
DECL|member|GenerateInterrupt
id|boolean
id|GenerateInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|ControllerReset
id|boolean
id|ControllerReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
DECL|member|MemoryMailboxNewCommand
id|boolean
id|MemoryMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 4 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Bits 5-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxEmpty
id|boolean
id|HardwareMailboxEmpty
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Bits 1-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_V5_InboundDoorBellRegister_T
id|DAC960_V5_InboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V5 Outbound Door Bell Register.&n;*/
DECL|union|DAC960_V5_OutboundDoorBellRegister
r_typedef
r_union
id|DAC960_V5_OutboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|AcknowledgeHardwareMailboxInterrupt
id|boolean
id|AcknowledgeHardwareMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeMemoryMailboxInterrupt
id|boolean
id|AcknowledgeMemoryMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxStatusAvailable
id|boolean
id|HardwareMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|MemoryMailboxStatusAvailable
id|boolean
id|MemoryMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_V5_OutboundDoorBellRegister_T
id|DAC960_V5_OutboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V5 Interrupt Mask Register.&n;*/
DECL|union|DAC960_V5_InterruptMaskRegister
r_typedef
r_union
id|DAC960_V5_InterruptMaskRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|DisableInterrupts
id|boolean
id|DisableInterrupts
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
r_int
r_char
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_V5_InterruptMaskRegister_T
id|DAC960_V5_InterruptMaskRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define inline functions to provide an abstraction for reading and writing the&n;  DAC960 V5 Controller Interface Registers.&n;*/
r_static
r_inline
DECL|function|DAC960_V5_HardwareMailboxNewCommand
r_void
id|DAC960_V5_HardwareMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.HardwareMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_AcknowledgeHardwareMailboxStatus
r_void
id|DAC960_V5_AcknowledgeHardwareMailboxStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.AcknowledgeHardwareMailboxStatus
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_GenerateInterrupt
r_void
id|DAC960_V5_GenerateInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.GenerateInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_ControllerReset
r_void
id|DAC960_V5_ControllerReset
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.ControllerReset
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_MemoryMailboxNewCommand
r_void
id|DAC960_V5_MemoryMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.MemoryMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_HardwareMailboxEmptyP
id|boolean
id|DAC960_V5_HardwareMailboxEmptyP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.HardwareMailboxEmpty
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_AcknowledgeHardwareMailboxInterrupt
r_void
id|DAC960_V5_AcknowledgeHardwareMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_AcknowledgeMemoryMailboxInterrupt
r_void
id|DAC960_V5_AcknowledgeMemoryMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_AcknowledgeInterrupt
r_void
id|DAC960_V5_AcknowledgeInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_HardwareMailboxStatusAvailableP
id|boolean
id|DAC960_V5_HardwareMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.HardwareMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_MemoryMailboxStatusAvailableP
id|boolean
id|DAC960_V5_MemoryMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.MemoryMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_EnableInterrupts
r_void
id|DAC960_V5_EnableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|false
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_DisableInterrupts
r_void
id|DAC960_V5_DisableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_InterruptsEnabledP
id|boolean
id|DAC960_V5_InterruptsEnabledP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V5_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_InterruptMaskRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InterruptMaskRegister.Bits.DisableInterrupts
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_WriteCommandMailbox
r_void
id|DAC960_V5_WriteCommandMailbox
c_func
(paren
id|DAC960_CommandMailbox_T
op_star
id|NextCommandMailbox
comma
id|DAC960_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|NextCommandMailbox-&gt;Words
(braket
l_int|1
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
suffix:semicolon
id|NextCommandMailbox-&gt;Words
(braket
l_int|2
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
suffix:semicolon
id|NextCommandMailbox-&gt;Words
(braket
l_int|3
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|3
)braket
suffix:semicolon
id|NextCommandMailbox-&gt;Words
(braket
l_int|0
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_WriteHardwareMailbox
r_void
id|DAC960_V5_WriteHardwareMailbox
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
id|DAC960_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister4Offset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister8Offset
)paren
suffix:semicolon
id|writeb
c_func
(paren
id|CommandMailbox-&gt;Bytes
(braket
l_int|12
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister12Offset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_CommandIdentifier_T
DECL|function|DAC960_V5_ReadStatusCommandIdentifier
id|DAC960_V5_ReadStatusCommandIdentifier
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_StatusCommandIdentifierRegOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_CommandStatus_T
DECL|function|DAC960_V5_ReadStatusRegister
id|DAC960_V5_ReadStatusRegister
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_StatusRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_SaveMemoryMailboxInfo
r_void
id|DAC960_V5_SaveMemoryMailboxInfo
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
)paren
(brace
r_void
op_star
id|ControllerBaseAddress
op_assign
id|Controller-&gt;BaseAddress
suffix:semicolon
id|writel
c_func
(paren
l_int|0x743C485E
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
(paren
r_int
r_int
)paren
id|Controller-&gt;FirstCommandMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister4Offset
)paren
suffix:semicolon
id|writew
c_func
(paren
id|Controller-&gt;NextCommandMailbox
op_minus
id|Controller-&gt;FirstCommandMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister8Offset
)paren
suffix:semicolon
id|writew
c_func
(paren
id|Controller-&gt;NextStatusMailbox
op_minus
id|Controller-&gt;FirstStatusMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister10Offset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V5_RestoreMemoryMailboxInfo
r_void
id|DAC960_V5_RestoreMemoryMailboxInfo
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
r_void
op_star
op_star
id|MemoryMailboxAddress
comma
r_int
op_star
id|NextCommandMailboxIndex
comma
r_int
op_star
id|NextStatusMailboxIndex
)paren
(brace
r_void
op_star
id|ControllerBaseAddress
op_assign
id|Controller-&gt;BaseAddress
suffix:semicolon
r_if
c_cond
(paren
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_CommandOpcodeRegisterOffset
)paren
op_ne
l_int|0x743C485E
)paren
r_return
suffix:semicolon
op_star
id|MemoryMailboxAddress
op_assign
(paren
r_void
op_star
)paren
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister4Offset
)paren
suffix:semicolon
op_star
id|NextCommandMailboxIndex
op_assign
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister8Offset
)paren
suffix:semicolon
op_star
id|NextStatusMailboxIndex
op_assign
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V5_MailboxRegister10Offset
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  Define the DAC960 V4 Controller Interface Register Offsets.&n;*/
DECL|macro|DAC960_V4_RegisterWindowSize
mdefine_line|#define DAC960_V4_RegisterWindowSize&t;&t;0x2000
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V4_InboundDoorBellRegisterOffset
id|DAC960_V4_InboundDoorBellRegisterOffset
op_assign
l_int|0x0020
comma
DECL|enumerator|DAC960_V4_OutboundDoorBellRegisterOffset
id|DAC960_V4_OutboundDoorBellRegisterOffset
op_assign
l_int|0x002C
comma
DECL|enumerator|DAC960_V4_InterruptMaskRegisterOffset
id|DAC960_V4_InterruptMaskRegisterOffset
op_assign
l_int|0x0034
comma
DECL|enumerator|DAC960_V4_CommandOpcodeRegisterOffset
id|DAC960_V4_CommandOpcodeRegisterOffset
op_assign
l_int|0x1000
comma
DECL|enumerator|DAC960_V4_CommandIdentifierRegisterOffset
id|DAC960_V4_CommandIdentifierRegisterOffset
op_assign
l_int|0x1001
comma
DECL|enumerator|DAC960_V4_MailboxRegister2Offset
id|DAC960_V4_MailboxRegister2Offset
op_assign
l_int|0x1002
comma
DECL|enumerator|DAC960_V4_MailboxRegister3Offset
id|DAC960_V4_MailboxRegister3Offset
op_assign
l_int|0x1003
comma
DECL|enumerator|DAC960_V4_MailboxRegister4Offset
id|DAC960_V4_MailboxRegister4Offset
op_assign
l_int|0x1004
comma
DECL|enumerator|DAC960_V4_MailboxRegister5Offset
id|DAC960_V4_MailboxRegister5Offset
op_assign
l_int|0x1005
comma
DECL|enumerator|DAC960_V4_MailboxRegister6Offset
id|DAC960_V4_MailboxRegister6Offset
op_assign
l_int|0x1006
comma
DECL|enumerator|DAC960_V4_MailboxRegister7Offset
id|DAC960_V4_MailboxRegister7Offset
op_assign
l_int|0x1007
comma
DECL|enumerator|DAC960_V4_MailboxRegister8Offset
id|DAC960_V4_MailboxRegister8Offset
op_assign
l_int|0x1008
comma
DECL|enumerator|DAC960_V4_MailboxRegister9Offset
id|DAC960_V4_MailboxRegister9Offset
op_assign
l_int|0x1009
comma
DECL|enumerator|DAC960_V4_MailboxRegister10Offset
id|DAC960_V4_MailboxRegister10Offset
op_assign
l_int|0x100A
comma
DECL|enumerator|DAC960_V4_MailboxRegister11Offset
id|DAC960_V4_MailboxRegister11Offset
op_assign
l_int|0x100B
comma
DECL|enumerator|DAC960_V4_MailboxRegister12Offset
id|DAC960_V4_MailboxRegister12Offset
op_assign
l_int|0x100C
comma
DECL|enumerator|DAC960_V4_StatusCommandIdentifierRegOffset
id|DAC960_V4_StatusCommandIdentifierRegOffset
op_assign
l_int|0x1018
comma
DECL|enumerator|DAC960_V4_StatusRegisterOffset
id|DAC960_V4_StatusRegisterOffset
op_assign
l_int|0x101A
)brace
DECL|typedef|DAC960_V4_RegisterOffsets_T
id|DAC960_V4_RegisterOffsets_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V4 Inbound Door Bell Register.&n;*/
DECL|union|DAC960_V4_InboundDoorBellRegister
r_typedef
r_union
id|DAC960_V4_InboundDoorBellRegister
(brace
DECL|member|All
r_int
r_int
id|All
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxNewCommand
id|boolean
id|HardwareMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeHardwareMailboxStatus
id|boolean
id|AcknowledgeHardwareMailboxStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
DECL|member|GenerateInterrupt
id|boolean
id|GenerateInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|ControllerReset
id|boolean
id|ControllerReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
DECL|member|MemoryMailboxNewCommand
id|boolean
id|MemoryMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 4 */
r_int
r_int
suffix:colon
l_int|27
suffix:semicolon
multiline_comment|/* Bits 5-31 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxFull
id|boolean
id|HardwareMailboxFull
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_int
suffix:colon
l_int|31
suffix:semicolon
multiline_comment|/* Bits 1-31 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_V4_InboundDoorBellRegister_T
id|DAC960_V4_InboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V4 Outbound Door Bell Register.&n;*/
DECL|union|DAC960_V4_OutboundDoorBellRegister
r_typedef
r_union
id|DAC960_V4_OutboundDoorBellRegister
(brace
DECL|member|All
r_int
r_int
id|All
suffix:semicolon
r_struct
(brace
DECL|member|AcknowledgeHardwareMailboxInterrupt
id|boolean
id|AcknowledgeHardwareMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeMemoryMailboxInterrupt
id|boolean
id|AcknowledgeMemoryMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_int
suffix:colon
l_int|30
suffix:semicolon
multiline_comment|/* Bits 2-31 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxStatusAvailable
id|boolean
id|HardwareMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|MemoryMailboxStatusAvailable
id|boolean
id|MemoryMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_int
suffix:colon
l_int|30
suffix:semicolon
multiline_comment|/* Bits 2-31 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_V4_OutboundDoorBellRegister_T
id|DAC960_V4_OutboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V4 Interrupt Mask Register.&n;*/
DECL|union|DAC960_V4_InterruptMaskRegister
r_typedef
r_union
id|DAC960_V4_InterruptMaskRegister
(brace
DECL|member|All
r_int
r_int
id|All
suffix:semicolon
r_struct
(brace
DECL|member|MessageUnitInterruptMask1
r_int
r_int
id|MessageUnitInterruptMask1
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|DisableInterrupts
id|boolean
id|DisableInterrupts
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|MessageUnitInterruptMask2
r_int
r_int
id|MessageUnitInterruptMask2
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Reserved0
r_int
r_int
id|Reserved0
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bits 8-31 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_V4_InterruptMaskRegister_T
id|DAC960_V4_InterruptMaskRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define inline functions to provide an abstraction for reading and writing the&n;  DAC960 V4 Controller Interface Registers.&n;*/
r_static
r_inline
DECL|function|DAC960_V4_HardwareMailboxNewCommand
r_void
id|DAC960_V4_HardwareMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.HardwareMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_AcknowledgeHardwareMailboxStatus
r_void
id|DAC960_V4_AcknowledgeHardwareMailboxStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.AcknowledgeHardwareMailboxStatus
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_GenerateInterrupt
r_void
id|DAC960_V4_GenerateInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.GenerateInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_ControllerReset
r_void
id|DAC960_V4_ControllerReset
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.ControllerReset
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_MemoryMailboxNewCommand
r_void
id|DAC960_V4_MemoryMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.MemoryMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_HardwareMailboxFullP
id|boolean
id|DAC960_V4_HardwareMailboxFullP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.HardwareMailboxFull
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_AcknowledgeHardwareMailboxInterrupt
r_void
id|DAC960_V4_AcknowledgeHardwareMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_AcknowledgeMemoryMailboxInterrupt
r_void
id|DAC960_V4_AcknowledgeMemoryMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_AcknowledgeInterrupt
r_void
id|DAC960_V4_AcknowledgeInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_HardwareMailboxStatusAvailableP
id|boolean
id|DAC960_V4_HardwareMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.HardwareMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_MemoryMailboxStatusAvailableP
id|boolean
id|DAC960_V4_MemoryMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.MemoryMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_EnableInterrupts
r_void
id|DAC960_V4_EnableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptMaskRegister.Bits.MessageUnitInterruptMask1
op_assign
l_int|0x3
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|false
suffix:semicolon
id|InterruptMaskRegister.Bits.MessageUnitInterruptMask2
op_assign
l_int|0x1F
suffix:semicolon
id|writel
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_DisableInterrupts
r_void
id|DAC960_V4_DisableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptMaskRegister.Bits.MessageUnitInterruptMask1
op_assign
l_int|0x3
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|true
suffix:semicolon
id|InterruptMaskRegister.Bits.MessageUnitInterruptMask2
op_assign
l_int|0x1F
suffix:semicolon
id|writel
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_InterruptsEnabledP
id|boolean
id|DAC960_V4_InterruptsEnabledP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V4_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_InterruptMaskRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InterruptMaskRegister.Bits.DisableInterrupts
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_WriteCommandMailbox
r_void
id|DAC960_V4_WriteCommandMailbox
c_func
(paren
id|DAC960_CommandMailbox_T
op_star
id|NextCommandMailbox
comma
id|DAC960_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|NextCommandMailbox-&gt;Words
(braket
l_int|1
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
suffix:semicolon
id|NextCommandMailbox-&gt;Words
(braket
l_int|2
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
suffix:semicolon
id|NextCommandMailbox-&gt;Words
(braket
l_int|3
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|3
)braket
suffix:semicolon
id|NextCommandMailbox-&gt;Words
(braket
l_int|0
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_WriteHardwareMailbox
r_void
id|DAC960_V4_WriteHardwareMailbox
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
id|DAC960_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister4Offset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister8Offset
)paren
suffix:semicolon
id|writeb
c_func
(paren
id|CommandMailbox-&gt;Bytes
(braket
l_int|12
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister12Offset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_CommandIdentifier_T
DECL|function|DAC960_V4_ReadStatusCommandIdentifier
id|DAC960_V4_ReadStatusCommandIdentifier
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_StatusCommandIdentifierRegOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_CommandStatus_T
DECL|function|DAC960_V4_ReadStatusRegister
id|DAC960_V4_ReadStatusRegister
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_StatusRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_SaveMemoryMailboxInfo
r_void
id|DAC960_V4_SaveMemoryMailboxInfo
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
)paren
(brace
r_void
op_star
id|ControllerBaseAddress
op_assign
id|Controller-&gt;BaseAddress
suffix:semicolon
id|writel
c_func
(paren
l_int|0xAABBFFFF
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
(paren
r_int
r_int
)paren
id|Controller-&gt;FirstCommandMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister4Offset
)paren
suffix:semicolon
id|writew
c_func
(paren
id|Controller-&gt;NextCommandMailbox
op_minus
id|Controller-&gt;FirstCommandMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister8Offset
)paren
suffix:semicolon
id|writew
c_func
(paren
id|Controller-&gt;NextStatusMailbox
op_minus
id|Controller-&gt;FirstStatusMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister10Offset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V4_RestoreMemoryMailboxInfo
r_void
id|DAC960_V4_RestoreMemoryMailboxInfo
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
r_void
op_star
op_star
id|MemoryMailboxAddress
comma
r_int
op_star
id|NextCommandMailboxIndex
comma
r_int
op_star
id|NextStatusMailboxIndex
)paren
(brace
r_void
op_star
id|ControllerBaseAddress
op_assign
id|Controller-&gt;BaseAddress
suffix:semicolon
r_if
c_cond
(paren
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_CommandOpcodeRegisterOffset
)paren
op_ne
l_int|0xAABBFFFF
)paren
r_return
suffix:semicolon
op_star
id|MemoryMailboxAddress
op_assign
(paren
r_void
op_star
)paren
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister4Offset
)paren
suffix:semicolon
op_star
id|NextCommandMailboxIndex
op_assign
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister8Offset
)paren
suffix:semicolon
op_star
id|NextStatusMailboxIndex
op_assign
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V4_MailboxRegister10Offset
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  Define the DAC960 V3 Controller Interface Register Offsets.&n;*/
DECL|macro|DAC960_V3_RegisterWindowSize
mdefine_line|#define DAC960_V3_RegisterWindowSize&t;&t;0x80
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V3_CommandOpcodeRegisterOffset
id|DAC960_V3_CommandOpcodeRegisterOffset
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V3_CommandIdentifierRegisterOffset
id|DAC960_V3_CommandIdentifierRegisterOffset
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V3_MailboxRegister2Offset
id|DAC960_V3_MailboxRegister2Offset
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V3_MailboxRegister3Offset
id|DAC960_V3_MailboxRegister3Offset
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V3_MailboxRegister4Offset
id|DAC960_V3_MailboxRegister4Offset
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_V3_MailboxRegister5Offset
id|DAC960_V3_MailboxRegister5Offset
op_assign
l_int|0x05
comma
DECL|enumerator|DAC960_V3_MailboxRegister6Offset
id|DAC960_V3_MailboxRegister6Offset
op_assign
l_int|0x06
comma
DECL|enumerator|DAC960_V3_MailboxRegister7Offset
id|DAC960_V3_MailboxRegister7Offset
op_assign
l_int|0x07
comma
DECL|enumerator|DAC960_V3_MailboxRegister8Offset
id|DAC960_V3_MailboxRegister8Offset
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_V3_MailboxRegister9Offset
id|DAC960_V3_MailboxRegister9Offset
op_assign
l_int|0x09
comma
DECL|enumerator|DAC960_V3_MailboxRegister10Offset
id|DAC960_V3_MailboxRegister10Offset
op_assign
l_int|0x0A
comma
DECL|enumerator|DAC960_V3_MailboxRegister11Offset
id|DAC960_V3_MailboxRegister11Offset
op_assign
l_int|0x0B
comma
DECL|enumerator|DAC960_V3_MailboxRegister12Offset
id|DAC960_V3_MailboxRegister12Offset
op_assign
l_int|0x0C
comma
DECL|enumerator|DAC960_V3_StatusCommandIdentifierRegOffset
id|DAC960_V3_StatusCommandIdentifierRegOffset
op_assign
l_int|0x0D
comma
DECL|enumerator|DAC960_V3_StatusRegisterOffset
id|DAC960_V3_StatusRegisterOffset
op_assign
l_int|0x0E
comma
DECL|enumerator|DAC960_V3_InboundDoorBellRegisterOffset
id|DAC960_V3_InboundDoorBellRegisterOffset
op_assign
l_int|0x40
comma
DECL|enumerator|DAC960_V3_OutboundDoorBellRegisterOffset
id|DAC960_V3_OutboundDoorBellRegisterOffset
op_assign
l_int|0x41
comma
DECL|enumerator|DAC960_V3_InterruptEnableRegisterOffset
id|DAC960_V3_InterruptEnableRegisterOffset
op_assign
l_int|0x43
)brace
DECL|typedef|DAC960_V3_RegisterOffsets_T
id|DAC960_V3_RegisterOffsets_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V3 Inbound Door Bell Register.&n;*/
DECL|union|DAC960_V3_InboundDoorBellRegister
r_typedef
r_union
id|DAC960_V3_InboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|NewCommand
id|boolean
id|NewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeStatus
id|boolean
id|AcknowledgeStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
DECL|member|GenerateInterrupt
id|boolean
id|GenerateInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|ControllerReset
id|boolean
id|ControllerReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
r_int
r_char
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Bits 4-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|MailboxFull
id|boolean
id|MailboxFull
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Bits 1-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_V3_InboundDoorBellRegister_T
id|DAC960_V3_InboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V3 Outbound Door Bell Register.&n;*/
DECL|union|DAC960_V3_OutboundDoorBellRegister
r_typedef
r_union
id|DAC960_V3_OutboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|AcknowledgeInterrupt
id|boolean
id|AcknowledgeInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Bits 1-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|StatusAvailable
id|boolean
id|StatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Bits 1-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_V3_OutboundDoorBellRegister_T
id|DAC960_V3_OutboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 V3 Interrupt Enable Register.&n;*/
DECL|union|DAC960_V3_InterruptEnableRegister
r_typedef
r_union
id|DAC960_V3_InterruptEnableRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|EnableInterrupts
id|boolean
id|EnableInterrupts
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Bits 1-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_V3_InterruptEnableRegister_T
id|DAC960_V3_InterruptEnableRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define inline functions to provide an abstraction for reading and writing the&n;  DAC960 V3 Controller Interface Registers.&n;*/
r_static
r_inline
DECL|function|DAC960_V3_NewCommand
r_void
id|DAC960_V3_NewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.NewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_AcknowledgeStatus
r_void
id|DAC960_V3_AcknowledgeStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.AcknowledgeStatus
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_GenerateInterrupt
r_void
id|DAC960_V3_GenerateInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.GenerateInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_ControllerReset
r_void
id|DAC960_V3_ControllerReset
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.ControllerReset
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_MailboxFullP
id|boolean
id|DAC960_V3_MailboxFullP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V3_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.MailboxFull
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_AcknowledgeInterrupt
r_void
id|DAC960_V3_AcknowledgeInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_StatusAvailableP
id|boolean
id|DAC960_V3_StatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V3_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.StatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_EnableInterrupts
r_void
id|DAC960_V3_EnableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_InterruptEnableRegister_T
id|InterruptEnableRegister
suffix:semicolon
id|InterruptEnableRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptEnableRegister.Bits.EnableInterrupts
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptEnableRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_InterruptEnableRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_DisableInterrupts
r_void
id|DAC960_V3_DisableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_InterruptEnableRegister_T
id|InterruptEnableRegister
suffix:semicolon
id|InterruptEnableRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptEnableRegister.Bits.EnableInterrupts
op_assign
l_bool|false
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptEnableRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_InterruptEnableRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_InterruptsEnabledP
id|boolean
id|DAC960_V3_InterruptsEnabledP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_V3_InterruptEnableRegister_T
id|InterruptEnableRegister
suffix:semicolon
id|InterruptEnableRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V3_InterruptEnableRegisterOffset
)paren
suffix:semicolon
r_return
id|InterruptEnableRegister.Bits.EnableInterrupts
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_V3_WriteCommandMailbox
r_void
id|DAC960_V3_WriteCommandMailbox
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
id|DAC960_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_MailboxRegister4Offset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_MailboxRegister8Offset
)paren
suffix:semicolon
id|writeb
c_func
(paren
id|CommandMailbox-&gt;Bytes
(braket
l_int|12
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_V3_MailboxRegister12Offset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_CommandIdentifier_T
DECL|function|DAC960_V3_ReadStatusCommandIdentifier
id|DAC960_V3_ReadStatusCommandIdentifier
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V3_StatusCommandIdentifierRegOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_CommandStatus_T
DECL|function|DAC960_V3_ReadStatusRegister
id|DAC960_V3_ReadStatusRegister
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_V3_StatusRegisterOffset
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  Define compatibility macros between Linux 2.0 and Linux 2.1.&n;*/
macro_line|#if LINUX_VERSION_CODE &lt; 0x20100
DECL|macro|MODULE_PARM
mdefine_line|#define MODULE_PARM(Variable, Type)
DECL|macro|ioremap_nocache
mdefine_line|#define ioremap_nocache(Offset, Size)&t;vremap(Offset, Size)
DECL|macro|iounmap
mdefine_line|#define iounmap(Address)&t;&t;vfree(Address)
macro_line|#endif
multiline_comment|/*&n;  Define prototypes for the forward referenced DAC960 Driver Internal Functions.&n;*/
r_static
r_void
id|DAC960_FinalizeController
c_func
(paren
id|DAC960_Controller_T
op_star
)paren
suffix:semicolon
r_static
r_int
id|DAC960_Finalize
c_func
(paren
id|NotifierBlock_T
op_star
comma
r_int
r_int
comma
r_void
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction0
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction1
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction2
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction3
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction4
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction5
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction6
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction7
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_InterruptHandler
c_func
(paren
r_int
comma
r_void
op_star
comma
id|Registers_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_QueueMonitoringCommand
c_func
(paren
id|DAC960_Command_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_MonitoringTimerFunction
c_func
(paren
r_int
r_int
)paren
suffix:semicolon
r_static
r_int
id|DAC960_Open
c_func
(paren
id|Inode_T
op_star
comma
id|File_T
op_star
)paren
suffix:semicolon
r_static
r_int
id|DAC960_Release
c_func
(paren
id|Inode_T
op_star
comma
id|File_T
op_star
)paren
suffix:semicolon
r_static
r_int
id|DAC960_IOCTL
c_func
(paren
id|Inode_T
op_star
comma
id|File_T
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_static
r_int
id|DAC960_UserIOCTL
c_func
(paren
id|Inode_T
op_star
comma
id|File_T
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_static
r_void
id|DAC960_InitializeGenericDiskInfo
c_func
(paren
id|GenericDiskInfo_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_Message
c_func
(paren
id|DAC960_MessageLevel_T
comma
r_char
op_star
comma
id|DAC960_Controller_T
op_star
comma
dot
dot
dot
)paren
suffix:semicolon
r_static
r_void
id|DAC960_CreateProcEntries
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_DestroyProcEntries
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n;  Export the Kernel Mode IOCTL interface.&n;*/
DECL|variable|DAC960_KernelIOCTL
id|EXPORT_SYMBOL
c_func
(paren
id|DAC960_KernelIOCTL
)paren
suffix:semicolon
macro_line|#endif /* DAC960_DriverVersion */
eof
