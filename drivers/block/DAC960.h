multiline_comment|/*&n;&n;  Linux Driver for Mylex DAC960/AcceleRAID/eXtremeRAID PCI RAID Controllers&n;&n;  Copyright 1998-2000 by Leonard N. Zubkoff &lt;lnz@dandelion.com&gt;&n;&n;  This program is free software; you may redistribute and/or modify it under&n;  the terms of the GNU General Public License Version 2 as published by the&n;  Free Software Foundation.&n;&n;  This program is distributed in the hope that it will be useful, but&n;  WITHOUT ANY WARRANTY, without even the implied warranty of MERCHANTABILITY&n;  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License&n;  for complete details.&n;&n;  The author respectfully requests that any modifications to this software be&n;  sent directly to him for evaluation and testing.&n;&n;*/
multiline_comment|/*&n;  Define the maximum number of DAC960 Controllers supported by this driver.&n;*/
DECL|macro|DAC960_MaxControllers
mdefine_line|#define DAC960_MaxControllers&t;&t;&t;8
multiline_comment|/*&n;  Define the maximum number of Controller Channels supported by DAC960&n;  V1 and V2 Firmware Controllers.&n;*/
DECL|macro|DAC960_V1_MaxChannels
mdefine_line|#define DAC960_V1_MaxChannels&t;&t;&t;3
DECL|macro|DAC960_V2_MaxChannels
mdefine_line|#define DAC960_V2_MaxChannels&t;&t;&t;4
multiline_comment|/*&n;  Define the maximum number of Targets per Channel supported by DAC960&n;  V1 and V2 Firmware Controllers.&n;*/
DECL|macro|DAC960_V1_MaxTargets
mdefine_line|#define DAC960_V1_MaxTargets&t;&t;&t;16
DECL|macro|DAC960_V2_MaxTargets
mdefine_line|#define DAC960_V2_MaxTargets&t;&t;&t;128
multiline_comment|/*&n;  Define the maximum number of Logical Drives supported by DAC960&n;  V1 and V2 Firmware Controllers.&n;*/
DECL|macro|DAC960_MaxLogicalDrives
mdefine_line|#define DAC960_MaxLogicalDrives&t;&t;&t;32
multiline_comment|/*&n;  Define the maximum number of Physical Devices supported by DAC960&n;  V1 and V2 Firmware Controllers.&n;*/
DECL|macro|DAC960_V1_MaxPhysicalDevices
mdefine_line|#define DAC960_V1_MaxPhysicalDevices&t;&t;45
DECL|macro|DAC960_V2_MaxPhysicalDevices
mdefine_line|#define DAC960_V2_MaxPhysicalDevices&t;&t;272
multiline_comment|/*&n;  Define a Boolean data type.&n;*/
DECL|enumerator|false
DECL|enumerator|true
DECL|typedef|boolean
r_typedef
r_enum
(brace
l_bool|false
comma
l_bool|true
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|boolean
suffix:semicolon
multiline_comment|/*&n;  Define a 32/64 bit I/O Address data type.&n;*/
DECL|typedef|DAC960_IO_Address_T
r_typedef
r_int
r_int
id|DAC960_IO_Address_T
suffix:semicolon
multiline_comment|/*&n;  Define a 32/64 bit PCI Bus Address data type.&n;*/
DECL|typedef|DAC960_PCI_Address_T
r_typedef
r_int
r_int
id|DAC960_PCI_Address_T
suffix:semicolon
multiline_comment|/*&n;  Define a 32 bit Bus Address data type.&n;*/
DECL|typedef|DAC960_BusAddress32_T
r_typedef
r_int
r_int
id|DAC960_BusAddress32_T
suffix:semicolon
multiline_comment|/*&n;  Define a 64 bit Bus Address data type.&n;*/
DECL|typedef|DAC960_BusAddress64_T
r_typedef
r_int
r_int
r_int
id|DAC960_BusAddress64_T
suffix:semicolon
multiline_comment|/*&n;  Define a 32 bit Byte Count data type.&n;*/
DECL|typedef|DAC960_ByteCount32_T
r_typedef
r_int
r_int
id|DAC960_ByteCount32_T
suffix:semicolon
multiline_comment|/*&n;  Define a 64 bit Byte Count data type.&n;*/
DECL|typedef|DAC960_ByteCount64_T
r_typedef
r_int
r_int
r_int
id|DAC960_ByteCount64_T
suffix:semicolon
multiline_comment|/*&n;  Define the SCSI INQUIRY Standard Data structure.&n;*/
DECL|struct|DAC960_SCSI_Inquiry
r_typedef
r_struct
id|DAC960_SCSI_Inquiry
(brace
DECL|member|PeripheralDeviceType
r_int
r_char
id|PeripheralDeviceType
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-4 */
DECL|member|PeripheralQualifier
r_int
r_char
id|PeripheralQualifier
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 0 Bits 5-7 */
DECL|member|DeviceTypeModifier
r_int
r_char
id|DeviceTypeModifier
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 1 Bits 0-6 */
DECL|member|RMB
id|boolean
id|RMB
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
DECL|member|ANSI_ApprovedVersion
r_int
r_char
id|ANSI_ApprovedVersion
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 2 Bits 0-2 */
DECL|member|ECMA_Version
r_int
r_char
id|ECMA_Version
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 2 Bits 3-5 */
DECL|member|ISO_Version
r_int
r_char
id|ISO_Version
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 2 Bits 6-7 */
DECL|member|ResponseDataFormat
r_int
r_char
id|ResponseDataFormat
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 3 Bits 0-3 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 3 Bits 4-5 */
DECL|member|TrmIOP
id|boolean
id|TrmIOP
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 3 Bit 6 */
DECL|member|AENC
id|boolean
id|AENC
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 3 Bit 7 */
DECL|member|AdditionalLength
r_int
r_char
id|AdditionalLength
suffix:semicolon
multiline_comment|/* Byte 4 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 5 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|SftRe
id|boolean
id|SftRe
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 0 */
DECL|member|CmdQue
id|boolean
id|CmdQue
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 1 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 2 */
DECL|member|Linked
id|boolean
id|Linked
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 3 */
DECL|member|Sync
id|boolean
id|Sync
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 4 */
DECL|member|WBus16
id|boolean
id|WBus16
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 5 */
DECL|member|WBus32
id|boolean
id|WBus32
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 6 */
DECL|member|RelAdr
id|boolean
id|RelAdr
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 7 */
DECL|member|VendorIdentification
r_int
r_char
id|VendorIdentification
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|ProductIdentification
r_int
r_char
id|ProductIdentification
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 16-31 */
DECL|member|ProductRevisionLevel
r_int
r_char
id|ProductRevisionLevel
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 32-35 */
)brace
DECL|typedef|DAC960_SCSI_Inquiry_T
id|DAC960_SCSI_Inquiry_T
suffix:semicolon
multiline_comment|/*&n;  Define the SCSI INQUIRY Unit Serial Number structure.&n;*/
DECL|struct|DAC960_SCSI_Inquiry_UnitSerialNumber
r_typedef
r_struct
id|DAC960_SCSI_Inquiry_UnitSerialNumber
(brace
DECL|member|PeripheralDeviceType
r_int
r_char
id|PeripheralDeviceType
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-4 */
DECL|member|PeripheralQualifier
r_int
r_char
id|PeripheralQualifier
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 0 Bits 5-7 */
DECL|member|PageCode
r_int
r_char
id|PageCode
suffix:semicolon
multiline_comment|/* Byte 1 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|PageLength
r_int
r_char
id|PageLength
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|ProductSerialNumber
r_int
r_char
id|ProductSerialNumber
(braket
l_int|28
)braket
suffix:semicolon
multiline_comment|/* Bytes 4-31 */
)brace
DECL|typedef|DAC960_SCSI_Inquiry_UnitSerialNumber_T
id|DAC960_SCSI_Inquiry_UnitSerialNumber_T
suffix:semicolon
multiline_comment|/*&n;  Define the SCSI REQUEST SENSE Sense Key type.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_SenseKey_NoSense
id|DAC960_SenseKey_NoSense
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_SenseKey_RecoveredError
id|DAC960_SenseKey_RecoveredError
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_SenseKey_NotReady
id|DAC960_SenseKey_NotReady
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_SenseKey_MediumError
id|DAC960_SenseKey_MediumError
op_assign
l_int|0x3
comma
DECL|enumerator|DAC960_SenseKey_HardwareError
id|DAC960_SenseKey_HardwareError
op_assign
l_int|0x4
comma
DECL|enumerator|DAC960_SenseKey_IllegalRequest
id|DAC960_SenseKey_IllegalRequest
op_assign
l_int|0x5
comma
DECL|enumerator|DAC960_SenseKey_UnitAttention
id|DAC960_SenseKey_UnitAttention
op_assign
l_int|0x6
comma
DECL|enumerator|DAC960_SenseKey_DataProtect
id|DAC960_SenseKey_DataProtect
op_assign
l_int|0x7
comma
DECL|enumerator|DAC960_SenseKey_BlankCheck
id|DAC960_SenseKey_BlankCheck
op_assign
l_int|0x8
comma
DECL|enumerator|DAC960_SenseKey_VendorSpecific
id|DAC960_SenseKey_VendorSpecific
op_assign
l_int|0x9
comma
DECL|enumerator|DAC960_SenseKey_CopyAborted
id|DAC960_SenseKey_CopyAborted
op_assign
l_int|0xA
comma
DECL|enumerator|DAC960_SenseKey_AbortedCommand
id|DAC960_SenseKey_AbortedCommand
op_assign
l_int|0xB
comma
DECL|enumerator|DAC960_SenseKey_Equal
id|DAC960_SenseKey_Equal
op_assign
l_int|0xC
comma
DECL|enumerator|DAC960_SenseKey_VolumeOverflow
id|DAC960_SenseKey_VolumeOverflow
op_assign
l_int|0xD
comma
DECL|enumerator|DAC960_SenseKey_Miscompare
id|DAC960_SenseKey_Miscompare
op_assign
l_int|0xE
comma
DECL|enumerator|DAC960_SenseKey_Reserved
id|DAC960_SenseKey_Reserved
op_assign
l_int|0xF
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_SCSI_RequestSenseKey_T
id|DAC960_SCSI_RequestSenseKey_T
suffix:semicolon
multiline_comment|/*&n;  Define the SCSI REQUEST SENSE structure.&n;*/
DECL|struct|DAC960_SCSI_RequestSense
r_typedef
r_struct
id|DAC960_SCSI_RequestSense
(brace
DECL|member|ErrorCode
r_int
r_char
id|ErrorCode
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-6 */
DECL|member|Valid
id|boolean
id|Valid
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 7 */
DECL|member|SegmentNumber
r_int
r_char
id|SegmentNumber
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|SenseKey
id|DAC960_SCSI_RequestSenseKey_T
id|SenseKey
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 2 Bits 0-3 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 2 Bit 4 */
DECL|member|ILI
id|boolean
id|ILI
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 2 Bit 5 */
DECL|member|EOM
id|boolean
id|EOM
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 2 Bit 6 */
DECL|member|Filemark
id|boolean
id|Filemark
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 2 Bit 7 */
DECL|member|Information
r_int
r_char
id|Information
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 3-6 */
DECL|member|AdditionalSenseLength
r_int
r_char
id|AdditionalSenseLength
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|CommandSpecificInformation
r_int
r_char
id|CommandSpecificInformation
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|AdditionalSenseCode
r_int
r_char
id|AdditionalSenseCode
suffix:semicolon
multiline_comment|/* Byte 12 */
DECL|member|AdditionalSenseCodeQualifier
r_int
r_char
id|AdditionalSenseCodeQualifier
suffix:semicolon
multiline_comment|/* Byte 13 */
)brace
DECL|typedef|DAC960_SCSI_RequestSense_T
id|DAC960_SCSI_RequestSense_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Command Opcodes.&n;*/
r_typedef
r_enum
(brace
multiline_comment|/* I/O Commands */
DECL|enumerator|DAC960_V1_ReadExtended
id|DAC960_V1_ReadExtended
op_assign
l_int|0x33
comma
DECL|enumerator|DAC960_V1_WriteExtended
id|DAC960_V1_WriteExtended
op_assign
l_int|0x34
comma
DECL|enumerator|DAC960_V1_ReadAheadExtended
id|DAC960_V1_ReadAheadExtended
op_assign
l_int|0x35
comma
DECL|enumerator|DAC960_V1_ReadExtendedWithScatterGather
id|DAC960_V1_ReadExtendedWithScatterGather
op_assign
l_int|0xB3
comma
DECL|enumerator|DAC960_V1_WriteExtendedWithScatterGather
id|DAC960_V1_WriteExtendedWithScatterGather
op_assign
l_int|0xB4
comma
DECL|enumerator|DAC960_V1_Read
id|DAC960_V1_Read
op_assign
l_int|0x36
comma
DECL|enumerator|DAC960_V1_ReadWithOldScatterGather
id|DAC960_V1_ReadWithOldScatterGather
op_assign
l_int|0xB6
comma
DECL|enumerator|DAC960_V1_Write
id|DAC960_V1_Write
op_assign
l_int|0x37
comma
DECL|enumerator|DAC960_V1_WriteWithOldScatterGather
id|DAC960_V1_WriteWithOldScatterGather
op_assign
l_int|0xB7
comma
DECL|enumerator|DAC960_V1_DCDB
id|DAC960_V1_DCDB
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_V1_DCDBWithScatterGather
id|DAC960_V1_DCDBWithScatterGather
op_assign
l_int|0x84
comma
DECL|enumerator|DAC960_V1_Flush
id|DAC960_V1_Flush
op_assign
l_int|0x0A
comma
multiline_comment|/* Controller Status Related Commands */
DECL|enumerator|DAC960_V1_Enquiry
id|DAC960_V1_Enquiry
op_assign
l_int|0x53
comma
DECL|enumerator|DAC960_V1_Enquiry2
id|DAC960_V1_Enquiry2
op_assign
l_int|0x1C
comma
DECL|enumerator|DAC960_V1_GetLogicalDriveElement
id|DAC960_V1_GetLogicalDriveElement
op_assign
l_int|0x55
comma
DECL|enumerator|DAC960_V1_GetLogicalDriveInformation
id|DAC960_V1_GetLogicalDriveInformation
op_assign
l_int|0x19
comma
DECL|enumerator|DAC960_V1_IOPortRead
id|DAC960_V1_IOPortRead
op_assign
l_int|0x39
comma
DECL|enumerator|DAC960_V1_IOPortWrite
id|DAC960_V1_IOPortWrite
op_assign
l_int|0x3A
comma
DECL|enumerator|DAC960_V1_GetSDStats
id|DAC960_V1_GetSDStats
op_assign
l_int|0x3E
comma
DECL|enumerator|DAC960_V1_GetPDStats
id|DAC960_V1_GetPDStats
op_assign
l_int|0x3F
comma
DECL|enumerator|DAC960_V1_PerformEventLogOperation
id|DAC960_V1_PerformEventLogOperation
op_assign
l_int|0x72
comma
multiline_comment|/* Device Related Commands */
DECL|enumerator|DAC960_V1_StartDevice
id|DAC960_V1_StartDevice
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_V1_GetDeviceState
id|DAC960_V1_GetDeviceState
op_assign
l_int|0x50
comma
DECL|enumerator|DAC960_V1_StopChannel
id|DAC960_V1_StopChannel
op_assign
l_int|0x13
comma
DECL|enumerator|DAC960_V1_StartChannel
id|DAC960_V1_StartChannel
op_assign
l_int|0x12
comma
DECL|enumerator|DAC960_V1_ResetChannel
id|DAC960_V1_ResetChannel
op_assign
l_int|0x1A
comma
multiline_comment|/* Commands Associated with Data Consistency and Errors */
DECL|enumerator|DAC960_V1_Rebuild
id|DAC960_V1_Rebuild
op_assign
l_int|0x09
comma
DECL|enumerator|DAC960_V1_RebuildAsync
id|DAC960_V1_RebuildAsync
op_assign
l_int|0x16
comma
DECL|enumerator|DAC960_V1_CheckConsistency
id|DAC960_V1_CheckConsistency
op_assign
l_int|0x0F
comma
DECL|enumerator|DAC960_V1_CheckConsistencyAsync
id|DAC960_V1_CheckConsistencyAsync
op_assign
l_int|0x1E
comma
DECL|enumerator|DAC960_V1_RebuildStat
id|DAC960_V1_RebuildStat
op_assign
l_int|0x0C
comma
DECL|enumerator|DAC960_V1_GetRebuildProgress
id|DAC960_V1_GetRebuildProgress
op_assign
l_int|0x27
comma
DECL|enumerator|DAC960_V1_RebuildControl
id|DAC960_V1_RebuildControl
op_assign
l_int|0x1F
comma
DECL|enumerator|DAC960_V1_ReadBadBlockTable
id|DAC960_V1_ReadBadBlockTable
op_assign
l_int|0x0B
comma
DECL|enumerator|DAC960_V1_ReadBadDataTable
id|DAC960_V1_ReadBadDataTable
op_assign
l_int|0x25
comma
DECL|enumerator|DAC960_V1_ClearBadDataTable
id|DAC960_V1_ClearBadDataTable
op_assign
l_int|0x26
comma
DECL|enumerator|DAC960_V1_GetErrorTable
id|DAC960_V1_GetErrorTable
op_assign
l_int|0x17
comma
DECL|enumerator|DAC960_V1_AddCapacityAsync
id|DAC960_V1_AddCapacityAsync
op_assign
l_int|0x2A
comma
multiline_comment|/* Configuration Related Commands */
DECL|enumerator|DAC960_V1_ReadConfig2
id|DAC960_V1_ReadConfig2
op_assign
l_int|0x3D
comma
DECL|enumerator|DAC960_V1_WriteConfig2
id|DAC960_V1_WriteConfig2
op_assign
l_int|0x3C
comma
DECL|enumerator|DAC960_V1_ReadConfigurationOnDisk
id|DAC960_V1_ReadConfigurationOnDisk
op_assign
l_int|0x4A
comma
DECL|enumerator|DAC960_V1_WriteConfigurationOnDisk
id|DAC960_V1_WriteConfigurationOnDisk
op_assign
l_int|0x4B
comma
DECL|enumerator|DAC960_V1_ReadConfiguration
id|DAC960_V1_ReadConfiguration
op_assign
l_int|0x4E
comma
DECL|enumerator|DAC960_V1_ReadBackupConfiguration
id|DAC960_V1_ReadBackupConfiguration
op_assign
l_int|0x4D
comma
DECL|enumerator|DAC960_V1_WriteConfiguration
id|DAC960_V1_WriteConfiguration
op_assign
l_int|0x4F
comma
DECL|enumerator|DAC960_V1_AddConfiguration
id|DAC960_V1_AddConfiguration
op_assign
l_int|0x4C
comma
DECL|enumerator|DAC960_V1_ReadConfigurationLabel
id|DAC960_V1_ReadConfigurationLabel
op_assign
l_int|0x48
comma
DECL|enumerator|DAC960_V1_WriteConfigurationLabel
id|DAC960_V1_WriteConfigurationLabel
op_assign
l_int|0x49
comma
multiline_comment|/* Firmware Upgrade Related Commands */
DECL|enumerator|DAC960_V1_LoadImage
id|DAC960_V1_LoadImage
op_assign
l_int|0x20
comma
DECL|enumerator|DAC960_V1_StoreImage
id|DAC960_V1_StoreImage
op_assign
l_int|0x21
comma
DECL|enumerator|DAC960_V1_ProgramImage
id|DAC960_V1_ProgramImage
op_assign
l_int|0x22
comma
multiline_comment|/* Diagnostic Commands */
DECL|enumerator|DAC960_V1_SetDiagnosticMode
id|DAC960_V1_SetDiagnosticMode
op_assign
l_int|0x31
comma
DECL|enumerator|DAC960_V1_RunDiagnostic
id|DAC960_V1_RunDiagnostic
op_assign
l_int|0x32
comma
multiline_comment|/* Subsystem Service Commands */
DECL|enumerator|DAC960_V1_GetSubsystemData
id|DAC960_V1_GetSubsystemData
op_assign
l_int|0x70
comma
DECL|enumerator|DAC960_V1_SetSubsystemParameters
id|DAC960_V1_SetSubsystemParameters
op_assign
l_int|0x71
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V1_CommandOpcode_T
id|DAC960_V1_CommandOpcode_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Command Identifier type.&n;*/
DECL|typedef|DAC960_V1_CommandIdentifier_T
r_typedef
r_int
r_char
id|DAC960_V1_CommandIdentifier_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Command Status Codes.&n;*/
DECL|macro|DAC960_V1_NormalCompletion
mdefine_line|#define DAC960_V1_NormalCompletion&t;&t;0x0000&t;/* Common */
DECL|macro|DAC960_V1_CheckConditionReceived
mdefine_line|#define DAC960_V1_CheckConditionReceived&t;0x0002&t;/* Common */
DECL|macro|DAC960_V1_NoDeviceAtAddress
mdefine_line|#define DAC960_V1_NoDeviceAtAddress&t;&t;0x0102&t;/* Common */
DECL|macro|DAC960_V1_InvalidDeviceAddress
mdefine_line|#define DAC960_V1_InvalidDeviceAddress&t;&t;0x0105&t;/* Common */
DECL|macro|DAC960_V1_InvalidParameter
mdefine_line|#define DAC960_V1_InvalidParameter&t;&t;0x0105&t;/* Common */
DECL|macro|DAC960_V1_IrrecoverableDataError
mdefine_line|#define DAC960_V1_IrrecoverableDataError&t;0x0001&t;/* I/O */
DECL|macro|DAC960_V1_LogicalDriveNonexistentOrOffline
mdefine_line|#define DAC960_V1_LogicalDriveNonexistentOrOffline 0x0002 /* I/O */
DECL|macro|DAC960_V1_AccessBeyondEndOfLogicalDrive
mdefine_line|#define DAC960_V1_AccessBeyondEndOfLogicalDrive&t;0x0105&t;/* I/O */
DECL|macro|DAC960_V1_BadDataEncountered
mdefine_line|#define DAC960_V1_BadDataEncountered&t;&t;0x010C&t;/* I/O */
DECL|macro|DAC960_V1_DeviceBusy
mdefine_line|#define DAC960_V1_DeviceBusy&t;&t;&t;0x0008&t;/* DCDB */
DECL|macro|DAC960_V1_DeviceNonresponsive
mdefine_line|#define DAC960_V1_DeviceNonresponsive&t;&t;0x000E&t;/* DCDB */
DECL|macro|DAC960_V1_CommandTerminatedAbnormally
mdefine_line|#define DAC960_V1_CommandTerminatedAbnormally&t;0x000F&t;/* DCDB */
DECL|macro|DAC960_V1_UnableToStartDevice
mdefine_line|#define DAC960_V1_UnableToStartDevice&t;&t;0x0002&t;/* Device */
DECL|macro|DAC960_V1_InvalidChannelOrTargetOrModifier
mdefine_line|#define DAC960_V1_InvalidChannelOrTargetOrModifier 0x0105 /* Device */
DECL|macro|DAC960_V1_ChannelBusy
mdefine_line|#define DAC960_V1_ChannelBusy&t;&t;&t;0x0106&t;/* Device */
DECL|macro|DAC960_V1_ChannelNotStopped
mdefine_line|#define DAC960_V1_ChannelNotStopped&t;&t;0x0002&t;/* Device */
DECL|macro|DAC960_V1_AttemptToRebuildOnlineDrive
mdefine_line|#define DAC960_V1_AttemptToRebuildOnlineDrive&t;0x0002&t;/* Consistency */
DECL|macro|DAC960_V1_RebuildBadBlocksEncountered
mdefine_line|#define DAC960_V1_RebuildBadBlocksEncountered&t;0x0003&t;/* Consistency */
DECL|macro|DAC960_V1_NewDiskFailedDuringRebuild
mdefine_line|#define DAC960_V1_NewDiskFailedDuringRebuild&t;0x0004&t;/* Consistency */
DECL|macro|DAC960_V1_RebuildOrCheckAlreadyInProgress
mdefine_line|#define DAC960_V1_RebuildOrCheckAlreadyInProgress 0x0106 /* Consistency */
DECL|macro|DAC960_V1_DependentDiskIsDead
mdefine_line|#define DAC960_V1_DependentDiskIsDead&t;&t;0x0002&t;/* Consistency */
DECL|macro|DAC960_V1_InconsistentBlocksFound
mdefine_line|#define DAC960_V1_InconsistentBlocksFound&t;0x0003&t;/* Consistency */
DECL|macro|DAC960_V1_InvalidOrNonredundantLogicalDrive
mdefine_line|#define DAC960_V1_InvalidOrNonredundantLogicalDrive 0x0105 /* Consistency */
DECL|macro|DAC960_V1_NoRebuildOrCheckInProgress
mdefine_line|#define DAC960_V1_NoRebuildOrCheckInProgress&t;0x0105&t;/* Consistency */
DECL|macro|DAC960_V1_RebuildInProgress_DataValid
mdefine_line|#define DAC960_V1_RebuildInProgress_DataValid&t;0x0000&t;/* Consistency */
DECL|macro|DAC960_V1_RebuildFailed_LogicalDriveFailure
mdefine_line|#define DAC960_V1_RebuildFailed_LogicalDriveFailure 0x0002 /* Consistency */
DECL|macro|DAC960_V1_RebuildFailed_BadBlocksOnOther
mdefine_line|#define DAC960_V1_RebuildFailed_BadBlocksOnOther 0x0003&t;/* Consistency */
DECL|macro|DAC960_V1_RebuildFailed_NewDriveFailed
mdefine_line|#define DAC960_V1_RebuildFailed_NewDriveFailed&t;0x0004&t;/* Consistency */
DECL|macro|DAC960_V1_RebuildSuccessful
mdefine_line|#define DAC960_V1_RebuildSuccessful&t;&t;0x0100&t;/* Consistency */
DECL|macro|DAC960_V1_RebuildSuccessfullyTerminated
mdefine_line|#define DAC960_V1_RebuildSuccessfullyTerminated&t;0x0107&t;/* Consistency */
DECL|macro|DAC960_V1_AddCapacityInProgress
mdefine_line|#define DAC960_V1_AddCapacityInProgress&t;&t;0x0004&t;/* Consistency */
DECL|macro|DAC960_V1_AddCapacityFailedOrSuspended
mdefine_line|#define DAC960_V1_AddCapacityFailedOrSuspended&t;0x00F4&t;/* Consistency */
DECL|macro|DAC960_V1_Config2ChecksumError
mdefine_line|#define DAC960_V1_Config2ChecksumError&t;&t;0x0002&t;/* Configuration */
DECL|macro|DAC960_V1_ConfigurationSuspended
mdefine_line|#define DAC960_V1_ConfigurationSuspended&t;0x0106&t;/* Configuration */
DECL|macro|DAC960_V1_FailedToConfigureNVRAM
mdefine_line|#define DAC960_V1_FailedToConfigureNVRAM&t;0x0105&t;/* Configuration */
DECL|macro|DAC960_V1_ConfigurationNotSavedStateChange
mdefine_line|#define DAC960_V1_ConfigurationNotSavedStateChange 0x0106 /* Configuration */
DECL|macro|DAC960_V1_SubsystemNotInstalled
mdefine_line|#define DAC960_V1_SubsystemNotInstalled&t;&t;0x0001&t;/* Subsystem */
DECL|macro|DAC960_V1_SubsystemFailed
mdefine_line|#define DAC960_V1_SubsystemFailed&t;&t;0x0002&t;/* Subsystem */
DECL|macro|DAC960_V1_SubsystemBusy
mdefine_line|#define DAC960_V1_SubsystemBusy&t;&t;&t;0x0106&t;/* Subsystem */
DECL|typedef|DAC960_V1_CommandStatus_T
r_typedef
r_int
r_int
id|DAC960_V1_CommandStatus_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Enquiry Command reply structure.&n;*/
DECL|struct|DAC960_V1_Enquiry
r_typedef
r_struct
id|DAC960_V1_Enquiry
(brace
DECL|member|NumberOfLogicalDrives
r_int
r_char
id|NumberOfLogicalDrives
suffix:semicolon
multiline_comment|/* Byte 0 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 1-3 */
DECL|member|LogicalDriveSizes
r_int
r_int
id|LogicalDriveSizes
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* Bytes 4-131 */
DECL|member|FlashAge
r_int
r_int
id|FlashAge
suffix:semicolon
multiline_comment|/* Bytes 132-133 */
r_struct
(brace
DECL|member|DeferredWriteError
id|boolean
id|DeferredWriteError
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 134 Bit 0 */
DECL|member|BatteryLow
id|boolean
id|BatteryLow
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 134 Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 134 Bits 2-7 */
DECL|member|StatusFlags
)brace
id|StatusFlags
suffix:semicolon
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 135 */
DECL|member|MinorFirmwareVersion
r_int
r_char
id|MinorFirmwareVersion
suffix:semicolon
multiline_comment|/* Byte 136 */
DECL|member|MajorFirmwareVersion
r_int
r_char
id|MajorFirmwareVersion
suffix:semicolon
multiline_comment|/* Byte 137 */
r_enum
(brace
DECL|enumerator|DAC960_V1_NoStandbyRebuildOrCheckInProgress
id|DAC960_V1_NoStandbyRebuildOrCheckInProgress
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V1_StandbyRebuildInProgress
id|DAC960_V1_StandbyRebuildInProgress
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V1_BackgroundRebuildInProgress
id|DAC960_V1_BackgroundRebuildInProgress
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V1_BackgroundCheckInProgress
id|DAC960_V1_BackgroundCheckInProgress
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V1_StandbyRebuildCompletedWithError
id|DAC960_V1_StandbyRebuildCompletedWithError
op_assign
l_int|0xFF
comma
DECL|enumerator|DAC960_V1_BackgroundRebuildOrCheckFailed_DriveFailed
id|DAC960_V1_BackgroundRebuildOrCheckFailed_DriveFailed
op_assign
l_int|0xF0
comma
DECL|enumerator|DAC960_V1_BackgroundRebuildOrCheckFailed_LogicalDriveFailed
id|DAC960_V1_BackgroundRebuildOrCheckFailed_LogicalDriveFailed
op_assign
l_int|0xF1
comma
DECL|enumerator|DAC960_V1_BackgroundRebuildOrCheckFailed_OtherCauses
id|DAC960_V1_BackgroundRebuildOrCheckFailed_OtherCauses
op_assign
l_int|0xF2
comma
DECL|enumerator|DAC960_V1_BackgroundRebuildOrCheckSuccessfullyTerminated
id|DAC960_V1_BackgroundRebuildOrCheckSuccessfullyTerminated
op_assign
l_int|0xF3
DECL|member|RebuildFlag
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|RebuildFlag
suffix:semicolon
multiline_comment|/* Byte 138 */
DECL|member|MaxCommands
r_int
r_char
id|MaxCommands
suffix:semicolon
multiline_comment|/* Byte 139 */
DECL|member|OfflineLogicalDriveCount
r_int
r_char
id|OfflineLogicalDriveCount
suffix:semicolon
multiline_comment|/* Byte 140 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 141 */
DECL|member|EventLogSequenceNumber
r_int
r_int
id|EventLogSequenceNumber
suffix:semicolon
multiline_comment|/* Bytes 142-143 */
DECL|member|CriticalLogicalDriveCount
r_int
r_char
id|CriticalLogicalDriveCount
suffix:semicolon
multiline_comment|/* Byte 144 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 145-147 */
DECL|member|DeadDriveCount
r_int
r_char
id|DeadDriveCount
suffix:semicolon
multiline_comment|/* Byte 148 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 149 */
DECL|member|RebuildCount
r_int
r_char
id|RebuildCount
suffix:semicolon
multiline_comment|/* Byte 150 */
r_struct
(brace
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 151 Bits 0-2 */
DECL|member|BatteryBackupUnitPresent
id|boolean
id|BatteryBackupUnitPresent
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 151 Bit 3 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 151 Bits 4-6 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 151 Bit 7 */
DECL|member|MiscFlags
)brace
id|MiscFlags
suffix:semicolon
r_struct
(brace
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:semicolon
DECL|member|Channel
r_int
r_char
id|Channel
suffix:semicolon
DECL|member|DeadDrives
)brace
id|DeadDrives
(braket
l_int|21
)braket
suffix:semicolon
multiline_comment|/* Bytes 152-194 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|62
)braket
suffix:semicolon
multiline_comment|/* Bytes 195-255 */
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V1_Enquiry_T
id|DAC960_V1_Enquiry_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Enquiry2 Command reply structure.&n;*/
DECL|struct|DAC960_V1_Enquiry2
r_typedef
r_struct
id|DAC960_V1_Enquiry2
(brace
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_V1_P_PD_PU
id|DAC960_V1_P_PD_PU
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V1_PL
id|DAC960_V1_PL
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V1_PG
id|DAC960_V1_PG
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_V1_PJ
id|DAC960_V1_PJ
op_assign
l_int|0x11
comma
DECL|enumerator|DAC960_V1_PR
id|DAC960_V1_PR
op_assign
l_int|0x12
comma
DECL|enumerator|DAC960_V1_PT
id|DAC960_V1_PT
op_assign
l_int|0x13
comma
DECL|enumerator|DAC960_V1_PTL0
id|DAC960_V1_PTL0
op_assign
l_int|0x14
comma
DECL|enumerator|DAC960_V1_PRL
id|DAC960_V1_PRL
op_assign
l_int|0x15
comma
DECL|enumerator|DAC960_V1_PTL1
id|DAC960_V1_PTL1
op_assign
l_int|0x16
comma
DECL|enumerator|DAC960_V1_1164P
id|DAC960_V1_1164P
op_assign
l_int|0x20
DECL|member|SubModel
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|SubModel
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|ActualChannels
r_int
r_char
id|ActualChannels
suffix:semicolon
multiline_comment|/* Byte 1 */
r_enum
(brace
DECL|enumerator|DAC960_V1_FiveChannelBoard
id|DAC960_V1_FiveChannelBoard
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V1_ThreeChannelBoard
id|DAC960_V1_ThreeChannelBoard
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V1_TwoChannelBoard
id|DAC960_V1_TwoChannelBoard
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V1_ThreeChannelASIC_DAC
id|DAC960_V1_ThreeChannelASIC_DAC
op_assign
l_int|0x04
DECL|member|Model
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Model
suffix:semicolon
multiline_comment|/* Byte 2 */
r_enum
(brace
DECL|enumerator|DAC960_V1_EISA_Controller
id|DAC960_V1_EISA_Controller
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V1_MicroChannel_Controller
id|DAC960_V1_MicroChannel_Controller
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V1_PCI_Controller
id|DAC960_V1_PCI_Controller
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V1_SCSItoSCSI_Controller
id|DAC960_V1_SCSItoSCSI_Controller
op_assign
l_int|0x08
DECL|member|ProductFamily
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ProductFamily
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|HardwareID
)brace
id|HardwareID
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
multiline_comment|/* MajorVersion.MinorVersion-FirmwareType-TurnID */
r_struct
(brace
DECL|member|MajorVersion
r_int
r_char
id|MajorVersion
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|MinorVersion
r_int
r_char
id|MinorVersion
suffix:semicolon
multiline_comment|/* Byte 5 */
DECL|member|TurnID
r_int
r_char
id|TurnID
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|FirmwareType
r_char
id|FirmwareType
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|FirmwareID
)brace
id|FirmwareID
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 8 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 9-11 */
DECL|member|ConfiguredChannels
r_int
r_char
id|ConfiguredChannels
suffix:semicolon
multiline_comment|/* Byte 12 */
DECL|member|ActualChannels
r_int
r_char
id|ActualChannels
suffix:semicolon
multiline_comment|/* Byte 13 */
DECL|member|MaxTargets
r_int
r_char
id|MaxTargets
suffix:semicolon
multiline_comment|/* Byte 14 */
DECL|member|MaxTags
r_int
r_char
id|MaxTags
suffix:semicolon
multiline_comment|/* Byte 15 */
DECL|member|MaxLogicalDrives
r_int
r_char
id|MaxLogicalDrives
suffix:semicolon
multiline_comment|/* Byte 16 */
DECL|member|MaxArms
r_int
r_char
id|MaxArms
suffix:semicolon
multiline_comment|/* Byte 17 */
DECL|member|MaxSpans
r_int
r_char
id|MaxSpans
suffix:semicolon
multiline_comment|/* Byte 18 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 19 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 20-23 */
DECL|member|MemorySize
r_int
r_int
id|MemorySize
suffix:semicolon
multiline_comment|/* Bytes 24-27 */
DECL|member|CacheSize
r_int
r_int
id|CacheSize
suffix:semicolon
multiline_comment|/* Bytes 28-31 */
DECL|member|FlashMemorySize
r_int
r_int
id|FlashMemorySize
suffix:semicolon
multiline_comment|/* Bytes 32-35 */
DECL|member|NonVolatileMemorySize
r_int
r_int
id|NonVolatileMemorySize
suffix:semicolon
multiline_comment|/* Bytes 36-39 */
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_V1_DRAM
id|DAC960_V1_DRAM
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V1_EDO
id|DAC960_V1_EDO
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V1_SDRAM
id|DAC960_V1_SDRAM
op_assign
l_int|0x2
DECL|member|RamType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|RamType
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 40 Bits 0-2 */
r_enum
(brace
DECL|enumerator|DAC960_V1_None
id|DAC960_V1_None
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V1_Parity
id|DAC960_V1_Parity
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V1_ECC
id|DAC960_V1_ECC
op_assign
l_int|0x2
DECL|member|ErrorCorrection
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ErrorCorrection
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 40 Bits 3-5 */
DECL|member|FastPageMode
id|boolean
id|FastPageMode
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 40 Bit 6 */
DECL|member|LowPowerMemory
id|boolean
id|LowPowerMemory
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 40 Bit 7 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Bytes 41 */
DECL|member|MemoryType
)brace
id|MemoryType
suffix:semicolon
DECL|member|ClockSpeed
r_int
r_int
id|ClockSpeed
suffix:semicolon
multiline_comment|/* Bytes 42-43 */
DECL|member|MemorySpeed
r_int
r_int
id|MemorySpeed
suffix:semicolon
multiline_comment|/* Bytes 44-45 */
DECL|member|HardwareSpeed
r_int
r_int
id|HardwareSpeed
suffix:semicolon
multiline_comment|/* Bytes 46-47 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 48-51 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 52-55 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 56 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 57 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 58-59 */
DECL|member|MaxCommands
r_int
r_int
id|MaxCommands
suffix:semicolon
multiline_comment|/* Bytes 60-61 */
DECL|member|MaxScatterGatherEntries
r_int
r_int
id|MaxScatterGatherEntries
suffix:semicolon
multiline_comment|/* Bytes 62-63 */
DECL|member|MaxDriveCommands
r_int
r_int
id|MaxDriveCommands
suffix:semicolon
multiline_comment|/* Bytes 64-65 */
DECL|member|MaxIODescriptors
r_int
r_int
id|MaxIODescriptors
suffix:semicolon
multiline_comment|/* Bytes 66-67 */
DECL|member|MaxCombinedSectors
r_int
r_int
id|MaxCombinedSectors
suffix:semicolon
multiline_comment|/* Bytes 68-69 */
DECL|member|Latency
r_int
r_char
id|Latency
suffix:semicolon
multiline_comment|/* Byte 70 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 71 */
DECL|member|SCSITimeout
r_int
r_char
id|SCSITimeout
suffix:semicolon
multiline_comment|/* Byte 72 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 73 */
DECL|member|MinFreeLines
r_int
r_int
id|MinFreeLines
suffix:semicolon
multiline_comment|/* Bytes 74-75 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 76-79 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 80-83 */
DECL|member|RebuildRateConstant
r_int
r_char
id|RebuildRateConstant
suffix:semicolon
multiline_comment|/* Byte 84 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 85 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 86 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 87 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 88-91 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 92-95 */
DECL|member|PhysicalDriveBlockSize
r_int
r_int
id|PhysicalDriveBlockSize
suffix:semicolon
multiline_comment|/* Bytes 96-97 */
DECL|member|LogicalDriveBlockSize
r_int
r_int
id|LogicalDriveBlockSize
suffix:semicolon
multiline_comment|/* Bytes 98-99 */
DECL|member|MaxBlocksPerCommand
r_int
r_int
id|MaxBlocksPerCommand
suffix:semicolon
multiline_comment|/* Bytes 100-101 */
DECL|member|BlockFactor
r_int
r_int
id|BlockFactor
suffix:semicolon
multiline_comment|/* Bytes 102-103 */
DECL|member|CacheLineSize
r_int
r_int
id|CacheLineSize
suffix:semicolon
multiline_comment|/* Bytes 104-105 */
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_V1_Narrow_8bit
id|DAC960_V1_Narrow_8bit
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V1_Wide_16bit
id|DAC960_V1_Wide_16bit
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V1_Wide_32bit
id|DAC960_V1_Wide_32bit
op_assign
l_int|0x2
DECL|member|BusWidth
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|BusWidth
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 106 Bits 0-1 */
r_enum
(brace
DECL|enumerator|DAC960_V1_Fast
id|DAC960_V1_Fast
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V1_Ultra
id|DAC960_V1_Ultra
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V1_Ultra2
id|DAC960_V1_Ultra2
op_assign
l_int|0x2
DECL|member|BusSpeed
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|BusSpeed
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 106 Bits 2-3 */
DECL|member|Differential
id|boolean
id|Differential
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 106 Bit 4 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 106 Bits 5-7 */
DECL|member|SCSICapability
)brace
id|SCSICapability
suffix:semicolon
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 107 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 108-111 */
DECL|member|FirmwareBuildNumber
r_int
r_int
id|FirmwareBuildNumber
suffix:semicolon
multiline_comment|/* Bytes 112-113 */
r_enum
(brace
DECL|enumerator|DAC960_V1_AEMI
id|DAC960_V1_AEMI
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V1_OEM1
id|DAC960_V1_OEM1
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V1_OEM2
id|DAC960_V1_OEM2
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_V1_OEM3
id|DAC960_V1_OEM3
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_V1_Conner
id|DAC960_V1_Conner
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_V1_SAFTE
id|DAC960_V1_SAFTE
op_assign
l_int|0x20
DECL|member|FaultManagementType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|FaultManagementType
suffix:semicolon
multiline_comment|/* Byte 114 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 115 */
r_struct
(brace
DECL|member|Clustering
id|boolean
id|Clustering
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 116 Bit 0 */
DECL|member|MylexOnlineRAIDExpansion
id|boolean
id|MylexOnlineRAIDExpansion
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 116 Bit 1 */
r_int
r_int
suffix:colon
l_int|30
suffix:semicolon
multiline_comment|/* Bytes 116-119 */
DECL|member|FirmwareFeatures
)brace
id|FirmwareFeatures
suffix:semicolon
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 120-123 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 124-127 */
)brace
DECL|typedef|DAC960_V1_Enquiry2_T
id|DAC960_V1_Enquiry2_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Logical Drive State type.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V1_LogicalDrive_Online
id|DAC960_V1_LogicalDrive_Online
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V1_LogicalDrive_Critical
id|DAC960_V1_LogicalDrive_Critical
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_V1_LogicalDrive_Offline
id|DAC960_V1_LogicalDrive_Offline
op_assign
l_int|0xFF
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V1_LogicalDriveState_T
id|DAC960_V1_LogicalDriveState_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Logical Drive Information structure.&n;*/
DECL|struct|DAC960_V1_LogicalDriveInformation
r_typedef
r_struct
id|DAC960_V1_LogicalDriveInformation
(brace
DECL|member|LogicalDriveSize
r_int
r_int
id|LogicalDriveSize
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
DECL|member|LogicalDriveState
id|DAC960_V1_LogicalDriveState_T
id|LogicalDriveState
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|RAIDLevel
r_int
r_char
id|RAIDLevel
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 5 Bits 0-6 */
DECL|member|WriteBack
id|boolean
id|WriteBack
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 5 Bit 7 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 6-7 */
)brace
DECL|typedef|DAC960_V1_LogicalDriveInformation_T
id|DAC960_V1_LogicalDriveInformation_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Get Logical Drive Information Command&n;  reply structure.&n;*/
r_typedef
id|DAC960_V1_LogicalDriveInformation_T
DECL|typedef|DAC960_V1_LogicalDriveInformationArray_T
id|DAC960_V1_LogicalDriveInformationArray_T
(braket
id|DAC960_MaxLogicalDrives
)braket
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Perform Event Log Operation Types.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V1_GetEventLogEntry
id|DAC960_V1_GetEventLogEntry
op_assign
l_int|0x00
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V1_PerformEventLogOpType_T
id|DAC960_V1_PerformEventLogOpType_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Get Event Log Entry Command reply structure.&n;*/
DECL|struct|DAC960_V1_EventLogEntry
r_typedef
r_struct
id|DAC960_V1_EventLogEntry
(brace
DECL|member|MessageType
r_int
r_char
id|MessageType
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|MessageLength
r_int
r_char
id|MessageLength
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 2 Bits 0-4 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 2 Bits 5-7 */
DECL|member|LogicalUnit
r_int
r_char
id|LogicalUnit
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 3 Bits 0-5 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 3 Bits 6-7 */
DECL|member|SequenceNumber
r_int
r_int
id|SequenceNumber
suffix:semicolon
multiline_comment|/* Bytes 4-5 */
DECL|member|ErrorCode
r_int
r_char
id|ErrorCode
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 6 Bits 0-6 */
DECL|member|Valid
id|boolean
id|Valid
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 6 Bit 7 */
DECL|member|SegmentNumber
r_int
r_char
id|SegmentNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|SenseKey
id|DAC960_SCSI_RequestSenseKey_T
id|SenseKey
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 8 Bits 0-3 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 4 */
DECL|member|ILI
id|boolean
id|ILI
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 5 */
DECL|member|EOM
id|boolean
id|EOM
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 6 */
DECL|member|Filemark
id|boolean
id|Filemark
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 7 */
DECL|member|Information
r_int
r_char
id|Information
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 9-12 */
DECL|member|AdditionalSenseLength
r_int
r_char
id|AdditionalSenseLength
suffix:semicolon
multiline_comment|/* Byte 13 */
DECL|member|CommandSpecificInformation
r_int
r_char
id|CommandSpecificInformation
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 14-17 */
DECL|member|AdditionalSenseCode
r_int
r_char
id|AdditionalSenseCode
suffix:semicolon
multiline_comment|/* Byte 18 */
DECL|member|AdditionalSenseCodeQualifier
r_int
r_char
id|AdditionalSenseCodeQualifier
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 20-31 */
)brace
DECL|typedef|DAC960_V1_EventLogEntry_T
id|DAC960_V1_EventLogEntry_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Physical Device State type.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V1_Device_Dead
id|DAC960_V1_Device_Dead
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V1_Device_WriteOnly
id|DAC960_V1_Device_WriteOnly
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V1_Device_Online
id|DAC960_V1_Device_Online
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V1_Device_Standby
id|DAC960_V1_Device_Standby
op_assign
l_int|0x10
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V1_PhysicalDeviceState_T
id|DAC960_V1_PhysicalDeviceState_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Get Device State Command reply structure.&n;*/
DECL|struct|DAC960_V1_DeviceState
r_typedef
r_struct
id|DAC960_V1_DeviceState
(brace
DECL|member|Present
id|boolean
id|Present
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 0 Bits 1-7 */
r_enum
(brace
DECL|enumerator|DAC960_V1_OtherType
id|DAC960_V1_OtherType
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V1_DiskType
id|DAC960_V1_DiskType
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V1_SequentialType
id|DAC960_V1_SequentialType
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_V1_CDROM_or_WORM_Type
id|DAC960_V1_CDROM_or_WORM_Type
op_assign
l_int|0x3
DECL|member|DeviceType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|DeviceType
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 1 Bits 0-1 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 2 */
DECL|member|Fast20
id|boolean
id|Fast20
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 3 */
DECL|member|Sync
id|boolean
id|Sync
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 4 */
DECL|member|Fast
id|boolean
id|Fast
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 5 */
DECL|member|Wide
id|boolean
id|Wide
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 6 */
DECL|member|TaggedQueuingSupported
id|boolean
id|TaggedQueuingSupported
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
DECL|member|DeviceState
id|DAC960_V1_PhysicalDeviceState_T
id|DeviceState
suffix:semicolon
multiline_comment|/* Byte 2 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|SynchronousMultiplier
r_int
r_char
id|SynchronousMultiplier
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|SynchronousOffset
r_int
r_char
id|SynchronousOffset
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 5 Bits 0-4 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 5 Bits 5-7 */
DECL|member|DiskSize
r_int
r_int
id|DiskSize
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* Bytes 6-9 */
)brace
DECL|typedef|DAC960_V1_DeviceState_T
id|DAC960_V1_DeviceState_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Get Rebuild Progress Command reply structure.&n;*/
DECL|struct|DAC960_V1_RebuildProgress
r_typedef
r_struct
id|DAC960_V1_RebuildProgress
(brace
DECL|member|LogicalDriveNumber
r_int
r_int
id|LogicalDriveNumber
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
DECL|member|LogicalDriveSize
r_int
r_int
id|LogicalDriveSize
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|RemainingBlocks
r_int
r_int
id|RemainingBlocks
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
)brace
DECL|typedef|DAC960_V1_RebuildProgress_T
id|DAC960_V1_RebuildProgress_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Error Table Entry structure.&n;*/
DECL|struct|DAC960_V1_ErrorTableEntry
r_typedef
r_struct
id|DAC960_V1_ErrorTableEntry
(brace
DECL|member|ParityErrorCount
r_int
r_char
id|ParityErrorCount
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|SoftErrorCount
r_int
r_char
id|SoftErrorCount
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|HardErrorCount
r_int
r_char
id|HardErrorCount
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|MiscErrorCount
r_int
r_char
id|MiscErrorCount
suffix:semicolon
multiline_comment|/* Byte 3 */
)brace
DECL|typedef|DAC960_V1_ErrorTableEntry_T
id|DAC960_V1_ErrorTableEntry_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Get Error Table Command reply structure.&n;*/
DECL|struct|DAC960_V1_ErrorTable
r_typedef
r_struct
id|DAC960_V1_ErrorTable
(brace
id|DAC960_V1_ErrorTableEntry_T
DECL|member|ErrorTableEntries
id|ErrorTableEntries
(braket
id|DAC960_V1_MaxChannels
)braket
(braket
id|DAC960_V1_MaxTargets
)braket
suffix:semicolon
)brace
DECL|typedef|DAC960_V1_ErrorTable_T
id|DAC960_V1_ErrorTable_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Read Config2 Command reply structure.&n;*/
DECL|struct|DAC960_V1_Config2
r_typedef
r_struct
id|DAC960_V1_Config2
(brace
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 0 */
DECL|member|ActiveNegationEnabled
id|boolean
id|ActiveNegationEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 1 */
r_int
r_char
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 0 Bits 2-6 */
DECL|member|NoRescanIfResetReceivedDuringScan
id|boolean
id|NoRescanIfResetReceivedDuringScan
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 7 */
DECL|member|StorageWorksSupportEnabled
id|boolean
id|StorageWorksSupportEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 0 */
DECL|member|HewlettPackardSupportEnabled
id|boolean
id|HewlettPackardSupportEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 1 */
DECL|member|NoDisconnectOnFirstCommand
id|boolean
id|NoDisconnectOnFirstCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 2 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 1 Bits 3-4 */
DECL|member|AEMI_ARM
id|boolean
id|AEMI_ARM
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 5 */
DECL|member|AEMI_OFM
id|boolean
id|AEMI_OFM
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 6 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
r_enum
(brace
DECL|enumerator|DAC960_V1_OEMID_Mylex
id|DAC960_V1_OEMID_Mylex
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V1_OEMID_IBM
id|DAC960_V1_OEMID_IBM
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_V1_OEMID_HP
id|DAC960_V1_OEMID_HP
op_assign
l_int|0x0A
comma
DECL|enumerator|DAC960_V1_OEMID_DEC
id|DAC960_V1_OEMID_DEC
op_assign
l_int|0x0C
comma
DECL|enumerator|DAC960_V1_OEMID_Siemens
id|DAC960_V1_OEMID_Siemens
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_V1_OEMID_Intel
id|DAC960_V1_OEMID_Intel
op_assign
l_int|0x12
DECL|member|OEMID
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|OEMID
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|OEMModelNumber
r_int
r_char
id|OEMModelNumber
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|PhysicalSector
r_int
r_char
id|PhysicalSector
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|LogicalSector
r_int
r_char
id|LogicalSector
suffix:semicolon
multiline_comment|/* Byte 5 */
DECL|member|BlockFactor
r_int
r_char
id|BlockFactor
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|ReadAheadEnabled
id|boolean
id|ReadAheadEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 0 */
DECL|member|LowBIOSDelay
id|boolean
id|LowBIOSDelay
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 1 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 7 Bits 2-3 */
DECL|member|ReassignRestrictedToOneSector
id|boolean
id|ReassignRestrictedToOneSector
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 4 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 5 */
DECL|member|ForceUnitAccessDuringWriteRecovery
id|boolean
id|ForceUnitAccessDuringWriteRecovery
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 6 */
DECL|member|EnableLeftSymmetricRAID5Algorithm
id|boolean
id|EnableLeftSymmetricRAID5Algorithm
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 7 */
DECL|member|DefaultRebuildRate
r_int
r_char
id|DefaultRebuildRate
suffix:semicolon
multiline_comment|/* Byte 8 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 9 */
DECL|member|BlocksPerCacheLine
r_int
r_char
id|BlocksPerCacheLine
suffix:semicolon
multiline_comment|/* Byte 10 */
DECL|member|BlocksPerStripe
r_int
r_char
id|BlocksPerStripe
suffix:semicolon
multiline_comment|/* Byte 11 */
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_V1_Async
id|DAC960_V1_Async
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V1_Sync_8MHz
id|DAC960_V1_Sync_8MHz
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V1_Sync_5MHz
id|DAC960_V1_Sync_5MHz
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_V1_Sync_10or20MHz
id|DAC960_V1_Sync_10or20MHz
op_assign
l_int|0x3
multiline_comment|/* Byte 11 Bits 0-1 */
DECL|member|Speed
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Speed
suffix:colon
l_int|2
suffix:semicolon
DECL|member|Force8Bit
id|boolean
id|Force8Bit
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 11 Bit 2 */
DECL|member|DisableFast20
id|boolean
id|DisableFast20
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 11 Bit 3 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 11 Bits 4-6 */
DECL|member|EnableTaggedQueuing
id|boolean
id|EnableTaggedQueuing
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 11 Bit 7 */
DECL|member|ChannelParameters
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ChannelParameters
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-17 */
DECL|member|SCSIInitiatorID
r_int
r_char
id|SCSIInitiatorID
suffix:semicolon
multiline_comment|/* Byte 18 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 19 */
r_enum
(brace
DECL|enumerator|DAC960_V1_StartupMode_ControllerSpinUp
id|DAC960_V1_StartupMode_ControllerSpinUp
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V1_StartupMode_PowerOnSpinUp
id|DAC960_V1_StartupMode_PowerOnSpinUp
op_assign
l_int|0x01
DECL|member|StartupMode
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|StartupMode
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|SimultaneousDeviceSpinUpCount
r_int
r_char
id|SimultaneousDeviceSpinUpCount
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|SecondsDelayBetweenSpinUps
r_int
r_char
id|SecondsDelayBetweenSpinUps
suffix:semicolon
multiline_comment|/* Byte 22 */
DECL|member|Reserved1
r_int
r_char
id|Reserved1
(braket
l_int|29
)braket
suffix:semicolon
multiline_comment|/* Bytes 23-51 */
DECL|member|BIOSDisabled
id|boolean
id|BIOSDisabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 52 Bit 0 */
DECL|member|CDROMBootEnabled
id|boolean
id|CDROMBootEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 52 Bit 1 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 52 Bits 2-4 */
r_enum
(brace
DECL|enumerator|DAC960_V1_Geometry_128_32
id|DAC960_V1_Geometry_128_32
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V1_Geometry_255_63
id|DAC960_V1_Geometry_255_63
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V1_Geometry_Reserved1
id|DAC960_V1_Geometry_Reserved1
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_V1_Geometry_Reserved2
id|DAC960_V1_Geometry_Reserved2
op_assign
l_int|0x3
DECL|member|DriveGeometry
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|DriveGeometry
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 52 Bits 5-6 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 52 Bit 7 */
DECL|member|Reserved2
r_int
r_char
id|Reserved2
(braket
l_int|9
)braket
suffix:semicolon
multiline_comment|/* Bytes 53-61 */
DECL|member|Checksum
r_int
r_int
id|Checksum
suffix:semicolon
multiline_comment|/* Bytes 62-63 */
)brace
DECL|typedef|DAC960_V1_Config2_T
id|DAC960_V1_Config2_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware DCDB request structure.&n;*/
DECL|struct|DAC960_V1_DCDB
r_typedef
r_struct
id|DAC960_V1_DCDB
(brace
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-3 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 0 Bits 4-7 */
r_enum
(brace
DECL|enumerator|DAC960_V1_DCDB_NoDataTransfer
id|DAC960_V1_DCDB_NoDataTransfer
op_assign
l_int|0
comma
DECL|enumerator|DAC960_V1_DCDB_DataTransferDeviceToSystem
id|DAC960_V1_DCDB_DataTransferDeviceToSystem
op_assign
l_int|1
comma
DECL|enumerator|DAC960_V1_DCDB_DataTransferSystemToDevice
id|DAC960_V1_DCDB_DataTransferSystemToDevice
op_assign
l_int|2
comma
DECL|enumerator|DAC960_V1_DCDB_IllegalDataTransfer
id|DAC960_V1_DCDB_IllegalDataTransfer
op_assign
l_int|3
DECL|member|Direction
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Direction
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 1 Bits 0-1 */
DECL|member|EarlyStatus
id|boolean
id|EarlyStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 2 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 3 */
r_enum
(brace
DECL|enumerator|DAC960_V1_DCDB_Timeout_24_hours
id|DAC960_V1_DCDB_Timeout_24_hours
op_assign
l_int|0
comma
DECL|enumerator|DAC960_V1_DCDB_Timeout_10_seconds
id|DAC960_V1_DCDB_Timeout_10_seconds
op_assign
l_int|1
comma
DECL|enumerator|DAC960_V1_DCDB_Timeout_60_seconds
id|DAC960_V1_DCDB_Timeout_60_seconds
op_assign
l_int|2
comma
DECL|enumerator|DAC960_V1_DCDB_Timeout_10_minutes
id|DAC960_V1_DCDB_Timeout_10_minutes
op_assign
l_int|3
DECL|member|Timeout
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Timeout
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 1 Bits 4-5 */
DECL|member|NoAutomaticRequestSense
id|boolean
id|NoAutomaticRequestSense
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 6 */
DECL|member|DisconnectPermitted
id|boolean
id|DisconnectPermitted
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
DECL|member|TransferLength
r_int
r_int
id|TransferLength
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|BusAddress
id|DAC960_BusAddress32_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|CDBLength
r_int
r_char
id|CDBLength
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 8 Bits 0-3 */
DECL|member|TransferLengthHigh4
r_int
r_char
id|TransferLengthHigh4
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Byte 8 Bits 4-7 */
DECL|member|SenseLength
r_int
r_char
id|SenseLength
suffix:semicolon
multiline_comment|/* Byte 9 */
DECL|member|CDB
r_int
r_char
id|CDB
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 10-21 */
DECL|member|SenseData
r_int
r_char
id|SenseData
(braket
l_int|64
)braket
suffix:semicolon
multiline_comment|/* Bytes 22-85 */
DECL|member|Status
r_int
r_char
id|Status
suffix:semicolon
multiline_comment|/* Byte 86 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 87 */
)brace
DECL|typedef|DAC960_V1_DCDB_T
id|DAC960_V1_DCDB_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Scatter/Gather List Type 1 32 Bit Address&n;  32 Bit Byte Count structure.&n;*/
DECL|struct|DAC960_V1_ScatterGatherSegment
r_typedef
r_struct
id|DAC960_V1_ScatterGatherSegment
(brace
DECL|member|SegmentDataPointer
id|DAC960_BusAddress32_T
id|SegmentDataPointer
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
DECL|member|SegmentByteCount
id|DAC960_ByteCount32_T
id|SegmentByteCount
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
)brace
DECL|typedef|DAC960_V1_ScatterGatherSegment_T
id|DAC960_V1_ScatterGatherSegment_T
suffix:semicolon
multiline_comment|/*&n;  Define the 13 Byte DAC960 V1 Firmware Command Mailbox structure.  Bytes 13-15&n;  are not used.  The Command Mailbox structure is padded to 16 bytes for&n;  efficient access.&n;*/
DECL|union|DAC960_V1_CommandMailbox
r_typedef
r_union
id|DAC960_V1_CommandMailbox
(brace
DECL|member|Words
r_int
r_int
id|Words
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Words 0-3 */
DECL|member|Bytes
r_int
r_char
id|Bytes
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 0-15 */
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|14
)braket
suffix:semicolon
multiline_comment|/* Bytes 2-15 */
DECL|member|Common
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Common
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/* Bytes 2-7 */
DECL|member|BusAddress
id|DAC960_BusAddress32_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|Type3
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|5
)braket
suffix:semicolon
multiline_comment|/* Bytes 2-6 */
DECL|member|LogicalDriveNumber
r_int
r_char
id|LogicalDriveNumber
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 7 Bits 0-6 */
DECL|member|AutoRestore
id|boolean
id|AutoRestore
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 7 Bit 7 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|Type3C
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3C
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DeviceState
id|DAC960_V1_PhysicalDeviceState_T
id|DeviceState
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 4 Bits 0-4 */
DECL|member|Modifier
r_int
r_char
id|Modifier
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 4 Bits 5-7 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Bytes 5-7 */
DECL|member|BusAddress
id|DAC960_BusAddress32_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|Type3D
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3D
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|OperationType
id|DAC960_V1_PerformEventLogOpType_T
id|OperationType
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|OperationQualifier
r_int
r_char
id|OperationQualifier
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|SequenceNumber
r_int
r_int
id|SequenceNumber
suffix:semicolon
multiline_comment|/* Bytes 4-5 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Bytes 6-7 */
DECL|member|BusAddress
id|DAC960_BusAddress32_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|Type3E
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3E
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Dummy1
r_int
r_char
id|Dummy1
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|RebuildRateConstant
r_int
r_char
id|RebuildRateConstant
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|Dummy2
r_int
r_char
id|Dummy2
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Bytes 5-7 */
DECL|member|BusAddress
id|DAC960_BusAddress32_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy3
r_int
r_char
id|Dummy3
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|Type3R
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type3R
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|TransferLength
r_int
r_int
id|TransferLength
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|LogicalBlockAddress
r_int
r_int
id|LogicalBlockAddress
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|BusAddress
id|DAC960_BusAddress32_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|LogicalDriveNumber
r_int
r_char
id|LogicalDriveNumber
suffix:semicolon
multiline_comment|/* Byte 12 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Bytes 13-15 */
DECL|member|Type4
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type4
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
r_struct
(brace
DECL|member|TransferLength
r_int
r_int
id|TransferLength
suffix:colon
l_int|11
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|LogicalDriveNumber
r_int
r_char
id|LogicalDriveNumber
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 3 Bits 3-7 */
DECL|member|LD
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|LD
suffix:semicolon
DECL|member|LogicalBlockAddress
r_int
r_int
id|LogicalBlockAddress
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|BusAddress
id|DAC960_BusAddress32_T
id|BusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|ScatterGatherCount
r_int
r_char
id|ScatterGatherCount
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 12 Bits 0-5 */
r_enum
(brace
DECL|enumerator|DAC960_V1_ScatterGather_32BitAddress_32BitByteCount
id|DAC960_V1_ScatterGather_32BitAddress_32BitByteCount
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V1_ScatterGather_32BitAddress_16BitByteCount
id|DAC960_V1_ScatterGather_32BitAddress_16BitByteCount
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V1_ScatterGather_32BitByteCount_32BitAddress
id|DAC960_V1_ScatterGather_32BitByteCount_32BitAddress
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_V1_ScatterGather_16BitByteCount_32BitAddress
id|DAC960_V1_ScatterGather_16BitByteCount_32BitAddress
op_assign
l_int|0x3
DECL|member|ScatterGatherType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ScatterGatherType
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 12 Bits 6-7 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Bytes 13-15 */
DECL|member|Type5
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|Type5
suffix:semicolon
r_struct
(brace
DECL|member|CommandOpcode
id|DAC960_V1_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|CommandOpcode2
r_int
r_char
id|CommandOpcode2
suffix:semicolon
multiline_comment|/* Byte 2 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|CommandMailboxesBusAddress
id|DAC960_BusAddress32_T
id|CommandMailboxesBusAddress
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|StatusMailboxesBusAddress
id|DAC960_BusAddress32_T
id|StatusMailboxesBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
DECL|member|Dummy
r_int
r_char
id|Dummy
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|TypeX
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|TypeX
suffix:semicolon
)brace
DECL|typedef|DAC960_V1_CommandMailbox_T
id|DAC960_V1_CommandMailbox_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Command Opcodes.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V2_MemCopy
id|DAC960_V2_MemCopy
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_SCSI_10_Passthru
id|DAC960_V2_SCSI_10_Passthru
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V2_SCSI_255_Passthru
id|DAC960_V2_SCSI_255_Passthru
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V2_SCSI_10
id|DAC960_V2_SCSI_10
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_V2_SCSI_256
id|DAC960_V2_SCSI_256
op_assign
l_int|0x05
comma
DECL|enumerator|DAC960_V2_IOCTL
id|DAC960_V2_IOCTL
op_assign
l_int|0x20
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_CommandOpcode_T
id|DAC960_V2_CommandOpcode_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware IOCTL Opcodes.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V2_GetControllerInfo
id|DAC960_V2_GetControllerInfo
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_GetLogicalDeviceInfoValid
id|DAC960_V2_GetLogicalDeviceInfoValid
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V2_GetPhysicalDeviceInfoValid
id|DAC960_V2_GetPhysicalDeviceInfoValid
op_assign
l_int|0x05
comma
DECL|enumerator|DAC960_V2_GetHealthStatus
id|DAC960_V2_GetHealthStatus
op_assign
l_int|0x11
comma
DECL|enumerator|DAC960_V2_GetEvent
id|DAC960_V2_GetEvent
op_assign
l_int|0x15
comma
DECL|enumerator|DAC960_V2_SetDeviceState
id|DAC960_V2_SetDeviceState
op_assign
l_int|0x82
comma
DECL|enumerator|DAC960_V2_RebuildDeviceStart
id|DAC960_V2_RebuildDeviceStart
op_assign
l_int|0x88
comma
DECL|enumerator|DAC960_V2_RebuildDeviceStop
id|DAC960_V2_RebuildDeviceStop
op_assign
l_int|0x89
comma
DECL|enumerator|DAC960_V2_ConsistencyCheckStart
id|DAC960_V2_ConsistencyCheckStart
op_assign
l_int|0x8C
comma
DECL|enumerator|DAC960_V2_ConsistencyCheckStop
id|DAC960_V2_ConsistencyCheckStop
op_assign
l_int|0x8D
comma
DECL|enumerator|DAC960_V2_SetMemoryMailbox
id|DAC960_V2_SetMemoryMailbox
op_assign
l_int|0x8E
comma
DECL|enumerator|DAC960_V2_PauseDevice
id|DAC960_V2_PauseDevice
op_assign
l_int|0x92
comma
DECL|enumerator|DAC960_V2_TranslatePhysicalToLogicalDevice
id|DAC960_V2_TranslatePhysicalToLogicalDevice
op_assign
l_int|0xC5
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_IOCTL_Opcode_T
id|DAC960_V2_IOCTL_Opcode_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Command Identifier type.&n;*/
DECL|typedef|DAC960_V2_CommandIdentifier_T
r_typedef
r_int
r_int
id|DAC960_V2_CommandIdentifier_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Command Status Codes.&n;*/
DECL|macro|DAC960_V2_NormalCompletion
mdefine_line|#define DAC960_V2_NormalCompletion&t;&t;0x00
DECL|macro|DAC960_V2_AbormalCompletion
mdefine_line|#define DAC960_V2_AbormalCompletion&t;&t;0x02
DECL|macro|DAC960_V2_DeviceNonresponsive
mdefine_line|#define DAC960_V2_DeviceNonresponsive&t;&t;0x0E
DECL|typedef|DAC960_V2_CommandStatus_T
r_typedef
r_int
r_char
id|DAC960_V2_CommandStatus_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Memory Type structure.&n;*/
DECL|struct|DAC960_V2_MemoryType
r_typedef
r_struct
id|DAC960_V2_MemoryType
(brace
r_enum
(brace
DECL|enumerator|DAC960_V2_MemoryType_Reserved
id|DAC960_V2_MemoryType_Reserved
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V2_MemoryType_DRAM
id|DAC960_V2_MemoryType_DRAM
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_MemoryType_EDRAM
id|DAC960_V2_MemoryType_EDRAM
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V2_MemoryType_EDO
id|DAC960_V2_MemoryType_EDO
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V2_MemoryType_SDRAM
id|DAC960_V2_MemoryType_SDRAM
op_assign
l_int|0x04
DECL|member|MemoryType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|MemoryType
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-4 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 5 */
DECL|member|MemoryParity
id|boolean
id|MemoryParity
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 6 */
DECL|member|MemoryECC
id|boolean
id|MemoryECC
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 7 */
)brace
DECL|typedef|DAC960_V2_MemoryType_T
id|DAC960_V2_MemoryType_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Processor Type structure.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V2_ProcessorType_i960CA
id|DAC960_V2_ProcessorType_i960CA
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_ProcessorType_i960RD
id|DAC960_V2_ProcessorType_i960RD
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V2_ProcessorType_i960RN
id|DAC960_V2_ProcessorType_i960RN
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V2_ProcessorType_i960RP
id|DAC960_V2_ProcessorType_i960RP
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_V2_ProcessorType_NorthBay
id|DAC960_V2_ProcessorType_NorthBay
op_assign
l_int|0x05
comma
DECL|enumerator|DAC960_V2_ProcessorType_StrongArm
id|DAC960_V2_ProcessorType_StrongArm
op_assign
l_int|0x06
comma
DECL|enumerator|DAC960_V2_ProcessorType_i960RM
id|DAC960_V2_ProcessorType_i960RM
op_assign
l_int|0x07
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_ProcessorType_T
id|DAC960_V2_ProcessorType_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Get Controller Info reply structure.&n;*/
DECL|struct|DAC960_V2_ControllerInfo
r_typedef
r_struct
id|DAC960_V2_ControllerInfo
(brace
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 0 */
r_enum
(brace
DECL|enumerator|DAC960_V2_SCSI_Bus
id|DAC960_V2_SCSI_Bus
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V2_Fibre_Bus
id|DAC960_V2_Fibre_Bus
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_PCI_Bus
id|DAC960_V2_PCI_Bus
op_assign
l_int|0x03
DECL|member|BusInterfaceType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|BusInterfaceType
suffix:semicolon
multiline_comment|/* Byte 1 */
r_enum
(brace
DECL|enumerator|DAC960_V2_DAC960E
id|DAC960_V2_DAC960E
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_DAC960M
id|DAC960_V2_DAC960M
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_V2_DAC960PD
id|DAC960_V2_DAC960PD
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_V2_DAC960PL
id|DAC960_V2_DAC960PL
op_assign
l_int|0x11
comma
DECL|enumerator|DAC960_V2_DAC960PU
id|DAC960_V2_DAC960PU
op_assign
l_int|0x12
comma
DECL|enumerator|DAC960_V2_DAC960PE
id|DAC960_V2_DAC960PE
op_assign
l_int|0x13
comma
DECL|enumerator|DAC960_V2_DAC960PG
id|DAC960_V2_DAC960PG
op_assign
l_int|0x14
comma
DECL|enumerator|DAC960_V2_DAC960PJ
id|DAC960_V2_DAC960PJ
op_assign
l_int|0x15
comma
DECL|enumerator|DAC960_V2_DAC960PTL0
id|DAC960_V2_DAC960PTL0
op_assign
l_int|0x16
comma
DECL|enumerator|DAC960_V2_DAC960PR
id|DAC960_V2_DAC960PR
op_assign
l_int|0x17
comma
DECL|enumerator|DAC960_V2_DAC960PRL
id|DAC960_V2_DAC960PRL
op_assign
l_int|0x18
comma
DECL|enumerator|DAC960_V2_DAC960PT
id|DAC960_V2_DAC960PT
op_assign
l_int|0x19
comma
DECL|enumerator|DAC960_V2_DAC1164P
id|DAC960_V2_DAC1164P
op_assign
l_int|0x1A
comma
DECL|enumerator|DAC960_V2_DAC960PTL1
id|DAC960_V2_DAC960PTL1
op_assign
l_int|0x1B
comma
DECL|enumerator|DAC960_V2_EXR2000P
id|DAC960_V2_EXR2000P
op_assign
l_int|0x1C
comma
DECL|enumerator|DAC960_V2_EXR3000P
id|DAC960_V2_EXR3000P
op_assign
l_int|0x1D
comma
DECL|enumerator|DAC960_V2_AcceleRAID352
id|DAC960_V2_AcceleRAID352
op_assign
l_int|0x1E
comma
DECL|enumerator|DAC960_V2_AcceleRAID351
id|DAC960_V2_AcceleRAID351
op_assign
l_int|0x1F
comma
DECL|enumerator|DAC960_V2_DAC960S
id|DAC960_V2_DAC960S
op_assign
l_int|0x60
comma
DECL|enumerator|DAC960_V2_DAC960SU
id|DAC960_V2_DAC960SU
op_assign
l_int|0x61
comma
DECL|enumerator|DAC960_V2_DAC960SX
id|DAC960_V2_DAC960SX
op_assign
l_int|0x62
comma
DECL|enumerator|DAC960_V2_DAC960SF
id|DAC960_V2_DAC960SF
op_assign
l_int|0x63
comma
DECL|enumerator|DAC960_V2_DAC960SS
id|DAC960_V2_DAC960SS
op_assign
l_int|0x64
comma
DECL|enumerator|DAC960_V2_DAC960FL
id|DAC960_V2_DAC960FL
op_assign
l_int|0x65
comma
DECL|enumerator|DAC960_V2_DAC960LL
id|DAC960_V2_DAC960LL
op_assign
l_int|0x66
comma
DECL|enumerator|DAC960_V2_DAC960FF
id|DAC960_V2_DAC960FF
op_assign
l_int|0x67
comma
DECL|enumerator|DAC960_V2_DAC960HP
id|DAC960_V2_DAC960HP
op_assign
l_int|0x68
comma
DECL|enumerator|DAC960_V2_RAIDBRICK
id|DAC960_V2_RAIDBRICK
op_assign
l_int|0x69
comma
DECL|enumerator|DAC960_V2_METEOR_FL
id|DAC960_V2_METEOR_FL
op_assign
l_int|0x6A
comma
DECL|enumerator|DAC960_V2_METEOR_FF
id|DAC960_V2_METEOR_FF
op_assign
l_int|0x6B
DECL|member|ControllerType
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ControllerType
suffix:semicolon
multiline_comment|/* Byte 2 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|BusInterfaceSpeedMHz
r_int
r_int
id|BusInterfaceSpeedMHz
suffix:semicolon
multiline_comment|/* Bytes 4-5 */
DECL|member|BusWidthBits
r_int
r_char
id|BusWidthBits
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|Reserved1
r_int
r_char
id|Reserved1
(braket
l_int|9
)braket
suffix:semicolon
multiline_comment|/* Bytes 7-15 */
DECL|member|BusInterfaceName
r_int
r_char
id|BusInterfaceName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 16-31 */
DECL|member|ControllerName
r_int
r_char
id|ControllerName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 32-47 */
DECL|member|Reserved2
r_int
r_char
id|Reserved2
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 48-63 */
multiline_comment|/* Firmware Release Information */
DECL|member|FirmwareMajorVersion
r_int
r_char
id|FirmwareMajorVersion
suffix:semicolon
multiline_comment|/* Byte 64 */
DECL|member|FirmwareMinorVersion
r_int
r_char
id|FirmwareMinorVersion
suffix:semicolon
multiline_comment|/* Byte 65 */
DECL|member|FirmwareTurnNumber
r_int
r_char
id|FirmwareTurnNumber
suffix:semicolon
multiline_comment|/* Byte 66 */
DECL|member|FirmwareBuildNumber
r_int
r_char
id|FirmwareBuildNumber
suffix:semicolon
multiline_comment|/* Byte 67 */
DECL|member|FirmwareReleaseDay
r_int
r_char
id|FirmwareReleaseDay
suffix:semicolon
multiline_comment|/* Byte 68 */
DECL|member|FirmwareReleaseMonth
r_int
r_char
id|FirmwareReleaseMonth
suffix:semicolon
multiline_comment|/* Byte 69 */
DECL|member|FirmwareReleaseYearHigh2Digits
r_int
r_char
id|FirmwareReleaseYearHigh2Digits
suffix:semicolon
multiline_comment|/* Byte 70 */
DECL|member|FirmwareReleaseYearLow2Digits
r_int
r_char
id|FirmwareReleaseYearLow2Digits
suffix:semicolon
multiline_comment|/* Byte 71 */
multiline_comment|/* Hardware Release Information */
DECL|member|HardwareRevision
r_int
r_char
id|HardwareRevision
suffix:semicolon
multiline_comment|/* Byte 72 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 73-75 */
DECL|member|HardwareReleaseDay
r_int
r_char
id|HardwareReleaseDay
suffix:semicolon
multiline_comment|/* Byte 76 */
DECL|member|HardwareReleaseMonth
r_int
r_char
id|HardwareReleaseMonth
suffix:semicolon
multiline_comment|/* Byte 77 */
DECL|member|HardwareReleaseYearHigh2Digits
r_int
r_char
id|HardwareReleaseYearHigh2Digits
suffix:semicolon
multiline_comment|/* Byte 78 */
DECL|member|HardwareReleaseYearLow2Digits
r_int
r_char
id|HardwareReleaseYearLow2Digits
suffix:semicolon
multiline_comment|/* Byte 79 */
multiline_comment|/* Hardware Manufacturing Information */
DECL|member|ManufacturingBatchNumber
r_int
r_char
id|ManufacturingBatchNumber
suffix:semicolon
multiline_comment|/* Byte 80 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 81 */
DECL|member|ManufacturingPlantNumber
r_int
r_char
id|ManufacturingPlantNumber
suffix:semicolon
multiline_comment|/* Byte 82 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 83 */
DECL|member|HardwareManufacturingDay
r_int
r_char
id|HardwareManufacturingDay
suffix:semicolon
multiline_comment|/* Byte 84 */
DECL|member|HardwareManufacturingMonth
r_int
r_char
id|HardwareManufacturingMonth
suffix:semicolon
multiline_comment|/* Byte 85 */
DECL|member|HardwareManufacturingYearHigh2Digits
r_int
r_char
id|HardwareManufacturingYearHigh2Digits
suffix:semicolon
multiline_comment|/* Byte 86 */
DECL|member|HardwareManufacturingYearLow2Digits
r_int
r_char
id|HardwareManufacturingYearLow2Digits
suffix:semicolon
multiline_comment|/* Byte 87 */
DECL|member|MaximumNumberOfPDDperXLDD
r_int
r_char
id|MaximumNumberOfPDDperXLDD
suffix:semicolon
multiline_comment|/* Byte 88 */
DECL|member|MaximumNumberOfILDDperXLDD
r_int
r_char
id|MaximumNumberOfILDDperXLDD
suffix:semicolon
multiline_comment|/* Byte 89 */
DECL|member|NonvolatileMemorySizeKB
r_int
r_int
id|NonvolatileMemorySizeKB
suffix:semicolon
multiline_comment|/* Bytes 90-91 */
DECL|member|MaximumNumberOfXLDD
r_int
r_char
id|MaximumNumberOfXLDD
suffix:semicolon
multiline_comment|/* Byte 92 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 93-95 */
multiline_comment|/* Unique Information per Controller */
DECL|member|ControllerSerialNumber
r_int
r_char
id|ControllerSerialNumber
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 96-111 */
DECL|member|Reserved3
r_int
r_char
id|Reserved3
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 112-127 */
multiline_comment|/* Vendor Information */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 128-130 */
DECL|member|OEM_Information
r_int
r_char
id|OEM_Information
suffix:semicolon
multiline_comment|/* Byte 131 */
DECL|member|VendorName
r_int
r_char
id|VendorName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 132-147 */
multiline_comment|/* Other Physical/Controller/Operation Information */
DECL|member|BBU_Present
id|boolean
id|BBU_Present
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 148 Bit 0 */
DECL|member|ActiveActiveClusteringMode
id|boolean
id|ActiveActiveClusteringMode
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 148 Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 148 Bits 2-7 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 149 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 150-151 */
multiline_comment|/* Physical Device Scan Information */
DECL|member|PhysicalScanActive
id|boolean
id|PhysicalScanActive
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 152 Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 152 Bits 1-7 */
DECL|member|PhysicalDeviceChannelNumber
r_int
r_char
id|PhysicalDeviceChannelNumber
suffix:semicolon
multiline_comment|/* Byte 153 */
DECL|member|PhysicalDeviceTargetID
r_int
r_char
id|PhysicalDeviceTargetID
suffix:semicolon
multiline_comment|/* Byte 154 */
DECL|member|PhysicalDeviceLogicalUnit
r_int
r_char
id|PhysicalDeviceLogicalUnit
suffix:semicolon
multiline_comment|/* Byte 155 */
multiline_comment|/* Maximum Command Data Transfer Sizes */
DECL|member|MaximumDataTransferSizeInBlocks
r_int
r_int
id|MaximumDataTransferSizeInBlocks
suffix:semicolon
multiline_comment|/* Bytes 156-157 */
DECL|member|MaximumScatterGatherEntries
r_int
r_int
id|MaximumScatterGatherEntries
suffix:semicolon
multiline_comment|/* Bytes 158-159 */
multiline_comment|/* Logical/Physical Device Counts */
DECL|member|LogicalDevicesPresent
r_int
r_int
id|LogicalDevicesPresent
suffix:semicolon
multiline_comment|/* Bytes 160-161 */
DECL|member|LogicalDevicesCritical
r_int
r_int
id|LogicalDevicesCritical
suffix:semicolon
multiline_comment|/* Bytes 162-163 */
DECL|member|LogicalDevicesOffline
r_int
r_int
id|LogicalDevicesOffline
suffix:semicolon
multiline_comment|/* Bytes 164-165 */
DECL|member|PhysicalDevicesPresent
r_int
r_int
id|PhysicalDevicesPresent
suffix:semicolon
multiline_comment|/* Bytes 166-167 */
DECL|member|PhysicalDisksPresent
r_int
r_int
id|PhysicalDisksPresent
suffix:semicolon
multiline_comment|/* Bytes 168-169 */
DECL|member|PhysicalDisksCritical
r_int
r_int
id|PhysicalDisksCritical
suffix:semicolon
multiline_comment|/* Bytes 170-171 */
DECL|member|PhysicalDisksOffline
r_int
r_int
id|PhysicalDisksOffline
suffix:semicolon
multiline_comment|/* Bytes 172-173 */
DECL|member|MaximumParallelCommands
r_int
r_int
id|MaximumParallelCommands
suffix:semicolon
multiline_comment|/* Bytes 174-175 */
multiline_comment|/* Channel and Target ID Information */
DECL|member|NumberOfPhysicalChannelsPresent
r_int
r_char
id|NumberOfPhysicalChannelsPresent
suffix:semicolon
multiline_comment|/* Byte 176 */
DECL|member|NumberOfVirtualChannelsPresent
r_int
r_char
id|NumberOfVirtualChannelsPresent
suffix:semicolon
multiline_comment|/* Byte 177 */
DECL|member|NumberOfPhysicalChannelsPossible
r_int
r_char
id|NumberOfPhysicalChannelsPossible
suffix:semicolon
multiline_comment|/* Byte 178 */
DECL|member|NumberOfVirtualChannelsPossible
r_int
r_char
id|NumberOfVirtualChannelsPossible
suffix:semicolon
multiline_comment|/* Byte 179 */
DECL|member|MaximumTargetsPerChannel
r_int
r_char
id|MaximumTargetsPerChannel
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 180-195 */
DECL|member|Reserved4
r_int
r_char
id|Reserved4
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 196-207 */
multiline_comment|/* Memory/Cache Information */
DECL|member|MemorySizeMB
r_int
r_int
id|MemorySizeMB
suffix:semicolon
multiline_comment|/* Bytes 208-209 */
DECL|member|CacheSizeMB
r_int
r_int
id|CacheSizeMB
suffix:semicolon
multiline_comment|/* Bytes 210-211 */
DECL|member|ValidCacheSizeInBytes
r_int
r_int
id|ValidCacheSizeInBytes
suffix:semicolon
multiline_comment|/* Bytes 212-215 */
DECL|member|DirtyCacheSizeInBytes
r_int
r_int
id|DirtyCacheSizeInBytes
suffix:semicolon
multiline_comment|/* Bytes 216-219 */
DECL|member|MemorySpeedMHz
r_int
r_int
id|MemorySpeedMHz
suffix:semicolon
multiline_comment|/* Bytes 220-221 */
DECL|member|MemoryDataWidthBits
r_int
r_char
id|MemoryDataWidthBits
suffix:semicolon
multiline_comment|/* Byte 222 */
DECL|member|MemoryType
id|DAC960_V2_MemoryType_T
id|MemoryType
suffix:semicolon
multiline_comment|/* Byte 223 */
DECL|member|CacheMemoryTypeName
r_int
r_char
id|CacheMemoryTypeName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 224-239 */
multiline_comment|/* Execution Memory Information */
DECL|member|ExecutionMemorySizeMB
r_int
r_int
id|ExecutionMemorySizeMB
suffix:semicolon
multiline_comment|/* Bytes 240-241 */
DECL|member|ExecutionL2CacheSizeMB
r_int
r_int
id|ExecutionL2CacheSizeMB
suffix:semicolon
multiline_comment|/* Bytes 242-243 */
DECL|member|Reserved5
r_int
r_char
id|Reserved5
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Bytes 244-251 */
DECL|member|ExecutionMemorySpeedMHz
r_int
r_int
id|ExecutionMemorySpeedMHz
suffix:semicolon
multiline_comment|/* Bytes 252-253 */
DECL|member|ExecutionMemoryDataWidthBits
r_int
r_char
id|ExecutionMemoryDataWidthBits
suffix:semicolon
multiline_comment|/* Byte 254 */
DECL|member|ExecutionMemoryType
id|DAC960_V2_MemoryType_T
id|ExecutionMemoryType
suffix:semicolon
multiline_comment|/* Byte 255 */
DECL|member|ExecutionMemoryTypeName
r_int
r_char
id|ExecutionMemoryTypeName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 256-271 */
multiline_comment|/* First CPU Type Information */
DECL|member|FirstProcessorSpeedMHz
r_int
r_int
id|FirstProcessorSpeedMHz
suffix:semicolon
multiline_comment|/* Bytes 272-273 */
DECL|member|FirstProcessorType
id|DAC960_V2_ProcessorType_T
id|FirstProcessorType
suffix:semicolon
multiline_comment|/* Byte 274 */
DECL|member|FirstProcessorCount
r_int
r_char
id|FirstProcessorCount
suffix:semicolon
multiline_comment|/* Byte 275 */
DECL|member|Reserved6
r_int
r_char
id|Reserved6
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 276-287 */
DECL|member|FirstProcessorName
r_int
r_char
id|FirstProcessorName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 288-303 */
multiline_comment|/* Second CPU Type Information */
DECL|member|SecondProcessorSpeedMHz
r_int
r_int
id|SecondProcessorSpeedMHz
suffix:semicolon
multiline_comment|/* Bytes 304-305 */
DECL|member|SecondProcessorType
id|DAC960_V2_ProcessorType_T
id|SecondProcessorType
suffix:semicolon
multiline_comment|/* Byte 306 */
DECL|member|SecondProcessorCount
r_int
r_char
id|SecondProcessorCount
suffix:semicolon
multiline_comment|/* Byte 307 */
DECL|member|Reserved7
r_int
r_char
id|Reserved7
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 308-319 */
DECL|member|SecondProcessorName
r_int
r_char
id|SecondProcessorName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 320-335 */
multiline_comment|/* Debugging/Profiling/Command Time Tracing Information */
DECL|member|CurrentProfilingDataPageNumber
r_int
r_int
id|CurrentProfilingDataPageNumber
suffix:semicolon
multiline_comment|/* Bytes 336-337 */
DECL|member|ProgramsAwaitingProfilingData
r_int
r_int
id|ProgramsAwaitingProfilingData
suffix:semicolon
multiline_comment|/* Bytes 338-339 */
DECL|member|CurrentCommandTimeTraceDataPageNumber
r_int
r_int
id|CurrentCommandTimeTraceDataPageNumber
suffix:semicolon
multiline_comment|/* Bytes 340-341 */
DECL|member|ProgramsAwaitingCommandTimeTraceData
r_int
r_int
id|ProgramsAwaitingCommandTimeTraceData
suffix:semicolon
multiline_comment|/* Bytes 342-343 */
DECL|member|Reserved8
r_int
r_char
id|Reserved8
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Bytes 344-351 */
multiline_comment|/* Error Counters on Physical Devices */
DECL|member|PhysicalDeviceBusResets
r_int
r_int
id|PhysicalDeviceBusResets
suffix:semicolon
multiline_comment|/* Bytes 352-353 */
DECL|member|PhysicalDeviceParityErrors
r_int
r_int
id|PhysicalDeviceParityErrors
suffix:semicolon
multiline_comment|/* Bytes 355-355 */
DECL|member|PhysicalDeviceSoftErrors
r_int
r_int
id|PhysicalDeviceSoftErrors
suffix:semicolon
multiline_comment|/* Bytes 356-357 */
DECL|member|PhysicalDeviceCommandsFailed
r_int
r_int
id|PhysicalDeviceCommandsFailed
suffix:semicolon
multiline_comment|/* Bytes 358-359 */
DECL|member|PhysicalDeviceMiscellaneousErrors
r_int
r_int
id|PhysicalDeviceMiscellaneousErrors
suffix:semicolon
multiline_comment|/* Bytes 360-361 */
DECL|member|PhysicalDeviceCommandTimeouts
r_int
r_int
id|PhysicalDeviceCommandTimeouts
suffix:semicolon
multiline_comment|/* Bytes 362-363 */
DECL|member|PhysicalDeviceSelectionTimeouts
r_int
r_int
id|PhysicalDeviceSelectionTimeouts
suffix:semicolon
multiline_comment|/* Bytes 364-365 */
DECL|member|PhysicalDeviceRetriesDone
r_int
r_int
id|PhysicalDeviceRetriesDone
suffix:semicolon
multiline_comment|/* Bytes 366-367 */
DECL|member|PhysicalDeviceAbortsDone
r_int
r_int
id|PhysicalDeviceAbortsDone
suffix:semicolon
multiline_comment|/* Bytes 368-369 */
DECL|member|PhysicalDeviceHostCommandAbortsDone
r_int
r_int
id|PhysicalDeviceHostCommandAbortsDone
suffix:semicolon
multiline_comment|/* Bytes 370-371 */
DECL|member|PhysicalDevicePredictedFailuresDetected
r_int
r_int
id|PhysicalDevicePredictedFailuresDetected
suffix:semicolon
multiline_comment|/* Bytes 372-373 */
DECL|member|PhysicalDeviceHostCommandsFailed
r_int
r_int
id|PhysicalDeviceHostCommandsFailed
suffix:semicolon
multiline_comment|/* Bytes 374-375 */
DECL|member|Reserved9
r_int
r_char
id|Reserved9
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Bytes 376-383 */
multiline_comment|/* Error Counters on Logical Devices */
DECL|member|LogicalDeviceSoftErrors
r_int
r_int
id|LogicalDeviceSoftErrors
suffix:semicolon
multiline_comment|/* Bytes 384-385 */
DECL|member|LogicalDeviceCommandsFailed
r_int
r_int
id|LogicalDeviceCommandsFailed
suffix:semicolon
multiline_comment|/* Bytes 386-387 */
DECL|member|LogicalDeviceHostCommandAbortsDone
r_int
r_int
id|LogicalDeviceHostCommandAbortsDone
suffix:semicolon
multiline_comment|/* Bytes 388-389 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 390-391 */
DECL|member|ControllerMemoryErrors
r_int
r_int
id|ControllerMemoryErrors
suffix:semicolon
multiline_comment|/* Bytes 392-393 */
DECL|member|ControllerHostCommandAbortsDone
r_int
r_int
id|ControllerHostCommandAbortsDone
suffix:semicolon
multiline_comment|/* Bytes 394-395 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 396-399 */
multiline_comment|/* Long Duration Activity Information */
DECL|member|BackgroundInitializationsActive
r_int
r_int
id|BackgroundInitializationsActive
suffix:semicolon
multiline_comment|/* Bytes 400-401 */
DECL|member|LogicalDeviceInitializationsActive
r_int
r_int
id|LogicalDeviceInitializationsActive
suffix:semicolon
multiline_comment|/* Bytes 402-403 */
DECL|member|PhysicalDeviceInitializationsActive
r_int
r_int
id|PhysicalDeviceInitializationsActive
suffix:semicolon
multiline_comment|/* Bytes 404-405 */
DECL|member|ConsistencyChecksActive
r_int
r_int
id|ConsistencyChecksActive
suffix:semicolon
multiline_comment|/* Bytes 406-407 */
DECL|member|RebuildsActive
r_int
r_int
id|RebuildsActive
suffix:semicolon
multiline_comment|/* Bytes 408-409 */
DECL|member|OnlineExpansionsActive
r_int
r_int
id|OnlineExpansionsActive
suffix:semicolon
multiline_comment|/* Bytes 410-411 */
DECL|member|PatrolActivitiesActive
r_int
r_int
id|PatrolActivitiesActive
suffix:semicolon
multiline_comment|/* Bytes 412-413 */
DECL|member|LongOperationStatus
r_int
r_char
id|LongOperationStatus
suffix:semicolon
multiline_comment|/* Byte 414 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 415 */
multiline_comment|/* Flash ROM Information */
DECL|member|FlashType
r_int
r_char
id|FlashType
suffix:semicolon
multiline_comment|/* Byte 416 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 417 */
DECL|member|FlashSizeMB
r_int
r_int
id|FlashSizeMB
suffix:semicolon
multiline_comment|/* Bytes 418-419 */
DECL|member|FlashLimit
r_int
r_int
id|FlashLimit
suffix:semicolon
multiline_comment|/* Bytes 420-423 */
DECL|member|FlashCount
r_int
r_int
id|FlashCount
suffix:semicolon
multiline_comment|/* Bytes 424-427 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 428-431 */
DECL|member|FlashTypeName
r_int
r_char
id|FlashTypeName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 432-447 */
multiline_comment|/* Firmware Run Time Information */
DECL|member|RebuildRate
r_int
r_char
id|RebuildRate
suffix:semicolon
multiline_comment|/* Byte 448 */
DECL|member|BackgroundInitializationRate
r_int
r_char
id|BackgroundInitializationRate
suffix:semicolon
multiline_comment|/* Byte 449 */
DECL|member|ForegroundInitializationRate
r_int
r_char
id|ForegroundInitializationRate
suffix:semicolon
multiline_comment|/* Byte 450 */
DECL|member|ConsistencyCheckRate
r_int
r_char
id|ConsistencyCheckRate
suffix:semicolon
multiline_comment|/* Byte 451 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 452-455 */
DECL|member|MaximumDP
r_int
r_int
id|MaximumDP
suffix:semicolon
multiline_comment|/* Bytes 456-459 */
DECL|member|FreeDP
r_int
r_int
id|FreeDP
suffix:semicolon
multiline_comment|/* Bytes 460-463 */
DECL|member|MaximumIOP
r_int
r_int
id|MaximumIOP
suffix:semicolon
multiline_comment|/* Bytes 464-467 */
DECL|member|FreeIOP
r_int
r_int
id|FreeIOP
suffix:semicolon
multiline_comment|/* Bytes 468-471 */
DECL|member|MaximumCombLengthInBlocks
r_int
r_int
id|MaximumCombLengthInBlocks
suffix:semicolon
multiline_comment|/* Bytes 472-473 */
DECL|member|NumberOfConfigurationGroups
r_int
r_int
id|NumberOfConfigurationGroups
suffix:semicolon
multiline_comment|/* Bytes 474-475 */
DECL|member|InstallationAbortStatus
id|boolean
id|InstallationAbortStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 476 Bit 0 */
DECL|member|MaintenanceModeStatus
id|boolean
id|MaintenanceModeStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 476 Bit 1 */
r_int
r_int
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 476 Bits 2-7 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 477-479 */
DECL|member|Reserved10
r_int
r_char
id|Reserved10
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* Bytes 480-511 */
DECL|member|Reserved11
r_int
r_char
id|Reserved11
(braket
l_int|512
)braket
suffix:semicolon
multiline_comment|/* Bytes 512-1023 */
)brace
DECL|typedef|DAC960_V2_ControllerInfo_T
id|DAC960_V2_ControllerInfo_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Logical Device State type.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V2_LogicalDevice_Online
id|DAC960_V2_LogicalDevice_Online
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_LogicalDevice_Offline
id|DAC960_V2_LogicalDevice_Offline
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_V2_LogicalDevice_Critical
id|DAC960_V2_LogicalDevice_Critical
op_assign
l_int|0x09
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_LogicalDeviceState_T
id|DAC960_V2_LogicalDeviceState_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Get Logical Device Info reply structure.&n;*/
DECL|struct|DAC960_V2_LogicalDeviceInfo
r_typedef
r_struct
id|DAC960_V2_LogicalDeviceInfo
(brace
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|LogicalUnit
r_int
r_char
id|LogicalUnit
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|LogicalDeviceState
id|DAC960_V2_LogicalDeviceState_T
id|LogicalDeviceState
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|RAIDLevel
r_int
r_char
id|RAIDLevel
suffix:semicolon
multiline_comment|/* Byte 5 */
DECL|member|StripeSize
r_int
r_char
id|StripeSize
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|CacheLineSize
r_int
r_char
id|CacheLineSize
suffix:semicolon
multiline_comment|/* Byte 7 */
r_struct
(brace
r_enum
(brace
DECL|enumerator|DAC960_V2_ReadCacheDisabled
id|DAC960_V2_ReadCacheDisabled
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V2_ReadCacheEnabled
id|DAC960_V2_ReadCacheEnabled
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V2_ReadAheadEnabled
id|DAC960_V2_ReadAheadEnabled
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_V2_IntelligentReadAheadEnabled
id|DAC960_V2_IntelligentReadAheadEnabled
op_assign
l_int|0x3
DECL|member|ReadCache
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|ReadCache
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 8 Bits 0-2 */
r_enum
(brace
DECL|enumerator|DAC960_V2_WriteCacheDisabled
id|DAC960_V2_WriteCacheDisabled
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V2_LogicalDeviceReadOnly
id|DAC960_V2_LogicalDeviceReadOnly
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V2_WriteCacheEnabled
id|DAC960_V2_WriteCacheEnabled
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_V2_IntelligentWriteCacheEnabled
id|DAC960_V2_IntelligentWriteCacheEnabled
op_assign
l_int|0x3
DECL|member|WriteCache
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|WriteCache
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 8 Bits 3-5 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 6 */
DECL|member|LogicalDeviceInitialized
id|boolean
id|LogicalDeviceInitialized
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 8 Bit 7 */
DECL|member|LogicalDeviceControl
)brace
id|LogicalDeviceControl
suffix:semicolon
multiline_comment|/* Byte 8 */
multiline_comment|/* Logical Device Operations Status */
DECL|member|ConsistencyCheckInProgress
id|boolean
id|ConsistencyCheckInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 9 Bit 0 */
DECL|member|RebuildInProgress
id|boolean
id|RebuildInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 9 Bit 1 */
DECL|member|BackgroundInitializationInProgress
id|boolean
id|BackgroundInitializationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 9 Bit 2 */
DECL|member|ForegroundInitializationInProgress
id|boolean
id|ForegroundInitializationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 9 Bit 3 */
DECL|member|DataMigrationInProgress
id|boolean
id|DataMigrationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 9 Bit 4 */
DECL|member|PatrolOperationInProgress
id|boolean
id|PatrolOperationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 9 Bit 5 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 9 Bits 6-7 */
DECL|member|RAID5WriteUpdate
r_int
r_char
id|RAID5WriteUpdate
suffix:semicolon
multiline_comment|/* Byte 10 */
DECL|member|RAID5Algorithm
r_int
r_char
id|RAID5Algorithm
suffix:semicolon
multiline_comment|/* Byte 11 */
DECL|member|LogicalDeviceNumber
r_int
r_int
id|LogicalDeviceNumber
suffix:semicolon
multiline_comment|/* Bytes 12-13 */
multiline_comment|/* BIOS Info */
DECL|member|BIOSDisabled
id|boolean
id|BIOSDisabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 14 Bit 0 */
DECL|member|CDROMBootEnabled
id|boolean
id|CDROMBootEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 14 Bit 1 */
DECL|member|DriveCoercionEnabled
id|boolean
id|DriveCoercionEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 14 Bit 2 */
DECL|member|WriteSameDisabled
id|boolean
id|WriteSameDisabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 14 Bit 3 */
DECL|member|HBA_ModeEnabled
id|boolean
id|HBA_ModeEnabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 14 Bit 4 */
r_enum
(brace
DECL|enumerator|DAC960_V2_Geometry_128_32
id|DAC960_V2_Geometry_128_32
op_assign
l_int|0x0
comma
DECL|enumerator|DAC960_V2_Geometry_255_63
id|DAC960_V2_Geometry_255_63
op_assign
l_int|0x1
comma
DECL|enumerator|DAC960_V2_Geometry_Reserved1
id|DAC960_V2_Geometry_Reserved1
op_assign
l_int|0x2
comma
DECL|enumerator|DAC960_V2_Geometry_Reserved2
id|DAC960_V2_Geometry_Reserved2
op_assign
l_int|0x3
DECL|member|DriveGeometry
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|DriveGeometry
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 14 Bits 5-6 */
r_int
r_char
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 14 Bit 7 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 15 */
multiline_comment|/* Error Counters */
DECL|member|SoftErrors
r_int
r_int
id|SoftErrors
suffix:semicolon
multiline_comment|/* Bytes 16-17 */
DECL|member|CommandsFailed
r_int
r_int
id|CommandsFailed
suffix:semicolon
multiline_comment|/* Bytes 18-19 */
DECL|member|HostCommandAbortsDone
r_int
r_int
id|HostCommandAbortsDone
suffix:semicolon
multiline_comment|/* Bytes 20-21 */
DECL|member|DeferredWriteErrors
r_int
r_int
id|DeferredWriteErrors
suffix:semicolon
multiline_comment|/* Bytes 22-23 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 24-27 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 28-31 */
multiline_comment|/* Device Size Information */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 32-33 */
DECL|member|DeviceBlockSizeInBytes
r_int
r_int
id|DeviceBlockSizeInBytes
suffix:semicolon
multiline_comment|/* Bytes 34-35 */
DECL|member|OriginalDeviceSizeIn512ByteBlocksOrMB
r_int
r_int
id|OriginalDeviceSizeIn512ByteBlocksOrMB
suffix:semicolon
multiline_comment|/* Bytes 36-39 */
DECL|member|ConfigurableDeviceSizeIn512ByteBlocksOrMB
r_int
r_int
id|ConfigurableDeviceSizeIn512ByteBlocksOrMB
suffix:semicolon
multiline_comment|/* Bytes 40-43 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 44-47 */
DECL|member|LogicalDeviceName
r_int
r_char
id|LogicalDeviceName
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* Bytes 48-79 */
DECL|member|SCSI_InquiryData
r_int
r_char
id|SCSI_InquiryData
(braket
l_int|36
)braket
suffix:semicolon
multiline_comment|/* Bytes 80-115 */
DECL|member|Reserved1
r_int
r_char
id|Reserved1
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 116-127 */
DECL|member|LastReadBlockNumber
id|DAC960_ByteCount64_T
id|LastReadBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 128-135 */
DECL|member|LastWrittenBlockNumber
id|DAC960_ByteCount64_T
id|LastWrittenBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 136-143 */
DECL|member|ConsistencyCheckBlockNumber
id|DAC960_ByteCount64_T
id|ConsistencyCheckBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 144-151 */
DECL|member|RebuildBlockNumber
id|DAC960_ByteCount64_T
id|RebuildBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 152-159 */
DECL|member|BackgroundInitializationBlockNumber
id|DAC960_ByteCount64_T
id|BackgroundInitializationBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 160-167 */
DECL|member|ForegroundInitializationBlockNumber
id|DAC960_ByteCount64_T
id|ForegroundInitializationBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 168-175 */
DECL|member|DataMigrationBlockNumber
id|DAC960_ByteCount64_T
id|DataMigrationBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 176-183 */
DECL|member|PatrolOperationBlockNumber
id|DAC960_ByteCount64_T
id|PatrolOperationBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 184-191 */
DECL|member|Reserved2
r_int
r_char
id|Reserved2
(braket
l_int|64
)braket
suffix:semicolon
multiline_comment|/* Bytes 192-255 */
)brace
DECL|typedef|DAC960_V2_LogicalDeviceInfo_T
id|DAC960_V2_LogicalDeviceInfo_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Physical Device State type.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V2_Device_Unconfigured
id|DAC960_V2_Device_Unconfigured
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V2_Device_Online
id|DAC960_V2_Device_Online
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_Device_WriteOnly
id|DAC960_V2_Device_WriteOnly
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V2_Device_Dead
id|DAC960_V2_Device_Dead
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_V2_Device_Standby
id|DAC960_V2_Device_Standby
op_assign
l_int|0x21
comma
DECL|enumerator|DAC960_V2_Device_InvalidState
id|DAC960_V2_Device_InvalidState
op_assign
l_int|0xFF
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_PhysicalDeviceState_T
id|DAC960_V2_PhysicalDeviceState_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Get Physical Device Info reply structure.&n;*/
DECL|struct|DAC960_V2_PhysicalDeviceInfo
r_typedef
r_struct
id|DAC960_V2_PhysicalDeviceInfo
(brace
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|LogicalUnit
r_int
r_char
id|LogicalUnit
suffix:semicolon
multiline_comment|/* Byte 3 */
multiline_comment|/* Configuration Status Bits */
DECL|member|PhysicalDeviceFaultTolerant
id|boolean
id|PhysicalDeviceFaultTolerant
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 4 Bit 0 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 4 Bit 1 */
DECL|member|PhysicalDeviceLocalToController
id|boolean
id|PhysicalDeviceLocalToController
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 4 Bit 2 */
r_int
r_char
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 4 Bits 3-7 */
multiline_comment|/* Multiple Host/Controller Status Bits */
DECL|member|RemoteHostSystemDead
id|boolean
id|RemoteHostSystemDead
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 5 Bit 0 */
DECL|member|RemoteControllerDead
id|boolean
id|RemoteControllerDead
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 5 Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 5 Bits 2-7 */
DECL|member|PhysicalDeviceState
id|DAC960_V2_PhysicalDeviceState_T
id|PhysicalDeviceState
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|NegotiatedDataWidthBits
r_int
r_char
id|NegotiatedDataWidthBits
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|NegotiatedSynchronousMegaTransfers
r_int
r_int
id|NegotiatedSynchronousMegaTransfers
suffix:semicolon
multiline_comment|/* Bytes 8-9 */
multiline_comment|/* Multiported Physical Device Information */
DECL|member|NumberOfPortConnections
r_int
r_char
id|NumberOfPortConnections
suffix:semicolon
multiline_comment|/* Byte 10 */
DECL|member|DriveAccessibilityBitmap
r_int
r_char
id|DriveAccessibilityBitmap
suffix:semicolon
multiline_comment|/* Byte 11 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|NetworkAddress
r_int
r_char
id|NetworkAddress
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 16-31 */
DECL|member|MaximumTags
r_int
r_int
id|MaximumTags
suffix:semicolon
multiline_comment|/* Bytes 32-33 */
multiline_comment|/* Physical Device Operations Status */
DECL|member|ConsistencyCheckInProgress
id|boolean
id|ConsistencyCheckInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 34 Bit 0 */
DECL|member|RebuildInProgress
id|boolean
id|RebuildInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 34 Bit 1 */
DECL|member|MakingDataConsistentInProgress
id|boolean
id|MakingDataConsistentInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 34 Bit 2 */
DECL|member|PhysicalDeviceInitializationInProgress
id|boolean
id|PhysicalDeviceInitializationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 34 Bit 3 */
DECL|member|DataMigrationInProgress
id|boolean
id|DataMigrationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 34 Bit 4 */
DECL|member|PatrolOperationInProgress
id|boolean
id|PatrolOperationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 34 Bit 5 */
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 34 Bits 6-7 */
DECL|member|LongOperationStatus
r_int
r_char
id|LongOperationStatus
suffix:semicolon
multiline_comment|/* Byte 35 */
DECL|member|ParityErrors
r_int
r_char
id|ParityErrors
suffix:semicolon
multiline_comment|/* Byte 36 */
DECL|member|SoftErrors
r_int
r_char
id|SoftErrors
suffix:semicolon
multiline_comment|/* Byte 37 */
DECL|member|HardErrors
r_int
r_char
id|HardErrors
suffix:semicolon
multiline_comment|/* Byte 38 */
DECL|member|MiscellaneousErrors
r_int
r_char
id|MiscellaneousErrors
suffix:semicolon
multiline_comment|/* Byte 39 */
DECL|member|CommandTimeouts
r_int
r_char
id|CommandTimeouts
suffix:semicolon
multiline_comment|/* Byte 40 */
DECL|member|Retries
r_int
r_char
id|Retries
suffix:semicolon
multiline_comment|/* Byte 41 */
DECL|member|Aborts
r_int
r_char
id|Aborts
suffix:semicolon
multiline_comment|/* Byte 42 */
DECL|member|PredictedFailuresDetected
r_int
r_char
id|PredictedFailuresDetected
suffix:semicolon
multiline_comment|/* Byte 43 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 44-47 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 48-49 */
DECL|member|DeviceBlockSizeInBytes
r_int
r_int
id|DeviceBlockSizeInBytes
suffix:semicolon
multiline_comment|/* Bytes 50-51 */
DECL|member|OriginalDeviceSizeIn512ByteBlocksOrMB
r_int
r_int
id|OriginalDeviceSizeIn512ByteBlocksOrMB
suffix:semicolon
multiline_comment|/* Bytes 52-55 */
DECL|member|ConfigurableDeviceSizeIn512ByteBlocksOrMB
r_int
r_int
id|ConfigurableDeviceSizeIn512ByteBlocksOrMB
suffix:semicolon
multiline_comment|/* Bytes 56-59 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 60-63 */
DECL|member|PhysicalDeviceName
r_int
r_char
id|PhysicalDeviceName
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 64-79 */
DECL|member|Reserved1
r_int
r_char
id|Reserved1
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 80-95 */
DECL|member|Reserved2
r_int
r_char
id|Reserved2
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* Bytes 96-127 */
DECL|member|SCSI_InquiryData
r_int
r_char
id|SCSI_InquiryData
(braket
l_int|36
)braket
suffix:semicolon
multiline_comment|/* Bytes 128-163 */
DECL|member|Reserved3
r_int
r_char
id|Reserved3
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* Bytes 164-175 */
DECL|member|Reserved4
r_int
r_char
id|Reserved4
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 176-191 */
DECL|member|LastReadBlockNumber
id|DAC960_ByteCount64_T
id|LastReadBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 192-199 */
DECL|member|LastWrittenBlockNumber
id|DAC960_ByteCount64_T
id|LastWrittenBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 200-207 */
DECL|member|ConsistencyCheckBlockNumber
id|DAC960_ByteCount64_T
id|ConsistencyCheckBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 208-215 */
DECL|member|RebuildBlockNumber
id|DAC960_ByteCount64_T
id|RebuildBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 216-223 */
DECL|member|MakingDataConsistentBlockNumber
id|DAC960_ByteCount64_T
id|MakingDataConsistentBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 224-231 */
DECL|member|DeviceInitializationBlockNumber
id|DAC960_ByteCount64_T
id|DeviceInitializationBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 232-239 */
DECL|member|DataMigrationBlockNumber
id|DAC960_ByteCount64_T
id|DataMigrationBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 240-247 */
DECL|member|PatrolOperationBlockNumber
id|DAC960_ByteCount64_T
id|PatrolOperationBlockNumber
suffix:semicolon
multiline_comment|/* Bytes 248-255 */
DECL|member|Reserved5
r_int
r_char
id|Reserved5
(braket
l_int|256
)braket
suffix:semicolon
multiline_comment|/* Bytes 256-511 */
)brace
DECL|typedef|DAC960_V2_PhysicalDeviceInfo_T
id|DAC960_V2_PhysicalDeviceInfo_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Health Status Buffer structure.&n;*/
DECL|struct|DAC960_V2_HealthStatusBuffer
r_typedef
r_struct
id|DAC960_V2_HealthStatusBuffer
(brace
DECL|member|MicrosecondsFromControllerStartTime
r_int
r_int
id|MicrosecondsFromControllerStartTime
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
DECL|member|MillisecondsFromControllerStartTime
r_int
r_int
id|MillisecondsFromControllerStartTime
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|SecondsFrom1January1970
r_int
r_int
id|SecondsFrom1January1970
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 12-15 */
DECL|member|StatusChangeCounter
r_int
r_int
id|StatusChangeCounter
suffix:semicolon
multiline_comment|/* Bytes 16-19 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 20-23 */
DECL|member|DebugOutputMessageBufferIndex
r_int
r_int
id|DebugOutputMessageBufferIndex
suffix:semicolon
multiline_comment|/* Bytes 24-27 */
DECL|member|CodedMessageBufferIndex
r_int
r_int
id|CodedMessageBufferIndex
suffix:semicolon
multiline_comment|/* Bytes 28-31 */
DECL|member|CurrentTimeTracePageNumber
r_int
r_int
id|CurrentTimeTracePageNumber
suffix:semicolon
multiline_comment|/* Bytes 32-35 */
DECL|member|CurrentProfilerPageNumber
r_int
r_int
id|CurrentProfilerPageNumber
suffix:semicolon
multiline_comment|/* Bytes 36-39 */
DECL|member|NextEventSequenceNumber
r_int
r_int
id|NextEventSequenceNumber
suffix:semicolon
multiline_comment|/* Bytes 40-43 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 44-47 */
DECL|member|Reserved1
r_int
r_char
id|Reserved1
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Bytes 48-63 */
DECL|member|Reserved2
r_int
r_char
id|Reserved2
(braket
l_int|64
)braket
suffix:semicolon
multiline_comment|/* Bytes 64-127 */
)brace
DECL|typedef|DAC960_V2_HealthStatusBuffer_T
id|DAC960_V2_HealthStatusBuffer_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Get Event reply structure.&n;*/
DECL|struct|DAC960_V2_Event
r_typedef
r_struct
id|DAC960_V2_Event
(brace
DECL|member|EventSequenceNumber
r_int
r_int
id|EventSequenceNumber
suffix:semicolon
multiline_comment|/* Bytes 0-3 */
DECL|member|EventTime
r_int
r_int
id|EventTime
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|EventCode
r_int
r_int
id|EventCode
suffix:semicolon
multiline_comment|/* Bytes 8-11 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 12 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:semicolon
multiline_comment|/* Byte 13 */
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:semicolon
multiline_comment|/* Byte 14 */
DECL|member|LogicalUnit
r_int
r_char
id|LogicalUnit
suffix:semicolon
multiline_comment|/* Byte 15 */
r_int
r_int
suffix:colon
l_int|32
suffix:semicolon
multiline_comment|/* Bytes 16-19 */
DECL|member|EventSpecificParameter
r_int
r_int
id|EventSpecificParameter
suffix:semicolon
multiline_comment|/* Bytes 20-23 */
DECL|member|RequestSenseData
r_int
r_char
id|RequestSenseData
(braket
l_int|40
)braket
suffix:semicolon
multiline_comment|/* Bytes 24-63 */
)brace
DECL|typedef|DAC960_V2_Event_T
id|DAC960_V2_Event_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Command Control Bits structure.&n;*/
DECL|struct|DAC960_V2_CommandControlBits
r_typedef
r_struct
id|DAC960_V2_CommandControlBits
(brace
DECL|member|ForceUnitAccess
id|boolean
id|ForceUnitAccess
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 0 */
DECL|member|DisablePageOut
id|boolean
id|DisablePageOut
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 1 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 2 */
DECL|member|AdditionalScatterGatherListMemory
id|boolean
id|AdditionalScatterGatherListMemory
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 3 */
DECL|member|DataTransferControllerToHost
id|boolean
id|DataTransferControllerToHost
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 4 */
DECL|member|boolean
id|boolean
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 5 */
DECL|member|NoAutoRequestSense
id|boolean
id|NoAutoRequestSense
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 6 */
DECL|member|DisconnectProhibited
id|boolean
id|DisconnectProhibited
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 0 Bit 7 */
)brace
DECL|typedef|DAC960_V2_CommandControlBits_T
id|DAC960_V2_CommandControlBits_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Command Timeout structure.&n;*/
DECL|struct|DAC960_V2_CommandTimeout
r_typedef
r_struct
id|DAC960_V2_CommandTimeout
(brace
DECL|member|TimeoutValue
r_int
r_char
id|TimeoutValue
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 0 Bits 0-5 */
r_enum
(brace
DECL|enumerator|DAC960_V2_TimeoutScale_Seconds
id|DAC960_V2_TimeoutScale_Seconds
op_assign
l_int|0
comma
DECL|enumerator|DAC960_V2_TimeoutScale_Minutes
id|DAC960_V2_TimeoutScale_Minutes
op_assign
l_int|1
comma
DECL|enumerator|DAC960_V2_TimeoutScale_Hours
id|DAC960_V2_TimeoutScale_Hours
op_assign
l_int|2
comma
DECL|enumerator|DAC960_V2_TimeoutScale_Reserved
id|DAC960_V2_TimeoutScale_Reserved
op_assign
l_int|3
DECL|member|TimeoutScale
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
id|TimeoutScale
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Byte 0 Bits 6-7 */
)brace
DECL|typedef|DAC960_V2_CommandTimeout_T
id|DAC960_V2_CommandTimeout_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Physical Device structure.&n;*/
DECL|struct|DAC960_V2_PhysicalDevice
r_typedef
r_struct
id|DAC960_V2_PhysicalDevice
(brace
DECL|member|LogicalUnit
r_int
r_char
id|LogicalUnit
suffix:semicolon
multiline_comment|/* Byte 0 */
DECL|member|TargetID
r_int
r_char
id|TargetID
suffix:semicolon
multiline_comment|/* Byte 1 */
DECL|member|Channel
r_int
r_char
id|Channel
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 2 Bits 0-2 */
DECL|member|Controller
r_int
r_char
id|Controller
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 2 Bits 3-7 */
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_PhysicalDevice_T
id|DAC960_V2_PhysicalDevice_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Logical Device structure.&n;*/
DECL|struct|DAC960_V2_LogicalDevice
r_typedef
r_struct
id|DAC960_V2_LogicalDevice
(brace
DECL|member|LogicalDeviceNumber
r_int
r_int
id|LogicalDeviceNumber
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Byte 2 Bits 0-2 */
DECL|member|Controller
r_int
r_char
id|Controller
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Byte 2 Bits 3-7 */
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_LogicalDevice_T
id|DAC960_V2_LogicalDevice_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Operation Device type.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V2_Physical_Device
id|DAC960_V2_Physical_Device
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_V2_RAID_Device
id|DAC960_V2_RAID_Device
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_V2_Physical_Channel
id|DAC960_V2_Physical_Channel
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_V2_RAID_Channel
id|DAC960_V2_RAID_Channel
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_V2_Physical_Controller
id|DAC960_V2_Physical_Controller
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_V2_RAID_Controller
id|DAC960_V2_RAID_Controller
op_assign
l_int|0x05
comma
DECL|enumerator|DAC960_V2_Configuration_Group
id|DAC960_V2_Configuration_Group
op_assign
l_int|0x10
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_OperationDevice_T
id|DAC960_V2_OperationDevice_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Translate Physical To Logical Device structure.&n;*/
DECL|struct|DAC960_V2_PhysicalToLogicalDevice
r_typedef
r_struct
id|DAC960_V2_PhysicalToLogicalDevice
(brace
DECL|member|LogicalDeviceNumber
r_int
r_int
id|LogicalDeviceNumber
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|PreviousBootController
r_int
r_char
id|PreviousBootController
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|PreviousBootChannel
r_int
r_char
id|PreviousBootChannel
suffix:semicolon
multiline_comment|/* Byte 5 */
DECL|member|PreviousBootTargetID
r_int
r_char
id|PreviousBootTargetID
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|PreviousBootLogicalUnit
r_int
r_char
id|PreviousBootLogicalUnit
suffix:semicolon
multiline_comment|/* Byte 7 */
)brace
DECL|typedef|DAC960_V2_PhysicalToLogicalDevice_T
id|DAC960_V2_PhysicalToLogicalDevice_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Scatter/Gather List Entry structure.&n;*/
DECL|struct|DAC960_V2_ScatterGatherSegment
r_typedef
r_struct
id|DAC960_V2_ScatterGatherSegment
(brace
DECL|member|SegmentDataPointer
id|DAC960_BusAddress64_T
id|SegmentDataPointer
suffix:semicolon
multiline_comment|/* Bytes 0-7 */
DECL|member|SegmentByteCount
id|DAC960_ByteCount64_T
id|SegmentByteCount
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
)brace
DECL|typedef|DAC960_V2_ScatterGatherSegment_T
id|DAC960_V2_ScatterGatherSegment_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Data Transfer Memory Address structure.&n;*/
DECL|union|DAC960_V2_DataTransferMemoryAddress
r_typedef
r_union
id|DAC960_V2_DataTransferMemoryAddress
(brace
DECL|member|ScatterGatherSegments
id|DAC960_V2_ScatterGatherSegment_T
id|ScatterGatherSegments
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Bytes 0-31 */
r_struct
(brace
DECL|member|ScatterGatherList0Length
r_int
r_int
id|ScatterGatherList0Length
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|ScatterGatherList1Length
r_int
r_int
id|ScatterGatherList1Length
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|ScatterGatherList2Length
r_int
r_int
id|ScatterGatherList2Length
suffix:semicolon
multiline_comment|/* Bytes 4-5 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 6-7 */
DECL|member|ScatterGatherList0Address
id|DAC960_BusAddress64_T
id|ScatterGatherList0Address
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|ScatterGatherList1Address
id|DAC960_BusAddress64_T
id|ScatterGatherList1Address
suffix:semicolon
multiline_comment|/* Bytes 16-23 */
DECL|member|ScatterGatherList2Address
id|DAC960_BusAddress64_T
id|ScatterGatherList2Address
suffix:semicolon
multiline_comment|/* Bytes 24-31 */
DECL|member|ExtendedScatterGather
)brace
id|ExtendedScatterGather
suffix:semicolon
)brace
DECL|typedef|DAC960_V2_DataTransferMemoryAddress_T
id|DAC960_V2_DataTransferMemoryAddress_T
suffix:semicolon
multiline_comment|/*&n;  Define the 64 Byte DAC960 V2 Firmware Command Mailbox structure.&n;*/
DECL|union|DAC960_V2_CommandMailbox
r_typedef
r_union
id|DAC960_V2_CommandMailbox
(brace
DECL|member|Words
r_int
r_int
id|Words
(braket
l_int|16
)braket
suffix:semicolon
multiline_comment|/* Words 0-15 */
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|10
)braket
suffix:semicolon
multiline_comment|/* Bytes 22-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|Common
)brace
id|Common
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|PhysicalDevice
id|DAC960_V2_PhysicalDevice_T
id|PhysicalDevice
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|CDBLength
r_int
r_char
id|CDBLength
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|SCSI_CDB
r_int
r_char
id|SCSI_CDB
(braket
l_int|10
)braket
suffix:semicolon
multiline_comment|/* Bytes 22-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|SCSI_10
)brace
id|SCSI_10
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|PhysicalDevice
id|DAC960_V2_PhysicalDevice_T
id|PhysicalDevice
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|CDBLength
r_int
r_char
id|CDBLength
suffix:semicolon
multiline_comment|/* Byte 21 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 22-23 */
DECL|member|SCSI_CDB_BusAddress
id|DAC960_BusAddress64_T
id|SCSI_CDB_BusAddress
suffix:semicolon
multiline_comment|/* Bytes 24-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|SCSI_255
)brace
id|SCSI_255
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
r_int
r_int
suffix:colon
l_int|16
suffix:semicolon
multiline_comment|/* Bytes 16-17 */
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
multiline_comment|/* Byte 18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|10
)braket
suffix:semicolon
multiline_comment|/* Bytes 22-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|ControllerInfo
)brace
id|ControllerInfo
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|LogicalDevice
id|DAC960_V2_LogicalDevice_T
id|LogicalDevice
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|10
)braket
suffix:semicolon
multiline_comment|/* Bytes 22-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|LogicalDeviceInfo
)brace
id|LogicalDeviceInfo
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|PhysicalDevice
id|DAC960_V2_PhysicalDevice_T
id|PhysicalDevice
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|10
)braket
suffix:semicolon
multiline_comment|/* Bytes 22-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|PhysicalDeviceInfo
)brace
id|PhysicalDeviceInfo
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|EventSequenceNumberHigh16
r_int
r_int
id|EventSequenceNumberHigh16
suffix:semicolon
multiline_comment|/* Bytes 16-17 */
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
multiline_comment|/* Byte 18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|EventSequenceNumberLow16
r_int
r_int
id|EventSequenceNumberLow16
suffix:semicolon
multiline_comment|/* Bytes 22-23 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Bytes 24-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|GetEvent
)brace
id|GetEvent
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|LogicalDevice
id|DAC960_V2_LogicalDevice_T
id|LogicalDevice
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
r_union
(brace
DECL|member|LogicalDeviceState
id|DAC960_V2_LogicalDeviceState_T
id|LogicalDeviceState
suffix:semicolon
DECL|member|PhysicalDeviceState
id|DAC960_V2_PhysicalDeviceState_T
id|PhysicalDeviceState
suffix:semicolon
DECL|member|DeviceState
)brace
id|DeviceState
suffix:semicolon
multiline_comment|/* Byte 22 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|9
)braket
suffix:semicolon
multiline_comment|/* Bytes 23-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|SetDeviceState
)brace
id|SetDeviceState
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|LogicalDevice
id|DAC960_V2_LogicalDevice_T
id|LogicalDevice
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|RestoreConsistency
id|boolean
id|RestoreConsistency
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 22 Bit 0 */
DECL|member|InitializedAreaOnly
id|boolean
id|InitializedAreaOnly
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 22 Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Byte 22 Bits 2-7 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|9
)braket
suffix:semicolon
multiline_comment|/* Bytes 23-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|ConsistencyCheck
)brace
id|ConsistencyCheck
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|FirstCommandMailboxSizeKB
r_int
r_char
id|FirstCommandMailboxSizeKB
suffix:semicolon
multiline_comment|/* Byte 4 */
DECL|member|FirstStatusMailboxSizeKB
r_int
r_char
id|FirstStatusMailboxSizeKB
suffix:semicolon
multiline_comment|/* Byte 5 */
DECL|member|SecondCommandMailboxSizeKB
r_int
r_char
id|SecondCommandMailboxSizeKB
suffix:semicolon
multiline_comment|/* Byte 6 */
DECL|member|SecondStatusMailboxSizeKB
r_int
r_char
id|SecondStatusMailboxSizeKB
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
r_int
r_int
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|HealthStatusBufferSizeKB
r_int
r_char
id|HealthStatusBufferSizeKB
suffix:semicolon
multiline_comment|/* Byte 22 */
r_int
r_char
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* Byte 23 */
DECL|member|HealthStatusBufferBusAddress
id|DAC960_BusAddress64_T
id|HealthStatusBufferBusAddress
suffix:semicolon
multiline_comment|/* Bytes 24-31 */
DECL|member|FirstCommandMailboxBusAddress
id|DAC960_BusAddress64_T
id|FirstCommandMailboxBusAddress
suffix:semicolon
multiline_comment|/* Bytes 32-39 */
DECL|member|FirstStatusMailboxBusAddress
id|DAC960_BusAddress64_T
id|FirstStatusMailboxBusAddress
suffix:semicolon
multiline_comment|/* Bytes 40-47 */
DECL|member|SecondCommandMailboxBusAddress
id|DAC960_BusAddress64_T
id|SecondCommandMailboxBusAddress
suffix:semicolon
multiline_comment|/* Bytes 48-55 */
DECL|member|SecondStatusMailboxBusAddress
id|DAC960_BusAddress64_T
id|SecondStatusMailboxBusAddress
suffix:semicolon
multiline_comment|/* Bytes 56-63 */
DECL|member|SetMemoryMailbox
)brace
id|SetMemoryMailbox
suffix:semicolon
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandOpcode
id|DAC960_V2_CommandOpcode_T
id|CommandOpcode
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|CommandControlBits
id|DAC960_V2_CommandControlBits_T
id|CommandControlBits
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferSize
id|DAC960_ByteCount32_T
id|DataTransferSize
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bytes 4-6 */
DECL|member|DataTransferPageNumber
r_int
r_char
id|DataTransferPageNumber
suffix:semicolon
multiline_comment|/* Byte 7 */
DECL|member|RequestSenseBusAddress
id|DAC960_BusAddress64_T
id|RequestSenseBusAddress
suffix:semicolon
multiline_comment|/* Bytes 8-15 */
DECL|member|PhysicalDevice
id|DAC960_V2_PhysicalDevice_T
id|PhysicalDevice
suffix:semicolon
multiline_comment|/* Bytes 16-18 */
DECL|member|CommandTimeout
id|DAC960_V2_CommandTimeout_T
id|CommandTimeout
suffix:semicolon
multiline_comment|/* Byte 19 */
DECL|member|RequestSenseSize
r_int
r_char
id|RequestSenseSize
suffix:semicolon
multiline_comment|/* Byte 20 */
DECL|member|IOCTL_Opcode
r_int
r_char
id|IOCTL_Opcode
suffix:semicolon
multiline_comment|/* Byte 21 */
DECL|member|OperationDevice
id|DAC960_V2_OperationDevice_T
id|OperationDevice
suffix:semicolon
multiline_comment|/* Byte 22 */
DECL|member|Reserved
r_int
r_char
id|Reserved
(braket
l_int|9
)braket
suffix:semicolon
multiline_comment|/* Bytes 23-31 */
id|DAC960_V2_DataTransferMemoryAddress_T
DECL|member|DataTransferMemoryAddress
id|DataTransferMemoryAddress
suffix:semicolon
multiline_comment|/* Bytes 32-63 */
DECL|member|DeviceOperation
)brace
id|DeviceOperation
suffix:semicolon
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
DECL|typedef|DAC960_V2_CommandMailbox_T
id|DAC960_V2_CommandMailbox_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Driver IOCTL requests.&n;*/
DECL|macro|DAC960_IOCTL_GET_CONTROLLER_COUNT
mdefine_line|#define DAC960_IOCTL_GET_CONTROLLER_COUNT&t;0xDAC001
DECL|macro|DAC960_IOCTL_GET_CONTROLLER_INFO
mdefine_line|#define DAC960_IOCTL_GET_CONTROLLER_INFO&t;0xDAC002
DECL|macro|DAC960_IOCTL_V1_EXECUTE_COMMAND
mdefine_line|#define DAC960_IOCTL_V1_EXECUTE_COMMAND&t;&t;0xDAC003
DECL|macro|DAC960_IOCTL_V2_EXECUTE_COMMAND
mdefine_line|#define DAC960_IOCTL_V2_EXECUTE_COMMAND&t;&t;0xDAC004
DECL|macro|DAC960_IOCTL_V2_GET_HEALTH_STATUS
mdefine_line|#define DAC960_IOCTL_V2_GET_HEALTH_STATUS&t;0xDAC005
multiline_comment|/*&n;  Define the DAC960_IOCTL_GET_CONTROLLER_INFO reply structure.&n;*/
DECL|struct|DAC960_ControllerInfo
r_typedef
r_struct
id|DAC960_ControllerInfo
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|FirmwareType
r_int
r_char
id|FirmwareType
suffix:semicolon
DECL|member|Channels
r_int
r_char
id|Channels
suffix:semicolon
DECL|member|Targets
r_int
r_char
id|Targets
suffix:semicolon
DECL|member|PCI_Bus
r_int
r_char
id|PCI_Bus
suffix:semicolon
DECL|member|PCI_Device
r_int
r_char
id|PCI_Device
suffix:semicolon
DECL|member|PCI_Function
r_int
r_char
id|PCI_Function
suffix:semicolon
DECL|member|IRQ_Channel
r_int
r_char
id|IRQ_Channel
suffix:semicolon
DECL|member|PCI_Address
id|DAC960_PCI_Address_T
id|PCI_Address
suffix:semicolon
DECL|member|ModelName
r_int
r_char
id|ModelName
(braket
l_int|20
)braket
suffix:semicolon
DECL|member|FirmwareVersion
r_int
r_char
id|FirmwareVersion
(braket
l_int|12
)braket
suffix:semicolon
)brace
DECL|typedef|DAC960_ControllerInfo_T
id|DAC960_ControllerInfo_T
suffix:semicolon
multiline_comment|/*&n;  Define the User Mode DAC960_IOCTL_V1_EXECUTE_COMMAND request structure.&n;*/
DECL|struct|DAC960_V1_UserCommand
r_typedef
r_struct
id|DAC960_V1_UserCommand
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|CommandMailbox
id|DAC960_V1_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|DataTransferLength
r_int
id|DataTransferLength
suffix:semicolon
DECL|member|DataTransferBuffer
r_void
op_star
id|DataTransferBuffer
suffix:semicolon
DECL|member|DCDB
id|DAC960_V1_DCDB_T
op_star
id|DCDB
suffix:semicolon
)brace
DECL|typedef|DAC960_V1_UserCommand_T
id|DAC960_V1_UserCommand_T
suffix:semicolon
multiline_comment|/*&n;  Define the Kernel Mode DAC960_IOCTL_V1_EXECUTE_COMMAND request structure.&n;*/
DECL|struct|DAC960_V1_KernelCommand
r_typedef
r_struct
id|DAC960_V1_KernelCommand
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|CommandMailbox
id|DAC960_V1_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|DataTransferLength
r_int
id|DataTransferLength
suffix:semicolon
DECL|member|DataTransferBuffer
r_void
op_star
id|DataTransferBuffer
suffix:semicolon
DECL|member|DCDB
id|DAC960_V1_DCDB_T
op_star
id|DCDB
suffix:semicolon
DECL|member|CommandStatus
id|DAC960_V1_CommandStatus_T
id|CommandStatus
suffix:semicolon
DECL|member|CompletionFunction
r_void
(paren
op_star
id|CompletionFunction
)paren
(paren
r_struct
id|DAC960_V1_KernelCommand
op_star
)paren
suffix:semicolon
DECL|member|CompletionData
r_void
op_star
id|CompletionData
suffix:semicolon
)brace
DECL|typedef|DAC960_V1_KernelCommand_T
id|DAC960_V1_KernelCommand_T
suffix:semicolon
multiline_comment|/*&n;  Define the User Mode DAC960_IOCTL_V2_EXECUTE_COMMAND request structure.&n;*/
DECL|struct|DAC960_V2_UserCommand
r_typedef
r_struct
id|DAC960_V2_UserCommand
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|CommandMailbox
id|DAC960_V2_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|DataTransferLength
r_int
id|DataTransferLength
suffix:semicolon
DECL|member|RequestSenseLength
r_int
id|RequestSenseLength
suffix:semicolon
DECL|member|DataTransferBuffer
r_void
op_star
id|DataTransferBuffer
suffix:semicolon
DECL|member|RequestSenseBuffer
r_void
op_star
id|RequestSenseBuffer
suffix:semicolon
)brace
DECL|typedef|DAC960_V2_UserCommand_T
id|DAC960_V2_UserCommand_T
suffix:semicolon
multiline_comment|/*&n;  Define the Kernel Mode DAC960_IOCTL_V2_EXECUTE_COMMAND request structure.&n;*/
DECL|struct|DAC960_V2_KernelCommand
r_typedef
r_struct
id|DAC960_V2_KernelCommand
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|CommandMailbox
id|DAC960_V2_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|DataTransferLength
r_int
id|DataTransferLength
suffix:semicolon
DECL|member|RequestSenseLength
r_int
id|RequestSenseLength
suffix:semicolon
DECL|member|DataTransferBuffer
r_void
op_star
id|DataTransferBuffer
suffix:semicolon
DECL|member|RequestSenseBuffer
r_void
op_star
id|RequestSenseBuffer
suffix:semicolon
DECL|member|CommandStatus
id|DAC960_V2_CommandStatus_T
id|CommandStatus
suffix:semicolon
DECL|member|CompletionFunction
r_void
(paren
op_star
id|CompletionFunction
)paren
(paren
r_struct
id|DAC960_V2_KernelCommand
op_star
)paren
suffix:semicolon
DECL|member|CompletionData
r_void
op_star
id|CompletionData
suffix:semicolon
)brace
DECL|typedef|DAC960_V2_KernelCommand_T
id|DAC960_V2_KernelCommand_T
suffix:semicolon
multiline_comment|/*&n;  Define the User Mode DAC960_IOCTL_V2_GET_HEALTH_STATUS request structure.&n;*/
DECL|struct|DAC960_V2_GetHealthStatus
r_typedef
r_struct
id|DAC960_V2_GetHealthStatus
(brace
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|HealthStatusBuffer
id|DAC960_V2_HealthStatusBuffer_T
op_star
id|HealthStatusBuffer
suffix:semicolon
)brace
DECL|typedef|DAC960_V2_GetHealthStatus_T
id|DAC960_V2_GetHealthStatus_T
suffix:semicolon
multiline_comment|/*&n;  Import the Kernel Mode IOCTL interface.&n;*/
r_extern
r_int
id|DAC960_KernelIOCTL
c_func
(paren
r_int
r_int
id|Request
comma
r_void
op_star
id|Argument
)paren
suffix:semicolon
multiline_comment|/*&n;  DAC960_DriverVersion protects the private portion of this file.&n;*/
macro_line|#ifdef DAC960_DriverVersion
multiline_comment|/*&n;  Define the maximum Driver Queue Depth and Controller Queue Depth supported&n;  by DAC960 V1 and V2 Firmware Controllers.&n;*/
DECL|macro|DAC960_MaxDriverQueueDepth
mdefine_line|#define DAC960_MaxDriverQueueDepth&t;&t;511
DECL|macro|DAC960_MaxControllerQueueDepth
mdefine_line|#define DAC960_MaxControllerQueueDepth&t;&t;512
multiline_comment|/*&n;  Define the maximum number of Scatter/Gather Segments supported for any&n;  DAC960 V1 and V2 Firmware controller.&n;*/
DECL|macro|DAC960_V1_ScatterGatherLimit
mdefine_line|#define DAC960_V1_ScatterGatherLimit&t;&t;33
DECL|macro|DAC960_V2_ScatterGatherLimit
mdefine_line|#define DAC960_V2_ScatterGatherLimit&t;&t;128
multiline_comment|/*&n;  Define the number of Command Mailboxes and Status Mailboxes used by the&n;  DAC960 V1 and V2 Firmware Memory Mailbox Interface.&n;*/
DECL|macro|DAC960_V1_CommandMailboxCount
mdefine_line|#define DAC960_V1_CommandMailboxCount&t;&t;256
DECL|macro|DAC960_V1_StatusMailboxCount
mdefine_line|#define DAC960_V1_StatusMailboxCount&t;&t;1024
DECL|macro|DAC960_V2_CommandMailboxCount
mdefine_line|#define DAC960_V2_CommandMailboxCount&t;&t;512
DECL|macro|DAC960_V2_StatusMailboxCount
mdefine_line|#define DAC960_V2_StatusMailboxCount&t;&t;512
multiline_comment|/*&n;  Define the DAC960 Controller Monitoring Timer Interval.&n;*/
DECL|macro|DAC960_MonitoringTimerInterval
mdefine_line|#define DAC960_MonitoringTimerInterval&t;&t;(10 * HZ)
multiline_comment|/*&n;  Define the DAC960 Controller Secondary Monitoring Interval.&n;*/
DECL|macro|DAC960_SecondaryMonitoringInterval
mdefine_line|#define DAC960_SecondaryMonitoringInterval&t;(60 * HZ)
multiline_comment|/*&n;  Define the DAC960 Controller Health Status Monitoring Interval.&n;*/
DECL|macro|DAC960_HealthStatusMonitoringInterval
mdefine_line|#define DAC960_HealthStatusMonitoringInterval&t;(1 * HZ)
multiline_comment|/*&n;  Define the DAC960 Controller Progress Reporting Interval.&n;*/
DECL|macro|DAC960_ProgressReportingInterval
mdefine_line|#define DAC960_ProgressReportingInterval&t;(60 * HZ)
multiline_comment|/*&n;  Define the maximum number of Partitions allowed for each Logical Drive.&n;*/
DECL|macro|DAC960_MaxPartitions
mdefine_line|#define DAC960_MaxPartitions&t;&t;&t;8
DECL|macro|DAC960_MaxPartitionsBits
mdefine_line|#define DAC960_MaxPartitionsBits&t;&t;3
multiline_comment|/*&n;  Define macros to extract the Controller Number, Logical Drive Number, and&n;  Partition Number from a Kernel Device, and to construct a Major Number, Minor&n;  Number, and Kernel Device from the Controller Number, Logical Drive Number,&n;  and Partition Number.  There is one Major Number assigned to each Controller.&n;  The associated Minor Number is divided into the Logical Drive Number and&n;  Partition Number.&n;*/
DECL|macro|DAC960_ControllerNumber
mdefine_line|#define DAC960_ControllerNumber(Device) &bslash;&n;  (MAJOR(Device) - DAC960_MAJOR)
DECL|macro|DAC960_LogicalDriveNumber
mdefine_line|#define DAC960_LogicalDriveNumber(Device) &bslash;&n;  (MINOR(Device) &gt;&gt; DAC960_MaxPartitionsBits)
DECL|macro|DAC960_PartitionNumber
mdefine_line|#define DAC960_PartitionNumber(Device) &bslash;&n;  (MINOR(Device) &amp; (DAC960_MaxPartitions - 1))
DECL|macro|DAC960_MajorNumber
mdefine_line|#define DAC960_MajorNumber(ControllerNumber) &bslash;&n;  (DAC960_MAJOR + (ControllerNumber))
DECL|macro|DAC960_MinorNumber
mdefine_line|#define DAC960_MinorNumber(LogicalDriveNumber, PartitionNumber) &bslash;&n;   (((LogicalDriveNumber) &lt;&lt; DAC960_MaxPartitionsBits) | (PartitionNumber))
DECL|macro|DAC960_MinorCount
mdefine_line|#define DAC960_MinorCount&t;&t;&t;(DAC960_MaxLogicalDrives &bslash;&n;&t;&t;&t;&t;&t;&t; * DAC960_MaxPartitions)
DECL|macro|DAC960_KernelDevice
mdefine_line|#define DAC960_KernelDevice(ControllerNumber,&t;&t;&t;&t;       &bslash;&n;&t;&t;&t;    LogicalDriveNumber,&t;&t;&t;&t;       &bslash;&n;&t;&t;&t;    PartitionNumber)&t;&t;&t;&t;       &bslash;&n;   MKDEV(DAC960_MajorNumber(ControllerNumber),&t;&t;&t;&t;       &bslash;&n;&t; DAC960_MinorNumber(LogicalDriveNumber, PartitionNumber))
multiline_comment|/*&n;  Define the DAC960 Controller fixed Block Size and Block Size Bits.&n;*/
DECL|macro|DAC960_BlockSize
mdefine_line|#define DAC960_BlockSize&t;&t;&t;512
DECL|macro|DAC960_BlockSizeBits
mdefine_line|#define DAC960_BlockSizeBits&t;&t;&t;9
multiline_comment|/*&n;  Define the number of Command structures that should be allocated as a&n;  group to optimize kernel memory allocation.&n;*/
DECL|macro|DAC960_V1_CommandAllocationGroupSize
mdefine_line|#define DAC960_V1_CommandAllocationGroupSize&t;11
DECL|macro|DAC960_V2_CommandAllocationGroupSize
mdefine_line|#define DAC960_V2_CommandAllocationGroupSize&t;29
multiline_comment|/*&n;  Define the Controller Line Buffer, Progress Buffer, User Message, and&n;  Initial Status Buffer sizes.&n;*/
DECL|macro|DAC960_LineBufferSize
mdefine_line|#define DAC960_LineBufferSize&t;&t;&t;100
DECL|macro|DAC960_ProgressBufferSize
mdefine_line|#define DAC960_ProgressBufferSize&t;&t;200
DECL|macro|DAC960_UserMessageSize
mdefine_line|#define DAC960_UserMessageSize&t;&t;&t;200
DECL|macro|DAC960_InitialStatusBufferSize
mdefine_line|#define DAC960_InitialStatusBufferSize&t;&t;(8192-32)
multiline_comment|/*&n;  Define the DAC960 Controller Firmware Types.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_V1_Controller
id|DAC960_V1_Controller
op_assign
l_int|1
comma
DECL|enumerator|DAC960_V2_Controller
id|DAC960_V2_Controller
op_assign
l_int|2
)brace
DECL|typedef|DAC960_FirmwareType_T
id|DAC960_FirmwareType_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Controller Hardware Types.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_BA_Controller
id|DAC960_BA_Controller
op_assign
l_int|1
comma
multiline_comment|/* eXtremeRAID 2000 */
DECL|enumerator|DAC960_LP_Controller
id|DAC960_LP_Controller
op_assign
l_int|2
comma
multiline_comment|/* AcceleRAID 352 */
DECL|enumerator|DAC960_LA_Controller
id|DAC960_LA_Controller
op_assign
l_int|3
comma
multiline_comment|/* DAC1164P */
DECL|enumerator|DAC960_PG_Controller
id|DAC960_PG_Controller
op_assign
l_int|4
comma
multiline_comment|/* DAC960PTL/PJ/PG */
DECL|enumerator|DAC960_PD_Controller
id|DAC960_PD_Controller
op_assign
l_int|5
multiline_comment|/* DAC960PU/PD/PL */
)brace
DECL|typedef|DAC960_HardwareType_T
id|DAC960_HardwareType_T
suffix:semicolon
multiline_comment|/*&n;  Define the Driver Message Levels.&n;*/
DECL|enum|DAC960_MessageLevel
r_typedef
r_enum
id|DAC960_MessageLevel
(brace
DECL|enumerator|DAC960_AnnounceLevel
id|DAC960_AnnounceLevel
op_assign
l_int|0
comma
DECL|enumerator|DAC960_InfoLevel
id|DAC960_InfoLevel
op_assign
l_int|1
comma
DECL|enumerator|DAC960_NoticeLevel
id|DAC960_NoticeLevel
op_assign
l_int|2
comma
DECL|enumerator|DAC960_WarningLevel
id|DAC960_WarningLevel
op_assign
l_int|3
comma
DECL|enumerator|DAC960_ErrorLevel
id|DAC960_ErrorLevel
op_assign
l_int|4
comma
DECL|enumerator|DAC960_ProgressLevel
id|DAC960_ProgressLevel
op_assign
l_int|5
comma
DECL|enumerator|DAC960_CriticalLevel
id|DAC960_CriticalLevel
op_assign
l_int|6
comma
DECL|enumerator|DAC960_UserCriticalLevel
id|DAC960_UserCriticalLevel
op_assign
l_int|7
)brace
DECL|typedef|DAC960_MessageLevel_T
id|DAC960_MessageLevel_T
suffix:semicolon
r_static
r_char
DECL|variable|DAC960_MessageLevelMap
op_star
id|DAC960_MessageLevelMap
(braket
)braket
op_assign
(brace
id|KERN_NOTICE
comma
id|KERN_NOTICE
comma
id|KERN_NOTICE
comma
id|KERN_WARNING
comma
id|KERN_ERR
comma
id|KERN_CRIT
comma
id|KERN_CRIT
comma
id|KERN_CRIT
)brace
suffix:semicolon
multiline_comment|/*&n;  Define Driver Message macros.&n;*/
DECL|macro|DAC960_Announce
mdefine_line|#define DAC960_Announce(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_AnnounceLevel, Format, ##Arguments)
DECL|macro|DAC960_Info
mdefine_line|#define DAC960_Info(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_InfoLevel, Format, ##Arguments)
DECL|macro|DAC960_Notice
mdefine_line|#define DAC960_Notice(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_NoticeLevel, Format, ##Arguments)
DECL|macro|DAC960_Warning
mdefine_line|#define DAC960_Warning(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_WarningLevel, Format, ##Arguments)
DECL|macro|DAC960_Error
mdefine_line|#define DAC960_Error(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_ErrorLevel, Format, ##Arguments)
DECL|macro|DAC960_Progress
mdefine_line|#define DAC960_Progress(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_ProgressLevel, Format, ##Arguments)
DECL|macro|DAC960_Critical
mdefine_line|#define DAC960_Critical(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_CriticalLevel, Format, ##Arguments)
DECL|macro|DAC960_UserCritical
mdefine_line|#define DAC960_UserCritical(Format, Arguments...) &bslash;&n;  DAC960_Message(DAC960_UserCriticalLevel, Format, ##Arguments)
multiline_comment|/*&n;  Define types for some of the structures that interface with the rest&n;  of the Linux Kernel and I/O Subsystem.&n;*/
DECL|typedef|BufferHeader_T
r_typedef
r_struct
id|buffer_head
id|BufferHeader_T
suffix:semicolon
DECL|typedef|File_T
r_typedef
r_struct
id|file
id|File_T
suffix:semicolon
DECL|typedef|BlockDeviceOperations_T
r_typedef
r_struct
id|block_device_operations
id|BlockDeviceOperations_T
suffix:semicolon
DECL|typedef|GenericDiskInfo_T
r_typedef
r_struct
id|gendisk
id|GenericDiskInfo_T
suffix:semicolon
DECL|typedef|DiskGeometry_T
r_typedef
r_struct
id|hd_geometry
id|DiskGeometry_T
suffix:semicolon
DECL|typedef|DiskPartition_T
r_typedef
r_struct
id|hd_struct
id|DiskPartition_T
suffix:semicolon
DECL|typedef|Inode_T
r_typedef
r_struct
id|inode
id|Inode_T
suffix:semicolon
DECL|typedef|InodeOperations_T
r_typedef
r_struct
id|inode_operations
id|InodeOperations_T
suffix:semicolon
DECL|typedef|KernelDevice_T
r_typedef
id|kdev_t
id|KernelDevice_T
suffix:semicolon
DECL|typedef|ListHead_T
r_typedef
r_struct
id|list_head
id|ListHead_T
suffix:semicolon
DECL|typedef|NotifierBlock_T
r_typedef
r_struct
id|notifier_block
id|NotifierBlock_T
suffix:semicolon
DECL|typedef|PCI_Device_T
r_typedef
r_struct
id|pci_dev
id|PCI_Device_T
suffix:semicolon
DECL|typedef|PROC_DirectoryEntry_T
r_typedef
r_struct
id|proc_dir_entry
id|PROC_DirectoryEntry_T
suffix:semicolon
DECL|typedef|ProcessorFlags_T
r_typedef
r_int
r_int
id|ProcessorFlags_T
suffix:semicolon
DECL|typedef|Registers_T
r_typedef
r_struct
id|pt_regs
id|Registers_T
suffix:semicolon
DECL|typedef|IO_Request_T
r_typedef
r_struct
id|request
id|IO_Request_T
suffix:semicolon
DECL|typedef|RequestQueue_T
r_typedef
id|request_queue_t
id|RequestQueue_T
suffix:semicolon
DECL|typedef|Semaphore_T
r_typedef
r_struct
id|semaphore
id|Semaphore_T
suffix:semicolon
DECL|typedef|SuperBlock_T
r_typedef
r_struct
id|super_block
id|SuperBlock_T
suffix:semicolon
DECL|typedef|Timer_T
r_typedef
r_struct
id|timer_list
id|Timer_T
suffix:semicolon
DECL|typedef|WaitQueue_T
r_typedef
id|wait_queue_head_t
id|WaitQueue_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V1 Firmware Controller Status Mailbox structure.&n;*/
DECL|union|DAC960_V1_StatusMailbox
r_typedef
r_union
id|DAC960_V1_StatusMailbox
(brace
DECL|member|Word
r_int
r_int
id|Word
suffix:semicolon
multiline_comment|/* Word 0 */
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V1_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Byte 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Byte 1 Bits 0-6 */
DECL|member|Valid
id|boolean
id|Valid
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Byte 1 Bit 7 */
DECL|member|CommandStatus
id|DAC960_V1_CommandStatus_T
id|CommandStatus
suffix:semicolon
multiline_comment|/* Bytes 2-3 */
DECL|member|Fields
)brace
id|Fields
suffix:semicolon
)brace
DECL|typedef|DAC960_V1_StatusMailbox_T
id|DAC960_V1_StatusMailbox_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 V2 Firmware Controller Status Mailbox structure.&n;*/
DECL|union|DAC960_V2_StatusMailbox
r_typedef
r_union
id|DAC960_V2_StatusMailbox
(brace
DECL|member|Words
r_int
r_int
id|Words
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Words 0-1 */
r_struct
(brace
DECL|member|CommandIdentifier
id|DAC960_V2_CommandIdentifier_T
id|CommandIdentifier
suffix:semicolon
multiline_comment|/* Bytes 0-1 */
DECL|member|CommandStatus
id|DAC960_V2_CommandStatus_T
id|CommandStatus
suffix:semicolon
multiline_comment|/* Byte 2 */
DECL|member|RequestSenseLength
r_int
r_char
id|RequestSenseLength
suffix:semicolon
multiline_comment|/* Byte 3 */
DECL|member|DataTransferResidue
r_int
id|DataTransferResidue
suffix:semicolon
multiline_comment|/* Bytes 4-7 */
DECL|member|Fields
)brace
id|Fields
suffix:semicolon
)brace
DECL|typedef|DAC960_V2_StatusMailbox_T
id|DAC960_V2_StatusMailbox_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Driver Command Types.&n;*/
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_ReadCommand
id|DAC960_ReadCommand
op_assign
l_int|1
comma
DECL|enumerator|DAC960_WriteCommand
id|DAC960_WriteCommand
op_assign
l_int|2
comma
DECL|enumerator|DAC960_ReadRetryCommand
id|DAC960_ReadRetryCommand
op_assign
l_int|3
comma
DECL|enumerator|DAC960_WriteRetryCommand
id|DAC960_WriteRetryCommand
op_assign
l_int|4
comma
DECL|enumerator|DAC960_MonitoringCommand
id|DAC960_MonitoringCommand
op_assign
l_int|5
comma
DECL|enumerator|DAC960_ImmediateCommand
id|DAC960_ImmediateCommand
op_assign
l_int|6
comma
DECL|enumerator|DAC960_QueuedCommand
id|DAC960_QueuedCommand
op_assign
l_int|7
)brace
DECL|typedef|DAC960_CommandType_T
id|DAC960_CommandType_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Driver Command structure.&n;*/
DECL|struct|DAC960_Command
r_typedef
r_struct
id|DAC960_Command
(brace
DECL|member|CommandIdentifier
r_int
id|CommandIdentifier
suffix:semicolon
DECL|member|CommandType
id|DAC960_CommandType_T
id|CommandType
suffix:semicolon
DECL|member|Controller
r_struct
id|DAC960_Controller
op_star
id|Controller
suffix:semicolon
DECL|member|Next
r_struct
id|DAC960_Command
op_star
id|Next
suffix:semicolon
DECL|member|Semaphore
id|Semaphore_T
op_star
id|Semaphore
suffix:semicolon
DECL|member|LogicalDriveNumber
r_int
r_int
id|LogicalDriveNumber
suffix:semicolon
DECL|member|BlockNumber
r_int
r_int
id|BlockNumber
suffix:semicolon
DECL|member|BlockCount
r_int
r_int
id|BlockCount
suffix:semicolon
DECL|member|SegmentCount
r_int
r_int
id|SegmentCount
suffix:semicolon
DECL|member|BufferHeader
id|BufferHeader_T
op_star
id|BufferHeader
suffix:semicolon
DECL|member|RequestBuffer
r_void
op_star
id|RequestBuffer
suffix:semicolon
r_union
(brace
r_struct
(brace
DECL|member|CommandMailbox
id|DAC960_V1_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|KernelCommand
id|DAC960_V1_KernelCommand_T
op_star
id|KernelCommand
suffix:semicolon
DECL|member|CommandStatus
id|DAC960_V1_CommandStatus_T
id|CommandStatus
suffix:semicolon
id|DAC960_V1_ScatterGatherSegment_T
DECL|member|ScatterGatherList
id|ScatterGatherList
(braket
id|DAC960_V1_ScatterGatherLimit
)braket
id|__attribute__
(paren
(paren
id|aligned
(paren
r_sizeof
(paren
id|DAC960_V1_ScatterGatherSegment_T
)paren
)paren
)paren
)paren
suffix:semicolon
DECL|member|EndMarker
r_int
r_int
id|EndMarker
(braket
l_int|0
)braket
suffix:semicolon
DECL|member|V1
)brace
id|V1
suffix:semicolon
r_struct
(brace
DECL|member|CommandMailbox
id|DAC960_V2_CommandMailbox_T
id|CommandMailbox
suffix:semicolon
DECL|member|KernelCommand
id|DAC960_V2_KernelCommand_T
op_star
id|KernelCommand
suffix:semicolon
DECL|member|CommandStatus
id|DAC960_V2_CommandStatus_T
id|CommandStatus
suffix:semicolon
DECL|member|RequestSenseLength
r_int
r_char
id|RequestSenseLength
suffix:semicolon
DECL|member|DataTransferResidue
r_int
id|DataTransferResidue
suffix:semicolon
id|DAC960_V2_ScatterGatherSegment_T
DECL|member|ScatterGatherList
id|ScatterGatherList
(braket
id|DAC960_V2_ScatterGatherLimit
)braket
id|__attribute__
(paren
(paren
id|aligned
(paren
r_sizeof
(paren
id|DAC960_V2_ScatterGatherSegment_T
)paren
)paren
)paren
)paren
suffix:semicolon
DECL|member|RequestSense
id|DAC960_SCSI_RequestSense_T
id|RequestSense
id|__attribute__
(paren
(paren
id|aligned
(paren
r_sizeof
(paren
r_int
)paren
)paren
)paren
)paren
suffix:semicolon
DECL|member|EndMarker
r_int
r_int
id|EndMarker
(braket
l_int|0
)braket
suffix:semicolon
DECL|member|V2
)brace
id|V2
suffix:semicolon
DECL|member|FW
)brace
id|FW
suffix:semicolon
)brace
DECL|typedef|DAC960_Command_T
id|DAC960_Command_T
suffix:semicolon
multiline_comment|/*&n;  Define the DAC960 Driver Controller structure.&n;*/
DECL|struct|DAC960_Controller
r_typedef
r_struct
id|DAC960_Controller
(brace
DECL|member|BaseAddress
r_void
op_star
id|BaseAddress
suffix:semicolon
DECL|member|MemoryMappedAddress
r_void
op_star
id|MemoryMappedAddress
suffix:semicolon
DECL|member|FirmwareType
id|DAC960_FirmwareType_T
id|FirmwareType
suffix:semicolon
DECL|member|HardwareType
id|DAC960_HardwareType_T
id|HardwareType
suffix:semicolon
DECL|member|IO_Address
id|DAC960_IO_Address_T
id|IO_Address
suffix:semicolon
DECL|member|PCI_Address
id|DAC960_PCI_Address_T
id|PCI_Address
suffix:semicolon
DECL|member|ControllerNumber
r_int
r_char
id|ControllerNumber
suffix:semicolon
DECL|member|ControllerName
r_int
r_char
id|ControllerName
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|ModelName
r_int
r_char
id|ModelName
(braket
l_int|20
)braket
suffix:semicolon
DECL|member|FullModelName
r_int
r_char
id|FullModelName
(braket
l_int|28
)braket
suffix:semicolon
DECL|member|FirmwareVersion
r_int
r_char
id|FirmwareVersion
(braket
l_int|12
)braket
suffix:semicolon
DECL|member|Bus
r_int
r_char
id|Bus
suffix:semicolon
DECL|member|Device
r_int
r_char
id|Device
suffix:semicolon
DECL|member|Function
r_int
r_char
id|Function
suffix:semicolon
DECL|member|IRQ_Channel
r_int
r_char
id|IRQ_Channel
suffix:semicolon
DECL|member|Channels
r_int
r_char
id|Channels
suffix:semicolon
DECL|member|Targets
r_int
r_char
id|Targets
suffix:semicolon
DECL|member|MemorySize
r_int
r_char
id|MemorySize
suffix:semicolon
DECL|member|LogicalDriveCount
r_int
r_char
id|LogicalDriveCount
suffix:semicolon
DECL|member|CommandAllocationGroupSize
r_int
r_int
id|CommandAllocationGroupSize
suffix:semicolon
DECL|member|ControllerQueueDepth
r_int
r_int
id|ControllerQueueDepth
suffix:semicolon
DECL|member|DriverQueueDepth
r_int
r_int
id|DriverQueueDepth
suffix:semicolon
DECL|member|MaxBlocksPerCommand
r_int
r_int
id|MaxBlocksPerCommand
suffix:semicolon
DECL|member|ControllerScatterGatherLimit
r_int
r_int
id|ControllerScatterGatherLimit
suffix:semicolon
DECL|member|DriverScatterGatherLimit
r_int
r_int
id|DriverScatterGatherLimit
suffix:semicolon
DECL|member|ControllerUsageCount
r_int
r_int
id|ControllerUsageCount
suffix:semicolon
DECL|member|CombinedStatusBufferLength
r_int
r_int
id|CombinedStatusBufferLength
suffix:semicolon
DECL|member|InitialStatusLength
r_int
r_int
id|InitialStatusLength
suffix:semicolon
DECL|member|CurrentStatusLength
r_int
r_int
id|CurrentStatusLength
suffix:semicolon
DECL|member|ProgressBufferLength
r_int
r_int
id|ProgressBufferLength
suffix:semicolon
DECL|member|UserStatusLength
r_int
r_int
id|UserStatusLength
suffix:semicolon
DECL|member|MemoryMailboxPagesAddress
r_int
r_int
id|MemoryMailboxPagesAddress
suffix:semicolon
DECL|member|MemoryMailboxPagesOrder
r_int
r_int
id|MemoryMailboxPagesOrder
suffix:semicolon
DECL|member|MonitoringTimerCount
r_int
r_int
id|MonitoringTimerCount
suffix:semicolon
DECL|member|PrimaryMonitoringTime
r_int
r_int
id|PrimaryMonitoringTime
suffix:semicolon
DECL|member|SecondaryMonitoringTime
r_int
r_int
id|SecondaryMonitoringTime
suffix:semicolon
DECL|member|LastProgressReportTime
r_int
r_int
id|LastProgressReportTime
suffix:semicolon
DECL|member|LastCurrentStatusTime
r_int
r_int
id|LastCurrentStatusTime
suffix:semicolon
DECL|member|ControllerDetectionSuccessful
id|boolean
id|ControllerDetectionSuccessful
suffix:semicolon
DECL|member|ControllerInitialized
id|boolean
id|ControllerInitialized
suffix:semicolon
DECL|member|MonitoringCommandDeferred
id|boolean
id|MonitoringCommandDeferred
suffix:semicolon
DECL|member|EphemeralProgressMessage
id|boolean
id|EphemeralProgressMessage
suffix:semicolon
DECL|member|DriveSpinUpMessageDisplayed
id|boolean
id|DriveSpinUpMessageDisplayed
suffix:semicolon
DECL|member|MonitoringAlertMode
id|boolean
id|MonitoringAlertMode
suffix:semicolon
DECL|member|SuppressEnclosureMessages
id|boolean
id|SuppressEnclosureMessages
suffix:semicolon
DECL|member|MonitoringTimer
id|Timer_T
id|MonitoringTimer
suffix:semicolon
DECL|member|GenericDiskInfo
id|GenericDiskInfo_T
id|GenericDiskInfo
suffix:semicolon
DECL|member|FreeCommands
id|DAC960_Command_T
op_star
id|FreeCommands
suffix:semicolon
DECL|member|CombinedStatusBuffer
r_int
r_char
op_star
id|CombinedStatusBuffer
suffix:semicolon
DECL|member|CurrentStatusBuffer
r_int
r_char
op_star
id|CurrentStatusBuffer
suffix:semicolon
DECL|member|RequestQueue
id|RequestQueue_T
op_star
id|RequestQueue
suffix:semicolon
DECL|member|CommandWaitQueue
id|WaitQueue_T
id|CommandWaitQueue
suffix:semicolon
DECL|member|HealthStatusWaitQueue
id|WaitQueue_T
id|HealthStatusWaitQueue
suffix:semicolon
DECL|member|InitialCommand
id|DAC960_Command_T
id|InitialCommand
suffix:semicolon
DECL|member|Commands
id|DAC960_Command_T
op_star
id|Commands
(braket
id|DAC960_MaxDriverQueueDepth
)braket
suffix:semicolon
DECL|member|ControllerProcEntry
id|PROC_DirectoryEntry_T
op_star
id|ControllerProcEntry
suffix:semicolon
DECL|member|LogicalDriveUsageCount
r_int
r_int
id|LogicalDriveUsageCount
(braket
id|DAC960_MaxLogicalDrives
)braket
suffix:semicolon
DECL|member|LogicalDriveInitiallyAccessible
id|boolean
id|LogicalDriveInitiallyAccessible
(braket
id|DAC960_MaxLogicalDrives
)braket
suffix:semicolon
DECL|member|QueueCommand
r_void
(paren
op_star
id|QueueCommand
)paren
(paren
id|DAC960_Command_T
op_star
id|Command
)paren
suffix:semicolon
DECL|member|ReadControllerConfiguration
id|boolean
(paren
op_star
id|ReadControllerConfiguration
)paren
(paren
r_struct
id|DAC960_Controller
op_star
)paren
suffix:semicolon
DECL|member|ReadDeviceConfiguration
id|boolean
(paren
op_star
id|ReadDeviceConfiguration
)paren
(paren
r_struct
id|DAC960_Controller
op_star
)paren
suffix:semicolon
DECL|member|ReportDeviceConfiguration
id|boolean
(paren
op_star
id|ReportDeviceConfiguration
)paren
(paren
r_struct
id|DAC960_Controller
op_star
)paren
suffix:semicolon
DECL|member|QueueReadWriteCommand
r_void
(paren
op_star
id|QueueReadWriteCommand
)paren
(paren
id|DAC960_Command_T
op_star
id|Command
)paren
suffix:semicolon
r_union
(brace
r_struct
(brace
DECL|member|GeometryTranslationHeads
r_int
r_char
id|GeometryTranslationHeads
suffix:semicolon
DECL|member|GeometryTranslationSectors
r_int
r_char
id|GeometryTranslationSectors
suffix:semicolon
DECL|member|PendingRebuildFlag
r_int
r_char
id|PendingRebuildFlag
suffix:semicolon
DECL|member|StripeSize
r_int
r_int
id|StripeSize
suffix:semicolon
DECL|member|SegmentSize
r_int
r_int
id|SegmentSize
suffix:semicolon
DECL|member|NewEventLogSequenceNumber
r_int
r_int
id|NewEventLogSequenceNumber
suffix:semicolon
DECL|member|OldEventLogSequenceNumber
r_int
r_int
id|OldEventLogSequenceNumber
suffix:semicolon
DECL|member|DeviceStateChannel
r_int
r_int
id|DeviceStateChannel
suffix:semicolon
DECL|member|DeviceStateTargetID
r_int
r_int
id|DeviceStateTargetID
suffix:semicolon
DECL|member|DualModeMemoryMailboxInterface
id|boolean
id|DualModeMemoryMailboxInterface
suffix:semicolon
DECL|member|SAFTE_EnclosureManagementEnabled
id|boolean
id|SAFTE_EnclosureManagementEnabled
suffix:semicolon
DECL|member|NeedLogicalDriveInformation
id|boolean
id|NeedLogicalDriveInformation
suffix:semicolon
DECL|member|NeedErrorTableInformation
id|boolean
id|NeedErrorTableInformation
suffix:semicolon
DECL|member|NeedDeviceStateInformation
id|boolean
id|NeedDeviceStateInformation
suffix:semicolon
DECL|member|NeedDeviceInquiryInformation
id|boolean
id|NeedDeviceInquiryInformation
suffix:semicolon
DECL|member|NeedDeviceSerialNumberInformation
id|boolean
id|NeedDeviceSerialNumberInformation
suffix:semicolon
DECL|member|NeedRebuildProgress
id|boolean
id|NeedRebuildProgress
suffix:semicolon
DECL|member|NeedConsistencyCheckProgress
id|boolean
id|NeedConsistencyCheckProgress
suffix:semicolon
DECL|member|RebuildProgressFirst
id|boolean
id|RebuildProgressFirst
suffix:semicolon
DECL|member|RebuildFlagPending
id|boolean
id|RebuildFlagPending
suffix:semicolon
DECL|member|RebuildStatusPending
id|boolean
id|RebuildStatusPending
suffix:semicolon
DECL|member|FirstCommandMailbox
id|DAC960_V1_CommandMailbox_T
op_star
id|FirstCommandMailbox
suffix:semicolon
DECL|member|LastCommandMailbox
id|DAC960_V1_CommandMailbox_T
op_star
id|LastCommandMailbox
suffix:semicolon
DECL|member|NextCommandMailbox
id|DAC960_V1_CommandMailbox_T
op_star
id|NextCommandMailbox
suffix:semicolon
DECL|member|PreviousCommandMailbox1
id|DAC960_V1_CommandMailbox_T
op_star
id|PreviousCommandMailbox1
suffix:semicolon
DECL|member|PreviousCommandMailbox2
id|DAC960_V1_CommandMailbox_T
op_star
id|PreviousCommandMailbox2
suffix:semicolon
DECL|member|FirstStatusMailbox
id|DAC960_V1_StatusMailbox_T
op_star
id|FirstStatusMailbox
suffix:semicolon
DECL|member|LastStatusMailbox
id|DAC960_V1_StatusMailbox_T
op_star
id|LastStatusMailbox
suffix:semicolon
DECL|member|NextStatusMailbox
id|DAC960_V1_StatusMailbox_T
op_star
id|NextStatusMailbox
suffix:semicolon
DECL|member|MonitoringDCDB
id|DAC960_V1_DCDB_T
id|MonitoringDCDB
suffix:semicolon
DECL|member|Enquiry
id|DAC960_V1_Enquiry_T
id|Enquiry
suffix:semicolon
DECL|member|NewEnquiry
id|DAC960_V1_Enquiry_T
id|NewEnquiry
suffix:semicolon
DECL|member|ErrorTable
id|DAC960_V1_ErrorTable_T
id|ErrorTable
suffix:semicolon
DECL|member|NewErrorTable
id|DAC960_V1_ErrorTable_T
id|NewErrorTable
suffix:semicolon
DECL|member|EventLogEntry
id|DAC960_V1_EventLogEntry_T
id|EventLogEntry
suffix:semicolon
DECL|member|RebuildProgress
id|DAC960_V1_RebuildProgress_T
id|RebuildProgress
suffix:semicolon
DECL|member|LastRebuildStatus
id|DAC960_V1_CommandStatus_T
id|LastRebuildStatus
suffix:semicolon
DECL|member|PendingRebuildStatus
id|DAC960_V1_CommandStatus_T
id|PendingRebuildStatus
suffix:semicolon
DECL|member|LogicalDriveInformation
id|DAC960_V1_LogicalDriveInformationArray_T
id|LogicalDriveInformation
suffix:semicolon
DECL|member|NewLogicalDriveInformation
id|DAC960_V1_LogicalDriveInformationArray_T
id|NewLogicalDriveInformation
suffix:semicolon
id|DAC960_V1_DeviceState_T
DECL|member|DeviceState
id|DeviceState
(braket
id|DAC960_V1_MaxChannels
)braket
(braket
id|DAC960_V1_MaxTargets
)braket
suffix:semicolon
DECL|member|NewDeviceState
id|DAC960_V1_DeviceState_T
id|NewDeviceState
suffix:semicolon
id|DAC960_SCSI_Inquiry_T
DECL|member|InquiryStandardData
id|InquiryStandardData
(braket
id|DAC960_V1_MaxChannels
)braket
(braket
id|DAC960_V1_MaxTargets
)braket
suffix:semicolon
id|DAC960_SCSI_Inquiry_UnitSerialNumber_T
DECL|member|InquiryUnitSerialNumber
id|InquiryUnitSerialNumber
(braket
id|DAC960_V1_MaxChannels
)braket
(braket
id|DAC960_V1_MaxTargets
)braket
suffix:semicolon
DECL|member|DeviceResetCount
r_int
id|DeviceResetCount
(braket
id|DAC960_V1_MaxChannels
)braket
(braket
id|DAC960_V1_MaxTargets
)braket
suffix:semicolon
DECL|member|DirectCommandActive
id|boolean
id|DirectCommandActive
(braket
id|DAC960_V1_MaxChannels
)braket
(braket
id|DAC960_V1_MaxTargets
)braket
suffix:semicolon
DECL|member|V1
)brace
id|V1
suffix:semicolon
r_struct
(brace
DECL|member|StatusChangeCounter
r_int
r_int
id|StatusChangeCounter
suffix:semicolon
DECL|member|NextEventSequenceNumber
r_int
r_int
id|NextEventSequenceNumber
suffix:semicolon
DECL|member|PhysicalDeviceIndex
r_int
r_int
id|PhysicalDeviceIndex
suffix:semicolon
DECL|member|NeedLogicalDeviceInformation
id|boolean
id|NeedLogicalDeviceInformation
suffix:semicolon
DECL|member|NeedPhysicalDeviceInformation
id|boolean
id|NeedPhysicalDeviceInformation
suffix:semicolon
DECL|member|NeedDeviceSerialNumberInformation
id|boolean
id|NeedDeviceSerialNumberInformation
suffix:semicolon
DECL|member|FirstCommandMailbox
id|DAC960_V2_CommandMailbox_T
op_star
id|FirstCommandMailbox
suffix:semicolon
DECL|member|LastCommandMailbox
id|DAC960_V2_CommandMailbox_T
op_star
id|LastCommandMailbox
suffix:semicolon
DECL|member|NextCommandMailbox
id|DAC960_V2_CommandMailbox_T
op_star
id|NextCommandMailbox
suffix:semicolon
DECL|member|PreviousCommandMailbox1
id|DAC960_V2_CommandMailbox_T
op_star
id|PreviousCommandMailbox1
suffix:semicolon
DECL|member|PreviousCommandMailbox2
id|DAC960_V2_CommandMailbox_T
op_star
id|PreviousCommandMailbox2
suffix:semicolon
DECL|member|FirstStatusMailbox
id|DAC960_V2_StatusMailbox_T
op_star
id|FirstStatusMailbox
suffix:semicolon
DECL|member|LastStatusMailbox
id|DAC960_V2_StatusMailbox_T
op_star
id|LastStatusMailbox
suffix:semicolon
DECL|member|NextStatusMailbox
id|DAC960_V2_StatusMailbox_T
op_star
id|NextStatusMailbox
suffix:semicolon
DECL|member|HealthStatusBuffer
id|DAC960_V2_HealthStatusBuffer_T
op_star
id|HealthStatusBuffer
suffix:semicolon
DECL|member|ControllerInformation
id|DAC960_V2_ControllerInfo_T
id|ControllerInformation
suffix:semicolon
DECL|member|NewControllerInformation
id|DAC960_V2_ControllerInfo_T
id|NewControllerInformation
suffix:semicolon
id|DAC960_V2_LogicalDeviceInfo_T
DECL|member|LogicalDeviceInformation
op_star
id|LogicalDeviceInformation
(braket
id|DAC960_MaxLogicalDrives
)braket
suffix:semicolon
DECL|member|NewLogicalDeviceInformation
id|DAC960_V2_LogicalDeviceInfo_T
id|NewLogicalDeviceInformation
suffix:semicolon
id|DAC960_V2_PhysicalDeviceInfo_T
DECL|member|PhysicalDeviceInformation
op_star
id|PhysicalDeviceInformation
(braket
id|DAC960_V2_MaxPhysicalDevices
)braket
suffix:semicolon
DECL|member|NewPhysicalDeviceInformation
id|DAC960_V2_PhysicalDeviceInfo_T
id|NewPhysicalDeviceInformation
suffix:semicolon
id|DAC960_SCSI_Inquiry_UnitSerialNumber_T
DECL|member|InquiryUnitSerialNumber
op_star
id|InquiryUnitSerialNumber
(braket
id|DAC960_V2_MaxPhysicalDevices
)braket
suffix:semicolon
id|DAC960_V2_PhysicalDevice_T
DECL|member|LogicalDriveToVirtualDevice
id|LogicalDriveToVirtualDevice
(braket
id|DAC960_MaxLogicalDrives
)braket
suffix:semicolon
DECL|member|Event
id|DAC960_V2_Event_T
id|Event
suffix:semicolon
DECL|member|V2
)brace
id|V2
suffix:semicolon
DECL|member|FW
)brace
id|FW
suffix:semicolon
DECL|member|DiskPartitions
id|DiskPartition_T
id|DiskPartitions
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|PartitionSizes
r_int
id|PartitionSizes
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|BlockSizes
r_int
id|BlockSizes
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|MaxSectorsPerRequest
r_int
id|MaxSectorsPerRequest
(braket
id|DAC960_MinorCount
)braket
suffix:semicolon
DECL|member|ProgressBuffer
r_int
r_char
id|ProgressBuffer
(braket
id|DAC960_ProgressBufferSize
)braket
suffix:semicolon
DECL|member|UserStatusBuffer
r_int
r_char
id|UserStatusBuffer
(braket
id|DAC960_UserMessageSize
)braket
suffix:semicolon
)brace
DECL|typedef|DAC960_Controller_T
id|DAC960_Controller_T
suffix:semicolon
multiline_comment|/*&n;  Simplify access to Firmware Version Dependent Data Structure Components&n;  and Functions.&n;*/
DECL|macro|V1
mdefine_line|#define V1&t;&t;&t;&t;FW.V1
DECL|macro|V2
mdefine_line|#define V2&t;&t;&t;&t;FW.V2
DECL|macro|DAC960_QueueCommand
mdefine_line|#define DAC960_QueueCommand(Command) &bslash;&n;  (Controller-&gt;QueueCommand)(Command)
DECL|macro|DAC960_ReadControllerConfiguration
mdefine_line|#define DAC960_ReadControllerConfiguration(Controller) &bslash;&n;  (Controller-&gt;ReadControllerConfiguration)(Controller)
DECL|macro|DAC960_ReadDeviceConfiguration
mdefine_line|#define DAC960_ReadDeviceConfiguration(Controller) &bslash;&n;  (Controller-&gt;ReadDeviceConfiguration)(Controller)
DECL|macro|DAC960_ReportDeviceConfiguration
mdefine_line|#define DAC960_ReportDeviceConfiguration(Controller) &bslash;&n;  (Controller-&gt;ReportDeviceConfiguration)(Controller)
DECL|macro|DAC960_QueueReadWriteCommand
mdefine_line|#define DAC960_QueueReadWriteCommand(Command) &bslash;&n;  (Controller-&gt;QueueReadWriteCommand)(Command)
multiline_comment|/*&n;  DAC960_AcquireControllerLock acquires exclusive access to Controller.&n;*/
r_static
r_inline
DECL|function|DAC960_AcquireControllerLock
r_void
id|DAC960_AcquireControllerLock
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
id|spin_lock_irqsave
c_func
(paren
op_amp
id|io_request_lock
comma
op_star
id|ProcessorFlags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  DAC960_ReleaseControllerLock releases exclusive access to Controller.&n;*/
r_static
r_inline
DECL|function|DAC960_ReleaseControllerLock
r_void
id|DAC960_ReleaseControllerLock
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|io_request_lock
comma
op_star
id|ProcessorFlags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  DAC960_AcquireControllerLockRF acquires exclusive access to Controller,&n;  but is only called from the request function with the io_request_lock held.&n;*/
r_static
r_inline
DECL|function|DAC960_AcquireControllerLockRF
r_void
id|DAC960_AcquireControllerLockRF
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
)brace
multiline_comment|/*&n;  DAC960_ReleaseControllerLockRF releases exclusive access to Controller,&n;  but is only called from the request function with the io_request_lock held.&n;*/
r_static
r_inline
DECL|function|DAC960_ReleaseControllerLockRF
r_void
id|DAC960_ReleaseControllerLockRF
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
)brace
multiline_comment|/*&n;  DAC960_AcquireControllerLockIH acquires exclusive access to Controller,&n;  but is only called from the interrupt handler.&n;*/
r_static
r_inline
DECL|function|DAC960_AcquireControllerLockIH
r_void
id|DAC960_AcquireControllerLockIH
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
id|spin_lock_irqsave
c_func
(paren
op_amp
id|io_request_lock
comma
op_star
id|ProcessorFlags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  DAC960_ReleaseControllerLockIH releases exclusive access to Controller,&n;  but is only called from the interrupt handler.&n;*/
r_static
r_inline
DECL|function|DAC960_ReleaseControllerLockIH
r_void
id|DAC960_ReleaseControllerLockIH
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
id|ProcessorFlags_T
op_star
id|ProcessorFlags
)paren
(brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|io_request_lock
comma
op_star
id|ProcessorFlags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  Virtual_to_Bus maps from Kernel Virtual Addresses to PCI Bus Addresses.&n;*/
DECL|function|Virtual_to_Bus
r_static
r_inline
id|DAC960_BusAddress32_T
id|Virtual_to_Bus
c_func
(paren
r_void
op_star
id|VirtualAddress
)paren
(brace
r_return
(paren
id|DAC960_BusAddress32_T
)paren
id|virt_to_bus
c_func
(paren
id|VirtualAddress
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  Bus_to_Virtual maps from PCI Bus Addresses to Kernel Virtual Addresses.&n;*/
DECL|function|Bus_to_Virtual
r_static
r_inline
r_void
op_star
id|Bus_to_Virtual
c_func
(paren
id|DAC960_BusAddress32_T
id|BusAddress
)paren
(brace
r_return
(paren
r_void
op_star
)paren
id|bus_to_virt
c_func
(paren
id|BusAddress
)paren
suffix:semicolon
)brace
multiline_comment|/*&n;  Define the DAC960 BA Series Controller Interface Register Offsets.&n;*/
DECL|macro|DAC960_BA_RegisterWindowSize
mdefine_line|#define DAC960_BA_RegisterWindowSize&t;&t;0x80
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_BA_InboundDoorBellRegisterOffset
id|DAC960_BA_InboundDoorBellRegisterOffset
op_assign
l_int|0x60
comma
DECL|enumerator|DAC960_BA_OutboundDoorBellRegisterOffset
id|DAC960_BA_OutboundDoorBellRegisterOffset
op_assign
l_int|0x61
comma
DECL|enumerator|DAC960_BA_InterruptStatusRegisterOffset
id|DAC960_BA_InterruptStatusRegisterOffset
op_assign
l_int|0x30
comma
DECL|enumerator|DAC960_BA_InterruptMaskRegisterOffset
id|DAC960_BA_InterruptMaskRegisterOffset
op_assign
l_int|0x34
comma
DECL|enumerator|DAC960_BA_CommandMailboxBusAddressOffset
id|DAC960_BA_CommandMailboxBusAddressOffset
op_assign
l_int|0x50
comma
DECL|enumerator|DAC960_BA_CommandStatusOffset
id|DAC960_BA_CommandStatusOffset
op_assign
l_int|0x58
comma
DECL|enumerator|DAC960_BA_ErrorStatusRegisterOffset
id|DAC960_BA_ErrorStatusRegisterOffset
op_assign
l_int|0x63
)brace
DECL|typedef|DAC960_BA_RegisterOffsets_T
id|DAC960_BA_RegisterOffsets_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 BA Series Inbound Door Bell Register.&n;*/
DECL|union|DAC960_BA_InboundDoorBellRegister
r_typedef
r_union
id|DAC960_BA_InboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxNewCommand
id|boolean
id|HardwareMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeHardwareMailboxStatus
id|boolean
id|AcknowledgeHardwareMailboxStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
DECL|member|GenerateInterrupt
id|boolean
id|GenerateInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|ControllerReset
id|boolean
id|ControllerReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
DECL|member|MemoryMailboxNewCommand
id|boolean
id|MemoryMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 4 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Bits 5-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxEmpty
id|boolean
id|HardwareMailboxEmpty
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|InitializationNotInProgress
id|boolean
id|InitializationNotInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_BA_InboundDoorBellRegister_T
id|DAC960_BA_InboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 BA Series Outbound Door Bell Register.&n;*/
DECL|union|DAC960_BA_OutboundDoorBellRegister
r_typedef
r_union
id|DAC960_BA_OutboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|AcknowledgeHardwareMailboxInterrupt
id|boolean
id|AcknowledgeHardwareMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeMemoryMailboxInterrupt
id|boolean
id|AcknowledgeMemoryMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxStatusAvailable
id|boolean
id|HardwareMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|MemoryMailboxStatusAvailable
id|boolean
id|MemoryMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_BA_OutboundDoorBellRegister_T
id|DAC960_BA_OutboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 BA Series Interrupt Mask Register.&n;*/
DECL|union|DAC960_BA_InterruptMaskRegister
r_typedef
r_union
id|DAC960_BA_InterruptMaskRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_int
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|DisableInterrupts
id|boolean
id|DisableInterrupts
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|DisableInterruptsI2O
id|boolean
id|DisableInterruptsI2O
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
r_int
r_int
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Bits 4-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_BA_InterruptMaskRegister_T
id|DAC960_BA_InterruptMaskRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 BA Series Error Status Register.&n;*/
DECL|union|DAC960_BA_ErrorStatusRegister
r_typedef
r_union
id|DAC960_BA_ErrorStatusRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_int
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|ErrorStatusPending
id|boolean
id|ErrorStatusPending
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
r_int
r_int
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_BA_ErrorStatusRegister_T
id|DAC960_BA_ErrorStatusRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define inline functions to provide an abstraction for reading and writing the&n;  DAC960 BA Series Controller Interface Registers.&n;*/
r_static
r_inline
DECL|function|DAC960_BA_HardwareMailboxNewCommand
r_void
id|DAC960_BA_HardwareMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.HardwareMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_AcknowledgeHardwareMailboxStatus
r_void
id|DAC960_BA_AcknowledgeHardwareMailboxStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.AcknowledgeHardwareMailboxStatus
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_GenerateInterrupt
r_void
id|DAC960_BA_GenerateInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.GenerateInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_ControllerReset
r_void
id|DAC960_BA_ControllerReset
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.ControllerReset
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_MemoryMailboxNewCommand
r_void
id|DAC960_BA_MemoryMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.MemoryMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_HardwareMailboxFullP
id|boolean
id|DAC960_BA_HardwareMailboxFullP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InboundDoorBellRegister.Read.HardwareMailboxEmpty
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_InitializationInProgressP
id|boolean
id|DAC960_BA_InitializationInProgressP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InboundDoorBellRegister.Read.InitializationNotInProgress
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_AcknowledgeHardwareMailboxInterrupt
r_void
id|DAC960_BA_AcknowledgeHardwareMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_AcknowledgeMemoryMailboxInterrupt
r_void
id|DAC960_BA_AcknowledgeMemoryMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_AcknowledgeInterrupt
r_void
id|DAC960_BA_AcknowledgeInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_HardwareMailboxStatusAvailableP
id|boolean
id|DAC960_BA_HardwareMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.HardwareMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_MemoryMailboxStatusAvailableP
id|boolean
id|DAC960_BA_MemoryMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.MemoryMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_EnableInterrupts
r_void
id|DAC960_BA_EnableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0xFF
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|false
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterruptsI2O
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_DisableInterrupts
r_void
id|DAC960_BA_DisableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0xFF
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|true
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterruptsI2O
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_InterruptsEnabledP
id|boolean
id|DAC960_BA_InterruptsEnabledP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_BA_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_InterruptMaskRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InterruptMaskRegister.Bits.DisableInterrupts
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_WriteCommandMailbox
r_void
id|DAC960_BA_WriteCommandMailbox
c_func
(paren
id|DAC960_V2_CommandMailbox_T
op_star
id|MemoryCommandMailbox
comma
id|DAC960_V2_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|memcpy
c_func
(paren
op_amp
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
op_amp
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
r_sizeof
(paren
id|DAC960_V2_CommandMailbox_T
)paren
op_minus
r_sizeof
(paren
r_int
r_int
)paren
)paren
suffix:semicolon
id|wmb
c_func
(paren
)paren
suffix:semicolon
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|0
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
suffix:semicolon
id|mb
c_func
(paren
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_BA_WriteHardwareMailbox
r_void
id|DAC960_BA_WriteHardwareMailbox
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
id|DAC960_V2_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|writel
c_func
(paren
id|Virtual_to_Bus
c_func
(paren
id|CommandMailbox
)paren
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_CommandMailboxBusAddressOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V2_CommandIdentifier_T
DECL|function|DAC960_BA_ReadCommandIdentifier
id|DAC960_BA_ReadCommandIdentifier
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_CommandStatusOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V2_CommandStatus_T
DECL|function|DAC960_BA_ReadCommandStatus
id|DAC960_BA_ReadCommandStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_CommandStatusOffset
op_plus
l_int|2
)paren
suffix:semicolon
)brace
r_static
r_inline
id|boolean
DECL|function|DAC960_BA_ReadErrorStatus
id|DAC960_BA_ReadErrorStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
r_int
r_char
op_star
id|ErrorStatus
comma
r_int
r_char
op_star
id|Parameter0
comma
r_int
r_char
op_star
id|Parameter1
)paren
(brace
id|DAC960_BA_ErrorStatusRegister_T
id|ErrorStatusRegister
suffix:semicolon
id|ErrorStatusRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|ErrorStatusRegister.Bits.ErrorStatusPending
)paren
r_return
l_bool|false
suffix:semicolon
id|ErrorStatusRegister.Bits.ErrorStatusPending
op_assign
l_bool|false
suffix:semicolon
op_star
id|ErrorStatus
op_assign
id|ErrorStatusRegister.All
suffix:semicolon
op_star
id|Parameter0
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_CommandMailboxBusAddressOffset
op_plus
l_int|0
)paren
suffix:semicolon
op_star
id|Parameter1
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_BA_CommandMailboxBusAddressOffset
op_plus
l_int|1
)paren
suffix:semicolon
id|writeb
c_func
(paren
l_int|0xFF
comma
id|ControllerBaseAddress
op_plus
id|DAC960_BA_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_return
l_bool|true
suffix:semicolon
)brace
multiline_comment|/*&n;  Define the DAC960 LP Series Controller Interface Register Offsets.&n;*/
DECL|macro|DAC960_LP_RegisterWindowSize
mdefine_line|#define DAC960_LP_RegisterWindowSize&t;&t;0x80
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_LP_InboundDoorBellRegisterOffset
id|DAC960_LP_InboundDoorBellRegisterOffset
op_assign
l_int|0x20
comma
DECL|enumerator|DAC960_LP_OutboundDoorBellRegisterOffset
id|DAC960_LP_OutboundDoorBellRegisterOffset
op_assign
l_int|0x2C
comma
DECL|enumerator|DAC960_LP_InterruptStatusRegisterOffset
id|DAC960_LP_InterruptStatusRegisterOffset
op_assign
l_int|0x30
comma
DECL|enumerator|DAC960_LP_InterruptMaskRegisterOffset
id|DAC960_LP_InterruptMaskRegisterOffset
op_assign
l_int|0x34
comma
DECL|enumerator|DAC960_LP_CommandMailboxBusAddressOffset
id|DAC960_LP_CommandMailboxBusAddressOffset
op_assign
l_int|0x10
comma
DECL|enumerator|DAC960_LP_CommandStatusOffset
id|DAC960_LP_CommandStatusOffset
op_assign
l_int|0x18
comma
DECL|enumerator|DAC960_LP_ErrorStatusRegisterOffset
id|DAC960_LP_ErrorStatusRegisterOffset
op_assign
l_int|0x2E
)brace
DECL|typedef|DAC960_LP_RegisterOffsets_T
id|DAC960_LP_RegisterOffsets_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 LP Series Inbound Door Bell Register.&n;*/
DECL|union|DAC960_LP_InboundDoorBellRegister
r_typedef
r_union
id|DAC960_LP_InboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxNewCommand
id|boolean
id|HardwareMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeHardwareMailboxStatus
id|boolean
id|AcknowledgeHardwareMailboxStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
DECL|member|GenerateInterrupt
id|boolean
id|GenerateInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|ControllerReset
id|boolean
id|ControllerReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
DECL|member|MemoryMailboxNewCommand
id|boolean
id|MemoryMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 4 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Bits 5-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxFull
id|boolean
id|HardwareMailboxFull
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|InitializationInProgress
id|boolean
id|InitializationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_LP_InboundDoorBellRegister_T
id|DAC960_LP_InboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 LP Series Outbound Door Bell Register.&n;*/
DECL|union|DAC960_LP_OutboundDoorBellRegister
r_typedef
r_union
id|DAC960_LP_OutboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|AcknowledgeHardwareMailboxInterrupt
id|boolean
id|AcknowledgeHardwareMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeMemoryMailboxInterrupt
id|boolean
id|AcknowledgeMemoryMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxStatusAvailable
id|boolean
id|HardwareMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|MemoryMailboxStatusAvailable
id|boolean
id|MemoryMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_LP_OutboundDoorBellRegister_T
id|DAC960_LP_OutboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 LP Series Interrupt Mask Register.&n;*/
DECL|union|DAC960_LP_InterruptMaskRegister
r_typedef
r_union
id|DAC960_LP_InterruptMaskRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_int
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|DisableInterrupts
id|boolean
id|DisableInterrupts
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
r_int
r_int
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_LP_InterruptMaskRegister_T
id|DAC960_LP_InterruptMaskRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 LP Series Error Status Register.&n;*/
DECL|union|DAC960_LP_ErrorStatusRegister
r_typedef
r_union
id|DAC960_LP_ErrorStatusRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_int
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|ErrorStatusPending
id|boolean
id|ErrorStatusPending
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
r_int
r_int
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_LP_ErrorStatusRegister_T
id|DAC960_LP_ErrorStatusRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define inline functions to provide an abstraction for reading and writing the&n;  DAC960 LP Series Controller Interface Registers.&n;*/
r_static
r_inline
DECL|function|DAC960_LP_HardwareMailboxNewCommand
r_void
id|DAC960_LP_HardwareMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.HardwareMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_AcknowledgeHardwareMailboxStatus
r_void
id|DAC960_LP_AcknowledgeHardwareMailboxStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.AcknowledgeHardwareMailboxStatus
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_GenerateInterrupt
r_void
id|DAC960_LP_GenerateInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.GenerateInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_ControllerReset
r_void
id|DAC960_LP_ControllerReset
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.ControllerReset
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_MemoryMailboxNewCommand
r_void
id|DAC960_LP_MemoryMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.MemoryMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_HardwareMailboxFullP
id|boolean
id|DAC960_LP_HardwareMailboxFullP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.HardwareMailboxFull
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_InitializationInProgressP
id|boolean
id|DAC960_LP_InitializationInProgressP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.InitializationInProgress
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_AcknowledgeHardwareMailboxInterrupt
r_void
id|DAC960_LP_AcknowledgeHardwareMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_AcknowledgeMemoryMailboxInterrupt
r_void
id|DAC960_LP_AcknowledgeMemoryMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_AcknowledgeInterrupt
r_void
id|DAC960_LP_AcknowledgeInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_HardwareMailboxStatusAvailableP
id|boolean
id|DAC960_LP_HardwareMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.HardwareMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_MemoryMailboxStatusAvailableP
id|boolean
id|DAC960_LP_MemoryMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.MemoryMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_EnableInterrupts
r_void
id|DAC960_LP_EnableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0xFF
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|false
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_DisableInterrupts
r_void
id|DAC960_LP_DisableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0xFF
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_InterruptsEnabledP
id|boolean
id|DAC960_LP_InterruptsEnabledP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LP_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_InterruptMaskRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InterruptMaskRegister.Bits.DisableInterrupts
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_WriteCommandMailbox
r_void
id|DAC960_LP_WriteCommandMailbox
c_func
(paren
id|DAC960_V2_CommandMailbox_T
op_star
id|MemoryCommandMailbox
comma
id|DAC960_V2_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|memcpy
c_func
(paren
op_amp
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
op_amp
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
r_sizeof
(paren
id|DAC960_V2_CommandMailbox_T
)paren
op_minus
r_sizeof
(paren
r_int
r_int
)paren
)paren
suffix:semicolon
id|wmb
c_func
(paren
)paren
suffix:semicolon
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|0
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
suffix:semicolon
id|mb
c_func
(paren
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LP_WriteHardwareMailbox
r_void
id|DAC960_LP_WriteHardwareMailbox
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
id|DAC960_V2_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|writel
c_func
(paren
id|Virtual_to_Bus
c_func
(paren
id|CommandMailbox
)paren
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_CommandMailboxBusAddressOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V2_CommandIdentifier_T
DECL|function|DAC960_LP_ReadCommandIdentifier
id|DAC960_LP_ReadCommandIdentifier
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_CommandStatusOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V2_CommandStatus_T
DECL|function|DAC960_LP_ReadCommandStatus
id|DAC960_LP_ReadCommandStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_CommandStatusOffset
op_plus
l_int|2
)paren
suffix:semicolon
)brace
r_static
r_inline
id|boolean
DECL|function|DAC960_LP_ReadErrorStatus
id|DAC960_LP_ReadErrorStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
r_int
r_char
op_star
id|ErrorStatus
comma
r_int
r_char
op_star
id|Parameter0
comma
r_int
r_char
op_star
id|Parameter1
)paren
(brace
id|DAC960_LP_ErrorStatusRegister_T
id|ErrorStatusRegister
suffix:semicolon
id|ErrorStatusRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|ErrorStatusRegister.Bits.ErrorStatusPending
)paren
r_return
l_bool|false
suffix:semicolon
id|ErrorStatusRegister.Bits.ErrorStatusPending
op_assign
l_bool|false
suffix:semicolon
op_star
id|ErrorStatus
op_assign
id|ErrorStatusRegister.All
suffix:semicolon
op_star
id|Parameter0
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_CommandMailboxBusAddressOffset
op_plus
l_int|0
)paren
suffix:semicolon
op_star
id|Parameter1
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LP_CommandMailboxBusAddressOffset
op_plus
l_int|1
)paren
suffix:semicolon
id|writeb
c_func
(paren
l_int|0xFF
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LP_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_return
l_bool|true
suffix:semicolon
)brace
multiline_comment|/*&n;  Define the DAC960 LA Series Controller Interface Register Offsets.&n;*/
DECL|macro|DAC960_LA_RegisterWindowSize
mdefine_line|#define DAC960_LA_RegisterWindowSize&t;&t;0x80
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_LA_InboundDoorBellRegisterOffset
id|DAC960_LA_InboundDoorBellRegisterOffset
op_assign
l_int|0x60
comma
DECL|enumerator|DAC960_LA_OutboundDoorBellRegisterOffset
id|DAC960_LA_OutboundDoorBellRegisterOffset
op_assign
l_int|0x61
comma
DECL|enumerator|DAC960_LA_InterruptMaskRegisterOffset
id|DAC960_LA_InterruptMaskRegisterOffset
op_assign
l_int|0x34
comma
DECL|enumerator|DAC960_LA_CommandOpcodeRegisterOffset
id|DAC960_LA_CommandOpcodeRegisterOffset
op_assign
l_int|0x50
comma
DECL|enumerator|DAC960_LA_CommandIdentifierRegisterOffset
id|DAC960_LA_CommandIdentifierRegisterOffset
op_assign
l_int|0x51
comma
DECL|enumerator|DAC960_LA_MailboxRegister2Offset
id|DAC960_LA_MailboxRegister2Offset
op_assign
l_int|0x52
comma
DECL|enumerator|DAC960_LA_MailboxRegister3Offset
id|DAC960_LA_MailboxRegister3Offset
op_assign
l_int|0x53
comma
DECL|enumerator|DAC960_LA_MailboxRegister4Offset
id|DAC960_LA_MailboxRegister4Offset
op_assign
l_int|0x54
comma
DECL|enumerator|DAC960_LA_MailboxRegister5Offset
id|DAC960_LA_MailboxRegister5Offset
op_assign
l_int|0x55
comma
DECL|enumerator|DAC960_LA_MailboxRegister6Offset
id|DAC960_LA_MailboxRegister6Offset
op_assign
l_int|0x56
comma
DECL|enumerator|DAC960_LA_MailboxRegister7Offset
id|DAC960_LA_MailboxRegister7Offset
op_assign
l_int|0x57
comma
DECL|enumerator|DAC960_LA_MailboxRegister8Offset
id|DAC960_LA_MailboxRegister8Offset
op_assign
l_int|0x58
comma
DECL|enumerator|DAC960_LA_MailboxRegister9Offset
id|DAC960_LA_MailboxRegister9Offset
op_assign
l_int|0x59
comma
DECL|enumerator|DAC960_LA_MailboxRegister10Offset
id|DAC960_LA_MailboxRegister10Offset
op_assign
l_int|0x5A
comma
DECL|enumerator|DAC960_LA_MailboxRegister11Offset
id|DAC960_LA_MailboxRegister11Offset
op_assign
l_int|0x5B
comma
DECL|enumerator|DAC960_LA_MailboxRegister12Offset
id|DAC960_LA_MailboxRegister12Offset
op_assign
l_int|0x5C
comma
DECL|enumerator|DAC960_LA_StatusCommandIdentifierRegOffset
id|DAC960_LA_StatusCommandIdentifierRegOffset
op_assign
l_int|0x5D
comma
DECL|enumerator|DAC960_LA_StatusRegisterOffset
id|DAC960_LA_StatusRegisterOffset
op_assign
l_int|0x5E
comma
DECL|enumerator|DAC960_LA_ErrorStatusRegisterOffset
id|DAC960_LA_ErrorStatusRegisterOffset
op_assign
l_int|0x63
)brace
DECL|typedef|DAC960_LA_RegisterOffsets_T
id|DAC960_LA_RegisterOffsets_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 LA Series Inbound Door Bell Register.&n;*/
DECL|union|DAC960_LA_InboundDoorBellRegister
r_typedef
r_union
id|DAC960_LA_InboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxNewCommand
id|boolean
id|HardwareMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeHardwareMailboxStatus
id|boolean
id|AcknowledgeHardwareMailboxStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
DECL|member|GenerateInterrupt
id|boolean
id|GenerateInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|ControllerReset
id|boolean
id|ControllerReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
DECL|member|MemoryMailboxNewCommand
id|boolean
id|MemoryMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 4 */
r_int
r_char
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* Bits 5-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxEmpty
id|boolean
id|HardwareMailboxEmpty
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|InitializationNotInProgress
id|boolean
id|InitializationNotInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_LA_InboundDoorBellRegister_T
id|DAC960_LA_InboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 LA Series Outbound Door Bell Register.&n;*/
DECL|union|DAC960_LA_OutboundDoorBellRegister
r_typedef
r_union
id|DAC960_LA_OutboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|AcknowledgeHardwareMailboxInterrupt
id|boolean
id|AcknowledgeHardwareMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeMemoryMailboxInterrupt
id|boolean
id|AcknowledgeMemoryMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxStatusAvailable
id|boolean
id|HardwareMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|MemoryMailboxStatusAvailable
id|boolean
id|MemoryMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_LA_OutboundDoorBellRegister_T
id|DAC960_LA_OutboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 LA Series Interrupt Mask Register.&n;*/
DECL|union|DAC960_LA_InterruptMaskRegister
r_typedef
r_union
id|DAC960_LA_InterruptMaskRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_char
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|DisableInterrupts
id|boolean
id|DisableInterrupts
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
r_int
r_char
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_LA_InterruptMaskRegister_T
id|DAC960_LA_InterruptMaskRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 LA Series Error Status Register.&n;*/
DECL|union|DAC960_LA_ErrorStatusRegister
r_typedef
r_union
id|DAC960_LA_ErrorStatusRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_int
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|ErrorStatusPending
id|boolean
id|ErrorStatusPending
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
r_int
r_int
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_LA_ErrorStatusRegister_T
id|DAC960_LA_ErrorStatusRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define inline functions to provide an abstraction for reading and writing the&n;  DAC960 LA Series Controller Interface Registers.&n;*/
r_static
r_inline
DECL|function|DAC960_LA_HardwareMailboxNewCommand
r_void
id|DAC960_LA_HardwareMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.HardwareMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_AcknowledgeHardwareMailboxStatus
r_void
id|DAC960_LA_AcknowledgeHardwareMailboxStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.AcknowledgeHardwareMailboxStatus
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_GenerateInterrupt
r_void
id|DAC960_LA_GenerateInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.GenerateInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_ControllerReset
r_void
id|DAC960_LA_ControllerReset
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.ControllerReset
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_MemoryMailboxNewCommand
r_void
id|DAC960_LA_MemoryMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.MemoryMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_HardwareMailboxFullP
id|boolean
id|DAC960_LA_HardwareMailboxFullP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InboundDoorBellRegister.Read.HardwareMailboxEmpty
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_InitializationInProgressP
id|boolean
id|DAC960_LA_InitializationInProgressP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InboundDoorBellRegister.Read.InitializationNotInProgress
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_AcknowledgeHardwareMailboxInterrupt
r_void
id|DAC960_LA_AcknowledgeHardwareMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_AcknowledgeMemoryMailboxInterrupt
r_void
id|DAC960_LA_AcknowledgeMemoryMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_AcknowledgeInterrupt
r_void
id|DAC960_LA_AcknowledgeInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_HardwareMailboxStatusAvailableP
id|boolean
id|DAC960_LA_HardwareMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.HardwareMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_MemoryMailboxStatusAvailableP
id|boolean
id|DAC960_LA_MemoryMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.MemoryMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_EnableInterrupts
r_void
id|DAC960_LA_EnableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0xFF
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|false
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_DisableInterrupts
r_void
id|DAC960_LA_DisableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0xFF
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_InterruptsEnabledP
id|boolean
id|DAC960_LA_InterruptsEnabledP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_LA_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_InterruptMaskRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InterruptMaskRegister.Bits.DisableInterrupts
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_WriteCommandMailbox
r_void
id|DAC960_LA_WriteCommandMailbox
c_func
(paren
id|DAC960_V1_CommandMailbox_T
op_star
id|MemoryCommandMailbox
comma
id|DAC960_V1_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|1
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
suffix:semicolon
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|2
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
suffix:semicolon
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|3
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|3
)braket
suffix:semicolon
id|wmb
c_func
(paren
)paren
suffix:semicolon
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|0
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
suffix:semicolon
id|mb
c_func
(paren
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_WriteHardwareMailbox
r_void
id|DAC960_LA_WriteHardwareMailbox
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
id|DAC960_V1_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister4Offset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister8Offset
)paren
suffix:semicolon
id|writeb
c_func
(paren
id|CommandMailbox-&gt;Bytes
(braket
l_int|12
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister12Offset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V1_CommandIdentifier_T
DECL|function|DAC960_LA_ReadStatusCommandIdentifier
id|DAC960_LA_ReadStatusCommandIdentifier
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_StatusCommandIdentifierRegOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V1_CommandStatus_T
DECL|function|DAC960_LA_ReadStatusRegister
id|DAC960_LA_ReadStatusRegister
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_StatusRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|boolean
DECL|function|DAC960_LA_ReadErrorStatus
id|DAC960_LA_ReadErrorStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
r_int
r_char
op_star
id|ErrorStatus
comma
r_int
r_char
op_star
id|Parameter0
comma
r_int
r_char
op_star
id|Parameter1
)paren
(brace
id|DAC960_LA_ErrorStatusRegister_T
id|ErrorStatusRegister
suffix:semicolon
id|ErrorStatusRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|ErrorStatusRegister.Bits.ErrorStatusPending
)paren
r_return
l_bool|false
suffix:semicolon
id|ErrorStatusRegister.Bits.ErrorStatusPending
op_assign
l_bool|false
suffix:semicolon
op_star
id|ErrorStatus
op_assign
id|ErrorStatusRegister.All
suffix:semicolon
op_star
id|Parameter0
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
op_star
id|Parameter1
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_CommandIdentifierRegisterOffset
)paren
suffix:semicolon
id|writeb
c_func
(paren
l_int|0xFF
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_return
l_bool|true
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_LA_SaveMemoryMailboxInfo
r_void
id|DAC960_LA_SaveMemoryMailboxInfo
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
)paren
(brace
macro_line|#ifdef __i386__
r_void
op_star
id|ControllerBaseAddress
op_assign
id|Controller-&gt;BaseAddress
suffix:semicolon
id|writel
c_func
(paren
l_int|0x743C485E
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
(paren
r_int
r_int
)paren
id|Controller-&gt;V1.FirstCommandMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister4Offset
)paren
suffix:semicolon
id|writew
c_func
(paren
id|Controller-&gt;V1.NextCommandMailbox
op_minus
id|Controller-&gt;V1.FirstCommandMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister8Offset
)paren
suffix:semicolon
id|writew
c_func
(paren
id|Controller-&gt;V1.NextStatusMailbox
op_minus
id|Controller-&gt;V1.FirstStatusMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister10Offset
)paren
suffix:semicolon
macro_line|#endif
)brace
r_static
r_inline
DECL|function|DAC960_LA_RestoreMemoryMailboxInfo
r_void
id|DAC960_LA_RestoreMemoryMailboxInfo
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
r_void
op_star
op_star
id|MemoryMailboxAddress
comma
r_int
op_star
id|NextCommandMailboxIndex
comma
r_int
op_star
id|NextStatusMailboxIndex
)paren
(brace
macro_line|#ifdef __i386__
r_void
op_star
id|ControllerBaseAddress
op_assign
id|Controller-&gt;BaseAddress
suffix:semicolon
r_if
c_cond
(paren
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_CommandOpcodeRegisterOffset
)paren
op_ne
l_int|0x743C485E
)paren
r_return
suffix:semicolon
op_star
id|MemoryMailboxAddress
op_assign
(paren
r_void
op_star
)paren
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister4Offset
)paren
suffix:semicolon
op_star
id|NextCommandMailboxIndex
op_assign
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister8Offset
)paren
suffix:semicolon
op_star
id|NextStatusMailboxIndex
op_assign
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_LA_MailboxRegister10Offset
)paren
suffix:semicolon
macro_line|#endif
)brace
multiline_comment|/*&n;  Define the DAC960 PG Series Controller Interface Register Offsets.&n;*/
DECL|macro|DAC960_PG_RegisterWindowSize
mdefine_line|#define DAC960_PG_RegisterWindowSize&t;&t;0x2000
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_PG_InboundDoorBellRegisterOffset
id|DAC960_PG_InboundDoorBellRegisterOffset
op_assign
l_int|0x0020
comma
DECL|enumerator|DAC960_PG_OutboundDoorBellRegisterOffset
id|DAC960_PG_OutboundDoorBellRegisterOffset
op_assign
l_int|0x002C
comma
DECL|enumerator|DAC960_PG_InterruptMaskRegisterOffset
id|DAC960_PG_InterruptMaskRegisterOffset
op_assign
l_int|0x0034
comma
DECL|enumerator|DAC960_PG_CommandOpcodeRegisterOffset
id|DAC960_PG_CommandOpcodeRegisterOffset
op_assign
l_int|0x1000
comma
DECL|enumerator|DAC960_PG_CommandIdentifierRegisterOffset
id|DAC960_PG_CommandIdentifierRegisterOffset
op_assign
l_int|0x1001
comma
DECL|enumerator|DAC960_PG_MailboxRegister2Offset
id|DAC960_PG_MailboxRegister2Offset
op_assign
l_int|0x1002
comma
DECL|enumerator|DAC960_PG_MailboxRegister3Offset
id|DAC960_PG_MailboxRegister3Offset
op_assign
l_int|0x1003
comma
DECL|enumerator|DAC960_PG_MailboxRegister4Offset
id|DAC960_PG_MailboxRegister4Offset
op_assign
l_int|0x1004
comma
DECL|enumerator|DAC960_PG_MailboxRegister5Offset
id|DAC960_PG_MailboxRegister5Offset
op_assign
l_int|0x1005
comma
DECL|enumerator|DAC960_PG_MailboxRegister6Offset
id|DAC960_PG_MailboxRegister6Offset
op_assign
l_int|0x1006
comma
DECL|enumerator|DAC960_PG_MailboxRegister7Offset
id|DAC960_PG_MailboxRegister7Offset
op_assign
l_int|0x1007
comma
DECL|enumerator|DAC960_PG_MailboxRegister8Offset
id|DAC960_PG_MailboxRegister8Offset
op_assign
l_int|0x1008
comma
DECL|enumerator|DAC960_PG_MailboxRegister9Offset
id|DAC960_PG_MailboxRegister9Offset
op_assign
l_int|0x1009
comma
DECL|enumerator|DAC960_PG_MailboxRegister10Offset
id|DAC960_PG_MailboxRegister10Offset
op_assign
l_int|0x100A
comma
DECL|enumerator|DAC960_PG_MailboxRegister11Offset
id|DAC960_PG_MailboxRegister11Offset
op_assign
l_int|0x100B
comma
DECL|enumerator|DAC960_PG_MailboxRegister12Offset
id|DAC960_PG_MailboxRegister12Offset
op_assign
l_int|0x100C
comma
DECL|enumerator|DAC960_PG_StatusCommandIdentifierRegOffset
id|DAC960_PG_StatusCommandIdentifierRegOffset
op_assign
l_int|0x1018
comma
DECL|enumerator|DAC960_PG_StatusRegisterOffset
id|DAC960_PG_StatusRegisterOffset
op_assign
l_int|0x101A
comma
DECL|enumerator|DAC960_PG_ErrorStatusRegisterOffset
id|DAC960_PG_ErrorStatusRegisterOffset
op_assign
l_int|0x103F
)brace
DECL|typedef|DAC960_PG_RegisterOffsets_T
id|DAC960_PG_RegisterOffsets_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 PG Series Inbound Door Bell Register.&n;*/
DECL|union|DAC960_PG_InboundDoorBellRegister
r_typedef
r_union
id|DAC960_PG_InboundDoorBellRegister
(brace
DECL|member|All
r_int
r_int
id|All
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxNewCommand
id|boolean
id|HardwareMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeHardwareMailboxStatus
id|boolean
id|AcknowledgeHardwareMailboxStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
DECL|member|GenerateInterrupt
id|boolean
id|GenerateInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|ControllerReset
id|boolean
id|ControllerReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
DECL|member|MemoryMailboxNewCommand
id|boolean
id|MemoryMailboxNewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 4 */
r_int
r_int
suffix:colon
l_int|27
suffix:semicolon
multiline_comment|/* Bits 5-31 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxFull
id|boolean
id|HardwareMailboxFull
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|InitializationInProgress
id|boolean
id|InitializationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_int
suffix:colon
l_int|30
suffix:semicolon
multiline_comment|/* Bits 2-31 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_PG_InboundDoorBellRegister_T
id|DAC960_PG_InboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 PG Series Outbound Door Bell Register.&n;*/
DECL|union|DAC960_PG_OutboundDoorBellRegister
r_typedef
r_union
id|DAC960_PG_OutboundDoorBellRegister
(brace
DECL|member|All
r_int
r_int
id|All
suffix:semicolon
r_struct
(brace
DECL|member|AcknowledgeHardwareMailboxInterrupt
id|boolean
id|AcknowledgeHardwareMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeMemoryMailboxInterrupt
id|boolean
id|AcknowledgeMemoryMailboxInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_int
suffix:colon
l_int|30
suffix:semicolon
multiline_comment|/* Bits 2-31 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|HardwareMailboxStatusAvailable
id|boolean
id|HardwareMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|MemoryMailboxStatusAvailable
id|boolean
id|MemoryMailboxStatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_int
suffix:colon
l_int|30
suffix:semicolon
multiline_comment|/* Bits 2-31 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_PG_OutboundDoorBellRegister_T
id|DAC960_PG_OutboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 PG Series Interrupt Mask Register.&n;*/
DECL|union|DAC960_PG_InterruptMaskRegister
r_typedef
r_union
id|DAC960_PG_InterruptMaskRegister
(brace
DECL|member|All
r_int
r_int
id|All
suffix:semicolon
r_struct
(brace
DECL|member|MessageUnitInterruptMask1
r_int
r_int
id|MessageUnitInterruptMask1
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|DisableInterrupts
id|boolean
id|DisableInterrupts
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|MessageUnitInterruptMask2
r_int
r_int
id|MessageUnitInterruptMask2
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Reserved0
r_int
r_int
id|Reserved0
suffix:colon
l_int|24
suffix:semicolon
multiline_comment|/* Bits 8-31 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_PG_InterruptMaskRegister_T
id|DAC960_PG_InterruptMaskRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 PG Series Error Status Register.&n;*/
DECL|union|DAC960_PG_ErrorStatusRegister
r_typedef
r_union
id|DAC960_PG_ErrorStatusRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_int
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|ErrorStatusPending
id|boolean
id|ErrorStatusPending
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
r_int
r_int
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_PG_ErrorStatusRegister_T
id|DAC960_PG_ErrorStatusRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define inline functions to provide an abstraction for reading and writing the&n;  DAC960 PG Series Controller Interface Registers.&n;*/
r_static
r_inline
DECL|function|DAC960_PG_HardwareMailboxNewCommand
r_void
id|DAC960_PG_HardwareMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.HardwareMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_AcknowledgeHardwareMailboxStatus
r_void
id|DAC960_PG_AcknowledgeHardwareMailboxStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.AcknowledgeHardwareMailboxStatus
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_GenerateInterrupt
r_void
id|DAC960_PG_GenerateInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.GenerateInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_ControllerReset
r_void
id|DAC960_PG_ControllerReset
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.ControllerReset
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_MemoryMailboxNewCommand
r_void
id|DAC960_PG_MemoryMailboxNewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.MemoryMailboxNewCommand
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_HardwareMailboxFullP
id|boolean
id|DAC960_PG_HardwareMailboxFullP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.HardwareMailboxFull
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_InitializationInProgressP
id|boolean
id|DAC960_PG_InitializationInProgressP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.InitializationInProgress
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_AcknowledgeHardwareMailboxInterrupt
r_void
id|DAC960_PG_AcknowledgeHardwareMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_AcknowledgeMemoryMailboxInterrupt
r_void
id|DAC960_PG_AcknowledgeMemoryMailboxInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_AcknowledgeInterrupt
r_void
id|DAC960_PG_AcknowledgeInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeHardwareMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeMemoryMailboxInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writel
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_HardwareMailboxStatusAvailableP
id|boolean
id|DAC960_PG_HardwareMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.HardwareMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_MemoryMailboxStatusAvailableP
id|boolean
id|DAC960_PG_MemoryMailboxStatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.MemoryMailboxStatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_EnableInterrupts
r_void
id|DAC960_PG_EnableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptMaskRegister.Bits.MessageUnitInterruptMask1
op_assign
l_int|0x3
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|false
suffix:semicolon
id|InterruptMaskRegister.Bits.MessageUnitInterruptMask2
op_assign
l_int|0x1F
suffix:semicolon
id|writel
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_DisableInterrupts
r_void
id|DAC960_PG_DisableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptMaskRegister.Bits.MessageUnitInterruptMask1
op_assign
l_int|0x3
suffix:semicolon
id|InterruptMaskRegister.Bits.DisableInterrupts
op_assign
l_bool|true
suffix:semicolon
id|InterruptMaskRegister.Bits.MessageUnitInterruptMask2
op_assign
l_int|0x1F
suffix:semicolon
id|writel
c_func
(paren
id|InterruptMaskRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InterruptMaskRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_InterruptsEnabledP
id|boolean
id|DAC960_PG_InterruptsEnabledP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PG_InterruptMaskRegister_T
id|InterruptMaskRegister
suffix:semicolon
id|InterruptMaskRegister.All
op_assign
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_InterruptMaskRegisterOffset
)paren
suffix:semicolon
r_return
op_logical_neg
id|InterruptMaskRegister.Bits.DisableInterrupts
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_WriteCommandMailbox
r_void
id|DAC960_PG_WriteCommandMailbox
c_func
(paren
id|DAC960_V1_CommandMailbox_T
op_star
id|MemoryCommandMailbox
comma
id|DAC960_V1_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|1
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
suffix:semicolon
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|2
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
suffix:semicolon
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|3
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|3
)braket
suffix:semicolon
id|wmb
c_func
(paren
)paren
suffix:semicolon
id|MemoryCommandMailbox-&gt;Words
(braket
l_int|0
)braket
op_assign
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
suffix:semicolon
id|mb
c_func
(paren
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_WriteHardwareMailbox
r_void
id|DAC960_PG_WriteHardwareMailbox
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
id|DAC960_V1_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister4Offset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister8Offset
)paren
suffix:semicolon
id|writeb
c_func
(paren
id|CommandMailbox-&gt;Bytes
(braket
l_int|12
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister12Offset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V1_CommandIdentifier_T
DECL|function|DAC960_PG_ReadStatusCommandIdentifier
id|DAC960_PG_ReadStatusCommandIdentifier
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_StatusCommandIdentifierRegOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V1_CommandStatus_T
DECL|function|DAC960_PG_ReadStatusRegister
id|DAC960_PG_ReadStatusRegister
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_StatusRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|boolean
DECL|function|DAC960_PG_ReadErrorStatus
id|DAC960_PG_ReadErrorStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
r_int
r_char
op_star
id|ErrorStatus
comma
r_int
r_char
op_star
id|Parameter0
comma
r_int
r_char
op_star
id|Parameter1
)paren
(brace
id|DAC960_PG_ErrorStatusRegister_T
id|ErrorStatusRegister
suffix:semicolon
id|ErrorStatusRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|ErrorStatusRegister.Bits.ErrorStatusPending
)paren
r_return
l_bool|false
suffix:semicolon
id|ErrorStatusRegister.Bits.ErrorStatusPending
op_assign
l_bool|false
suffix:semicolon
op_star
id|ErrorStatus
op_assign
id|ErrorStatusRegister.All
suffix:semicolon
op_star
id|Parameter0
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
op_star
id|Parameter1
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_CommandIdentifierRegisterOffset
)paren
suffix:semicolon
id|writeb
c_func
(paren
l_int|0
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_return
l_bool|true
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PG_SaveMemoryMailboxInfo
r_void
id|DAC960_PG_SaveMemoryMailboxInfo
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
)paren
(brace
macro_line|#ifdef __i386__
r_void
op_star
id|ControllerBaseAddress
op_assign
id|Controller-&gt;BaseAddress
suffix:semicolon
id|writel
c_func
(paren
l_int|0x743C485E
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
(paren
r_int
r_int
)paren
id|Controller-&gt;V1.FirstCommandMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister4Offset
)paren
suffix:semicolon
id|writew
c_func
(paren
id|Controller-&gt;V1.NextCommandMailbox
op_minus
id|Controller-&gt;V1.FirstCommandMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister8Offset
)paren
suffix:semicolon
id|writew
c_func
(paren
id|Controller-&gt;V1.NextStatusMailbox
op_minus
id|Controller-&gt;V1.FirstStatusMailbox
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister10Offset
)paren
suffix:semicolon
macro_line|#endif
)brace
r_static
r_inline
DECL|function|DAC960_PG_RestoreMemoryMailboxInfo
r_void
id|DAC960_PG_RestoreMemoryMailboxInfo
c_func
(paren
id|DAC960_Controller_T
op_star
id|Controller
comma
r_void
op_star
op_star
id|MemoryMailboxAddress
comma
r_int
op_star
id|NextCommandMailboxIndex
comma
r_int
op_star
id|NextStatusMailboxIndex
)paren
(brace
macro_line|#ifdef __i386__
r_void
op_star
id|ControllerBaseAddress
op_assign
id|Controller-&gt;BaseAddress
suffix:semicolon
r_if
c_cond
(paren
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_CommandOpcodeRegisterOffset
)paren
op_ne
l_int|0x743C485E
)paren
r_return
suffix:semicolon
op_star
id|MemoryMailboxAddress
op_assign
(paren
r_void
op_star
)paren
id|readl
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister4Offset
)paren
suffix:semicolon
op_star
id|NextCommandMailboxIndex
op_assign
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister8Offset
)paren
suffix:semicolon
op_star
id|NextStatusMailboxIndex
op_assign
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PG_MailboxRegister10Offset
)paren
suffix:semicolon
macro_line|#endif
)brace
multiline_comment|/*&n;  Define the DAC960 PD Series Controller Interface Register Offsets.&n;*/
DECL|macro|DAC960_PD_RegisterWindowSize
mdefine_line|#define DAC960_PD_RegisterWindowSize&t;&t;0x80
r_typedef
r_enum
(brace
DECL|enumerator|DAC960_PD_CommandOpcodeRegisterOffset
id|DAC960_PD_CommandOpcodeRegisterOffset
op_assign
l_int|0x00
comma
DECL|enumerator|DAC960_PD_CommandIdentifierRegisterOffset
id|DAC960_PD_CommandIdentifierRegisterOffset
op_assign
l_int|0x01
comma
DECL|enumerator|DAC960_PD_MailboxRegister2Offset
id|DAC960_PD_MailboxRegister2Offset
op_assign
l_int|0x02
comma
DECL|enumerator|DAC960_PD_MailboxRegister3Offset
id|DAC960_PD_MailboxRegister3Offset
op_assign
l_int|0x03
comma
DECL|enumerator|DAC960_PD_MailboxRegister4Offset
id|DAC960_PD_MailboxRegister4Offset
op_assign
l_int|0x04
comma
DECL|enumerator|DAC960_PD_MailboxRegister5Offset
id|DAC960_PD_MailboxRegister5Offset
op_assign
l_int|0x05
comma
DECL|enumerator|DAC960_PD_MailboxRegister6Offset
id|DAC960_PD_MailboxRegister6Offset
op_assign
l_int|0x06
comma
DECL|enumerator|DAC960_PD_MailboxRegister7Offset
id|DAC960_PD_MailboxRegister7Offset
op_assign
l_int|0x07
comma
DECL|enumerator|DAC960_PD_MailboxRegister8Offset
id|DAC960_PD_MailboxRegister8Offset
op_assign
l_int|0x08
comma
DECL|enumerator|DAC960_PD_MailboxRegister9Offset
id|DAC960_PD_MailboxRegister9Offset
op_assign
l_int|0x09
comma
DECL|enumerator|DAC960_PD_MailboxRegister10Offset
id|DAC960_PD_MailboxRegister10Offset
op_assign
l_int|0x0A
comma
DECL|enumerator|DAC960_PD_MailboxRegister11Offset
id|DAC960_PD_MailboxRegister11Offset
op_assign
l_int|0x0B
comma
DECL|enumerator|DAC960_PD_MailboxRegister12Offset
id|DAC960_PD_MailboxRegister12Offset
op_assign
l_int|0x0C
comma
DECL|enumerator|DAC960_PD_StatusCommandIdentifierRegOffset
id|DAC960_PD_StatusCommandIdentifierRegOffset
op_assign
l_int|0x0D
comma
DECL|enumerator|DAC960_PD_StatusRegisterOffset
id|DAC960_PD_StatusRegisterOffset
op_assign
l_int|0x0E
comma
DECL|enumerator|DAC960_PD_ErrorStatusRegisterOffset
id|DAC960_PD_ErrorStatusRegisterOffset
op_assign
l_int|0x3F
comma
DECL|enumerator|DAC960_PD_InboundDoorBellRegisterOffset
id|DAC960_PD_InboundDoorBellRegisterOffset
op_assign
l_int|0x40
comma
DECL|enumerator|DAC960_PD_OutboundDoorBellRegisterOffset
id|DAC960_PD_OutboundDoorBellRegisterOffset
op_assign
l_int|0x41
comma
DECL|enumerator|DAC960_PD_InterruptEnableRegisterOffset
id|DAC960_PD_InterruptEnableRegisterOffset
op_assign
l_int|0x43
)brace
DECL|typedef|DAC960_PD_RegisterOffsets_T
id|DAC960_PD_RegisterOffsets_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 PD Series Inbound Door Bell Register.&n;*/
DECL|union|DAC960_PD_InboundDoorBellRegister
r_typedef
r_union
id|DAC960_PD_InboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|NewCommand
id|boolean
id|NewCommand
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|AcknowledgeStatus
id|boolean
id|AcknowledgeStatus
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
DECL|member|GenerateInterrupt
id|boolean
id|GenerateInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
DECL|member|ControllerReset
id|boolean
id|ControllerReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 3 */
r_int
r_char
suffix:colon
l_int|4
suffix:semicolon
multiline_comment|/* Bits 4-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|MailboxFull
id|boolean
id|MailboxFull
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
DECL|member|InitializationInProgress
id|boolean
id|InitializationInProgress
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 1 */
r_int
r_char
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* Bits 2-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_PD_InboundDoorBellRegister_T
id|DAC960_PD_InboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 PD Series Outbound Door Bell Register.&n;*/
DECL|union|DAC960_PD_OutboundDoorBellRegister
r_typedef
r_union
id|DAC960_PD_OutboundDoorBellRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|AcknowledgeInterrupt
id|boolean
id|AcknowledgeInterrupt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Bits 1-7 */
DECL|member|Write
)brace
id|Write
suffix:semicolon
r_struct
(brace
DECL|member|StatusAvailable
id|boolean
id|StatusAvailable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Bits 1-7 */
DECL|member|Read
)brace
id|Read
suffix:semicolon
)brace
DECL|typedef|DAC960_PD_OutboundDoorBellRegister_T
id|DAC960_PD_OutboundDoorBellRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 PD Series Interrupt Enable Register.&n;*/
DECL|union|DAC960_PD_InterruptEnableRegister
r_typedef
r_union
id|DAC960_PD_InterruptEnableRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
DECL|member|EnableInterrupts
id|boolean
id|EnableInterrupts
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 0 */
r_int
r_char
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* Bits 1-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_PD_InterruptEnableRegister_T
id|DAC960_PD_InterruptEnableRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define the structure of the DAC960 PD Series Error Status Register.&n;*/
DECL|union|DAC960_PD_ErrorStatusRegister
r_typedef
r_union
id|DAC960_PD_ErrorStatusRegister
(brace
DECL|member|All
r_int
r_char
id|All
suffix:semicolon
r_struct
(brace
r_int
r_int
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Bits 0-1 */
DECL|member|ErrorStatusPending
id|boolean
id|ErrorStatusPending
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Bit 2 */
r_int
r_int
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* Bits 3-7 */
DECL|member|Bits
)brace
id|Bits
suffix:semicolon
)brace
DECL|typedef|DAC960_PD_ErrorStatusRegister_T
id|DAC960_PD_ErrorStatusRegister_T
suffix:semicolon
multiline_comment|/*&n;  Define inline functions to provide an abstraction for reading and writing the&n;  DAC960 PD Series Controller Interface Registers.&n;*/
r_static
r_inline
DECL|function|DAC960_PD_NewCommand
r_void
id|DAC960_PD_NewCommand
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.NewCommand
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_AcknowledgeStatus
r_void
id|DAC960_PD_AcknowledgeStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.AcknowledgeStatus
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_GenerateInterrupt
r_void
id|DAC960_PD_GenerateInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.GenerateInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_ControllerReset
r_void
id|DAC960_PD_ControllerReset
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|InboundDoorBellRegister.Write.ControllerReset
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_MailboxFullP
id|boolean
id|DAC960_PD_MailboxFullP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.MailboxFull
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_InitializationInProgressP
id|boolean
id|DAC960_PD_InitializationInProgressP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InboundDoorBellRegister_T
id|InboundDoorBellRegister
suffix:semicolon
id|InboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|InboundDoorBellRegister.Read.InitializationInProgress
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_AcknowledgeInterrupt
r_void
id|DAC960_PD_AcknowledgeInterrupt
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
l_int|0
suffix:semicolon
id|OutboundDoorBellRegister.Write.AcknowledgeInterrupt
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|OutboundDoorBellRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_StatusAvailableP
id|boolean
id|DAC960_PD_StatusAvailableP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_OutboundDoorBellRegister_T
id|OutboundDoorBellRegister
suffix:semicolon
id|OutboundDoorBellRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_OutboundDoorBellRegisterOffset
)paren
suffix:semicolon
r_return
id|OutboundDoorBellRegister.Read.StatusAvailable
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_EnableInterrupts
r_void
id|DAC960_PD_EnableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InterruptEnableRegister_T
id|InterruptEnableRegister
suffix:semicolon
id|InterruptEnableRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptEnableRegister.Bits.EnableInterrupts
op_assign
l_bool|true
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptEnableRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InterruptEnableRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_DisableInterrupts
r_void
id|DAC960_PD_DisableInterrupts
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InterruptEnableRegister_T
id|InterruptEnableRegister
suffix:semicolon
id|InterruptEnableRegister.All
op_assign
l_int|0
suffix:semicolon
id|InterruptEnableRegister.Bits.EnableInterrupts
op_assign
l_bool|false
suffix:semicolon
id|writeb
c_func
(paren
id|InterruptEnableRegister.All
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InterruptEnableRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_InterruptsEnabledP
id|boolean
id|DAC960_PD_InterruptsEnabledP
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
id|DAC960_PD_InterruptEnableRegister_T
id|InterruptEnableRegister
suffix:semicolon
id|InterruptEnableRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_InterruptEnableRegisterOffset
)paren
suffix:semicolon
r_return
id|InterruptEnableRegister.Bits.EnableInterrupts
suffix:semicolon
)brace
r_static
r_inline
DECL|function|DAC960_PD_WriteCommandMailbox
r_void
id|DAC960_PD_WriteCommandMailbox
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
id|DAC960_V1_CommandMailbox_T
op_star
id|CommandMailbox
)paren
(brace
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|0
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|1
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_MailboxRegister4Offset
)paren
suffix:semicolon
id|writel
c_func
(paren
id|CommandMailbox-&gt;Words
(braket
l_int|2
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_MailboxRegister8Offset
)paren
suffix:semicolon
id|writeb
c_func
(paren
id|CommandMailbox-&gt;Bytes
(braket
l_int|12
)braket
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_MailboxRegister12Offset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V1_CommandIdentifier_T
DECL|function|DAC960_PD_ReadStatusCommandIdentifier
id|DAC960_PD_ReadStatusCommandIdentifier
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_StatusCommandIdentifierRegOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|DAC960_V1_CommandStatus_T
DECL|function|DAC960_PD_ReadStatusRegister
id|DAC960_PD_ReadStatusRegister
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
)paren
(brace
r_return
id|readw
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_StatusRegisterOffset
)paren
suffix:semicolon
)brace
r_static
r_inline
id|boolean
DECL|function|DAC960_PD_ReadErrorStatus
id|DAC960_PD_ReadErrorStatus
c_func
(paren
r_void
op_star
id|ControllerBaseAddress
comma
r_int
r_char
op_star
id|ErrorStatus
comma
r_int
r_char
op_star
id|Parameter0
comma
r_int
r_char
op_star
id|Parameter1
)paren
(brace
id|DAC960_PD_ErrorStatusRegister_T
id|ErrorStatusRegister
suffix:semicolon
id|ErrorStatusRegister.All
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|ErrorStatusRegister.Bits.ErrorStatusPending
)paren
r_return
l_bool|false
suffix:semicolon
id|ErrorStatusRegister.Bits.ErrorStatusPending
op_assign
l_bool|false
suffix:semicolon
op_star
id|ErrorStatus
op_assign
id|ErrorStatusRegister.All
suffix:semicolon
op_star
id|Parameter0
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_CommandOpcodeRegisterOffset
)paren
suffix:semicolon
op_star
id|Parameter1
op_assign
id|readb
c_func
(paren
id|ControllerBaseAddress
op_plus
id|DAC960_PD_CommandIdentifierRegisterOffset
)paren
suffix:semicolon
id|writeb
c_func
(paren
l_int|0
comma
id|ControllerBaseAddress
op_plus
id|DAC960_PD_ErrorStatusRegisterOffset
)paren
suffix:semicolon
r_return
l_bool|true
suffix:semicolon
)brace
multiline_comment|/*&n;  Define prototypes for the forward referenced DAC960 Driver Internal Functions.&n;*/
r_static
r_void
id|DAC960_FinalizeController
c_func
(paren
id|DAC960_Controller_T
op_star
)paren
suffix:semicolon
r_static
r_int
id|DAC960_Finalize
c_func
(paren
id|NotifierBlock_T
op_star
comma
r_int
r_int
comma
r_void
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_V1_QueueReadWriteCommand
c_func
(paren
id|DAC960_Command_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_V2_QueueReadWriteCommand
c_func
(paren
id|DAC960_Command_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_RequestFunction
c_func
(paren
id|RequestQueue_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_BA_InterruptHandler
c_func
(paren
r_int
comma
r_void
op_star
comma
id|Registers_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_LP_InterruptHandler
c_func
(paren
r_int
comma
r_void
op_star
comma
id|Registers_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_LA_InterruptHandler
c_func
(paren
r_int
comma
r_void
op_star
comma
id|Registers_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_PG_InterruptHandler
c_func
(paren
r_int
comma
r_void
op_star
comma
id|Registers_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_PD_InterruptHandler
c_func
(paren
r_int
comma
r_void
op_star
comma
id|Registers_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_V1_QueueMonitoringCommand
c_func
(paren
id|DAC960_Command_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_V2_QueueMonitoringCommand
c_func
(paren
id|DAC960_Command_T
op_star
)paren
suffix:semicolon
r_static
r_void
id|DAC960_MonitoringTimerFunction
c_func
(paren
r_int
r_int
)paren
suffix:semicolon
r_static
r_int
id|DAC960_Open
c_func
(paren
id|Inode_T
op_star
comma
id|File_T
op_star
)paren
suffix:semicolon
r_static
r_int
id|DAC960_Release
c_func
(paren
id|Inode_T
op_star
comma
id|File_T
op_star
)paren
suffix:semicolon
r_static
r_int
id|DAC960_IOCTL
c_func
(paren
id|Inode_T
op_star
comma
id|File_T
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_static
r_int
id|DAC960_UserIOCTL
c_func
(paren
id|Inode_T
op_star
comma
id|File_T
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_static
r_void
id|DAC960_Message
c_func
(paren
id|DAC960_MessageLevel_T
comma
r_int
r_char
op_star
comma
id|DAC960_Controller_T
op_star
comma
dot
dot
dot
)paren
suffix:semicolon
r_static
r_void
id|DAC960_CreateProcEntries
c_func
(paren
r_void
)paren
suffix:semicolon
r_static
r_void
id|DAC960_DestroyProcEntries
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n;  Export the Kernel Mode IOCTL interface.&n;*/
DECL|variable|DAC960_KernelIOCTL
id|EXPORT_SYMBOL
c_func
(paren
id|DAC960_KernelIOCTL
)paren
suffix:semicolon
macro_line|#endif /* DAC960_DriverVersion */
eof
