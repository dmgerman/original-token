multiline_comment|/*&n; * sound/ad1848_mixer.h&n; * &n; * Definitions for the mixer of AD1848 and compatible codecs.&n; * &n; * Copyright by Hannu Savolainen 1994&n; * &n; * Redistribution and use in source and binary forms, with or without&n; * modification, are permitted provided that the following conditions are&n; * met: 1. Redistributions of source code must retain the above copyright&n; * notice, this list of conditions and the following disclaimer. 2.&n; * Redistributions in binary form must reproduce the above copyright notice,&n; * this list of conditions and the following disclaimer in the documentation&n; * and/or other materials provided with the distribution.&n; * &n; * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS&squot;&squot; AND ANY&n; * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED&n; * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&n; * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR&n; * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL&n; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&n; * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER&n; * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT&n; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY&n; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&n; * SUCH DAMAGE.&n; */
multiline_comment|/*&n; * The AD1848 codec has generic input lines called Line, Aux1 and Aux2.&n; * Soundcard manufacturers have connected actual inputs (CD, synth, line,&n; * etc) to these inputs in different order. Therefore it&squot;s difficult&n; * to assign mixer channels to to these inputs correctly. The following&n; * contains two alternative mappings. The first one is for GUS MAX and&n; * the second is just a generic one (line1, line2 and line3).&n; * (Actually this is not a mapping but rather some kind of interleaving&n; * solution).&n; */
macro_line|#ifdef GUSMAX_MIXER
DECL|macro|MODE1_REC_DEVICES
mdefine_line|#define MODE1_REC_DEVICES&t;&t;(SOUND_MASK_LINE | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_CD)
DECL|macro|MODE1_MIXER_DEVICES
mdefine_line|#define MODE1_MIXER_DEVICES&t;&t;(SOUND_MASK_SYNTH | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_CD | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_IGAIN | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_PCM|SOUND_MASK_IMIX)
DECL|macro|MODE2_MIXER_DEVICES
mdefine_line|#define MODE2_MIXER_DEVICES&t;&t;(SOUND_MASK_SYNTH | SOUND_MASK_LINE | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_CD | SOUND_MASK_SPEAKER | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_IGAIN | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_PCM | SOUND_MASK_IMIX)
macro_line|#else&t;/* Generic mapping */
DECL|macro|MODE1_REC_DEVICES
mdefine_line|#define MODE1_REC_DEVICES&t;&t;(SOUND_MASK_LINE3 | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_LINE1)
DECL|macro|MODE1_MIXER_DEVICES
mdefine_line|#define MODE1_MIXER_DEVICES&t;&t;(SOUND_MASK_LINE1 | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_LINE2 | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_IGAIN | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_PCM | SOUND_MASK_IMIX)
DECL|macro|MODE2_MIXER_DEVICES
mdefine_line|#define MODE2_MIXER_DEVICES&t;&t;(SOUND_MASK_LINE1 | SOUND_MASK_LINE2 | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_LINE3 | SOUND_MASK_SPEAKER | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_IGAIN | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_PCM | SOUND_MASK_IMIX)
macro_line|#endif
DECL|struct|mixer_def
r_struct
id|mixer_def
(brace
DECL|member|regno
r_int
r_int
id|regno
suffix:colon
l_int|7
suffix:semicolon
DECL|member|polarity
r_int
r_int
id|polarity
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* 0=normal, 1=reversed */
DECL|member|bitpos
r_int
r_int
id|bitpos
suffix:colon
l_int|4
suffix:semicolon
DECL|member|nbits
r_int
r_int
id|nbits
suffix:colon
l_int|4
suffix:semicolon
)brace
suffix:semicolon
DECL|typedef|mixer_ent
r_typedef
r_struct
id|mixer_def
id|mixer_ent
suffix:semicolon
multiline_comment|/*&n; * Most of the mixer entries work in backwards. Setting the polarity field&n; * makes them to work correctly.&n; *&n; * The channel numbering used by individual soundcards is not fixed. Some&n; * cards have assigned different meanings for the AUX1, AUX2 and LINE inputs.&n; * The current version doesn&squot;t try to compensate this.&n; */
DECL|macro|MIX_ENT
mdefine_line|#define MIX_ENT(name, reg_l, pola_l, pos_l, len_l, reg_r, pola_r, pos_r, len_r)&t;&bslash;&n;&t;{{reg_l, pola_l, pos_r, len_l}, {reg_r, pola_r, pos_r, len_r}}
DECL|variable|mix_devices
id|mixer_ent
id|mix_devices
(braket
l_int|32
)braket
(braket
l_int|2
)braket
op_assign
(brace
multiline_comment|/* As used in GUS MAX */
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_VOLUME
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_BASS
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_TREBLE
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SYNTH
comma
l_int|4
comma
l_int|1
comma
l_int|0
comma
l_int|5
comma
l_int|5
comma
l_int|1
comma
l_int|0
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_PCM
comma
l_int|6
comma
l_int|1
comma
l_int|0
comma
l_int|6
comma
l_int|7
comma
l_int|1
comma
l_int|0
comma
l_int|6
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SPEAKER
comma
l_int|26
comma
l_int|1
comma
l_int|0
comma
l_int|4
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE
comma
l_int|18
comma
l_int|1
comma
l_int|0
comma
l_int|5
comma
l_int|19
comma
l_int|1
comma
l_int|0
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_MIC
comma
l_int|0
comma
l_int|0
comma
l_int|5
comma
l_int|1
comma
l_int|1
comma
l_int|0
comma
l_int|5
comma
l_int|1
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_CD
comma
l_int|2
comma
l_int|1
comma
l_int|0
comma
l_int|5
comma
l_int|3
comma
l_int|1
comma
l_int|0
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IMIX
comma
l_int|13
comma
l_int|1
comma
l_int|2
comma
l_int|6
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_ALTPCM
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_RECLEV
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IGAIN
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|4
comma
l_int|1
comma
l_int|0
comma
l_int|0
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_OGAIN
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE1
comma
l_int|2
comma
l_int|1
comma
l_int|0
comma
l_int|5
comma
l_int|3
comma
l_int|1
comma
l_int|0
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE2
comma
l_int|4
comma
l_int|1
comma
l_int|0
comma
l_int|5
comma
l_int|5
comma
l_int|1
comma
l_int|0
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE3
comma
l_int|18
comma
l_int|1
comma
l_int|0
comma
l_int|5
comma
l_int|19
comma
l_int|1
comma
l_int|0
comma
l_int|5
)paren
)brace
suffix:semicolon
DECL|variable|default_mixer_levels
r_static
r_int
r_int
id|default_mixer_levels
(braket
id|SOUND_MIXER_NRDEVICES
)braket
op_assign
(brace
l_int|0x5a5a
comma
multiline_comment|/* Master Volume */
l_int|0x3232
comma
multiline_comment|/* Bass */
l_int|0x3232
comma
multiline_comment|/* Treble */
l_int|0x4b4b
comma
multiline_comment|/* FM */
l_int|0x6464
comma
multiline_comment|/* PCM */
l_int|0x4b4b
comma
multiline_comment|/* PC Speaker */
l_int|0x4b4b
comma
multiline_comment|/* Ext Line */
l_int|0x1010
comma
multiline_comment|/* Mic */
l_int|0x4b4b
comma
multiline_comment|/* CD */
l_int|0x0000
comma
multiline_comment|/* Recording monitor */
l_int|0x4b4b
comma
multiline_comment|/* SB PCM */
l_int|0x4b4b
comma
multiline_comment|/* Recording level */
l_int|0x4b4b
comma
multiline_comment|/* Input gain */
l_int|0x4b4b
comma
multiline_comment|/* Output gain */
l_int|0x4b4b
comma
multiline_comment|/* Line1 */
l_int|0x4b4b
comma
multiline_comment|/* Line2 */
l_int|0x4b4b
multiline_comment|/* Line3 */
)brace
suffix:semicolon
DECL|macro|LEFT_CHN
mdefine_line|#define LEFT_CHN&t;0
DECL|macro|RIGHT_CHN
mdefine_line|#define RIGHT_CHN&t;1
eof
