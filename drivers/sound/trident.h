macro_line|#ifndef __TRID4DWAVE_H
DECL|macro|__TRID4DWAVE_H
mdefine_line|#define __TRID4DWAVE_H
multiline_comment|/*&n; *  audio@tridentmicro.com&n; *  Fri Feb 19 15:55:28 MST 1999&n; *  Definitions for Trident 4DWave DX/NX chips&n; *&n; *&n; *   This program is free software; you can redistribute it and/or modify&n; *   it under the terms of the GNU General Public License as published by&n; *   the Free Software Foundation; either version 2 of the License, or&n; *   (at your option) any later version.&n; *&n; *   This program is distributed in the hope that it will be useful,&n; *   but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *   GNU General Public License for more details.&n; *&n; *   You should have received a copy of the GNU General Public License&n; *   along with this program; if not, write to the Free Software&n; *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; *&n; */
multiline_comment|/* PCI vendor and device ID */
macro_line|#ifndef PCI_VENDOR_ID_TRIDENT
DECL|macro|PCI_VENDOR_ID_TRIDENT
mdefine_line|#define PCI_VENDOR_ID_TRIDENT&t;&t;0x1023
macro_line|#endif
macro_line|#ifndef PCI_VENDOR_ID_SI
DECL|macro|PCI_VENDOR_ID_SI
mdefine_line|#define PCI_VENDOR_ID_SI&t;&t;&t;0x0139
macro_line|#endif
macro_line|#ifndef PCI_VENDOR_ID_ALI
DECL|macro|PCI_VENDOR_ID_ALI
mdefine_line|#define PCI_VENDOR_ID_ALI&t;&t;&t;0x10b9
macro_line|#endif
macro_line|#ifndef PCI_DEVICE_ID_TRIDENT_4DWAVE_DX
DECL|macro|PCI_DEVICE_ID_TRIDENT_4DWAVE_DX
mdefine_line|#define PCI_DEVICE_ID_TRIDENT_4DWAVE_DX&t;0x2000
macro_line|#endif
macro_line|#ifndef PCI_DEVICE_ID_TRIDENT_4DWAVE_NX
DECL|macro|PCI_DEVICE_ID_TRIDENT_4DWAVE_NX
mdefine_line|#define PCI_DEVICE_ID_TRIDENT_4DWAVE_NX&t;0x2001
macro_line|#endif
macro_line|#ifndef PCI_DEVICE_ID_SI_7018
DECL|macro|PCI_DEVICE_ID_SI_7018
mdefine_line|#define PCI_DEVICE_ID_SI_7018&t;&t;0x7018
macro_line|#endif
macro_line|#ifndef PCI_DEVICE_ID_ALI_5451
DECL|macro|PCI_DEVICE_ID_ALI_5451
mdefine_line|#define PCI_DEVICE_ID_ALI_5451&t;&t;0x5451
macro_line|#endif
macro_line|#ifndef PCI_DEVICE_ID_ALI_1533
DECL|macro|PCI_DEVICE_ID_ALI_1533
mdefine_line|#define PCI_DEVICE_ID_ALI_1533&t;&t;0x1533
macro_line|#endif
macro_line|#ifndef FALSE
DECL|macro|FALSE
mdefine_line|#define FALSE &t;&t;0
DECL|macro|TRUE
mdefine_line|#define TRUE  &t;&t;1
macro_line|#endif
DECL|macro|CHANNEL_REGS
mdefine_line|#define CHANNEL_REGS&t;5
DECL|macro|CHANNEL_START
mdefine_line|#define CHANNEL_START&t;0xe0   
singleline_comment|// The first bytes of the contiguous register space.
DECL|macro|BANK_A
mdefine_line|#define BANK_A &t;&t;0
DECL|macro|BANK_B
mdefine_line|#define BANK_B &t;&t;1
DECL|macro|NR_BANKS
mdefine_line|#define NR_BANKS&t;&t;2
DECL|macro|TRIDENT_FMT_STEREO
mdefine_line|#define TRIDENT_FMT_STEREO     0x01
DECL|macro|TRIDENT_FMT_16BIT
mdefine_line|#define TRIDENT_FMT_16BIT      0x02
DECL|macro|TRIDENT_FMT_MASK
mdefine_line|#define TRIDENT_FMT_MASK       0x03
DECL|macro|DAC_RUNNING
mdefine_line|#define DAC_RUNNING&t;0x01
DECL|macro|ADC_RUNNING
mdefine_line|#define ADC_RUNNING&t;0x02
multiline_comment|/* Register Addresses */
multiline_comment|/* operational registers common to DX, NX, 7018 */
DECL|enum|trident_op_registers
r_enum
id|trident_op_registers
(brace
DECL|enumerator|T4D_REC_CH
id|T4D_REC_CH
op_assign
l_int|0x70
comma
DECL|enumerator|T4D_START_A
DECL|enumerator|T4D_STOP_A
id|T4D_START_A
op_assign
l_int|0x80
comma
id|T4D_STOP_A
op_assign
l_int|0x84
comma
DECL|enumerator|T4D_DLY_A
DECL|enumerator|T4D_SIGN_CSO_A
id|T4D_DLY_A
op_assign
l_int|0x88
comma
id|T4D_SIGN_CSO_A
op_assign
l_int|0x8c
comma
DECL|enumerator|T4D_CSPF_A
DECL|enumerator|T4D_CEBC_A
id|T4D_CSPF_A
op_assign
l_int|0x90
comma
id|T4D_CEBC_A
op_assign
l_int|0x94
comma
DECL|enumerator|T4D_AINT_A
DECL|enumerator|T4D_EINT_A
id|T4D_AINT_A
op_assign
l_int|0x98
comma
id|T4D_EINT_A
op_assign
l_int|0x9c
comma
DECL|enumerator|T4D_LFO_GC_CIR
DECL|enumerator|T4D_AINTEN_A
id|T4D_LFO_GC_CIR
op_assign
l_int|0xa0
comma
id|T4D_AINTEN_A
op_assign
l_int|0xa4
comma
DECL|enumerator|T4D_MUSICVOL_WAVEVOL
DECL|enumerator|T4D_SBDELTA_DELTA_R
id|T4D_MUSICVOL_WAVEVOL
op_assign
l_int|0xa8
comma
id|T4D_SBDELTA_DELTA_R
op_assign
l_int|0xac
comma
DECL|enumerator|T4D_MISCINT
DECL|enumerator|T4D_START_B
id|T4D_MISCINT
op_assign
l_int|0xb0
comma
id|T4D_START_B
op_assign
l_int|0xb4
comma
DECL|enumerator|T4D_STOP_B
DECL|enumerator|T4D_CSPF_B
id|T4D_STOP_B
op_assign
l_int|0xb8
comma
id|T4D_CSPF_B
op_assign
l_int|0xbc
comma
DECL|enumerator|T4D_SBBL_SBCL
DECL|enumerator|T4D_SBCTRL_SBE2R_SBDD
id|T4D_SBBL_SBCL
op_assign
l_int|0xc0
comma
id|T4D_SBCTRL_SBE2R_SBDD
op_assign
l_int|0xc4
comma
DECL|enumerator|T4D_STIMER
DECL|enumerator|T4D_LFO_B_I2S_DELTA
id|T4D_STIMER
op_assign
l_int|0xc8
comma
id|T4D_LFO_B_I2S_DELTA
op_assign
l_int|0xcc
comma
DECL|enumerator|T4D_AINT_B
DECL|enumerator|T4D_AINTEN_B
id|T4D_AINT_B
op_assign
l_int|0xd8
comma
id|T4D_AINTEN_B
op_assign
l_int|0xdc
)brace
suffix:semicolon
DECL|enum|ali_op_registers
r_enum
id|ali_op_registers
(brace
DECL|enumerator|ALI_SCTRL
id|ALI_SCTRL
op_assign
l_int|0x48
comma
DECL|enumerator|ALI_GLOBAL_CONTROL
id|ALI_GLOBAL_CONTROL
op_assign
l_int|0xd4
comma
DECL|enumerator|ALI_STIMER
id|ALI_STIMER
op_assign
l_int|0xc8
comma
DECL|enumerator|ALI_SPDIF_CS
id|ALI_SPDIF_CS
op_assign
l_int|0x70
comma
DECL|enumerator|ALI_SPDIF_CTRL
id|ALI_SPDIF_CTRL
op_assign
l_int|0x74
)brace
suffix:semicolon
DECL|enum|ali_registers_number
r_enum
id|ali_registers_number
(brace
DECL|enumerator|ALI_GLOBAL_REGS
id|ALI_GLOBAL_REGS
op_assign
l_int|56
comma
DECL|enumerator|ALI_CHANNEL_REGS
id|ALI_CHANNEL_REGS
op_assign
l_int|8
comma
DECL|enumerator|ALI_MIXER_REGS
id|ALI_MIXER_REGS
op_assign
l_int|20
)brace
suffix:semicolon
DECL|enum|ali_sctrl_control_bit
r_enum
id|ali_sctrl_control_bit
(brace
DECL|enumerator|ALI_SPDIF_OUT_ENABLE
id|ALI_SPDIF_OUT_ENABLE
op_assign
l_int|0x20
)brace
suffix:semicolon
DECL|enum|ali_global_control_bit
r_enum
id|ali_global_control_bit
(brace
DECL|enumerator|ALI_SPDIF_OUT_SEL_PCM
id|ALI_SPDIF_OUT_SEL_PCM
op_assign
l_int|0x00000400
comma
DECL|enumerator|ALI_SPDIF_IN_SUPPORT
id|ALI_SPDIF_IN_SUPPORT
op_assign
l_int|0x00000800
comma
DECL|enumerator|ALI_SPDIF_OUT_CH_ENABLE
id|ALI_SPDIF_OUT_CH_ENABLE
op_assign
l_int|0x00008000
comma
DECL|enumerator|ALI_SPDIF_IN_CH_ENABLE
id|ALI_SPDIF_IN_CH_ENABLE
op_assign
l_int|0x00080000
comma
DECL|enumerator|ALI_PCM_IN_DISABLE
id|ALI_PCM_IN_DISABLE
op_assign
l_int|0x7fffffff
comma
DECL|enumerator|ALI_PCM_IN_ENABLE
id|ALI_PCM_IN_ENABLE
op_assign
l_int|0x80000000
comma
DECL|enumerator|ALI_SPDIF_IN_CH_DISABLE
id|ALI_SPDIF_IN_CH_DISABLE
op_assign
l_int|0xfff7ffff
comma
DECL|enumerator|ALI_SPDIF_OUT_CH_DISABLE
id|ALI_SPDIF_OUT_CH_DISABLE
op_assign
l_int|0xffff7fff
comma
DECL|enumerator|ALI_SPDIF_OUT_SEL_SPDIF
id|ALI_SPDIF_OUT_SEL_SPDIF
op_assign
l_int|0xfffffbff
)brace
suffix:semicolon
DECL|enum|ali_spdif_control_bit
r_enum
id|ali_spdif_control_bit
(brace
DECL|enumerator|ALI_SPDIF_IN_FUNC_ENABLE
id|ALI_SPDIF_IN_FUNC_ENABLE
op_assign
l_int|0x02
comma
DECL|enumerator|ALI_SPDIF_IN_CH_STATUS
id|ALI_SPDIF_IN_CH_STATUS
op_assign
l_int|0x40
comma
DECL|enumerator|ALI_SPDIF_OUT_CH_STATUS
id|ALI_SPDIF_OUT_CH_STATUS
op_assign
l_int|0xbf
)brace
suffix:semicolon
DECL|enum|ali_control_all
r_enum
id|ali_control_all
(brace
DECL|enumerator|ALI_DISABLE_ALL_IRQ
id|ALI_DISABLE_ALL_IRQ
op_assign
l_int|0
comma
DECL|enumerator|ALI_CHANNELS
id|ALI_CHANNELS
op_assign
l_int|32
comma
DECL|enumerator|ALI_STOP_ALL_CHANNELS
id|ALI_STOP_ALL_CHANNELS
op_assign
l_int|0xffffffff
comma
DECL|enumerator|ALI_MULTI_CHANNELS_START_STOP
id|ALI_MULTI_CHANNELS_START_STOP
op_assign
l_int|0x07800000
)brace
suffix:semicolon
DECL|enum|ali_pcm_in_channel_num
r_enum
id|ali_pcm_in_channel_num
(brace
DECL|enumerator|ALI_NORMAL_CHANNEL
id|ALI_NORMAL_CHANNEL
op_assign
l_int|0
comma
DECL|enumerator|ALI_SPDIF_OUT_CHANNEL
id|ALI_SPDIF_OUT_CHANNEL
op_assign
l_int|15
comma
DECL|enumerator|ALI_SPDIF_IN_CHANNEL
id|ALI_SPDIF_IN_CHANNEL
op_assign
l_int|19
comma
DECL|enumerator|ALI_LEF_CHANNEL
id|ALI_LEF_CHANNEL
op_assign
l_int|23
comma
DECL|enumerator|ALI_CENTER_CHANNEL
id|ALI_CENTER_CHANNEL
op_assign
l_int|24
comma
DECL|enumerator|ALI_SURR_RIGHT_CHANNEL
id|ALI_SURR_RIGHT_CHANNEL
op_assign
l_int|25
comma
DECL|enumerator|ALI_SURR_LEFT_CHANNEL
id|ALI_SURR_LEFT_CHANNEL
op_assign
l_int|26
comma
DECL|enumerator|ALI_PCM_IN_CHANNEL
id|ALI_PCM_IN_CHANNEL
op_assign
l_int|31
)brace
suffix:semicolon
DECL|enum|ali_pcm_out_channel_num
r_enum
id|ali_pcm_out_channel_num
(brace
DECL|enumerator|ALI_PCM_OUT_CHANNEL_FIRST
id|ALI_PCM_OUT_CHANNEL_FIRST
op_assign
l_int|0
comma
DECL|enumerator|ALI_PCM_OUT_CHANNEL_LAST
id|ALI_PCM_OUT_CHANNEL_LAST
op_assign
l_int|31
)brace
suffix:semicolon
DECL|enum|ali_ac97_power_control_bit
r_enum
id|ali_ac97_power_control_bit
(brace
DECL|enumerator|ALI_EAPD_POWER_DOWN
id|ALI_EAPD_POWER_DOWN
op_assign
l_int|0x8000
)brace
suffix:semicolon
DECL|enum|ali_update_ptr_flags
r_enum
id|ali_update_ptr_flags
(brace
DECL|enumerator|ALI_ADDRESS_INT_UPDATE
id|ALI_ADDRESS_INT_UPDATE
op_assign
l_int|0x01
)brace
suffix:semicolon
DECL|enum|ali_revision
r_enum
id|ali_revision
(brace
DECL|enumerator|ALI_5451_V02
id|ALI_5451_V02
op_assign
l_int|0x02
)brace
suffix:semicolon
DECL|enum|ali_spdif_out_control
r_enum
id|ali_spdif_out_control
(brace
DECL|enumerator|ALI_PCM_TO_SPDIF_OUT
id|ALI_PCM_TO_SPDIF_OUT
op_assign
l_int|0
comma
DECL|enumerator|ALI_SPDIF_OUT_TO_SPDIF_OUT
id|ALI_SPDIF_OUT_TO_SPDIF_OUT
op_assign
l_int|1
comma
DECL|enumerator|ALI_SPDIF_OUT_PCM
id|ALI_SPDIF_OUT_PCM
op_assign
l_int|0
comma
DECL|enumerator|ALI_SPDIF_OUT_NON_PCM
id|ALI_SPDIF_OUT_NON_PCM
op_assign
l_int|2
)brace
suffix:semicolon
multiline_comment|/* S/PDIF Operational Registers for 4D-NX */
DECL|enum|nx_spdif_registers
r_enum
id|nx_spdif_registers
(brace
DECL|enumerator|NX_SPCTRL_SPCSO
DECL|enumerator|NX_SPLBA
id|NX_SPCTRL_SPCSO
op_assign
l_int|0x24
comma
id|NX_SPLBA
op_assign
l_int|0x28
comma
DECL|enumerator|NX_SPESO
DECL|enumerator|NX_SPCSTATUS
id|NX_SPESO
op_assign
l_int|0x2c
comma
id|NX_SPCSTATUS
op_assign
l_int|0x64
)brace
suffix:semicolon
multiline_comment|/* OP registers to access each hardware channel */
DECL|enum|channel_registers
r_enum
id|channel_registers
(brace
DECL|enumerator|CH_DX_CSO_ALPHA_FMS
DECL|enumerator|CH_DX_ESO_DELTA
id|CH_DX_CSO_ALPHA_FMS
op_assign
l_int|0xe0
comma
id|CH_DX_ESO_DELTA
op_assign
l_int|0xe8
comma
DECL|enumerator|CH_DX_FMC_RVOL_CVOL
id|CH_DX_FMC_RVOL_CVOL
op_assign
l_int|0xec
comma
DECL|enumerator|CH_NX_DELTA_CSO
DECL|enumerator|CH_NX_DELTA_ESO
id|CH_NX_DELTA_CSO
op_assign
l_int|0xe0
comma
id|CH_NX_DELTA_ESO
op_assign
l_int|0xe8
comma
DECL|enumerator|CH_NX_ALPHA_FMS_FMC_RVOL_CVOL
id|CH_NX_ALPHA_FMS_FMC_RVOL_CVOL
op_assign
l_int|0xec
comma
DECL|enumerator|CH_LBA
id|CH_LBA
op_assign
l_int|0xe4
comma
DECL|enumerator|CH_GVSEL_PAN_VOL_CTRL_EC
id|CH_GVSEL_PAN_VOL_CTRL_EC
op_assign
l_int|0xf0
)brace
suffix:semicolon
multiline_comment|/* registers to read/write/control AC97 codec */
DECL|enum|dx_ac97_registers
r_enum
id|dx_ac97_registers
(brace
DECL|enumerator|DX_ACR0_AC97_W
DECL|enumerator|DX_ACR1_AC97_R
id|DX_ACR0_AC97_W
op_assign
l_int|0x40
comma
id|DX_ACR1_AC97_R
op_assign
l_int|0x44
comma
DECL|enumerator|DX_ACR2_AC97_COM_STAT
id|DX_ACR2_AC97_COM_STAT
op_assign
l_int|0x48
)brace
suffix:semicolon
DECL|enum|nx_ac97_registers
r_enum
id|nx_ac97_registers
(brace
DECL|enumerator|NX_ACR0_AC97_COM_STAT
DECL|enumerator|NX_ACR1_AC97_W
id|NX_ACR0_AC97_COM_STAT
op_assign
l_int|0x40
comma
id|NX_ACR1_AC97_W
op_assign
l_int|0x44
comma
DECL|enumerator|NX_ACR2_AC97_R_PRIMARY
DECL|enumerator|NX_ACR3_AC97_R_SECONDARY
id|NX_ACR2_AC97_R_PRIMARY
op_assign
l_int|0x48
comma
id|NX_ACR3_AC97_R_SECONDARY
op_assign
l_int|0x4c
)brace
suffix:semicolon
DECL|enum|si_ac97_registers
r_enum
id|si_ac97_registers
(brace
DECL|enumerator|SI_AC97_WRITE
DECL|enumerator|SI_AC97_READ
id|SI_AC97_WRITE
op_assign
l_int|0x40
comma
id|SI_AC97_READ
op_assign
l_int|0x44
comma
DECL|enumerator|SI_SERIAL_INTF_CTRL
DECL|enumerator|SI_AC97_GPIO
id|SI_SERIAL_INTF_CTRL
op_assign
l_int|0x48
comma
id|SI_AC97_GPIO
op_assign
l_int|0x4c
)brace
suffix:semicolon
DECL|enum|ali_ac97_registers
r_enum
id|ali_ac97_registers
(brace
DECL|enumerator|ALI_AC97_WRITE
DECL|enumerator|ALI_AC97_READ
id|ALI_AC97_WRITE
op_assign
l_int|0x40
comma
id|ALI_AC97_READ
op_assign
l_int|0x44
)brace
suffix:semicolon
multiline_comment|/* Bit mask for operational registers */
DECL|macro|AC97_REG_ADDR
mdefine_line|#define AC97_REG_ADDR      0x000000ff
DECL|enum|ali_ac97_bits
r_enum
id|ali_ac97_bits
(brace
DECL|enumerator|ALI_AC97_BUSY_WRITE
DECL|enumerator|ALI_AC97_BUSY_READ
id|ALI_AC97_BUSY_WRITE
op_assign
l_int|0x8000
comma
id|ALI_AC97_BUSY_READ
op_assign
l_int|0x8000
comma
DECL|enumerator|ALI_AC97_WRITE_ACTION
DECL|enumerator|ALI_AC97_READ_ACTION
id|ALI_AC97_WRITE_ACTION
op_assign
l_int|0x8000
comma
id|ALI_AC97_READ_ACTION
op_assign
l_int|0x8000
comma
DECL|enumerator|ALI_AC97_AUDIO_BUSY
DECL|enumerator|ALI_AC97_SECONDARY
id|ALI_AC97_AUDIO_BUSY
op_assign
l_int|0x4000
comma
id|ALI_AC97_SECONDARY
op_assign
l_int|0x0080
comma
DECL|enumerator|ALI_AC97_READ_MIXER_REGISTER
id|ALI_AC97_READ_MIXER_REGISTER
op_assign
l_int|0xfeff
comma
DECL|enumerator|ALI_AC97_WRITE_MIXER_REGISTER
id|ALI_AC97_WRITE_MIXER_REGISTER
op_assign
l_int|0x0100
)brace
suffix:semicolon
DECL|enum|sis7018_ac97_bits
r_enum
id|sis7018_ac97_bits
(brace
DECL|enumerator|SI_AC97_BUSY_WRITE
DECL|enumerator|SI_AC97_BUSY_READ
id|SI_AC97_BUSY_WRITE
op_assign
l_int|0x8000
comma
id|SI_AC97_BUSY_READ
op_assign
l_int|0x8000
comma
DECL|enumerator|SI_AC97_AUDIO_BUSY
DECL|enumerator|SI_AC97_MODEM_BUSY
id|SI_AC97_AUDIO_BUSY
op_assign
l_int|0x4000
comma
id|SI_AC97_MODEM_BUSY
op_assign
l_int|0x2000
comma
DECL|enumerator|SI_AC97_SECONDARY
id|SI_AC97_SECONDARY
op_assign
l_int|0x0080
)brace
suffix:semicolon
DECL|enum|trident_dx_ac97_bits
r_enum
id|trident_dx_ac97_bits
(brace
DECL|enumerator|DX_AC97_BUSY_WRITE
DECL|enumerator|DX_AC97_BUSY_READ
id|DX_AC97_BUSY_WRITE
op_assign
l_int|0x8000
comma
id|DX_AC97_BUSY_READ
op_assign
l_int|0x8000
comma
DECL|enumerator|DX_AC97_READY
DECL|enumerator|DX_AC97_RECORD
id|DX_AC97_READY
op_assign
l_int|0x0010
comma
id|DX_AC97_RECORD
op_assign
l_int|0x0008
comma
DECL|enumerator|DX_AC97_PLAYBACK
id|DX_AC97_PLAYBACK
op_assign
l_int|0x0002
)brace
suffix:semicolon
DECL|enum|trident_nx_ac97_bits
r_enum
id|trident_nx_ac97_bits
(brace
multiline_comment|/* ACR1-3 */
DECL|enumerator|NX_AC97_BUSY_WRITE
DECL|enumerator|NX_AC97_BUSY_READ
id|NX_AC97_BUSY_WRITE
op_assign
l_int|0x0800
comma
id|NX_AC97_BUSY_READ
op_assign
l_int|0x0800
comma
DECL|enumerator|NX_AC97_BUSY_DATA
DECL|enumerator|NX_AC97_WRITE_SECONDARY
id|NX_AC97_BUSY_DATA
op_assign
l_int|0x0400
comma
id|NX_AC97_WRITE_SECONDARY
op_assign
l_int|0x0100
comma
multiline_comment|/* ACR0 */
DECL|enumerator|NX_AC97_SECONDARY_READY
DECL|enumerator|NX_AC97_SECONDARY_RECORD
id|NX_AC97_SECONDARY_READY
op_assign
l_int|0x0040
comma
id|NX_AC97_SECONDARY_RECORD
op_assign
l_int|0x0020
comma
DECL|enumerator|NX_AC97_SURROUND_OUTPUT
id|NX_AC97_SURROUND_OUTPUT
op_assign
l_int|0x0010
comma
DECL|enumerator|NX_AC97_PRIMARY_READY
DECL|enumerator|NX_AC97_PRIMARY_RECORD
id|NX_AC97_PRIMARY_READY
op_assign
l_int|0x0008
comma
id|NX_AC97_PRIMARY_RECORD
op_assign
l_int|0x0004
comma
DECL|enumerator|NX_AC97_PCM_OUTPUT
id|NX_AC97_PCM_OUTPUT
op_assign
l_int|0x0002
comma
DECL|enumerator|NX_AC97_WARM_RESET
id|NX_AC97_WARM_RESET
op_assign
l_int|0x0001
)brace
suffix:semicolon
DECL|enum|serial_intf_ctrl_bits
r_enum
id|serial_intf_ctrl_bits
(brace
DECL|enumerator|WARM_REST
DECL|enumerator|COLD_RESET
id|WARM_REST
op_assign
l_int|0x00000001
comma
id|COLD_RESET
op_assign
l_int|0x00000002
comma
DECL|enumerator|I2S_CLOCK
DECL|enumerator|PCM_SEC_AC97
id|I2S_CLOCK
op_assign
l_int|0x00000004
comma
id|PCM_SEC_AC97
op_assign
l_int|0x00000008
comma
DECL|enumerator|AC97_DBL_RATE
DECL|enumerator|SPDIF_EN
id|AC97_DBL_RATE
op_assign
l_int|0x00000010
comma
id|SPDIF_EN
op_assign
l_int|0x00000020
comma
DECL|enumerator|I2S_OUTPUT_EN
DECL|enumerator|I2S_INPUT_EN
id|I2S_OUTPUT_EN
op_assign
l_int|0x00000040
comma
id|I2S_INPUT_EN
op_assign
l_int|0x00000080
comma
DECL|enumerator|PCMIN
DECL|enumerator|LINE1IN
id|PCMIN
op_assign
l_int|0x00000100
comma
id|LINE1IN
op_assign
l_int|0x00000200
comma
DECL|enumerator|MICIN
DECL|enumerator|LINE2IN
id|MICIN
op_assign
l_int|0x00000400
comma
id|LINE2IN
op_assign
l_int|0x00000800
comma
DECL|enumerator|HEAD_SET_IN
DECL|enumerator|GPIOIN
id|HEAD_SET_IN
op_assign
l_int|0x00001000
comma
id|GPIOIN
op_assign
l_int|0x00002000
comma
multiline_comment|/* 7018 spec says id = 01 but the demo board routed to 10 &n;&t;   SECONDARY_ID= 0x00004000, */
DECL|enumerator|SECONDARY_ID
id|SECONDARY_ID
op_assign
l_int|0x00004000
comma
DECL|enumerator|PCMOUT
DECL|enumerator|SURROUT
id|PCMOUT
op_assign
l_int|0x00010000
comma
id|SURROUT
op_assign
l_int|0x00020000
comma
DECL|enumerator|CENTEROUT
DECL|enumerator|LFEOUT
id|CENTEROUT
op_assign
l_int|0x00040000
comma
id|LFEOUT
op_assign
l_int|0x00080000
comma
DECL|enumerator|LINE1OUT
DECL|enumerator|LINE2OUT
id|LINE1OUT
op_assign
l_int|0x00100000
comma
id|LINE2OUT
op_assign
l_int|0x00200000
comma
DECL|enumerator|GPIOOUT
id|GPIOOUT
op_assign
l_int|0x00400000
comma
DECL|enumerator|SI_AC97_PRIMARY_READY
id|SI_AC97_PRIMARY_READY
op_assign
l_int|0x01000000
comma
DECL|enumerator|SI_AC97_SECONDARY_READY
id|SI_AC97_SECONDARY_READY
op_assign
l_int|0x02000000
comma
)brace
suffix:semicolon
DECL|enum|global_control_bits
r_enum
id|global_control_bits
(brace
DECL|enumerator|CHANNLE_IDX
DECL|enumerator|PB_RESET
id|CHANNLE_IDX
op_assign
l_int|0x0000003f
comma
id|PB_RESET
op_assign
l_int|0x00000100
comma
DECL|enumerator|PAUSE_ENG
id|PAUSE_ENG
op_assign
l_int|0x00000200
comma
DECL|enumerator|OVERRUN_IE
DECL|enumerator|UNDERRUN_IE
id|OVERRUN_IE
op_assign
l_int|0x00000400
comma
id|UNDERRUN_IE
op_assign
l_int|0x00000800
comma
DECL|enumerator|ENDLP_IE
DECL|enumerator|MIDLP_IE
id|ENDLP_IE
op_assign
l_int|0x00001000
comma
id|MIDLP_IE
op_assign
l_int|0x00002000
comma
DECL|enumerator|ETOG_IE
id|ETOG_IE
op_assign
l_int|0x00004000
comma
DECL|enumerator|EDROP_IE
DECL|enumerator|BANK_B_EN
id|EDROP_IE
op_assign
l_int|0x00008000
comma
id|BANK_B_EN
op_assign
l_int|0x00010000
)brace
suffix:semicolon
DECL|enum|channel_control_bits
r_enum
id|channel_control_bits
(brace
DECL|enumerator|CHANNEL_LOOP
DECL|enumerator|CHANNEL_SIGNED
id|CHANNEL_LOOP
op_assign
l_int|0x00001000
comma
id|CHANNEL_SIGNED
op_assign
l_int|0x00002000
comma
DECL|enumerator|CHANNEL_STEREO
DECL|enumerator|CHANNEL_16BITS
id|CHANNEL_STEREO
op_assign
l_int|0x00004000
comma
id|CHANNEL_16BITS
op_assign
l_int|0x00008000
comma
)brace
suffix:semicolon
DECL|enum|channel_attribute
r_enum
id|channel_attribute
(brace
multiline_comment|/* playback/record select */
DECL|enumerator|CHANNEL_PB
DECL|enumerator|CHANNEL_SPC_PB
id|CHANNEL_PB
op_assign
l_int|0x0000
comma
id|CHANNEL_SPC_PB
op_assign
l_int|0x4000
comma
DECL|enumerator|CHANNEL_REC
DECL|enumerator|CHANNEL_REC_PB
id|CHANNEL_REC
op_assign
l_int|0x8000
comma
id|CHANNEL_REC_PB
op_assign
l_int|0xc000
comma
multiline_comment|/* playback destination/record source select */
DECL|enumerator|MODEM_LINE1
DECL|enumerator|MODEM_LINE2
id|MODEM_LINE1
op_assign
l_int|0x0000
comma
id|MODEM_LINE2
op_assign
l_int|0x0400
comma
DECL|enumerator|PCM_LR
DECL|enumerator|HSET
id|PCM_LR
op_assign
l_int|0x0800
comma
id|HSET
op_assign
l_int|0x0c00
comma
DECL|enumerator|I2S_LR
DECL|enumerator|CENTER_LFE
id|I2S_LR
op_assign
l_int|0x1000
comma
id|CENTER_LFE
op_assign
l_int|0x1400
comma
DECL|enumerator|SURR_LR
DECL|enumerator|SPDIF_LR
id|SURR_LR
op_assign
l_int|0x1800
comma
id|SPDIF_LR
op_assign
l_int|0x1c00
comma
DECL|enumerator|MIC
id|MIC
op_assign
l_int|0x1400
comma
multiline_comment|/* mist stuff */
DECL|enumerator|MONO_LEFT
DECL|enumerator|MONO_RIGHT
id|MONO_LEFT
op_assign
l_int|0x0000
comma
id|MONO_RIGHT
op_assign
l_int|0x0100
comma
DECL|enumerator|MONO_MIX
DECL|enumerator|SRC_ENABLE
id|MONO_MIX
op_assign
l_int|0x0200
comma
id|SRC_ENABLE
op_assign
l_int|0x0080
comma
)brace
suffix:semicolon
DECL|enum|miscint_bits
r_enum
id|miscint_bits
(brace
DECL|enumerator|PB_UNDERRUN_IRO
DECL|enumerator|REC_OVERRUN_IRQ
id|PB_UNDERRUN_IRO
op_assign
l_int|0x00000001
comma
id|REC_OVERRUN_IRQ
op_assign
l_int|0x00000002
comma
DECL|enumerator|SB_IRQ
DECL|enumerator|MPU401_IRQ
id|SB_IRQ
op_assign
l_int|0x00000004
comma
id|MPU401_IRQ
op_assign
l_int|0x00000008
comma
DECL|enumerator|OPL3_IRQ
DECL|enumerator|ADDRESS_IRQ
id|OPL3_IRQ
op_assign
l_int|0x00000010
comma
id|ADDRESS_IRQ
op_assign
l_int|0x00000020
comma
DECL|enumerator|ENVELOPE_IRQ
DECL|enumerator|ST_IRQ
id|ENVELOPE_IRQ
op_assign
l_int|0x00000040
comma
id|ST_IRQ
op_assign
l_int|0x00000080
comma
DECL|enumerator|PB_UNDERRUN
DECL|enumerator|REC_OVERRUN
id|PB_UNDERRUN
op_assign
l_int|0x00000100
comma
id|REC_OVERRUN
op_assign
l_int|0x00000200
comma
DECL|enumerator|MIXER_UNDERFLOW
DECL|enumerator|MIXER_OVERFLOW
id|MIXER_UNDERFLOW
op_assign
l_int|0x00000400
comma
id|MIXER_OVERFLOW
op_assign
l_int|0x00000800
comma
DECL|enumerator|ST_TARGET_REACHED
DECL|enumerator|PB_24K_MODE
id|ST_TARGET_REACHED
op_assign
l_int|0x00008000
comma
id|PB_24K_MODE
op_assign
l_int|0x00010000
comma
DECL|enumerator|ST_IRQ_EN
DECL|enumerator|ACGPIO_IRQ
id|ST_IRQ_EN
op_assign
l_int|0x00800000
comma
id|ACGPIO_IRQ
op_assign
l_int|0x01000000
)brace
suffix:semicolon
DECL|macro|TRID_REG
mdefine_line|#define TRID_REG( trident, x ) ( (trident) -&gt; iobase + (x) )
DECL|macro|VALIDATE_MAGIC
mdefine_line|#define VALIDATE_MAGIC(FOO,MAG)&t;&t;&t;&t;&bslash;&n;({&t;&t;&t;&t;&t;&t;  &bslash;&n;&t;if (!(FOO) || (FOO)-&gt;magic != MAG) { &bslash;&n;&t;&t;printk(invalid_magic,__FUNCTION__);&t;       &bslash;&n;&t;&t;return -ENXIO;&t;&t;&t;  &bslash;&n;&t;}&t;&t;&t;&t;&t;  &bslash;&n;})
DECL|macro|VALIDATE_STATE
mdefine_line|#define VALIDATE_STATE(a) VALIDATE_MAGIC(a,TRIDENT_STATE_MAGIC)
DECL|macro|VALIDATE_CARD
mdefine_line|#define VALIDATE_CARD(a) VALIDATE_MAGIC(a,TRIDENT_CARD_MAGIC)
DECL|function|ld2
r_extern
id|__inline__
r_int
id|ld2
c_func
(paren
r_int
r_int
id|x
)paren
(brace
r_int
id|r
op_assign
l_int|0
suffix:semicolon
r_if
c_cond
(paren
id|x
op_ge
l_int|0x10000
)paren
(brace
id|x
op_rshift_assign
l_int|16
suffix:semicolon
id|r
op_add_assign
l_int|16
suffix:semicolon
)brace
r_if
c_cond
(paren
id|x
op_ge
l_int|0x100
)paren
(brace
id|x
op_rshift_assign
l_int|8
suffix:semicolon
id|r
op_add_assign
l_int|8
suffix:semicolon
)brace
r_if
c_cond
(paren
id|x
op_ge
l_int|0x10
)paren
(brace
id|x
op_rshift_assign
l_int|4
suffix:semicolon
id|r
op_add_assign
l_int|4
suffix:semicolon
)brace
r_if
c_cond
(paren
id|x
op_ge
l_int|4
)paren
(brace
id|x
op_rshift_assign
l_int|2
suffix:semicolon
id|r
op_add_assign
l_int|2
suffix:semicolon
)brace
r_if
c_cond
(paren
id|x
op_ge
l_int|2
)paren
id|r
op_increment
suffix:semicolon
r_return
id|r
suffix:semicolon
)brace
macro_line|#endif /* __TRID4DWAVE_H */
eof
