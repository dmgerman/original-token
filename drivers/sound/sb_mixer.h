multiline_comment|/*&n; * sound/sb_mixer.h&n; * &n; * Definitions for the SB Pro and SB16 mixers&n; */
multiline_comment|/*&n; * Copyright (C) by Hannu Savolainen 1993-1997&n; *&n; * OSS/Free for Linux is distributed under the GNU GENERAL PUBLIC LICENSE (GPL)&n; * Version 2 (June 1991). See the &quot;COPYING&quot; file distributed with this software&n; * for more info.&n; */
multiline_comment|/*&n; * Modified:&n; *&t;Hunyue Yau&t;Jan 6 1994&n; *&t;Added defines for the Sound Galaxy NX Pro mixer.&n; * &n; */
macro_line|#include &lt;linux/config.h&gt;
macro_line|#ifdef CONFIG_SBDSP
DECL|macro|SBPRO_RECORDING_DEVICES
mdefine_line|#define SBPRO_RECORDING_DEVICES&t;(SOUND_MASK_LINE | SOUND_MASK_MIC | SOUND_MASK_CD)
multiline_comment|/* Same as SB Pro, unless I find otherwise */
DECL|macro|SGNXPRO_RECORDING_DEVICES
mdefine_line|#define SGNXPRO_RECORDING_DEVICES SBPRO_RECORDING_DEVICES
DECL|macro|SBPRO_MIXER_DEVICES
mdefine_line|#define SBPRO_MIXER_DEVICES&t;&t;(SOUND_MASK_SYNTH | SOUND_MASK_PCM | SOUND_MASK_LINE | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_CD | SOUND_MASK_VOLUME)
multiline_comment|/* SG NX Pro has treble and bass settings on the mixer. The &squot;speaker&squot;&n; * channel is the COVOX/DisneySoundSource emulation volume control&n; * on the mixer. It does NOT control speaker volume. Should have own&n; * mask eventually?&n; */
DECL|macro|SGNXPRO_MIXER_DEVICES
mdefine_line|#define SGNXPRO_MIXER_DEVICES&t;(SBPRO_MIXER_DEVICES|SOUND_MASK_BASS| &bslash;&n;&t;&t;&t;&t; SOUND_MASK_TREBLE|SOUND_MASK_SPEAKER )
DECL|macro|SB16_RECORDING_DEVICES
mdefine_line|#define SB16_RECORDING_DEVICES&t;&t;(SOUND_MASK_SYNTH | SOUND_MASK_LINE | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_CD)
DECL|macro|ES688_RECORDING_DEVICES
mdefine_line|#define ES688_RECORDING_DEVICES SBPRO_RECORDING_DEVICES
DECL|macro|ES688_MIXER_DEVICES
mdefine_line|#define ES688_MIXER_DEVICES (SBPRO_MIXER_DEVICES|SOUND_MASK_LINE2|SOUND_MASK_SPEAKER)
DECL|macro|SB16_MIXER_DEVICES
mdefine_line|#define SB16_MIXER_DEVICES&t;&t;(SOUND_MASK_SYNTH | SOUND_MASK_PCM | SOUND_MASK_SPEAKER | SOUND_MASK_LINE | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_CD | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_IGAIN | SOUND_MASK_OGAIN | &bslash;&n;&t;&t;&t;&t;&t; SOUND_MASK_VOLUME | SOUND_MASK_BASS | SOUND_MASK_TREBLE | &bslash;&n;&t;&t;&t;&t;&t;SOUND_MASK_IMIX)
multiline_comment|/* These are the only devices that are working at the moment.  Others could&n; * be added once they are identified and a method is found to control them.&n; */
DECL|macro|ALS007_MIXER_DEVICES
mdefine_line|#define ALS007_MIXER_DEVICES&t;(SOUND_MASK_SYNTH | SOUND_MASK_LINE | &bslash;&n;&t;&t;&t;&t; SOUND_MASK_PCM | SOUND_MASK_MIC | &bslash;&n;&t;&t;&t;&t; SOUND_MASK_CD | &bslash;&n;&t;&t;&t;&t; SOUND_MASK_VOLUME)
multiline_comment|/*&n; * Mixer registers&n; * &n; * NOTE!&t;RECORD_SRC == IN_FILTER&n; */
multiline_comment|/* &n; * Mixer registers of SB Pro&n; */
DECL|macro|VOC_VOL
mdefine_line|#define VOC_VOL&t;&t;0x04
DECL|macro|MIC_VOL
mdefine_line|#define MIC_VOL&t;&t;0x0A
DECL|macro|MIC_MIX
mdefine_line|#define MIC_MIX&t;&t;0x0A
DECL|macro|RECORD_SRC
mdefine_line|#define RECORD_SRC&t;0x0C
DECL|macro|IN_FILTER
mdefine_line|#define IN_FILTER&t;0x0C
DECL|macro|OUT_FILTER
mdefine_line|#define OUT_FILTER&t;0x0E
DECL|macro|MASTER_VOL
mdefine_line|#define MASTER_VOL&t;0x22
DECL|macro|FM_VOL
mdefine_line|#define FM_VOL&t;&t;0x26
DECL|macro|CD_VOL
mdefine_line|#define CD_VOL&t;&t;0x28
DECL|macro|LINE_VOL
mdefine_line|#define LINE_VOL&t;0x2E
DECL|macro|IRQ_NR
mdefine_line|#define IRQ_NR&t;&t;0x80
DECL|macro|DMA_NR
mdefine_line|#define DMA_NR&t;&t;0x81
DECL|macro|IRQ_STAT
mdefine_line|#define IRQ_STAT&t;0x82
DECL|macro|OPSW
mdefine_line|#define OPSW&t;&t;0x3c
multiline_comment|/*&n; * Additional registers on the SG NX Pro &n; */
DECL|macro|COVOX_VOL
mdefine_line|#define COVOX_VOL&t;0x42
DECL|macro|TREBLE_LVL
mdefine_line|#define TREBLE_LVL&t;0x44
DECL|macro|BASS_LVL
mdefine_line|#define BASS_LVL&t;0x46
DECL|macro|FREQ_HI
mdefine_line|#define FREQ_HI         (1 &lt;&lt; 3)/* Use High-frequency ANFI filters */
DECL|macro|FREQ_LOW
mdefine_line|#define FREQ_LOW        0&t;/* Use Low-frequency ANFI filters */
DECL|macro|FILT_ON
mdefine_line|#define FILT_ON         0&t;/* Yes, 0 to turn it on, 1 for off */
DECL|macro|FILT_OFF
mdefine_line|#define FILT_OFF        (1 &lt;&lt; 5)
DECL|macro|MONO_DAC
mdefine_line|#define MONO_DAC&t;0x00
DECL|macro|STEREO_DAC
mdefine_line|#define STEREO_DAC&t;0x02
multiline_comment|/*&n; * Mixer registers of SB16&n; */
DECL|macro|SB16_IMASK_L
mdefine_line|#define SB16_IMASK_L&t;0x3d
DECL|macro|SB16_IMASK_R
mdefine_line|#define SB16_IMASK_R&t;0x3e
DECL|macro|LEFT_CHN
mdefine_line|#define LEFT_CHN&t;0
DECL|macro|RIGHT_CHN
mdefine_line|#define RIGHT_CHN&t;1
multiline_comment|/*&n; * Mixer registers of ALS007&n; */
DECL|macro|ALS007_RECORD_SRC
mdefine_line|#define ALS007_RECORD_SRC&t;0x6c
DECL|macro|ALS007_OUTPUT_CTRL1
mdefine_line|#define ALS007_OUTPUT_CTRL1&t;0x3c
DECL|macro|ALS007_OUTPUT_CTRL2
mdefine_line|#define ALS007_OUTPUT_CTRL2&t;0x4c
DECL|macro|MIX_ENT
mdefine_line|#define MIX_ENT(name, reg_l, bit_l, len_l, reg_r, bit_r, len_r)&t;&bslash;&n;&t;{{reg_l, bit_l, len_l}, {reg_r, bit_r, len_r}}
macro_line|#ifdef __SB_MIXER_C__
DECL|variable|sbpro_mix
r_static
id|mixer_tab
id|sbpro_mix
op_assign
(brace
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_VOLUME
comma
l_int|0x22
comma
l_int|7
comma
l_int|4
comma
l_int|0x22
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_BASS
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_TREBLE
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SYNTH
comma
l_int|0x26
comma
l_int|7
comma
l_int|4
comma
l_int|0x26
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_PCM
comma
l_int|0x04
comma
l_int|7
comma
l_int|4
comma
l_int|0x04
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SPEAKER
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE
comma
l_int|0x2e
comma
l_int|7
comma
l_int|4
comma
l_int|0x2e
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_MIC
comma
l_int|0x0a
comma
l_int|2
comma
l_int|3
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_CD
comma
l_int|0x28
comma
l_int|7
comma
l_int|4
comma
l_int|0x28
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IMIX
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_ALTPCM
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_RECLEV
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
)brace
suffix:semicolon
DECL|variable|es688_mix
r_static
id|mixer_tab
id|es688_mix
op_assign
(brace
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_VOLUME
comma
l_int|0x32
comma
l_int|7
comma
l_int|4
comma
l_int|0x32
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_BASS
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_TREBLE
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SYNTH
comma
l_int|0x36
comma
l_int|7
comma
l_int|4
comma
l_int|0x36
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_PCM
comma
l_int|0x14
comma
l_int|7
comma
l_int|4
comma
l_int|0x14
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SPEAKER
comma
l_int|0x3c
comma
l_int|2
comma
l_int|3
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE
comma
l_int|0x3e
comma
l_int|7
comma
l_int|4
comma
l_int|0x3e
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_MIC
comma
l_int|0x1a
comma
l_int|7
comma
l_int|4
comma
l_int|0x1a
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_CD
comma
l_int|0x38
comma
l_int|7
comma
l_int|4
comma
l_int|0x38
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IMIX
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_ALTPCM
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_RECLEV
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IGAIN
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_OGAIN
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE1
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE2
comma
l_int|0x3a
comma
l_int|7
comma
l_int|4
comma
l_int|0x3a
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE3
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
)brace
suffix:semicolon
macro_line|#ifdef&t;__SGNXPRO__
macro_line|#if 0
r_static
id|mixer_tab
id|sgnxpro_mix
op_assign
(brace
multiline_comment|/* not used anywhere */
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_VOLUME
comma
l_int|0x22
comma
l_int|7
comma
l_int|4
comma
l_int|0x22
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_BASS
comma
l_int|0x46
comma
l_int|2
comma
l_int|3
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_TREBLE
comma
l_int|0x44
comma
l_int|2
comma
l_int|3
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SYNTH
comma
l_int|0x26
comma
l_int|7
comma
l_int|4
comma
l_int|0x26
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_PCM
comma
l_int|0x04
comma
l_int|7
comma
l_int|4
comma
l_int|0x04
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SPEAKER
comma
l_int|0x42
comma
l_int|2
comma
l_int|3
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE
comma
l_int|0x2e
comma
l_int|7
comma
l_int|4
comma
l_int|0x2e
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_MIC
comma
l_int|0x0a
comma
l_int|2
comma
l_int|3
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_CD
comma
l_int|0x28
comma
l_int|7
comma
l_int|4
comma
l_int|0x28
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IMIX
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_ALTPCM
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_RECLEV
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IGAIN
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_OGAIN
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
)brace
suffix:semicolon
macro_line|#endif
macro_line|#endif
DECL|variable|sb16_mix
r_static
id|mixer_tab
id|sb16_mix
op_assign
(brace
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_VOLUME
comma
l_int|0x30
comma
l_int|7
comma
l_int|5
comma
l_int|0x31
comma
l_int|7
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_BASS
comma
l_int|0x46
comma
l_int|7
comma
l_int|4
comma
l_int|0x47
comma
l_int|7
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_TREBLE
comma
l_int|0x44
comma
l_int|7
comma
l_int|4
comma
l_int|0x45
comma
l_int|7
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SYNTH
comma
l_int|0x34
comma
l_int|7
comma
l_int|5
comma
l_int|0x35
comma
l_int|7
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_PCM
comma
l_int|0x32
comma
l_int|7
comma
l_int|5
comma
l_int|0x33
comma
l_int|7
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SPEAKER
comma
l_int|0x3b
comma
l_int|7
comma
l_int|2
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE
comma
l_int|0x38
comma
l_int|7
comma
l_int|5
comma
l_int|0x39
comma
l_int|7
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_MIC
comma
l_int|0x3a
comma
l_int|7
comma
l_int|5
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_CD
comma
l_int|0x36
comma
l_int|7
comma
l_int|5
comma
l_int|0x37
comma
l_int|7
comma
l_int|5
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IMIX
comma
l_int|0x3c
comma
l_int|0
comma
l_int|1
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_ALTPCM
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_RECLEV
comma
l_int|0x3f
comma
l_int|7
comma
l_int|2
comma
l_int|0x40
comma
l_int|7
comma
l_int|2
)paren
comma
multiline_comment|/* Obsolete. Use IGAIN */
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IGAIN
comma
l_int|0x3f
comma
l_int|7
comma
l_int|2
comma
l_int|0x40
comma
l_int|7
comma
l_int|2
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_OGAIN
comma
l_int|0x41
comma
l_int|7
comma
l_int|2
comma
l_int|0x42
comma
l_int|7
comma
l_int|2
)paren
)brace
suffix:semicolon
DECL|variable|als007_mix
r_static
id|mixer_tab
id|als007_mix
op_assign
(brace
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_VOLUME
comma
l_int|0x62
comma
l_int|7
comma
l_int|4
comma
l_int|0x62
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_BASS
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_TREBLE
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SYNTH
comma
l_int|0x66
comma
l_int|7
comma
l_int|4
comma
l_int|0x66
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_PCM
comma
l_int|0x64
comma
l_int|7
comma
l_int|4
comma
l_int|0x64
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_SPEAKER
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_LINE
comma
l_int|0x6e
comma
l_int|7
comma
l_int|4
comma
l_int|0x6e
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_MIC
comma
l_int|0x6a
comma
l_int|6
comma
l_int|3
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_CD
comma
l_int|0x68
comma
l_int|7
comma
l_int|4
comma
l_int|0x68
comma
l_int|3
comma
l_int|4
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IMIX
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_ALTPCM
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_RECLEV
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
multiline_comment|/* Obsolete. Use IGAIN */
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_IGAIN
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
comma
id|MIX_ENT
c_func
(paren
id|SOUND_MIXER_OGAIN
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
comma
l_int|0x00
comma
l_int|0
comma
l_int|0
)paren
)brace
suffix:semicolon
multiline_comment|/* SM_GAMES          Master volume is lower and PCM &amp; FM volumes&n;&t;&t;&t;     higher than with SB Pro. This improves the&n;&t;&t;&t;     sound quality */
DECL|variable|smg_default_levels
r_static
r_int
id|smg_default_levels
(braket
l_int|32
)braket
op_assign
(brace
l_int|0x2020
comma
multiline_comment|/* Master Volume */
l_int|0x4b4b
comma
multiline_comment|/* Bass */
l_int|0x4b4b
comma
multiline_comment|/* Treble */
l_int|0x6464
comma
multiline_comment|/* FM */
l_int|0x6464
comma
multiline_comment|/* PCM */
l_int|0x4b4b
comma
multiline_comment|/* PC Speaker */
l_int|0x4b4b
comma
multiline_comment|/* Ext Line */
l_int|0x0000
comma
multiline_comment|/* Mic */
l_int|0x4b4b
comma
multiline_comment|/* CD */
l_int|0x4b4b
comma
multiline_comment|/* Recording monitor */
l_int|0x4b4b
comma
multiline_comment|/* SB PCM */
l_int|0x4b4b
comma
multiline_comment|/* Recording level */
l_int|0x4b4b
comma
multiline_comment|/* Input gain */
l_int|0x4b4b
comma
multiline_comment|/* Output gain */
l_int|0x4040
comma
multiline_comment|/* Line1 */
l_int|0x4040
comma
multiline_comment|/* Line2 */
l_int|0x1515
multiline_comment|/* Line3 */
)brace
suffix:semicolon
DECL|variable|sb_default_levels
r_static
r_int
id|sb_default_levels
(braket
l_int|32
)braket
op_assign
(brace
l_int|0x5a5a
comma
multiline_comment|/* Master Volume */
l_int|0x4b4b
comma
multiline_comment|/* Bass */
l_int|0x4b4b
comma
multiline_comment|/* Treble */
l_int|0x4b4b
comma
multiline_comment|/* FM */
l_int|0x4b4b
comma
multiline_comment|/* PCM */
l_int|0x4b4b
comma
multiline_comment|/* PC Speaker */
l_int|0x4b4b
comma
multiline_comment|/* Ext Line */
l_int|0x1010
comma
multiline_comment|/* Mic */
l_int|0x4b4b
comma
multiline_comment|/* CD */
l_int|0x0000
comma
multiline_comment|/* Recording monitor */
l_int|0x4b4b
comma
multiline_comment|/* SB PCM */
l_int|0x4b4b
comma
multiline_comment|/* Recording level */
l_int|0x4b4b
comma
multiline_comment|/* Input gain */
l_int|0x4b4b
comma
multiline_comment|/* Output gain */
l_int|0x4040
comma
multiline_comment|/* Line1 */
l_int|0x4040
comma
multiline_comment|/* Line2 */
l_int|0x1515
multiline_comment|/* Line3 */
)brace
suffix:semicolon
DECL|variable|sb16_recmasks_L
r_static
r_int
r_char
id|sb16_recmasks_L
(braket
id|SOUND_MIXER_NRDEVICES
)braket
op_assign
(brace
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_VOLUME&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_BASS&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_TREBLE&t;*/
l_int|0x40
comma
multiline_comment|/* SOUND_MIXER_SYNTH&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_PCM&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_SPEAKER&t;*/
l_int|0x10
comma
multiline_comment|/* SOUND_MIXER_LINE&t;*/
l_int|0x01
comma
multiline_comment|/* SOUND_MIXER_MIC&t;*/
l_int|0x04
comma
multiline_comment|/* SOUND_MIXER_CD&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_IMIX&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_ALTPCM&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_RECLEV&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_IGAIN&t;*/
l_int|0x00
multiline_comment|/* SOUND_MIXER_OGAIN&t;*/
)brace
suffix:semicolon
DECL|variable|sb16_recmasks_R
r_static
r_int
r_char
id|sb16_recmasks_R
(braket
id|SOUND_MIXER_NRDEVICES
)braket
op_assign
(brace
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_VOLUME&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_BASS&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_TREBLE&t;*/
l_int|0x20
comma
multiline_comment|/* SOUND_MIXER_SYNTH&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_PCM&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_SPEAKER&t;*/
l_int|0x08
comma
multiline_comment|/* SOUND_MIXER_LINE&t;*/
l_int|0x01
comma
multiline_comment|/* SOUND_MIXER_MIC&t;*/
l_int|0x02
comma
multiline_comment|/* SOUND_MIXER_CD&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_IMIX&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_ALTPCM&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_RECLEV&t;*/
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_IGAIN&t;*/
l_int|0x00
multiline_comment|/* SOUND_MIXER_OGAIN&t;*/
)brace
suffix:semicolon
DECL|variable|smw_mix_regs
r_static
r_char
id|smw_mix_regs
(braket
)braket
op_assign
multiline_comment|/* Left mixer registers */
(brace
l_int|0x0b
comma
multiline_comment|/* SOUND_MIXER_VOLUME */
l_int|0x0d
comma
multiline_comment|/* SOUND_MIXER_BASS */
l_int|0x0d
comma
multiline_comment|/* SOUND_MIXER_TREBLE */
l_int|0x05
comma
multiline_comment|/* SOUND_MIXER_SYNTH */
l_int|0x09
comma
multiline_comment|/* SOUND_MIXER_PCM */
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_SPEAKER */
l_int|0x03
comma
multiline_comment|/* SOUND_MIXER_LINE */
l_int|0x01
comma
multiline_comment|/* SOUND_MIXER_MIC */
l_int|0x07
comma
multiline_comment|/* SOUND_MIXER_CD */
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_IMIX */
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_ALTPCM */
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_RECLEV */
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_IGAIN */
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_OGAIN */
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_LINE1 */
l_int|0x00
comma
multiline_comment|/* SOUND_MIXER_LINE2 */
l_int|0x00
multiline_comment|/* SOUND_MIXER_LINE3 */
)brace
suffix:semicolon
multiline_comment|/*&n; *&t;Recording sources (SB Pro)&n; */
DECL|macro|SRC__MIC
mdefine_line|#define SRC__MIC         1&t;/* Select Microphone recording source */
DECL|macro|SRC__CD
mdefine_line|#define SRC__CD          3&t;/* Select CD recording source */
DECL|macro|SRC__LINE
mdefine_line|#define SRC__LINE        7&t;/* Use Line-in for recording source */
multiline_comment|/*&n; *&t;Recording sources for ALS-007&n; */
DECL|macro|ALS007_MIC
mdefine_line|#define ALS007_MIC&t;4
DECL|macro|ALS007_LINE
mdefine_line|#define ALS007_LINE&t;6
DECL|macro|ALS007_CD
mdefine_line|#define ALS007_CD&t;2
DECL|macro|ALS007_SYNTH
mdefine_line|#define ALS007_SYNTH&t;7
macro_line|#endif
macro_line|#endif
eof
