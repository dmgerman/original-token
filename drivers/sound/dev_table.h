multiline_comment|/*&n; *&t;dev_table.h&n; *&n; *&t;Global definitions for device call tables&n; * &n; * Copyright by Hannu Savolainen 1993&n; *&n; * Redistribution and use in source and binary forms, with or without&n; * modification, are permitted provided that the following conditions&n; * are met:&n; * 1. Redistributions of source code must retain the above copyright&n; *    notice, this list of conditions and the following disclaimer.&n; * 2. Redistributions in binary form must reproduce the above copyright&n; *    notice, this list of conditions and the following disclaimer in the&n; *    documentation and/or other materials provided with the distribution.&n; *&n; * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS&squot;&squot; AND&n; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE&n; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE&n; * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE&n; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL&n; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS&n; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&n; * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT&n; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY&n; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&n; * SUCH DAMAGE.&n; *&n;&n;*/
macro_line|#ifndef _DEV_TABLE_H_
DECL|macro|_DEV_TABLE_H_
mdefine_line|#define _DEV_TABLE_H_
multiline_comment|/*&n; *&t;NOTE! &t;NOTE!&t;NOTE!&t;NOTE!&n; *&n; *&t;If you modify this file, please check the dev_table.c also.&n; *&n; *&t;NOTE! &t;NOTE!&t;NOTE!&t;NOTE!&n; */
DECL|struct|driver_info
r_struct
id|driver_info
(brace
DECL|member|card_type
r_int
id|card_type
suffix:semicolon
multiline_comment|/*&t;From soundcard.h&t;*/
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|attach
r_int
(paren
op_star
id|attach
)paren
(paren
r_int
id|mem_start
comma
r_struct
id|address_info
op_star
id|hw_config
)paren
suffix:semicolon
DECL|member|probe
r_int
(paren
op_star
id|probe
)paren
(paren
r_struct
id|address_info
op_star
id|hw_config
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|card_info
r_struct
id|card_info
(brace
DECL|member|card_type
r_int
id|card_type
suffix:semicolon
multiline_comment|/* Link (search key) to the driver list */
DECL|member|config
r_struct
id|address_info
id|config
suffix:semicolon
DECL|member|enabled
r_int
id|enabled
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * Device specific parameters (used only by dmabuf.c)&n; */
DECL|macro|MAX_SUB_BUFFERS
mdefine_line|#define MAX_SUB_BUFFERS&t;&t;(32*MAX_REALTIME_FACTOR)
DECL|macro|DMODE_NONE
mdefine_line|#define DMODE_NONE&t;&t;0
DECL|macro|DMODE_OUTPUT
mdefine_line|#define DMODE_OUTPUT&t;&t;1
DECL|macro|DMODE_INPUT
mdefine_line|#define DMODE_INPUT&t;&t;2
DECL|struct|dma_buffparms
r_struct
id|dma_buffparms
(brace
DECL|member|dma_mode
r_int
id|dma_mode
suffix:semicolon
multiline_comment|/* DMODE_INPUT, DMODE_OUTPUT or DMODE_NONE */
multiline_comment|/*&n; &t; * Pointers to raw buffers&n; &t; */
DECL|member|raw_buf
r_char
op_star
id|raw_buf
(braket
id|DSP_BUFFCOUNT
)braket
suffix:semicolon
DECL|member|raw_buf_phys
r_int
r_int
id|raw_buf_phys
(braket
id|DSP_BUFFCOUNT
)braket
suffix:semicolon
DECL|member|raw_count
r_int
id|raw_count
suffix:semicolon
multiline_comment|/*&n;         * Device state tables&n;         */
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|macro|DMA_BUSY
mdefine_line|#define DMA_BUSY&t;0x00000001
DECL|macro|DMA_RESTART
mdefine_line|#define DMA_RESTART&t;0x00000002
DECL|macro|DMA_ACTIVE
mdefine_line|#define DMA_ACTIVE&t;0x00000004
DECL|macro|DMA_STARTED
mdefine_line|#define DMA_STARTED&t;0x00000008
DECL|macro|DMA_ALLOC_DONE
mdefine_line|#define DMA_ALLOC_DONE&t;0x00000020
DECL|member|open_mode
r_int
id|open_mode
suffix:semicolon
multiline_comment|/*&n;&t; * Queue parameters.&n;&t; */
DECL|member|qlen
r_int
id|qlen
suffix:semicolon
DECL|member|qhead
r_int
id|qhead
suffix:semicolon
DECL|member|qtail
r_int
id|qtail
suffix:semicolon
DECL|member|nbufs
r_int
id|nbufs
suffix:semicolon
DECL|member|counts
r_int
id|counts
(braket
id|MAX_SUB_BUFFERS
)braket
suffix:semicolon
DECL|member|subdivision
r_int
id|subdivision
suffix:semicolon
DECL|member|buf
r_char
op_star
id|buf
(braket
id|MAX_SUB_BUFFERS
)braket
suffix:semicolon
DECL|member|buf_phys
r_int
r_int
id|buf_phys
(braket
id|MAX_SUB_BUFFERS
)braket
suffix:semicolon
DECL|member|fragment_size
r_int
id|fragment_size
suffix:semicolon
DECL|member|max_fragments
r_int
id|max_fragments
suffix:semicolon
DECL|member|bytes_in_use
r_int
id|bytes_in_use
suffix:semicolon
DECL|member|underrun_count
r_int
id|underrun_count
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|audio_operations
r_struct
id|audio_operations
(brace
DECL|member|name
r_char
id|name
(braket
l_int|32
)braket
suffix:semicolon
DECL|member|flags
r_int
id|flags
suffix:semicolon
DECL|macro|NOTHING_SPECIAL
mdefine_line|#define NOTHING_SPECIAL &t;0
DECL|macro|NEEDS_RESTART
mdefine_line|#define NEEDS_RESTART&t;&t;1
DECL|macro|DMA_AUTOMODE
mdefine_line|#define DMA_AUTOMODE&t;&t;2
DECL|member|format_mask
r_int
id|format_mask
suffix:semicolon
multiline_comment|/* Bitmask for supported audio formats */
DECL|member|devc
r_void
op_star
id|devc
suffix:semicolon
multiline_comment|/* Driver specific info */
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|output_block
r_void
(paren
op_star
id|output_block
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|buf
comma
r_int
id|count
comma
r_int
id|intrflag
comma
r_int
id|dma_restart
)paren
suffix:semicolon
DECL|member|start_input
r_void
(paren
op_star
id|start_input
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|buf
comma
r_int
id|count
comma
r_int
id|intrflag
comma
r_int
id|dma_restart
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
comma
r_int
id|local
)paren
suffix:semicolon
DECL|member|prepare_for_input
r_int
(paren
op_star
id|prepare_for_input
)paren
(paren
r_int
id|dev
comma
r_int
id|bufsize
comma
r_int
id|nbufs
)paren
suffix:semicolon
DECL|member|prepare_for_output
r_int
(paren
op_star
id|prepare_for_output
)paren
(paren
r_int
id|dev
comma
r_int
id|bufsize
comma
r_int
id|nbufs
)paren
suffix:semicolon
DECL|member|reset
r_void
(paren
op_star
id|reset
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|halt_xfer
r_void
(paren
op_star
id|halt_xfer
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|local_qlen
r_int
(paren
op_star
id|local_qlen
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|copy_from_user
r_void
(paren
op_star
id|copy_from_user
)paren
(paren
r_int
id|dev
comma
r_char
op_star
id|localbuf
comma
r_int
id|localoffs
comma
id|snd_rw_buf
op_star
id|userbuf
comma
r_int
id|useroffs
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|buffcount
r_int
id|buffcount
suffix:semicolon
DECL|member|buffsize
r_int
id|buffsize
suffix:semicolon
DECL|member|dmachan
r_int
id|dmachan
suffix:semicolon
DECL|member|dmap
r_struct
id|dma_buffparms
op_star
id|dmap
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|mixer_operations
r_struct
id|mixer_operations
(brace
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|synth_operations
r_struct
id|synth_operations
(brace
DECL|member|info
r_struct
id|synth_info
op_star
id|info
suffix:semicolon
DECL|member|midi_dev
r_int
id|midi_dev
suffix:semicolon
DECL|member|synth_type
r_int
id|synth_type
suffix:semicolon
DECL|member|synth_subtype
r_int
id|synth_subtype
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
DECL|member|kill_note
r_int
(paren
op_star
id|kill_note
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|note
comma
r_int
id|velocity
)paren
suffix:semicolon
DECL|member|start_note
r_int
(paren
op_star
id|start_note
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|note
comma
r_int
id|velocity
)paren
suffix:semicolon
DECL|member|set_instr
r_int
(paren
op_star
id|set_instr
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|instr
)paren
suffix:semicolon
DECL|member|reset
r_void
(paren
op_star
id|reset
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|hw_control
r_void
(paren
op_star
id|hw_control
)paren
(paren
r_int
id|dev
comma
r_int
r_char
op_star
id|event
)paren
suffix:semicolon
DECL|member|load_patch
r_int
(paren
op_star
id|load_patch
)paren
(paren
r_int
id|dev
comma
r_int
id|format
comma
id|snd_rw_buf
op_star
id|addr
comma
r_int
id|offs
comma
r_int
id|count
comma
r_int
id|pmgr_flag
)paren
suffix:semicolon
DECL|member|aftertouch
r_void
(paren
op_star
id|aftertouch
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|pressure
)paren
suffix:semicolon
DECL|member|controller
r_void
(paren
op_star
id|controller
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|ctrl_num
comma
r_int
id|value
)paren
suffix:semicolon
DECL|member|panning
r_void
(paren
op_star
id|panning
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|value
)paren
suffix:semicolon
DECL|member|volume_method
r_void
(paren
op_star
id|volume_method
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
DECL|member|pmgr_interface
r_int
(paren
op_star
id|pmgr_interface
)paren
(paren
r_int
id|dev
comma
r_struct
id|patmgr_info
op_star
id|info
)paren
suffix:semicolon
DECL|member|bender
r_void
(paren
op_star
id|bender
)paren
(paren
r_int
id|dev
comma
r_int
id|chn
comma
r_int
id|value
)paren
suffix:semicolon
DECL|member|alloc_voice
r_int
(paren
op_star
id|alloc_voice
)paren
(paren
r_int
id|dev
comma
r_int
id|chn
comma
r_int
id|note
comma
r_struct
id|voice_alloc_info
op_star
id|alloc
)paren
suffix:semicolon
DECL|member|alloc
r_struct
id|voice_alloc_info
id|alloc
suffix:semicolon
DECL|member|chn_info
r_struct
id|channel_info
id|chn_info
(braket
l_int|16
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|midi_operations
r_struct
id|midi_operations
(brace
DECL|member|info
r_struct
id|midi_info
id|info
suffix:semicolon
DECL|member|converter
r_struct
id|synth_operations
op_star
id|converter
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
comma
r_void
(paren
op_star
id|inputintr
)paren
(paren
r_int
id|dev
comma
r_int
r_char
id|data
)paren
comma
r_void
(paren
op_star
id|outputintr
)paren
(paren
r_int
id|dev
)paren
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
DECL|member|putc
r_int
(paren
op_star
id|putc
)paren
(paren
r_int
id|dev
comma
r_int
r_char
id|data
)paren
suffix:semicolon
DECL|member|start_read
r_int
(paren
op_star
id|start_read
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|end_read
r_int
(paren
op_star
id|end_read
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|kick
r_void
(paren
op_star
id|kick
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|command
r_int
(paren
op_star
id|command
)paren
(paren
r_int
id|dev
comma
r_int
r_char
op_star
id|data
)paren
suffix:semicolon
DECL|member|buffer_status
r_int
(paren
op_star
id|buffer_status
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|prefix_cmd
r_int
(paren
op_star
id|prefix_cmd
)paren
(paren
r_int
id|dev
comma
r_int
r_char
id|status
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|sound_timer_operations
r_struct
id|sound_timer_operations
(brace
DECL|member|info
r_struct
id|sound_timer_info
id|info
suffix:semicolon
DECL|member|priority
r_int
id|priority
suffix:semicolon
DECL|member|devlink
r_int
id|devlink
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|event
r_int
(paren
op_star
id|event
)paren
(paren
r_int
id|dev
comma
r_int
r_char
op_star
id|ev
)paren
suffix:semicolon
DECL|member|get_time
r_int
r_int
(paren
op_star
id|get_time
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
DECL|member|arm_timer
r_void
(paren
op_star
id|arm_timer
)paren
(paren
r_int
id|dev
comma
r_int
id|time
)paren
suffix:semicolon
)brace
suffix:semicolon
macro_line|#ifdef _DEV_TABLE_C_   
DECL|variable|audio_devs
DECL|variable|num_audiodevs
r_struct
id|audio_operations
op_star
id|audio_devs
(braket
id|MAX_AUDIO_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
r_int
id|num_audiodevs
op_assign
l_int|0
suffix:semicolon
DECL|variable|mixer_devs
DECL|variable|num_mixers
r_struct
id|mixer_operations
op_star
id|mixer_devs
(braket
id|MAX_MIXER_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
r_int
id|num_mixers
op_assign
l_int|0
suffix:semicolon
DECL|variable|synth_devs
DECL|variable|num_synths
r_struct
id|synth_operations
op_star
id|synth_devs
(braket
id|MAX_SYNTH_DEV
op_plus
id|MAX_MIDI_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
r_int
id|num_synths
op_assign
l_int|0
suffix:semicolon
DECL|variable|midi_devs
DECL|variable|num_midis
r_struct
id|midi_operations
op_star
id|midi_devs
(braket
id|MAX_MIDI_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
r_int
id|num_midis
op_assign
l_int|0
suffix:semicolon
macro_line|#ifndef EXCLUDE_SEQUENCER
r_extern
r_struct
id|sound_timer_operations
id|default_sound_timer
suffix:semicolon
DECL|variable|sound_timer_devs
r_struct
id|sound_timer_operations
op_star
id|sound_timer_devs
(braket
id|MAX_TIMER_DEV
)braket
op_assign
(brace
op_amp
id|default_sound_timer
comma
l_int|NULL
)brace
suffix:semicolon
DECL|variable|num_sound_timers
r_int
id|num_sound_timers
op_assign
l_int|1
suffix:semicolon
macro_line|#else
DECL|variable|sound_timer_devs
r_struct
id|sound_timer_operations
op_star
id|sound_timer_devs
(braket
id|MAX_TIMER_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
DECL|variable|num_sound_timers
r_int
id|num_sound_timers
op_assign
l_int|0
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n; * List of low level drivers compiled into the kernel.&n; */
DECL|variable|sound_drivers
r_struct
id|driver_info
id|sound_drivers
(braket
)braket
op_assign
(brace
macro_line|#ifndef EXCLUDE_PSS
(brace
id|SNDCARD_PSS
comma
l_string|&quot;Echo Personal Sound System PSS (ESC614)&quot;
comma
id|attach_pss
comma
id|probe_pss
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_YM3812
(brace
id|SNDCARD_ADLIB
comma
l_string|&quot;OPL-2/OPL-3 FM&quot;
comma
id|attach_adlib_card
comma
id|probe_adlib
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_PAS
(brace
id|SNDCARD_PAS
comma
l_string|&quot;ProAudioSpectrum&quot;
comma
id|attach_pas_card
comma
id|probe_pas
)brace
comma
macro_line|#endif
macro_line|#if !defined(EXCLUDE_MPU401) &amp;&amp; !defined(EXCLUDE_MIDI)
(brace
id|SNDCARD_MPU401
comma
l_string|&quot;Roland MPU-401&quot;
comma
id|attach_mpu401
comma
id|probe_mpu401
)brace
comma
macro_line|#endif
macro_line|#if !defined(EXCLUDE_UART6850) &amp;&amp; !defined(EXCLUDE_MIDI)
(brace
id|SNDCARD_UART6850
comma
l_string|&quot;6860 UART Midi&quot;
comma
id|attach_uart6850
comma
id|probe_uart6850
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_SB
(brace
id|SNDCARD_SB
comma
l_string|&quot;SoundBlaster&quot;
comma
id|attach_sb_card
comma
id|probe_sb
)brace
comma
macro_line|#endif
macro_line|#if !defined(EXCLUDE_SB) &amp;&amp; !defined(EXCLUDE_SB16)
macro_line|#ifndef EXCLUDE_AUDIO
(brace
id|SNDCARD_SB16
comma
l_string|&quot;SoundBlaster16&quot;
comma
id|sb16_dsp_init
comma
id|sb16_dsp_detect
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_MIDI
(brace
id|SNDCARD_SB16MIDI
comma
l_string|&quot;SB16 MIDI&quot;
comma
id|attach_sb16midi
comma
id|probe_sb16midi
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifndef EXCLUDE_GUS16
(brace
id|SNDCARD_GUS16
comma
l_string|&quot;Ultrasound 16-bit opt.&quot;
comma
id|attach_gus_db16
comma
id|probe_gus_db16
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_MSS
(brace
id|SNDCARD_MSS
comma
l_string|&quot;MS Sound System&quot;
comma
id|attach_ms_sound
comma
id|probe_ms_sound
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_GUS
(brace
id|SNDCARD_GUS
comma
l_string|&quot;Gravis Ultrasound&quot;
comma
id|attach_gus_card
comma
id|probe_gus
)brace
comma
macro_line|#endif
(brace
l_int|0
comma
l_string|&quot;*?*&quot;
comma
l_int|NULL
comma
l_int|NULL
)brace
)brace
suffix:semicolon
multiline_comment|/*&n; *&t;List of devices actually configured in the system.&n; *&n; *&t;Note! The detection order is significant. Don&squot;t change it.&n; */
DECL|variable|snd_installed_cards
r_struct
id|card_info
id|snd_installed_cards
(braket
)braket
op_assign
(brace
macro_line|#ifndef EXCLUDE_PSS
(brace
id|SNDCARD_PSS
comma
(brace
id|PSS_BASE
comma
id|PSS_IRQ
comma
id|PSS_DMA
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#if !defined(EXCLUDE_MPU401) &amp;&amp; !defined(EXCLUDE_MIDI)
(brace
id|SNDCARD_MPU401
comma
(brace
id|MPU_BASE
comma
id|MPU_IRQ
comma
l_int|0
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#ifdef MPU2_BASE
(brace
id|SNDCARD_MPU401
comma
(brace
id|MPU2_BASE
comma
id|MPU2_IRQ
comma
l_int|0
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef MPU3_BASE
(brace
id|SNDCARD_MPU401
comma
(brace
id|MPU3_BASE
comma
id|MPU2_IRQ
comma
l_int|0
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifndef EXCLUDE_MSS
(brace
id|SNDCARD_MSS
comma
(brace
id|MSS_BASE
comma
id|MSS_IRQ
comma
id|MSS_DMA
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#&t;ifdef MSS2_BASE
(brace
id|SNDCARD_MSS
comma
(brace
id|MSS2_BASE
comma
id|MSS2_IRQ
comma
id|MSS2_DMA
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#&t;endif
macro_line|#endif
macro_line|#if !defined(EXCLUDE_UART6850) &amp;&amp; !defined(EXCLUDE_MIDI)
(brace
id|SNDCARD_UART6850
comma
(brace
id|U6850_BASE
comma
id|U6850_IRQ
comma
l_int|0
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_PAS
(brace
id|SNDCARD_PAS
comma
(brace
id|PAS_BASE
comma
id|PAS_IRQ
comma
id|PAS_DMA
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_SB
(brace
id|SNDCARD_SB
comma
(brace
id|SBC_BASE
comma
id|SBC_IRQ
comma
id|SBC_DMA
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#if !defined(EXCLUDE_SB) &amp;&amp; !defined(EXCLUDE_SB16)
macro_line|#ifndef EXCLUDE_AUDIO
(brace
id|SNDCARD_SB16
comma
(brace
id|SBC_BASE
comma
id|SBC_IRQ
comma
id|SB16_DMA
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_MIDI
(brace
id|SNDCARD_SB16MIDI
comma
(brace
id|SB16MIDI_BASE
comma
id|SBC_IRQ
comma
l_int|0
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifndef EXCLUDE_GUS
macro_line|#ifndef EXCLUDE_GUS16
(brace
id|SNDCARD_GUS16
comma
(brace
id|GUS16_BASE
comma
id|GUS16_IRQ
comma
id|GUS16_DMA
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
(brace
id|SNDCARD_GUS
comma
(brace
id|GUS_BASE
comma
id|GUS_IRQ
comma
id|GUS_DMA
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifndef EXCLUDE_YM3812
(brace
id|SNDCARD_ADLIB
comma
(brace
id|FM_MONO
comma
l_int|0
comma
l_int|0
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
(brace
l_int|0
comma
(brace
l_int|0
)brace
comma
l_int|0
)brace
)brace
suffix:semicolon
DECL|variable|num_sound_drivers
r_int
id|num_sound_drivers
op_assign
r_sizeof
(paren
id|sound_drivers
)paren
op_div
r_sizeof
(paren
r_struct
id|driver_info
)paren
suffix:semicolon
DECL|variable|num_sound_cards
r_int
id|num_sound_cards
op_assign
r_sizeof
(paren
id|snd_installed_cards
)paren
op_div
r_sizeof
(paren
r_struct
id|card_info
)paren
suffix:semicolon
macro_line|#else
DECL|variable|num_audiodevs
r_extern
r_struct
id|audio_operations
op_star
id|audio_devs
(braket
id|MAX_AUDIO_DEV
)braket
suffix:semicolon
r_int
id|num_audiodevs
suffix:semicolon
r_extern
r_struct
id|mixer_operations
op_star
id|mixer_devs
(braket
id|MAX_MIXER_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_mixers
suffix:semicolon
r_extern
r_struct
id|synth_operations
op_star
id|synth_devs
(braket
id|MAX_SYNTH_DEV
op_plus
id|MAX_MIDI_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_synths
suffix:semicolon
r_extern
r_struct
id|midi_operations
op_star
id|midi_devs
(braket
id|MAX_MIDI_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_midis
suffix:semicolon
r_extern
r_struct
id|sound_timer_operations
op_star
id|sound_timer_devs
(braket
id|MAX_SYNTH_DEV
op_plus
id|MAX_MIDI_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_sound_timers
suffix:semicolon
r_extern
r_struct
id|driver_info
id|sound_drivers
(braket
)braket
suffix:semicolon
r_extern
r_int
id|num_sound_drivers
suffix:semicolon
r_extern
r_struct
id|card_info
id|snd_installed_cards
(braket
)braket
suffix:semicolon
r_extern
r_int
id|num_sound_cards
suffix:semicolon
r_int
id|sndtable_init
c_func
(paren
r_int
id|mem_start
)paren
suffix:semicolon
r_int
id|sndtable_get_cardcount
(paren
r_void
)paren
suffix:semicolon
r_struct
id|address_info
op_star
id|sound_getconf
c_func
(paren
r_int
id|card_type
)paren
suffix:semicolon
r_void
id|sound_chconf
c_func
(paren
r_int
id|card_type
comma
r_int
id|ioaddr
comma
r_int
id|irq
comma
r_int
id|dma
)paren
suffix:semicolon
r_int
id|snd_find_driver
c_func
(paren
r_int
id|type
)paren
suffix:semicolon
macro_line|#endif&t;/* _DEV_TABLE_C_ */
macro_line|#endif&t;/* _DEV_TABLE_H_ */
eof
