multiline_comment|/*&n; *&t;dev_table.h&n; *&n; *&t;Global definitions for device call tables&n; *&n; *&n; * Copyright (C) by Hannu Savolainen 1993-1997&n; *&n; * OSS/Free for Linux is distributed under the GNU GENERAL PUBLIC LICENSE (GPL)&n; * Version 2 (June 1991). See the &quot;COPYING&quot; file distributed with this software&n; * for more info.&n; */
macro_line|#ifndef _DEV_TABLE_H_
DECL|macro|_DEV_TABLE_H_
mdefine_line|#define _DEV_TABLE_H_
macro_line|#include &lt;linux/config.h&gt;
multiline_comment|/*&n; * Sound card numbers 27 to 999. (1 to 26 are defined in soundcard.h)&n; * Numbers 1000 to N are reserved for driver&squot;s internal use.&n; */
DECL|macro|SNDCARD_DESKPROXL
mdefine_line|#define SNDCARD_DESKPROXL&t;&t;27&t;/* Compaq Deskpro XL */
DECL|macro|SNDCARD_VIDC
mdefine_line|#define SNDCARD_VIDC&t;&t;&t;28&t;/* ARMs VIDC */
DECL|macro|SNDCARD_SBPNP
mdefine_line|#define SNDCARD_SBPNP&t;&t;&t;29
DECL|macro|SNDCARD_SOFTOSS
mdefine_line|#define SNDCARD_SOFTOSS&t;&t;&t;36
DECL|macro|SNDCARD_VMIDI
mdefine_line|#define SNDCARD_VMIDI&t;&t;&t;37
DECL|macro|SNDCARD_OPL3SA1
mdefine_line|#define SNDCARD_OPL3SA1&t;&t;&t;38&t;/* Note: clash in msnd.h */
DECL|macro|SNDCARD_OPL3SA1_SB
mdefine_line|#define SNDCARD_OPL3SA1_SB&t;&t;39
DECL|macro|SNDCARD_OPL3SA1_MPU
mdefine_line|#define SNDCARD_OPL3SA1_MPU&t;&t;40
DECL|macro|SNDCARD_WAVEFRONT
mdefine_line|#define SNDCARD_WAVEFRONT               41
DECL|macro|SNDCARD_OPL3SA2
mdefine_line|#define SNDCARD_OPL3SA2                 42
DECL|macro|SNDCARD_OPL3SA2_MPU
mdefine_line|#define SNDCARD_OPL3SA2_MPU             43
DECL|macro|SNDCARD_WAVEARTIST
mdefine_line|#define SNDCARD_WAVEARTIST              44&t;/* Waveartist */
DECL|macro|SNDCARD_OPL3SA2_MSS
mdefine_line|#define SNDCARD_OPL3SA2_MSS             45&t;/* Originally missed */
DECL|macro|SNDCARD_AD1816
mdefine_line|#define SNDCARD_AD1816                  88
multiline_comment|/*&n; *&t;NOTE! &t;NOTE!&t;NOTE!&t;NOTE!&n; *&n; *&t;If you modify this file, please check the dev_table.c also.&n; *&n; *&t;NOTE! &t;NOTE!&t;NOTE!&t;NOTE!&n; */
r_extern
r_int
id|sound_started
suffix:semicolon
DECL|struct|driver_info
r_struct
id|driver_info
(brace
DECL|member|driver_id
r_char
op_star
id|driver_id
suffix:semicolon
DECL|member|card_subtype
r_int
id|card_subtype
suffix:semicolon
multiline_comment|/* Driver specific. Usually 0 */
DECL|member|card_type
r_int
id|card_type
suffix:semicolon
multiline_comment|/*&t;From soundcard.h&t;*/
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|attach
r_void
(paren
op_star
id|attach
)paren
(paren
r_struct
id|address_info
op_star
id|hw_config
)paren
suffix:semicolon
DECL|member|probe
r_int
(paren
op_star
id|probe
)paren
(paren
r_struct
id|address_info
op_star
id|hw_config
)paren
suffix:semicolon
DECL|member|unload
r_void
(paren
op_star
id|unload
)paren
(paren
r_struct
id|address_info
op_star
id|hw_config
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|card_info
r_struct
id|card_info
(brace
DECL|member|card_type
r_int
id|card_type
suffix:semicolon
multiline_comment|/* Link (search key) to the driver list */
DECL|member|config
r_struct
id|address_info
id|config
suffix:semicolon
DECL|member|enabled
r_int
id|enabled
suffix:semicolon
DECL|member|for_driver_use
r_void
op_star
id|for_driver_use
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * Device specific parameters (used only by dmabuf.c)&n; */
DECL|macro|MAX_SUB_BUFFERS
mdefine_line|#define MAX_SUB_BUFFERS&t;&t;(32*MAX_REALTIME_FACTOR)
DECL|macro|DMODE_NONE
mdefine_line|#define DMODE_NONE&t;&t;0
DECL|macro|DMODE_OUTPUT
mdefine_line|#define DMODE_OUTPUT&t;&t;PCM_ENABLE_OUTPUT
DECL|macro|DMODE_INPUT
mdefine_line|#define DMODE_INPUT&t;&t;PCM_ENABLE_INPUT
DECL|struct|dma_buffparms
r_struct
id|dma_buffparms
(brace
DECL|member|dma_mode
r_int
id|dma_mode
suffix:semicolon
multiline_comment|/* DMODE_INPUT, DMODE_OUTPUT or DMODE_NONE */
DECL|member|closing
r_int
id|closing
suffix:semicolon
multiline_comment|/*&n; &t; * Pointers to raw buffers&n; &t; */
DECL|member|raw_buf
r_char
op_star
id|raw_buf
suffix:semicolon
DECL|member|raw_buf_phys
r_int
r_int
id|raw_buf_phys
suffix:semicolon
DECL|member|buffsize
r_int
id|buffsize
suffix:semicolon
multiline_comment|/*&n;         * Device state tables&n;         */
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|macro|DMA_BUSY
mdefine_line|#define DMA_BUSY&t;0x00000001
DECL|macro|DMA_RESTART
mdefine_line|#define DMA_RESTART&t;0x00000002
DECL|macro|DMA_ACTIVE
mdefine_line|#define DMA_ACTIVE&t;0x00000004
DECL|macro|DMA_STARTED
mdefine_line|#define DMA_STARTED&t;0x00000008
DECL|macro|DMA_EMPTY
mdefine_line|#define DMA_EMPTY&t;0x00000010&t;
DECL|macro|DMA_ALLOC_DONE
mdefine_line|#define DMA_ALLOC_DONE&t;0x00000020
DECL|macro|DMA_SYNCING
mdefine_line|#define DMA_SYNCING&t;0x00000040
DECL|macro|DMA_DIRTY
mdefine_line|#define DMA_DIRTY&t;0x00000080
DECL|macro|DMA_POST
mdefine_line|#define DMA_POST&t;0x00000100
DECL|macro|DMA_NODMA
mdefine_line|#define DMA_NODMA&t;0x00000200
DECL|macro|DMA_NOTIMEOUT
mdefine_line|#define DMA_NOTIMEOUT&t;0x00000400
DECL|member|open_mode
r_int
id|open_mode
suffix:semicolon
multiline_comment|/*&n;&t; * Queue parameters.&n;&t; */
DECL|member|qlen
r_int
id|qlen
suffix:semicolon
DECL|member|qhead
r_int
id|qhead
suffix:semicolon
DECL|member|qtail
r_int
id|qtail
suffix:semicolon
DECL|member|cfrag
r_int
id|cfrag
suffix:semicolon
multiline_comment|/* Current incomplete fragment (write) */
DECL|member|nbufs
r_int
id|nbufs
suffix:semicolon
DECL|member|counts
r_int
id|counts
(braket
id|MAX_SUB_BUFFERS
)braket
suffix:semicolon
DECL|member|subdivision
r_int
id|subdivision
suffix:semicolon
DECL|member|fragment_size
r_int
id|fragment_size
suffix:semicolon
DECL|member|needs_reorg
r_int
id|needs_reorg
suffix:semicolon
DECL|member|max_fragments
r_int
id|max_fragments
suffix:semicolon
DECL|member|bytes_in_use
r_int
id|bytes_in_use
suffix:semicolon
DECL|member|underrun_count
r_int
id|underrun_count
suffix:semicolon
DECL|member|byte_counter
r_int
r_int
id|byte_counter
suffix:semicolon
DECL|member|user_counter
r_int
r_int
id|user_counter
suffix:semicolon
DECL|member|max_byte_counter
r_int
r_int
id|max_byte_counter
suffix:semicolon
DECL|member|data_rate
r_int
id|data_rate
suffix:semicolon
multiline_comment|/* Bytes/second */
DECL|member|mapping_flags
r_int
id|mapping_flags
suffix:semicolon
DECL|macro|DMA_MAP_MAPPED
mdefine_line|#define&t;&t;&t;DMA_MAP_MAPPED&t;&t;0x00000001
DECL|member|neutral_byte
r_char
id|neutral_byte
suffix:semicolon
DECL|member|dma
r_int
id|dma
suffix:semicolon
multiline_comment|/* DMA channel */
macro_line|#ifdef OS_DMA_PARMS
id|OS_DMA_PARMS
macro_line|#endif
DECL|member|applic_profile
r_int
id|applic_profile
suffix:semicolon
multiline_comment|/* Application profile (APF_*) */
multiline_comment|/* Interrupt callback stuff */
DECL|member|audio_callback
r_void
(paren
op_star
id|audio_callback
)paren
(paren
r_int
id|dev
comma
r_int
id|parm
)paren
suffix:semicolon
DECL|member|callback_parm
r_int
id|callback_parm
suffix:semicolon
DECL|member|buf_flags
r_int
id|buf_flags
(braket
id|MAX_SUB_BUFFERS
)braket
suffix:semicolon
DECL|macro|BUFF_EOF
mdefine_line|#define&t;&t; BUFF_EOF&t;&t;0x00000001 /* Increment eof count */
DECL|macro|BUFF_DIRTY
mdefine_line|#define&t;&t; BUFF_DIRTY&t;&t;0x00000002 /* Buffer written */
)brace
suffix:semicolon
multiline_comment|/*&n; * Structure for use with various microcontrollers and DSP processors &n; * in the recent sound cards.&n; */
DECL|struct|coproc_operations
r_typedef
r_struct
id|coproc_operations
(brace
DECL|member|name
r_char
id|name
(braket
l_int|64
)braket
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_void
op_star
id|devc
comma
r_int
id|sub_device
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_void
op_star
id|devc
comma
r_int
id|sub_device
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_void
op_star
id|devc
comma
r_int
r_int
id|cmd
comma
id|caddr_t
id|arg
comma
r_int
id|local
)paren
suffix:semicolon
DECL|member|reset
r_void
(paren
op_star
id|reset
)paren
(paren
r_void
op_star
id|devc
)paren
suffix:semicolon
DECL|member|devc
r_void
op_star
id|devc
suffix:semicolon
multiline_comment|/* Driver specific info */
DECL|typedef|coproc_operations
)brace
id|coproc_operations
suffix:semicolon
DECL|struct|audio_driver
r_struct
id|audio_driver
(brace
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|output_block
r_void
(paren
op_star
id|output_block
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|buf
comma
r_int
id|count
comma
r_int
id|intrflag
)paren
suffix:semicolon
DECL|member|start_input
r_void
(paren
op_star
id|start_input
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|buf
comma
r_int
id|count
comma
r_int
id|intrflag
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
id|caddr_t
id|arg
)paren
suffix:semicolon
DECL|member|prepare_for_input
r_int
(paren
op_star
id|prepare_for_input
)paren
(paren
r_int
id|dev
comma
r_int
id|bufsize
comma
r_int
id|nbufs
)paren
suffix:semicolon
DECL|member|prepare_for_output
r_int
(paren
op_star
id|prepare_for_output
)paren
(paren
r_int
id|dev
comma
r_int
id|bufsize
comma
r_int
id|nbufs
)paren
suffix:semicolon
DECL|member|halt_io
r_void
(paren
op_star
id|halt_io
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|local_qlen
r_int
(paren
op_star
id|local_qlen
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|copy_user
r_void
(paren
op_star
id|copy_user
)paren
(paren
r_int
id|dev
comma
r_char
op_star
id|localbuf
comma
r_int
id|localoffs
comma
r_const
r_char
op_star
id|userbuf
comma
r_int
id|useroffs
comma
r_int
id|max_in
comma
r_int
id|max_out
comma
r_int
op_star
id|used
comma
r_int
op_star
id|returned
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|halt_input
r_void
(paren
op_star
id|halt_input
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|halt_output
r_void
(paren
op_star
id|halt_output
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|trigger
r_void
(paren
op_star
id|trigger
)paren
(paren
r_int
id|dev
comma
r_int
id|bits
)paren
suffix:semicolon
DECL|member|set_speed
r_int
(paren
op_star
id|set_speed
)paren
(paren
r_int
id|dev
comma
r_int
id|speed
)paren
suffix:semicolon
DECL|member|set_bits
r_int
r_int
(paren
op_star
id|set_bits
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|bits
)paren
suffix:semicolon
DECL|member|set_channels
r_int
(paren
op_star
id|set_channels
)paren
(paren
r_int
id|dev
comma
r_int
id|channels
)paren
suffix:semicolon
DECL|member|postprocess_write
r_void
(paren
op_star
id|postprocess_write
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
multiline_comment|/* Device spesific postprocessing for written data */
DECL|member|preprocess_read
r_void
(paren
op_star
id|preprocess_read
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
multiline_comment|/* Device spesific preprocessing for read data */
DECL|member|mmap
r_void
(paren
op_star
id|mmap
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|audio_operations
r_struct
id|audio_operations
(brace
DECL|member|name
r_char
id|name
(braket
l_int|128
)braket
suffix:semicolon
DECL|member|flags
r_int
id|flags
suffix:semicolon
DECL|macro|NOTHING_SPECIAL
mdefine_line|#define NOTHING_SPECIAL &t;0x00
DECL|macro|NEEDS_RESTART
mdefine_line|#define NEEDS_RESTART&t;&t;0x01
DECL|macro|DMA_AUTOMODE
mdefine_line|#define DMA_AUTOMODE&t;&t;0x02
DECL|macro|DMA_DUPLEX
mdefine_line|#define DMA_DUPLEX&t;&t;0x04
DECL|macro|DMA_PSEUDO_AUTOMODE
mdefine_line|#define DMA_PSEUDO_AUTOMODE&t;0x08
DECL|macro|DMA_HARDSTOP
mdefine_line|#define DMA_HARDSTOP&t;&t;0x10
DECL|macro|DMA_EXACT
mdefine_line|#define DMA_EXACT&t;&t;0x40
DECL|macro|DMA_NORESET
mdefine_line|#define DMA_NORESET&t;&t;0x80
DECL|member|format_mask
r_int
id|format_mask
suffix:semicolon
multiline_comment|/* Bitmask for supported audio formats */
DECL|member|devc
r_void
op_star
id|devc
suffix:semicolon
multiline_comment|/* Driver specific info */
DECL|member|d
r_struct
id|audio_driver
op_star
id|d
suffix:semicolon
DECL|member|portc
r_void
op_star
id|portc
suffix:semicolon
multiline_comment|/* Driver spesific info */
DECL|member|dmap_in
DECL|member|dmap_out
r_struct
id|dma_buffparms
op_star
id|dmap_in
comma
op_star
id|dmap_out
suffix:semicolon
DECL|member|coproc
r_struct
id|coproc_operations
op_star
id|coproc
suffix:semicolon
DECL|member|mixer_dev
r_int
id|mixer_dev
suffix:semicolon
DECL|member|enable_bits
r_int
id|enable_bits
suffix:semicolon
DECL|member|open_mode
r_int
id|open_mode
suffix:semicolon
DECL|member|go
r_int
id|go
suffix:semicolon
DECL|member|min_fragment
r_int
id|min_fragment
suffix:semicolon
multiline_comment|/* 0 == unlimited */
DECL|member|max_fragment
r_int
id|max_fragment
suffix:semicolon
multiline_comment|/* 0 == unlimited */
DECL|member|parent_dev
r_int
id|parent_dev
suffix:semicolon
multiline_comment|/* 0 -&gt; no parent, 1 to n -&gt; parent=parent_dev+1 */
multiline_comment|/* fields formerly in dmabuf.c */
DECL|member|in_sleeper
id|wait_queue_head_t
id|in_sleeper
suffix:semicolon
DECL|member|out_sleeper
id|wait_queue_head_t
id|out_sleeper
suffix:semicolon
DECL|member|poll_sleeper
id|wait_queue_head_t
id|poll_sleeper
suffix:semicolon
multiline_comment|/* fields formerly in audio.c */
DECL|member|audio_mode
r_int
id|audio_mode
suffix:semicolon
DECL|macro|AM_NONE
mdefine_line|#define&t;&t;AM_NONE&t;&t;0
DECL|macro|AM_WRITE
mdefine_line|#define&t;&t;AM_WRITE&t;OPEN_WRITE
DECL|macro|AM_READ
mdefine_line|#define &t;AM_READ&t;&t;OPEN_READ
DECL|member|local_format
r_int
id|local_format
suffix:semicolon
DECL|member|audio_format
r_int
id|audio_format
suffix:semicolon
DECL|member|local_conversion
r_int
id|local_conversion
suffix:semicolon
DECL|macro|CNV_MU_LAW
mdefine_line|#define CNV_MU_LAW&t;0x00000001
multiline_comment|/* large structures at the end to keep offsets small */
DECL|member|dmaps
r_struct
id|dma_buffparms
id|dmaps
(braket
l_int|2
)braket
suffix:semicolon
)brace
suffix:semicolon
r_int
op_star
id|load_mixer_volumes
c_func
(paren
r_char
op_star
id|name
comma
r_int
op_star
id|levels
comma
r_int
id|present
)paren
suffix:semicolon
DECL|struct|mixer_operations
r_struct
id|mixer_operations
(brace
DECL|member|id
r_char
id|id
(braket
l_int|16
)braket
suffix:semicolon
DECL|member|name
r_char
id|name
(braket
l_int|64
)braket
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
id|caddr_t
id|arg
)paren
suffix:semicolon
DECL|member|devc
r_void
op_star
id|devc
suffix:semicolon
DECL|member|modify_counter
r_int
id|modify_counter
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|synth_operations
r_struct
id|synth_operations
(brace
DECL|member|id
r_char
op_star
id|id
suffix:semicolon
multiline_comment|/* Unique identifier (ASCII) max 29 char */
DECL|member|info
r_struct
id|synth_info
op_star
id|info
suffix:semicolon
DECL|member|midi_dev
r_int
id|midi_dev
suffix:semicolon
DECL|member|synth_type
r_int
id|synth_type
suffix:semicolon
DECL|member|synth_subtype
r_int
id|synth_subtype
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
id|caddr_t
id|arg
)paren
suffix:semicolon
DECL|member|kill_note
r_int
(paren
op_star
id|kill_note
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|note
comma
r_int
id|velocity
)paren
suffix:semicolon
DECL|member|start_note
r_int
(paren
op_star
id|start_note
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|note
comma
r_int
id|velocity
)paren
suffix:semicolon
DECL|member|set_instr
r_int
(paren
op_star
id|set_instr
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|instr
)paren
suffix:semicolon
DECL|member|reset
r_void
(paren
op_star
id|reset
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|hw_control
r_void
(paren
op_star
id|hw_control
)paren
(paren
r_int
id|dev
comma
r_int
r_char
op_star
id|event
)paren
suffix:semicolon
DECL|member|load_patch
r_int
(paren
op_star
id|load_patch
)paren
(paren
r_int
id|dev
comma
r_int
id|format
comma
r_const
r_char
op_star
id|addr
comma
r_int
id|offs
comma
r_int
id|count
comma
r_int
id|pmgr_flag
)paren
suffix:semicolon
DECL|member|aftertouch
r_void
(paren
op_star
id|aftertouch
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|pressure
)paren
suffix:semicolon
DECL|member|controller
r_void
(paren
op_star
id|controller
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|ctrl_num
comma
r_int
id|value
)paren
suffix:semicolon
DECL|member|panning
r_void
(paren
op_star
id|panning
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|value
)paren
suffix:semicolon
DECL|member|volume_method
r_void
(paren
op_star
id|volume_method
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
DECL|member|bender
r_void
(paren
op_star
id|bender
)paren
(paren
r_int
id|dev
comma
r_int
id|chn
comma
r_int
id|value
)paren
suffix:semicolon
DECL|member|alloc_voice
r_int
(paren
op_star
id|alloc_voice
)paren
(paren
r_int
id|dev
comma
r_int
id|chn
comma
r_int
id|note
comma
r_struct
id|voice_alloc_info
op_star
id|alloc
)paren
suffix:semicolon
DECL|member|setup_voice
r_void
(paren
op_star
id|setup_voice
)paren
(paren
r_int
id|dev
comma
r_int
id|voice
comma
r_int
id|chn
)paren
suffix:semicolon
DECL|member|send_sysex
r_int
(paren
op_star
id|send_sysex
)paren
(paren
r_int
id|dev
comma
r_int
r_char
op_star
id|bytes
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|alloc
r_struct
id|voice_alloc_info
id|alloc
suffix:semicolon
DECL|member|chn_info
r_struct
id|channel_info
id|chn_info
(braket
l_int|16
)braket
suffix:semicolon
DECL|member|emulation
r_int
id|emulation
suffix:semicolon
DECL|macro|EMU_GM
mdefine_line|#define&t;EMU_GM&t;&t;&t;1&t;/* General MIDI */
DECL|macro|EMU_XG
mdefine_line|#define&t;EMU_XG&t;&t;&t;2&t;/* Yamaha XG */
DECL|macro|MAX_SYSEX_BUF
mdefine_line|#define MAX_SYSEX_BUF&t;64
DECL|member|sysex_buf
r_int
r_char
id|sysex_buf
(braket
id|MAX_SYSEX_BUF
)braket
suffix:semicolon
DECL|member|sysex_ptr
r_int
id|sysex_ptr
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|midi_input_info
r_struct
id|midi_input_info
(brace
multiline_comment|/* MIDI input scanner variables */
DECL|macro|MI_MAX
mdefine_line|#define MI_MAX&t;10
DECL|member|m_busy
r_int
id|m_busy
suffix:semicolon
DECL|member|m_buf
r_int
r_char
id|m_buf
(braket
id|MI_MAX
)braket
suffix:semicolon
DECL|member|m_prev_status
r_int
r_char
id|m_prev_status
suffix:semicolon
multiline_comment|/* For running status */
DECL|member|m_ptr
r_int
id|m_ptr
suffix:semicolon
DECL|macro|MST_INIT
mdefine_line|#define MST_INIT&t;&t;&t;0
DECL|macro|MST_DATA
mdefine_line|#define MST_DATA&t;&t;&t;1
DECL|macro|MST_SYSEX
mdefine_line|#define MST_SYSEX&t;&t;&t;2
DECL|member|m_state
r_int
id|m_state
suffix:semicolon
DECL|member|m_left
r_int
id|m_left
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|midi_operations
r_struct
id|midi_operations
(brace
DECL|member|info
r_struct
id|midi_info
id|info
suffix:semicolon
DECL|member|converter
r_struct
id|synth_operations
op_star
id|converter
suffix:semicolon
DECL|member|in_info
r_struct
id|midi_input_info
id|in_info
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
comma
r_void
(paren
op_star
id|inputintr
)paren
(paren
r_int
id|dev
comma
r_int
r_char
id|data
)paren
comma
r_void
(paren
op_star
id|outputintr
)paren
(paren
r_int
id|dev
)paren
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
id|caddr_t
id|arg
)paren
suffix:semicolon
DECL|member|outputc
r_int
(paren
op_star
id|outputc
)paren
(paren
r_int
id|dev
comma
r_int
r_char
id|data
)paren
suffix:semicolon
DECL|member|start_read
r_int
(paren
op_star
id|start_read
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|end_read
r_int
(paren
op_star
id|end_read
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|kick
r_void
(paren
op_star
id|kick
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|command
r_int
(paren
op_star
id|command
)paren
(paren
r_int
id|dev
comma
r_int
r_char
op_star
id|data
)paren
suffix:semicolon
DECL|member|buffer_status
r_int
(paren
op_star
id|buffer_status
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|prefix_cmd
r_int
(paren
op_star
id|prefix_cmd
)paren
(paren
r_int
id|dev
comma
r_int
r_char
id|status
)paren
suffix:semicolon
DECL|member|coproc
r_struct
id|coproc_operations
op_star
id|coproc
suffix:semicolon
DECL|member|devc
r_void
op_star
id|devc
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|sound_lowlev_timer
r_struct
id|sound_lowlev_timer
(brace
DECL|member|dev
r_int
id|dev
suffix:semicolon
DECL|member|priority
r_int
id|priority
suffix:semicolon
DECL|member|tmr_start
r_int
r_int
(paren
op_star
id|tmr_start
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|usecs
)paren
suffix:semicolon
DECL|member|tmr_disable
r_void
(paren
op_star
id|tmr_disable
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|tmr_restart
r_void
(paren
op_star
id|tmr_restart
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|sound_timer_operations
r_struct
id|sound_timer_operations
(brace
DECL|member|info
r_struct
id|sound_timer_info
id|info
suffix:semicolon
DECL|member|priority
r_int
id|priority
suffix:semicolon
DECL|member|devlink
r_int
id|devlink
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_int
id|dev
comma
r_int
id|mode
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|event
r_int
(paren
op_star
id|event
)paren
(paren
r_int
id|dev
comma
r_int
r_char
op_star
id|ev
)paren
suffix:semicolon
DECL|member|get_time
r_int
r_int
(paren
op_star
id|get_time
)paren
(paren
r_int
id|dev
)paren
suffix:semicolon
DECL|member|ioctl
r_int
(paren
op_star
id|ioctl
)paren
(paren
r_int
id|dev
comma
r_int
r_int
id|cmd
comma
id|caddr_t
id|arg
)paren
suffix:semicolon
DECL|member|arm_timer
r_void
(paren
op_star
id|arm_timer
)paren
(paren
r_int
id|dev
comma
r_int
id|time
)paren
suffix:semicolon
)brace
suffix:semicolon
macro_line|#ifdef _DEV_TABLE_C_   
DECL|variable|audio_devs
DECL|variable|num_audiodevs
r_struct
id|audio_operations
op_star
id|audio_devs
(braket
id|MAX_AUDIO_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
r_int
id|num_audiodevs
op_assign
l_int|0
suffix:semicolon
DECL|variable|mixer_devs
DECL|variable|num_mixers
r_struct
id|mixer_operations
op_star
id|mixer_devs
(braket
id|MAX_MIXER_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
r_int
id|num_mixers
op_assign
l_int|0
suffix:semicolon
DECL|variable|synth_devs
DECL|variable|num_synths
r_struct
id|synth_operations
op_star
id|synth_devs
(braket
id|MAX_SYNTH_DEV
op_plus
id|MAX_MIDI_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
r_int
id|num_synths
op_assign
l_int|0
suffix:semicolon
DECL|variable|midi_devs
DECL|variable|num_midis
r_struct
id|midi_operations
op_star
id|midi_devs
(braket
id|MAX_MIDI_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
r_int
id|num_midis
op_assign
l_int|0
suffix:semicolon
macro_line|#ifndef EXCLUDE_TIMERS
r_extern
r_struct
id|sound_timer_operations
id|default_sound_timer
suffix:semicolon
DECL|variable|sound_timer_devs
r_struct
id|sound_timer_operations
op_star
id|sound_timer_devs
(braket
id|MAX_TIMER_DEV
)braket
op_assign
(brace
op_amp
id|default_sound_timer
comma
l_int|NULL
)brace
suffix:semicolon
DECL|variable|num_sound_timers
r_int
id|num_sound_timers
op_assign
l_int|1
suffix:semicolon
macro_line|#else
DECL|variable|sound_timer_devs
r_struct
id|sound_timer_operations
op_star
id|sound_timer_devs
(braket
id|MAX_TIMER_DEV
)braket
op_assign
(brace
l_int|NULL
)brace
suffix:semicolon
DECL|variable|num_sound_timers
r_int
id|num_sound_timers
op_assign
l_int|0
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n; * List of low level drivers compiled into the kernel.&n; */
DECL|variable|sound_drivers
r_struct
id|driver_info
id|sound_drivers
(braket
)braket
op_assign
(brace
macro_line|#ifdef CONFIG_SOUND_PSS
(brace
l_string|&quot;PSS&quot;
comma
l_int|0
comma
id|SNDCARD_PSS
comma
l_string|&quot;Echo Personal Sound System PSS (ESC614)&quot;
comma
id|attach_pss
comma
id|probe_pss
comma
id|unload_pss
)brace
comma
(brace
l_string|&quot;PSSMPU&quot;
comma
l_int|0
comma
id|SNDCARD_PSS_MPU
comma
l_string|&quot;PSS-MPU&quot;
comma
id|attach_pss_mpu
comma
id|probe_pss_mpu
comma
id|unload_pss_mpu
)brace
comma
(brace
l_string|&quot;PSSMSS&quot;
comma
l_int|0
comma
id|SNDCARD_PSS_MSS
comma
l_string|&quot;PSS-MSS&quot;
comma
id|attach_pss_mss
comma
id|probe_pss_mss
comma
id|unload_pss_mss
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_GUS
macro_line|#ifdef CONFIG_GUS16
(brace
l_string|&quot;GUS16&quot;
comma
l_int|0
comma
id|SNDCARD_GUS16
comma
l_string|&quot;Ultrasound 16-bit opt.&quot;
comma
id|attach_gus_db16
comma
id|probe_gus_db16
comma
id|unload_gus_db16
)brace
comma
macro_line|#endif
(brace
l_string|&quot;GUS&quot;
comma
l_int|0
comma
id|SNDCARD_GUS
comma
l_string|&quot;Gravis Ultrasound&quot;
comma
id|attach_gus_card
comma
id|probe_gus
comma
id|unload_gus
)brace
comma
(brace
l_string|&quot;GUSPNP&quot;
comma
l_int|1
comma
id|SNDCARD_GUSPNP
comma
l_string|&quot;GUS PnP&quot;
comma
id|attach_gus_card
comma
id|probe_gus
comma
id|unload_gus
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_MSS
(brace
l_string|&quot;MSS&quot;
comma
l_int|0
comma
id|SNDCARD_MSS
comma
l_string|&quot;MS Sound System&quot;
comma
id|attach_ms_sound
comma
id|probe_ms_sound
comma
id|unload_ms_sound
)brace
comma
multiline_comment|/* Compaq Deskpro XL */
(brace
l_string|&quot;DESKPROXL&quot;
comma
l_int|2
comma
id|SNDCARD_DESKPROXL
comma
l_string|&quot;Compaq Deskpro XL&quot;
comma
id|attach_ms_sound
comma
id|probe_ms_sound
comma
id|unload_ms_sound
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_MAD16
(brace
l_string|&quot;MAD16&quot;
comma
l_int|0
comma
id|SNDCARD_MAD16
comma
l_string|&quot;MAD16/Mozart (MSS)&quot;
comma
id|attach_mad16
comma
id|probe_mad16
comma
id|unload_mad16
)brace
comma
(brace
l_string|&quot;MAD16MPU&quot;
comma
l_int|0
comma
id|SNDCARD_MAD16_MPU
comma
l_string|&quot;MAD16/Mozart (MPU)&quot;
comma
id|attach_mad16_mpu
comma
id|probe_mad16_mpu
comma
id|unload_mad16_mpu
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_CS4232
(brace
l_string|&quot;CS4232&quot;
comma
l_int|0
comma
id|SNDCARD_CS4232
comma
l_string|&quot;CS4232&quot;
comma
id|attach_cs4232
comma
id|probe_cs4232
comma
id|unload_cs4232
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_CS4232_MPU_BASE
(brace
l_string|&quot;CS4232MPU&quot;
comma
l_int|0
comma
id|SNDCARD_CS4232_MPU
comma
l_string|&quot;CS4232 MIDI&quot;
comma
id|attach_cs4232_mpu
comma
id|probe_cs4232_mpu
comma
id|unload_cs4232_mpu
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_OPL3SA2
(brace
l_string|&quot;OPL3SA2&quot;
comma
l_int|0
comma
id|SNDCARD_OPL3SA2
comma
l_string|&quot;OPL3SA2&quot;
comma
id|attach_opl3sa2
comma
id|probe_opl3sa2
comma
id|unload_opl3sa2
)brace
comma
(brace
l_string|&quot;OPL3SA2MSS&quot;
comma
l_int|1
comma
id|SNDCARD_OPL3SA2_MSS
comma
l_string|&quot;OPL3SA2 MSS&quot;
comma
id|attach_opl3sa2_mss
comma
id|probe_opl3sa2_mss
comma
id|unload_opl3sa2_mss
)brace
comma
(brace
l_string|&quot;OPL3SA2MPU&quot;
comma
l_int|0
comma
id|SNDCARD_OPL3SA2_MPU
comma
l_string|&quot;OPL3SA2 MIDI&quot;
comma
id|attach_opl3sa2_mpu
comma
id|probe_opl3sa2_mpu
comma
id|unload_opl3sa2_mpu
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SGALAXY
(brace
l_string|&quot;SGALAXY&quot;
comma
l_int|0
comma
id|SNDCARD_SGALAXY
comma
l_string|&quot;Sound Galaxy WSS&quot;
comma
id|attach_sgalaxy
comma
id|probe_sgalaxy
comma
id|unload_sgalaxy
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_AD1816
(brace
l_string|&quot;AD1816&quot;
comma
l_int|0
comma
id|SNDCARD_AD1816
comma
l_string|&quot;AD1816&quot;
comma
id|attach_ad1816
comma
id|probe_ad1816
comma
id|unload_ad1816
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_YM3812
(brace
l_string|&quot;OPL3&quot;
comma
l_int|0
comma
id|SNDCARD_ADLIB
comma
l_string|&quot;OPL-2/OPL-3 FM&quot;
comma
id|attach_adlib_card
comma
id|probe_adlib
comma
id|unload_adlib
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_PAS
(brace
l_string|&quot;PAS16&quot;
comma
l_int|0
comma
id|SNDCARD_PAS
comma
l_string|&quot;ProAudioSpectrum&quot;
comma
id|attach_pas_card
comma
id|probe_pas
comma
id|unload_pas
)brace
comma
macro_line|#endif
macro_line|#if (defined(CONFIG_SOUND_MPU401) || defined(CONFIG_SOUND_MPU_EMU))
(brace
l_string|&quot;MPU401&quot;
comma
l_int|0
comma
id|SNDCARD_MPU401
comma
l_string|&quot;Roland MPU-401&quot;
comma
id|attach_mpu401
comma
id|probe_mpu401
comma
id|unload_mpu401
)brace
comma
macro_line|#endif
macro_line|#if defined(CONFIG_SOUND_UART401)
(brace
l_string|&quot;UART401&quot;
comma
l_int|0
comma
id|SNDCARD_UART401
comma
l_string|&quot;MPU-401 (UART)&quot;
comma
id|attach_uart401
comma
id|probe_uart401
comma
id|unload_uart401
)brace
comma
macro_line|#endif
macro_line|#if defined(CONFIG_SOUND_WAVEFRONT)
(brace
l_string|&quot;WAVEFRONT&quot;
comma
l_int|0
comma
id|SNDCARD_WAVEFRONT
comma
l_string|&quot;TB WaveFront&quot;
comma
id|attach_wavefront
comma
id|probe_wavefront
comma
id|unload_wavefront
)brace
comma
macro_line|#endif
macro_line|#if defined(CONFIG_SOUND_MAUI)
(brace
l_string|&quot;MAUI&quot;
comma
l_int|0
comma
id|SNDCARD_MAUI
comma
l_string|&quot;TB Maui&quot;
comma
id|attach_maui
comma
id|probe_maui
comma
id|unload_maui
)brace
comma
macro_line|#endif
macro_line|#if defined(CONFIG_SOUND_UART6850)
(brace
l_string|&quot;MIDI6850&quot;
comma
l_int|0
comma
id|SNDCARD_UART6850
comma
l_string|&quot;6860 UART Midi&quot;
comma
id|attach_uart6850
comma
id|probe_uart6850
comma
id|unload_uart6850
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_SBDSP
(brace
l_string|&quot;SBLAST&quot;
comma
l_int|0
comma
id|SNDCARD_SB
comma
l_string|&quot;Sound Blaster&quot;
comma
id|attach_sb_card
comma
id|probe_sb
comma
id|unload_sb
)brace
comma
(brace
l_string|&quot;SBPNP&quot;
comma
l_int|6
comma
id|SNDCARD_SBPNP
comma
l_string|&quot;Sound Blaster PnP&quot;
comma
id|attach_sb_card
comma
id|probe_sb
comma
id|unload_sb
)brace
comma
(brace
l_string|&quot;SBMPU&quot;
comma
l_int|0
comma
id|SNDCARD_SB16MIDI
comma
l_string|&quot;SB MPU-401&quot;
comma
id|attach_sbmpu
comma
id|probe_sbmpu
comma
id|unload_sbmpu
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_SSCAPE
(brace
l_string|&quot;SSCAPE&quot;
comma
l_int|0
comma
id|SNDCARD_SSCAPE
comma
l_string|&quot;Ensoniq SoundScape&quot;
comma
id|attach_sscape
comma
id|probe_sscape
comma
id|unload_sscape
)brace
comma
(brace
l_string|&quot;SSCAPEMSS&quot;
comma
l_int|0
comma
id|SNDCARD_SSCAPE_MSS
comma
l_string|&quot;MS Sound System (SoundScape)&quot;
comma
id|attach_ss_ms_sound
comma
id|probe_ss_ms_sound
comma
id|unload_ss_ms_sound
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_OPL3SA1
(brace
l_string|&quot;OPL3SA&quot;
comma
l_int|0
comma
id|SNDCARD_OPL3SA1
comma
l_string|&quot;Yamaha OPL3-SA&quot;
comma
id|attach_opl3sa_wss
comma
id|probe_opl3sa_wss
comma
id|unload_opl3sa_wss
)brace
comma
multiline_comment|/*&t;{&quot;OPL3SASB&quot;, 0, SNDCARD_OPL3SA1_SB, &quot;OPL3-SA (SB mode)&quot;,&t;attach_opl3sa_sb, probe_opl3sa_sb, unload_opl3sa_sb}, */
(brace
l_string|&quot;OPL3SAMPU&quot;
comma
l_int|0
comma
id|SNDCARD_OPL3SA1_MPU
comma
l_string|&quot;OPL3-SA MIDI&quot;
comma
id|attach_opl3sa_mpu
comma
id|probe_opl3sa_mpu
comma
id|unload_opl3sa_mpu
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_TRIX
(brace
l_string|&quot;TRXPRO&quot;
comma
l_int|0
comma
id|SNDCARD_TRXPRO
comma
l_string|&quot;MediaTrix AudioTrix Pro&quot;
comma
id|attach_trix_wss
comma
id|probe_trix_wss
comma
id|unload_trix_wss
)brace
comma
(brace
l_string|&quot;TRXPROSB&quot;
comma
l_int|0
comma
id|SNDCARD_TRXPRO_SB
comma
l_string|&quot;AudioTrix (SB mode)&quot;
comma
id|attach_trix_sb
comma
id|probe_trix_sb
comma
id|unload_trix_sb
)brace
comma
(brace
l_string|&quot;TRXPROMPU&quot;
comma
l_int|0
comma
id|SNDCARD_TRXPRO_MPU
comma
l_string|&quot;AudioTrix MIDI&quot;
comma
id|attach_trix_mpu
comma
id|probe_trix_mpu
comma
id|unload_trix_mpu
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_SOFTOSS
(brace
l_string|&quot;SOFTSYN&quot;
comma
l_int|0
comma
id|SNDCARD_SOFTOSS
comma
l_string|&quot;SoftOSS Virtual Wave Table&quot;
comma
id|attach_softsyn_card
comma
id|probe_softsyn
comma
id|unload_softsyn
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_VMIDI
(brace
l_string|&quot;VMIDI&quot;
comma
l_int|0
comma
id|SNDCARD_VMIDI
comma
l_string|&quot;Loopback MIDI Device&quot;
comma
id|attach_v_midi
comma
id|probe_v_midi
comma
id|unload_v_midi
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_VIDC
(brace
l_string|&quot;VIDC&quot;
comma
l_int|0
comma
id|SNDCARD_VIDC
comma
l_string|&quot;ARM VIDC 16-bit D/A&quot;
comma
id|attach_vidc
comma
id|probe_vidc
comma
id|unload_vidc
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_WAVEARTIST
(brace
l_string|&quot;WaveArtist&quot;
comma
l_int|0
comma
id|SNDCARD_WAVEARTIST
comma
l_string|&quot;NetWinder WaveArtist&quot;
comma
id|attach_waveartist
comma
id|probe_waveartist
comma
id|unload_waveartist
)brace
comma
macro_line|#endif
(brace
l_int|NULL
comma
l_int|0
comma
l_int|0
comma
l_string|&quot;*?*&quot;
comma
l_int|NULL
comma
l_int|NULL
comma
l_int|NULL
)brace
)brace
suffix:semicolon
DECL|variable|num_sound_drivers
r_int
id|num_sound_drivers
op_assign
r_sizeof
(paren
id|sound_drivers
)paren
op_div
r_sizeof
(paren
r_struct
id|driver_info
)paren
suffix:semicolon
multiline_comment|/*&n; *&t;List of devices actually configured in the system.&n; *&n; *&t;Note! The detection order is significant. Don&squot;t change it.&n; */
DECL|variable|snd_installed_cards
r_struct
id|card_info
id|snd_installed_cards
(braket
)braket
op_assign
(brace
macro_line|#ifdef CONFIG_SOUND_PSS
(brace
id|SNDCARD_PSS
comma
(brace
id|CONFIG_PSS_BASE
comma
l_int|0
comma
op_minus
l_int|1
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#ifdef CONFIG_PSS_MPU_BASE
(brace
id|SNDCARD_PSS_MPU
comma
(brace
id|CONFIG_PSS_MPU_BASE
comma
id|CONFIG_PSS_MPU_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_PSS_MSS_BASE
(brace
id|SNDCARD_PSS_MSS
comma
(brace
id|CONFIG_PSS_MSS_BASE
comma
id|CONFIG_PSS_MSS_IRQ
comma
id|CONFIG_PSS_MSS_DMA
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_TRIX
macro_line|#ifndef CONFIG_TRIX_DMA2
DECL|macro|CONFIG_TRIX_DMA2
mdefine_line|#define CONFIG_TRIX_DMA2 CONFIG_TRIX_DMA
macro_line|#endif
(brace
id|SNDCARD_TRXPRO
comma
(brace
id|CONFIG_TRIX_BASE
comma
id|CONFIG_TRIX_IRQ
comma
id|CONFIG_TRIX_DMA
comma
id|CONFIG_TRIX_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#ifdef CONFIG_TRIX_SB_BASE
(brace
id|SNDCARD_TRXPRO_SB
comma
(brace
id|CONFIG_TRIX_SB_BASE
comma
id|CONFIG_TRIX_SB_IRQ
comma
id|CONFIG_TRIX_SB_DMA
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_TRIX_MPU_BASE
(brace
id|SNDCARD_TRXPRO_MPU
comma
(brace
id|CONFIG_TRIX_MPU_BASE
comma
id|CONFIG_TRIX_MPU_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_OPL3SA1
(brace
id|SNDCARD_OPL3SA1
comma
(brace
id|CONFIG_OPL3SA1_BASE
comma
id|CONFIG_OPL3SA1_IRQ
comma
id|CONFIG_OPL3SA1_DMA
comma
id|CONFIG_OPL3SA1_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#ifdef CONFIG_OPL3SA1_MPU_BASE
(brace
id|SNDCARD_OPL3SA1_MPU
comma
(brace
id|CONFIG_OPL3SA1_MPU_BASE
comma
id|CONFIG_OPL3SA1_MPU_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_SOFTOSS
(brace
id|SNDCARD_SOFTOSS
comma
(brace
l_int|0
comma
l_int|0
comma
op_minus
l_int|1
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_SSCAPE
(brace
id|SNDCARD_SSCAPE
comma
(brace
id|CONFIG_SSCAPE_BASE
comma
id|CONFIG_SSCAPE_IRQ
comma
id|CONFIG_SSCAPE_DMA
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
(brace
id|SNDCARD_SSCAPE_MSS
comma
(brace
id|CONFIG_SSCAPE_MSS_BASE
comma
id|CONFIG_SSCAPE_MSS_IRQ
comma
id|CONFIG_SSCAPE_DMA
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_MAD16
macro_line|#ifndef CONFIG_MAD16_DMA2
DECL|macro|CONFIG_MAD16_DMA2
mdefine_line|#define CONFIG_MAD16_DMA2 CONFIG_MAD16_DMA
macro_line|#endif
(brace
id|SNDCARD_MAD16
comma
(brace
id|CONFIG_MAD16_BASE
comma
id|CONFIG_MAD16_IRQ
comma
id|CONFIG_MAD16_DMA
comma
id|CONFIG_MAD16_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#ifdef CONFIG_MAD16_MPU_BASE
(brace
id|SNDCARD_MAD16_MPU
comma
(brace
id|CONFIG_MAD16_MPU_BASE
comma
id|CONFIG_MAD16_MPU_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_CS4232
macro_line|#ifndef CONFIG_CS4232_DMA2
DECL|macro|CONFIG_CS4232_DMA2
mdefine_line|#define CONFIG_CS4232_DMA2 CONFIG_CS4232_DMA
macro_line|#endif
macro_line|#ifdef CONFIG_CS4232_MPU_BASE
(brace
id|SNDCARD_CS4232_MPU
comma
(brace
id|CONFIG_CS4232_MPU_BASE
comma
id|CONFIG_CS4232_MPU_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
(brace
id|SNDCARD_CS4232
comma
(brace
id|CONFIG_CS4232_BASE
comma
id|CONFIG_CS4232_IRQ
comma
id|CONFIG_CS4232_DMA
comma
id|CONFIG_CS4232_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_OPL3SA2
macro_line|#ifndef CONFIG_OPL3SA2_DMA2
DECL|macro|CONFIG_OPL3SA2_DMA2
mdefine_line|#define CONFIG_OPL3SA2_DMA2 CONFIG_OPL3SA2_DMA
macro_line|#endif
(brace
id|SNDCARD_OPL3SA2
comma
(brace
id|CONFIG_OPL3SA2_CTRL_BASE
comma
id|CONFIG_OPL3SA2_IRQ
comma
id|CONFIG_OPL3SA2_DMA
comma
id|CONFIG_OPL3SA2_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
(brace
id|SNDCARD_OPL3SA2_MSS
comma
(brace
id|CONFIG_OPL3SA2_BASE
comma
id|CONFIG_OPL3SA2_IRQ
comma
id|CONFIG_OPL3SA2_DMA
comma
id|CONFIG_OPL3SA2_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#ifdef CONFIG_OPL3SA2_MPU_BASE
(brace
id|SNDCARD_OPL3SA2_MPU
comma
(brace
id|CONFIG_OPL3SA2_MPU_BASE
comma
id|CONFIG_OPL3SA2_MPU_IRQ
comma
id|CONFIG_OPL3SA2_DMA
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifdef CONFIG_SGALAXY
macro_line|#ifndef CONFIG_SGALAXY_DMA2
DECL|macro|CONFIG_SGALAXY_DMA2
mdefine_line|#define CONFIG_SGALAXY_DMA2 CONFIG_SGALAXY_DMA
macro_line|#endif
(brace
id|SNDCARD_SGALAXY
comma
(brace
id|CONFIG_SGALAXY_BASE
comma
id|CONFIG_SGALAXY_IRQ
comma
id|CONFIG_SGALAXY_DMA
comma
id|CONFIG_SGALAXY_DMA2
comma
l_int|0
comma
l_int|NULL
comma
id|CONFIG_SGALAXY_SGBASE
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_MSS
macro_line|#ifndef CONFIG_MSS_DMA2
DECL|macro|CONFIG_MSS_DMA2
mdefine_line|#define CONFIG_MSS_DMA2 -1
macro_line|#endif
macro_line|#ifdef DESKPROXL
(brace
id|SNDCARD_DESKPROXL
comma
(brace
id|CONFIG_MSS_BASE
comma
id|CONFIG_MSS_IRQ
comma
id|CONFIG_MSS_DMA
comma
id|CONFIG_MSS_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#else
(brace
id|SNDCARD_MSS
comma
(brace
id|CONFIG_MSS_BASE
comma
id|CONFIG_MSS_IRQ
comma
id|CONFIG_MSS_DMA
comma
id|CONFIG_MSS_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef MSS2_BASE
(brace
id|SNDCARD_MSS
comma
(brace
id|MSS2_BASE
comma
id|MSS2_IRQ
comma
id|MSS2_DMA
comma
id|MSS2_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_PAS
(brace
id|SNDCARD_PAS
comma
(brace
id|CONFIG_PAS_BASE
comma
id|CONFIG_PAS_IRQ
comma
id|CONFIG_PAS_DMA
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_SB
macro_line|#ifndef CONFIG_SB_DMA
DECL|macro|CONFIG_SB_DMA
mdefine_line|#define CONFIG_SB_DMA&t;&t;1
macro_line|#endif
macro_line|#ifndef CONFIG_SB_DMA2
DECL|macro|CONFIG_SB_DMA2
mdefine_line|#define CONFIG_SB_DMA2&t;&t;-1
macro_line|#endif
(brace
id|SNDCARD_SB
comma
(brace
id|CONFIG_SB_BASE
comma
id|CONFIG_SB_IRQ
comma
id|CONFIG_SB_DMA
comma
id|CONFIG_SB_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#ifdef SB2_BASE
(brace
id|SNDCARD_SB
comma
(brace
id|SB2_BASE
comma
id|SB2_IRQ
comma
id|SB2_DMA
comma
id|SB2_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#if defined(CONFIG_WAVEFRONT) 
(brace
id|SNDCARD_WAVEFRONT
comma
(brace
id|WAVEFRONT_BASE
comma
id|WAVEFRONT_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_MAUI
(brace
id|SNDCARD_MAUI
comma
(brace
id|CONFIG_MAUI_BASE
comma
id|CONFIG_MAUI_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_MPU401
(brace
id|SNDCARD_MPU401
comma
(brace
id|CONFIG_MPU_BASE
comma
id|CONFIG_MPU_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#ifdef MPU2_BASE
(brace
id|SNDCARD_MPU401
comma
(brace
id|MPU2_BASE
comma
id|MPU2_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef MPU3_BASE
(brace
id|SNDCARD_MPU401
comma
(brace
id|MPU3_BASE
comma
id|MPU3_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_UART6850
(brace
id|SNDCARD_UART6850
comma
(brace
id|CONFIG_U6850_BASE
comma
id|CONFIG_U6850_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_SB
macro_line|#ifdef CONFIG_SB_MPU_BASE
(brace
id|SNDCARD_SB16MIDI
comma
(brace
id|CONFIG_SB_MPU_BASE
comma
id|CONFIG_SB_MPU_IRQ
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_GUS
macro_line|#ifndef CONFIG_GUS_DMA2
DECL|macro|CONFIG_GUS_DMA2
mdefine_line|#define CONFIG_GUS_DMA2 CONFIG_GUS_DMA
macro_line|#endif
macro_line|#ifdef CONFIG_GUS16
(brace
id|SNDCARD_GUS16
comma
(brace
id|CONFIG_GUS16_BASE
comma
id|CONFIG_GUS16_IRQ
comma
id|CONFIG_GUS16_DMA
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
(brace
id|SNDCARD_GUS
comma
(brace
id|CONFIG_GUS_BASE
comma
id|CONFIG_GUS_IRQ
comma
id|CONFIG_GUS_DMA
comma
id|CONFIG_GUS_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_YM3812
(brace
id|SNDCARD_ADLIB
comma
(brace
id|FM_MONO
comma
l_int|0
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_VMIDI
(brace
id|SNDCARD_VMIDI
comma
(brace
l_int|0
comma
l_int|0
comma
l_int|0
comma
op_minus
l_int|1
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_VIDC
(brace
id|SNDCARD_VIDC
comma
(brace
l_int|0
comma
l_int|0
comma
l_int|0
comma
l_int|0
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
macro_line|#ifdef CONFIG_SOUND_WAVEARTIST
(brace
id|SNDCARD_WAVEARTIST
comma
(brace
id|CONFIG_WAVEARTIST_BASE
comma
id|CONFIG_WAVEARTIST_IRQ
comma
id|CONFIG_WAVEARTIST_DMA
comma
id|CONFIG_WAVEARTIST_DMA2
)brace
comma
id|SND_DEFAULT_ENABLE
)brace
comma
macro_line|#endif
(brace
l_int|0
comma
(brace
l_int|0
)brace
comma
l_int|0
)brace
)brace
suffix:semicolon
DECL|variable|num_sound_cards
r_int
id|num_sound_cards
op_assign
r_sizeof
(paren
id|snd_installed_cards
)paren
op_div
r_sizeof
(paren
r_struct
id|card_info
)paren
suffix:semicolon
DECL|variable|max_sound_cards
r_static
r_int
id|max_sound_cards
op_assign
r_sizeof
(paren
id|snd_installed_cards
)paren
op_div
r_sizeof
(paren
r_struct
id|card_info
)paren
suffix:semicolon
macro_line|#if defined(MODULE)
DECL|variable|trace_init
r_int
id|trace_init
op_assign
l_int|0
suffix:semicolon
macro_line|#else
DECL|variable|trace_init
r_int
id|trace_init
op_assign
l_int|1
suffix:semicolon
macro_line|#endif
macro_line|#else
r_extern
r_struct
id|audio_operations
op_star
id|audio_devs
(braket
id|MAX_AUDIO_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_audiodevs
suffix:semicolon
r_extern
r_struct
id|mixer_operations
op_star
id|mixer_devs
(braket
id|MAX_MIXER_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_mixers
suffix:semicolon
r_extern
r_struct
id|synth_operations
op_star
id|synth_devs
(braket
id|MAX_SYNTH_DEV
op_plus
id|MAX_MIDI_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_synths
suffix:semicolon
r_extern
r_struct
id|midi_operations
op_star
id|midi_devs
(braket
id|MAX_MIDI_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_midis
suffix:semicolon
r_extern
r_struct
id|sound_timer_operations
op_star
id|sound_timer_devs
(braket
id|MAX_TIMER_DEV
)braket
suffix:semicolon
r_extern
r_int
id|num_sound_timers
suffix:semicolon
r_extern
r_struct
id|driver_info
id|sound_drivers
(braket
)braket
suffix:semicolon
r_extern
r_int
id|num_sound_drivers
suffix:semicolon
r_extern
r_struct
id|card_info
id|snd_installed_cards
(braket
)braket
suffix:semicolon
r_extern
r_int
id|num_sound_cards
suffix:semicolon
r_extern
r_int
id|trace_init
suffix:semicolon
macro_line|#endif&t;/* _DEV_TABLE_C_ */
r_void
id|sndtable_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|sndtable_get_cardcount
(paren
r_void
)paren
suffix:semicolon
r_struct
id|address_info
op_star
id|sound_getconf
c_func
(paren
r_int
id|card_type
)paren
suffix:semicolon
r_void
id|sound_chconf
c_func
(paren
r_int
id|card_type
comma
r_int
id|ioaddr
comma
r_int
id|irq
comma
r_int
id|dma
)paren
suffix:semicolon
r_int
id|snd_find_driver
c_func
(paren
r_int
id|type
)paren
suffix:semicolon
r_void
id|sound_unload_drivers
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|sound_unload_driver
c_func
(paren
r_int
id|type
)paren
suffix:semicolon
r_int
id|sndtable_identify_card
c_func
(paren
r_char
op_star
id|name
)paren
suffix:semicolon
macro_line|#if FIXED_FOR_2_4_0
r_void
id|sound_setup
(paren
r_char
op_star
id|str
comma
r_int
op_star
id|ints
)paren
suffix:semicolon
macro_line|#endif
r_extern
r_int
id|sound_map_buffer
(paren
r_int
id|dev
comma
r_struct
id|dma_buffparms
op_star
id|dmap
comma
id|buffmem_desc
op_star
id|info
)paren
suffix:semicolon
r_int
id|sndtable_probe
(paren
r_int
id|unit
comma
r_struct
id|address_info
op_star
id|hw_config
)paren
suffix:semicolon
r_int
id|sndtable_init_card
(paren
r_int
id|unit
comma
r_struct
id|address_info
op_star
id|hw_config
)paren
suffix:semicolon
r_int
id|sndtable_start_card
(paren
r_int
id|unit
comma
r_struct
id|address_info
op_star
id|hw_config
)paren
suffix:semicolon
r_void
id|sound_timer_init
(paren
r_struct
id|sound_lowlev_timer
op_star
id|t
comma
r_char
op_star
id|name
)paren
suffix:semicolon
r_void
id|sound_dma_intr
(paren
r_int
id|dev
comma
r_struct
id|dma_buffparms
op_star
id|dmap
comma
r_int
id|chan
)paren
suffix:semicolon
DECL|macro|AUDIO_DRIVER_VERSION
mdefine_line|#define AUDIO_DRIVER_VERSION&t;2
DECL|macro|MIXER_DRIVER_VERSION
mdefine_line|#define MIXER_DRIVER_VERSION&t;2
r_int
id|sound_install_audiodrv
c_func
(paren
r_int
id|vers
comma
r_char
op_star
id|name
comma
r_struct
id|audio_driver
op_star
id|driver
comma
r_int
id|driver_size
comma
r_int
id|flags
comma
r_int
r_int
id|format_mask
comma
r_void
op_star
id|devc
comma
r_int
id|dma1
comma
r_int
id|dma2
)paren
suffix:semicolon
r_int
id|sound_install_mixer
c_func
(paren
r_int
id|vers
comma
r_char
op_star
id|name
comma
r_struct
id|mixer_operations
op_star
id|driver
comma
r_int
id|driver_size
comma
r_void
op_star
id|devc
)paren
suffix:semicolon
r_void
id|sound_unload_audiodev
c_func
(paren
r_int
id|dev
)paren
suffix:semicolon
r_void
id|sound_unload_mixerdev
c_func
(paren
r_int
id|dev
)paren
suffix:semicolon
r_void
id|sound_unload_mididev
c_func
(paren
r_int
id|dev
)paren
suffix:semicolon
r_void
id|sound_unload_synthdev
c_func
(paren
r_int
id|dev
)paren
suffix:semicolon
r_void
id|sound_unload_timerdev
c_func
(paren
r_int
id|dev
)paren
suffix:semicolon
r_int
id|sound_alloc_audiodev
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|sound_alloc_mixerdev
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|sound_alloc_timerdev
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|sound_alloc_synthdev
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|sound_alloc_mididev
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#endif&t;/* _DEV_TABLE_H_ */
eof
