macro_line|#ifndef _PNP_H_
DECL|macro|_PNP_H_
mdefine_line|#define _PNP_H_
DECL|macro|MAX_PNP_CARDS
mdefine_line|#define MAX_PNP_CARDS &t;16
DECL|macro|PNP_DEVID
mdefine_line|#define PNP_DEVID(a, b, c, id) &bslash;&n;&t;((a-&squot;@&squot;)&lt;&lt;26) | ((b-&squot;@&squot;)&lt;&lt;21) | ((c-&squot;@&squot;) &lt;&lt; 16) | (id&amp;0xffff)
DECL|macro|NO_PORT
mdefine_line|#define NO_PORT&t;0
DECL|macro|NO_IRQ
mdefine_line|#define NO_IRQ  0
DECL|macro|NO_DMA
mdefine_line|#define NO_DMA&t;4
DECL|struct|pnp_port_resource
r_struct
id|pnp_port_resource
(brace
DECL|member|range_min
DECL|member|range_max
r_int
id|range_min
comma
id|range_max
suffix:semicolon
DECL|member|align
DECL|member|len
r_int
r_char
id|align
comma
id|len
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|pnp_func
r_struct
id|pnp_func
(brace
DECL|member|dev
r_struct
id|pnp_dev
op_star
id|dev
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|next
r_struct
id|pnp_func
op_star
id|next
suffix:semicolon
DECL|member|nports
r_int
id|nports
suffix:semicolon
DECL|member|ports
r_struct
id|pnp_port_resource
id|ports
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|nirq
r_int
id|nirq
suffix:semicolon
DECL|member|irq
r_int
r_int
id|irq
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|ndma
r_int
id|ndma
suffix:semicolon
DECL|member|dma
r_int
r_char
id|dma
(braket
l_int|2
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|pnp_dev
r_struct
id|pnp_dev
(brace
DECL|member|key
r_int
id|key
suffix:semicolon
multiline_comment|/* A PnP device id identifying this device */
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
multiline_comment|/* ANSI identifier string */
DECL|member|devno
r_int
id|devno
suffix:semicolon
multiline_comment|/* Logical device number within a card */
DECL|member|ncompat
r_int
id|ncompat
suffix:semicolon
multiline_comment|/* Number of compatible device idents */
DECL|member|compat_keys
r_int
id|compat_keys
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* List of PnP compatible device idents */
DECL|member|card
r_struct
id|pnp_card
op_star
id|card
suffix:semicolon
multiline_comment|/* Link to the card which holds this device */
DECL|member|next
r_struct
id|pnp_dev
op_star
id|next
suffix:semicolon
multiline_comment|/* Pointer to next logical device or NULL */
DECL|member|nports
DECL|member|nirq
DECL|member|ndma
r_int
id|nports
comma
id|nirq
comma
id|ndma
suffix:semicolon
DECL|member|nfunc
r_int
id|nfunc
suffix:semicolon
multiline_comment|/* Number of dependent function records */
DECL|member|functions
r_struct
id|pnp_func
op_star
id|functions
suffix:semicolon
multiline_comment|/* List of dependent functions */
DECL|member|driver
r_int
id|driver
suffix:semicolon
multiline_comment|/* Driver signature or 0 */
DECL|member|preconfig
r_int
id|preconfig
suffix:semicolon
multiline_comment|/* 1 if config has been set manully */
)brace
suffix:semicolon
DECL|struct|pnp_card
r_struct
id|pnp_card
(brace
DECL|member|key
r_int
id|key
suffix:semicolon
multiline_comment|/* Unique PnP device identifier */
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
multiline_comment|/* ANSI identifier string of the card */
DECL|member|csn
r_int
id|csn
suffix:semicolon
multiline_comment|/* Card select number */
DECL|member|pnp_version
r_char
id|pnp_version
suffix:semicolon
DECL|member|vendor_version
r_char
id|vendor_version
suffix:semicolon
DECL|member|driven
r_int
id|driven
suffix:semicolon
multiline_comment|/* 0=No driver assigned, */
multiline_comment|/* 1=Drivers assigned to some of logical devices */
multiline_comment|/* 2=Card and all of it&squot;s devices have a driver */
DECL|member|relocated
r_int
id|relocated
suffix:semicolon
multiline_comment|/* 0=Card is inactive, 1=card is up and running */
DECL|member|ndevs
r_int
id|ndevs
suffix:semicolon
multiline_comment|/* Number of logical devices on the card */
DECL|member|devices
r_struct
id|pnp_dev
op_star
id|devices
suffix:semicolon
multiline_comment|/* Pointer to first function entry */
)brace
suffix:semicolon
DECL|struct|pnp_card_info
r_typedef
r_struct
id|pnp_card_info
(brace
DECL|member|card
r_struct
id|pnp_card
id|card
suffix:semicolon
DECL|member|name
r_char
id|name
(braket
l_int|64
)braket
suffix:semicolon
DECL|typedef|pnp_card_info
)brace
id|pnp_card_info
suffix:semicolon
r_extern
r_int
id|pnp_card_count
suffix:semicolon
r_extern
r_struct
id|pnp_card
op_star
id|pnp_cards
(braket
id|MAX_PNP_CARDS
)braket
suffix:semicolon
r_extern
r_struct
id|pnp_dev
op_star
id|pnp_device_list
suffix:semicolon
r_extern
r_int
id|pnp_trace
suffix:semicolon
multiline_comment|/*&n; * Callable functions&n; */
r_extern
r_void
id|pnp_init
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* Called by kernel during boot */
r_extern
r_void
id|terminate_pnp
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|pnp_connect
c_func
(paren
r_char
op_star
id|driver_name
)paren
suffix:semicolon
r_extern
r_void
id|pnp_disconnect
c_func
(paren
r_int
id|driver_signature
)paren
suffix:semicolon
multiline_comment|/*&n; * pnp_get_descr() returns an ASCII desctription string for a device.&n; * The parameter is an compressed EISA identifier of the device/card.&n; */
r_extern
r_char
op_star
id|pnp_get_descr
(paren
r_int
id|id
)paren
suffix:semicolon
r_extern
r_void
id|pnp_enable_device
c_func
(paren
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|state
)paren
suffix:semicolon
r_extern
r_void
id|pnp_set_port
c_func
(paren
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|selec
comma
r_int
r_int
id|base
)paren
suffix:semicolon
r_extern
r_void
id|pnp_set_irq
c_func
(paren
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|selec
comma
r_int
r_int
id|val
)paren
suffix:semicolon
r_extern
r_void
id|pnp_set_dma
c_func
(paren
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|selec
comma
r_int
r_int
id|val
)paren
suffix:semicolon
r_extern
r_int
r_int
id|pnp_get_port
c_func
(paren
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|selec
)paren
suffix:semicolon
r_extern
r_int
r_int
id|pnp_get_irq
c_func
(paren
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|selec
)paren
suffix:semicolon
r_extern
r_int
r_int
id|pnp_get_dma
c_func
(paren
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|selec
)paren
suffix:semicolon
r_extern
r_int
id|pnp_allocate_device
c_func
(paren
r_int
id|driver_sig
comma
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|basemask
comma
r_int
id|irqmask
comma
r_int
id|dmamask
comma
r_int
id|memmask
)paren
suffix:semicolon
r_extern
r_void
id|pnp_release_device
c_func
(paren
r_int
id|driver_sig
comma
r_struct
id|pnp_dev
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|pnp_asc2devid
c_func
(paren
r_char
op_star
id|name
)paren
suffix:semicolon
r_extern
r_char
op_star
id|pnp_devid2asc
c_func
(paren
r_int
id|id
)paren
suffix:semicolon
r_extern
r_void
id|pnp_dump_resources
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|pnp_device_status
(paren
r_struct
id|pnp_dev
op_star
id|dev
)paren
suffix:semicolon
r_struct
id|pnp_dev
op_star
id|pnp_get_next_device
c_func
(paren
r_int
id|driver_sig
comma
r_struct
id|pnp_dev
op_star
id|prev
)paren
suffix:semicolon
r_int
r_char
id|pnp_readreg
(paren
r_struct
id|pnp_dev
op_star
id|dev
comma
r_int
id|reg
)paren
suffix:semicolon
macro_line|#endif
eof
